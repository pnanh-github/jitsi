{"version":3,"sources":["webpack://JitsiMeetJS/webpack/universalModuleDefinition","webpack://JitsiMeetJS/webpack/bootstrap","webpack://JitsiMeetJS/./JitsiConference.js","webpack://JitsiMeetJS/./JitsiConferenceErrors.js","webpack://JitsiMeetJS/./JitsiConferenceEventManager.js","webpack://JitsiMeetJS/./JitsiConferenceEvents.js","webpack://JitsiMeetJS/./JitsiConnection.js","webpack://JitsiMeetJS/./JitsiConnectionErrors.js","webpack://JitsiMeetJS/./JitsiConnectionEvents.js","webpack://JitsiMeetJS/./JitsiMediaDevices.js","webpack://JitsiMeetJS/./JitsiMediaDevicesEvents.js","webpack://JitsiMeetJS/./JitsiMeetJS.js","webpack://JitsiMeetJS/./JitsiParticipant.js","webpack://JitsiMeetJS/./JitsiTrackError.js","webpack://JitsiMeetJS/./JitsiTrackErrors.js","webpack://JitsiMeetJS/./JitsiTrackEvents.js","webpack://JitsiMeetJS/./JitsiTranscriptionStatus.js","webpack://JitsiMeetJS/./authenticateAndUpgradeRole.js","webpack://JitsiMeetJS/./index.js","webpack://JitsiMeetJS/./modules/RTC/BridgeChannel.js","webpack://JitsiMeetJS/./modules/RTC/JitsiLocalTrack.js","webpack://JitsiMeetJS/./modules/RTC/JitsiRemoteTrack.js","webpack://JitsiMeetJS/./modules/RTC/JitsiTrack.js","webpack://JitsiMeetJS/./modules/RTC/LocalSdpMunger.js","webpack://JitsiMeetJS/./modules/RTC/RTC.js","webpack://JitsiMeetJS/./modules/RTC/RTCUtils.js","webpack://JitsiMeetJS/./modules/RTC/ScreenObtainer.js","webpack://JitsiMeetJS/./modules/RTC/TPCUtils.js","webpack://JitsiMeetJS/./modules/RTC/TraceablePeerConnection.js","webpack://JitsiMeetJS/./modules/browser/BrowserCapabilities.js","webpack://JitsiMeetJS/./modules/browser/index.js","webpack://JitsiMeetJS/./modules/connectivity/ConnectionQuality.js","webpack://JitsiMeetJS/./modules/connectivity/IceFailedNotification.js","webpack://JitsiMeetJS/./modules/connectivity/ParticipantConnectionStatus.js","webpack://JitsiMeetJS/./modules/detection/ActiveDeviceDetector.js","webpack://JitsiMeetJS/./modules/detection/DetectionEvents.js","webpack://JitsiMeetJS/./modules/detection/NoAudioSignalDetection.js","webpack://JitsiMeetJS/./modules/detection/P2PDominantSpeakerDetection.js","webpack://JitsiMeetJS/./modules/detection/TalkMutedDetection.js","webpack://JitsiMeetJS/./modules/detection/TrackVADEmitter.js","webpack://JitsiMeetJS/./modules/detection/VADAudioAnalyser.js","webpack://JitsiMeetJS/./modules/detection/VADNoiseDetection.js","webpack://JitsiMeetJS/./modules/detection/VADTalkMutedDetection.js","webpack://JitsiMeetJS/./modules/e2ee/E2EEContext.js","webpack://JitsiMeetJS/./modules/e2eping/e2eping.js","webpack://JitsiMeetJS/./modules/event/Jvb121EventGenerator.js","webpack://JitsiMeetJS/./modules/proxyconnection/ProxyConnectionPC.js","webpack://JitsiMeetJS/./modules/proxyconnection/ProxyConnectionService.js","webpack://JitsiMeetJS/./modules/proxyconnection/constants.js","webpack://JitsiMeetJS/./modules/recording/JibriSession.js","webpack://JitsiMeetJS/./modules/recording/RecordingManager.js","webpack://JitsiMeetJS/./modules/recording/recordingConstants.js","webpack://JitsiMeetJS/./modules/recording/recordingXMLUtils.js","webpack://JitsiMeetJS/./modules/rttmonitor/rttmonitor.js","webpack://JitsiMeetJS/./modules/settings/Settings.js","webpack://JitsiMeetJS/./modules/statistics/AnalyticsAdapter.js","webpack://JitsiMeetJS/./modules/statistics/AudioOutputProblemDetector.js","webpack://JitsiMeetJS/./modules/statistics/AvgRTPStatsReporter.js","webpack://JitsiMeetJS/./modules/statistics/CallStats.js","webpack://JitsiMeetJS/./modules/statistics/LocalStatsCollector.js","webpack://JitsiMeetJS/./modules/statistics/RTPStatsCollector.js","webpack://JitsiMeetJS/./modules/statistics/SpeakerStats.js","webpack://JitsiMeetJS/./modules/statistics/SpeakerStatsCollector.js","webpack://JitsiMeetJS/./modules/statistics/statistics.js","webpack://JitsiMeetJS/./modules/transcription/audioRecorder.js","webpack://JitsiMeetJS/./modules/transcription/recordingResult.js","webpack://JitsiMeetJS/./modules/transcription/transcriber.js","webpack://JitsiMeetJS/./modules/transcription/transcriptionServices/AbstractTranscriptionService.js","webpack://JitsiMeetJS/./modules/transcription/transcriptionServices/SphinxTranscriptionService.js","webpack://JitsiMeetJS/./modules/transcription/word.js","webpack://JitsiMeetJS/./modules/util/AsyncQueue.js","webpack://JitsiMeetJS/./modules/util/AuthUtil.js","webpack://JitsiMeetJS/./modules/util/EventEmitterForwarder.js","webpack://JitsiMeetJS/./modules/util/GlobalOnErrorHandler.js","webpack://JitsiMeetJS/./modules/util/Listenable.js","webpack://JitsiMeetJS/./modules/util/MathUtil.js","webpack://JitsiMeetJS/./modules/util/RandomUtil.js","webpack://JitsiMeetJS/./modules/util/Retry.js","webpack://JitsiMeetJS/./modules/util/ScriptUtil.js","webpack://JitsiMeetJS/./modules/util/StringUtils.js","webpack://JitsiMeetJS/./modules/util/UsernameGenerator.js","webpack://JitsiMeetJS/./modules/version/ComponentsVersions.js","webpack://JitsiMeetJS/./modules/videosipgw/JitsiVideoSIPGWSession.js","webpack://JitsiMeetJS/./modules/videosipgw/VideoSIPGW.js","webpack://JitsiMeetJS/./modules/videosipgw/VideoSIPGWConstants.js","webpack://JitsiMeetJS/./modules/webaudio/AudioMixer.js","webpack://JitsiMeetJS/./modules/webaudio/WebAudioUtils.js","webpack://JitsiMeetJS/./modules/xmpp/Caps.js","webpack://JitsiMeetJS/./modules/xmpp/ChatRoom.js","webpack://JitsiMeetJS/./modules/xmpp/ConnectionPlugin.js","webpack://JitsiMeetJS/./modules/xmpp/JingleSession.js","webpack://JitsiMeetJS/./modules/xmpp/JingleSessionPC.js","webpack://JitsiMeetJS/./modules/xmpp/JingleSessionState.js","webpack://JitsiMeetJS/./modules/xmpp/RtxModifier.js","webpack://JitsiMeetJS/./modules/xmpp/SDP.js","webpack://JitsiMeetJS/./modules/xmpp/SDPDiffer.js","webpack://JitsiMeetJS/./modules/xmpp/SDPUtil.js","webpack://JitsiMeetJS/./modules/xmpp/SdpConsistency.js","webpack://JitsiMeetJS/./modules/xmpp/SdpTransformUtil.js","webpack://JitsiMeetJS/./modules/xmpp/SignalingLayerImpl.js","webpack://JitsiMeetJS/./modules/xmpp/StropheLastSuccess.js","webpack://JitsiMeetJS/./modules/xmpp/XmppConnection.js","webpack://JitsiMeetJS/./modules/xmpp/moderator.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.emuc.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.jingle.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.logger.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.ping.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.rayo.js","webpack://JitsiMeetJS/./modules/xmpp/strophe.util.js","webpack://JitsiMeetJS/./modules/xmpp/xmpp.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-interop/lib/index.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-interop/lib/interop.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-interop/lib/transform.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-simulcast/lib/index.js","webpack://JitsiMeetJS/./node_modules/@jitsi/sdp-simulcast/lib/transform-utils.js","webpack://JitsiMeetJS/./node_modules/async/lib/async.js","webpack://JitsiMeetJS/./node_modules/bowser/es5.js","webpack://JitsiMeetJS/./node_modules/current-executing-script/dist/currentExecutingScript.js","webpack://JitsiMeetJS/./node_modules/events/events.js","webpack://JitsiMeetJS/./node_modules/jitsi-meet-logger/lib/LogCollector.js","webpack://JitsiMeetJS/./node_modules/jitsi-meet-logger/lib/Logger.js","webpack://JitsiMeetJS/./node_modules/jitsi-meet-logger/lib/index.js","webpack://JitsiMeetJS/./node_modules/js-md5/src/md5.js","webpack://JitsiMeetJS/./node_modules/js-utils/avatar/index.js","webpack://JitsiMeetJS/./node_modules/js-utils/browser-capabilities/BrowserCapabilities.js","webpack://JitsiMeetJS/./node_modules/js-utils/browser-capabilities/index.js","webpack://JitsiMeetJS/./node_modules/js-utils/browser-detection/BrowserDetection.js","webpack://JitsiMeetJS/./node_modules/js-utils/browser-detection/browsers.js","webpack://JitsiMeetJS/./node_modules/js-utils/browser-detection/index.js","webpack://JitsiMeetJS/./node_modules/js-utils/index.js","webpack://JitsiMeetJS/./node_modules/lodash.clonedeep/index.js","webpack://JitsiMeetJS/./node_modules/lodash.isequal/index.js","webpack://JitsiMeetJS/./node_modules/process/browser.js","webpack://JitsiMeetJS/./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/grammar.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/index.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/parser.js","webpack://JitsiMeetJS/./node_modules/sdp-transform/lib/writer.js","webpack://JitsiMeetJS/./node_modules/sdp/sdp.js","webpack://JitsiMeetJS/./node_modules/setimmediate/setImmediate.js","webpack://JitsiMeetJS/./node_modules/strophe.js/dist/strophe.umd.js","webpack://JitsiMeetJS/../src/strophe.disco.js","webpack://JitsiMeetJS/../src/strophe.stream-management.js","webpack://JitsiMeetJS/./node_modules/timers-browserify/main.js","webpack://JitsiMeetJS/(webpack)/buildin/amd-options.js","webpack://JitsiMeetJS/(webpack)/buildin/global.js","webpack://JitsiMeetJS/(webpack)/buildin/module.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/common_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack://JitsiMeetJS/./node_modules/webrtc-adapter/src/js/utils.js","webpack://JitsiMeetJS/./service/RTC/CameraFacingMode.js","webpack://JitsiMeetJS/./service/RTC/MediaType.js","webpack://JitsiMeetJS/./service/RTC/RTCEvents.js","webpack://JitsiMeetJS/./service/RTC/Resolutions.js","webpack://JitsiMeetJS/./service/RTC/SignalingEvents.js","webpack://JitsiMeetJS/./service/RTC/SignalingLayer.js","webpack://JitsiMeetJS/./service/RTC/VideoType.js","webpack://JitsiMeetJS/./service/authentication/AuthenticationEvents.js","webpack://JitsiMeetJS/./service/connectivity/ConnectionQualityEvents.js","webpack://JitsiMeetJS/./service/e2eping/E2ePingEvents.js","webpack://JitsiMeetJS/./service/statistics/AnalyticsEvents.js","webpack://JitsiMeetJS/./service/statistics/Events.js","webpack://JitsiMeetJS/./service/statistics/constants.js","webpack://JitsiMeetJS/./service/xmpp/XMPPEvents.js"],"names":["logger","getLogger","__filename","JINGLE_SI_TIMEOUT","JitsiConference","options","name","toLowerCase","errmsg","error","Error","eventEmitter","EventEmitter","eventManager","JitsiConferenceEventManager","participants","_init","componentsVersions","ComponentsVersions","jvbJingleSession","lastDominantSpeaker","dtmfManager","somebodySupportsDTMF","authEnabled","startAudioMuted","startVideoMuted","startMutedPolicy","audio","video","isMutedByFocus","mutedByFocusActor","wasStopped","properties","connectionQuality","ConnectionQuality","avgRtpStatsReporter","AvgRTPStatsReporter","config","avgRtpStatsN","_audioOutputProblemDetector","AudioOutputProblemDetector","isJvbConnectionInterrupted","speakerStatsCollector","SpeakerStatsCollector","deferredStartP2PTask","delay","parseInt","p2p","backToP2PDelay","isNaN","info","isP2PConnectionInterrupted","p2pJingleSession","videoSIPGWHandler","VideoSIPGW","room","recordingManager","RecordingManager","_conferenceJoinAnalyticsEventSent","browser","supportsInsertableStreams","_e2eeCtx","E2EEContext","salt","prototype","constructor","resourceCreator","jid","isAuthenticatedUser","mucNickname","RandomUtil","randomHexString","Strophe","getNodeFromJid","substr","re","test","connection","xmpp","setupXMPPListeners","_statsCurrentId","statisticsId","Settings","callStatsUserName","createRoom","statsId","_onIceConnectionInterrupted","bind","addListener","XMPPEvents","_onIceConnectionRestored","_onIceConnectionEstablished","_updateProperties","_sendConferenceJoinAnalyticsEvent","rttMonitor","RttMonitor","e2eping","E2ePing","message","to","sendMessage","warn","msg","rtc","RTC","setupRTCListeners","participantConnectionStatus","ParticipantConnectionStatusHandler","rtcMuteTimeout","_peerConnStatusRtcMuteTimeout","outOfLastNTimeout","_peerConnStatusOutOfLastNTimeout","init","statistics","Statistics","aliasName","userName","statisticsDisplayName","myUserId","callStatsConfIDNamespace","hosts","domain","confID","customScriptUrl","callStatsCustomScriptUrl","callStatsID","callStatsSecret","callStatsApplicationLogsDisabled","roomName","applicationName","getWiFiStatsMethod","analytics","addPermanentProperties","setupChatRoomListeners","setupStatisticsListeners","enableTalkWhileMuted","createVADProcessor","_audioAnalyser","VADAudioAnalyser","vadTalkMutedDetection","VADTalkMutedDetection","on","DetectionEvents","emit","JitsiConferenceEvents","addVADDetectionService","_talkWhileMutedDetection","TalkMutedDetection","enableNoisyMicDetection","vadNoiseDetection","VADNoiseDetection","enableNoAudioDetection","_noAudioSignalDetection","NoAudioSignalDetection","hasAudioSignal","setLastN","channelLastN","jvb121Status","Jvb121EventGenerator","p2pDominantSpeakerDetection","P2PDominantSpeakerDetection","deploymentInfo","userRegion","setLocalParticipantProperty","join","password","then","_maybeSetSITimeout","authenticateAndUpgradeRole","call","onCreateResource","isJoined","joined","isP2PEnabled","Boolean","enabled","isP2PTestModeEnabled","testing","p2pTestMode","leave","dispose","stop","getLocalTracks","forEach","track","onLocalTrackRemoved","closeBridgeChannel","_delayedIceFailed","cancel","close","removeListener","removeXMPPListeners","destroy","catch","getParticipants","participant","onMemberLeft","getJid","Promise","reject","getName","getConnection","isAuthEnabled","isLoggedIn","authIdentity","getAuthLogin","isExternalAuthEnabled","moderator","getExternalAuthUrl","urlForPopup","resolve","getPopupLoginUrl","getLoginUrl","mediaType","tracks","getLocalAudioTrack","getLocalVideoTrack","eventId","handler","off","addEventListener","removeEventListener","addCommandListener","command","addPresenceListener","removeCommandListener","removePresenceListener","sendTextMessage","elementName","displayName","getFromPresence","value","sendPrivateTextMessage","id","sendPrivateMessage","sendCommand","values","addToPresence","sendPresence","sendCommandOnce","removeCommand","removeFromPresence","setDisplayName","attributes","xmlns","setSubject","subject","isModerator","getTranscriber","transcriber","undefined","Transcriber","localAudioTracks","MediaType","localAudio","addTrack","remoteAudioTracks","getRemoteTracks","remoteTrack","getTranscriptionStatus","transcriptionStatus","isVideoTrack","localVideoTrack","replaceTrack","_fireAudioLevelChangeEvent","audioLevel","tpc","activeTpc","getActivePeerConnection","_fireMuteChangeEvent","isAudioTrack","isMuted","muteParticipant","myroomjid","actorParticipant","actorId","getResourceFromJid","_setConference","removeLocalTrack","JitsiTrackEvents","muteHandler","audioLevelHandler","videoType","VideoType","DESKTOP","sendScreenSharingEvent","removeTrack","oldTrack","newTrack","disposed","JitsiTrackError","JitsiTrackErrors","_doReplaceTrack","_setupNewTrack","replaceTrackPromises","push","all","devices","getCurrentlyAvailableMediaDevices","device","find","d","kind","getTrack","label","sendActiveDeviceListEvent","getEventDataForActiveDevice","addLocalTrack","setAudioMute","setVideoMute","_addLocalTrackAsUnmute","addAsUnmutePromises","addTrackAsUnmute","_removeLocalTrackAsMute","removeAsMutePromises","removeTrackAsMute","getRole","role","isHidden","getDomainFromJid","hiddenDomain","lock","lockRoom","err","JitsiConferenceErrors","unlock","selectParticipant","participantId","selectParticipants","participantIds","Array","isArray","selectEndpoints","pinParticipant","pinEndpoint","getLastN","lastN","Number","isInteger","n","RangeError","isVideoActive","setMediaTransferActive","isInLastN","Object","keys","map","key","getParticipantCount","countHidden","filter","p","length","getParticipantById","kickParticipant","kick","_maybeClearSITimeout","_sessionInitiateTimeout","window","clearTimeout","setTimeout","sendAnalytics","createJingleEvent","ACTION_JINGLE_SI_TIMEOUT","onMemberJoined","nick","statsID","status","identity","botType","JitsiParticipant","_role","_botType","_updateFeatures","_maybeStartOrStopP2P","getFeatures","features","_supportsDTMF","has","updateDTMFSupport","setProperty","_onMemberBotTypeChanged","peers","botParticipant","removedTracks","removeRemoteTracks","onMemberKicked","isSelfPresence","kickedParticipantId","kickedParticipant","onLocalRoleChanged","onUserRoleChanged","onDisplayNameChanged","_displayName","onRemoteTrackAdded","isP2P","isP2PActive","_setupReceiverE2EEForTrack","getParticipantId","_tracks","emitter","activeTPC","onCallAccepted","session","answer","localTracks","_setupSenderE2EEForTrack","setAnswer","onTransportInfo","transportInfo","addIceCandidates","onRemoteTrackRemoved","removedTrack","getTracks","i","splice","_onIncomingCallP2P","jingleSession","jingleOffer","rejectReason","supportsP2P","reason","reasonDescription","errorMsg","_shouldBeInP2PMode","ACTION_P2P_DECLINED","_rejectIncomingCall","_acceptP2PIncomingCall","onIncomingCall","now","isFocus","remoteJid","description","_acceptJvbIncomingCall","connectionTimes","sendAnalyticsAndLog","ACTION_JINGLE_RESTART","serverRegion","$","attr","ACTION_JINGLE_SI_RECEIVED","initialize","GlobalOnErrorHandler","callErrorHandler","_setBridgeChannel","peerconnection","acceptOffer","_suspendMediaTransferForJvbConnection","startCallStats","startRemoteStats","e","offerIq","pc","wsUrl","webSocket","first","getAttribute","bridgeChannelType","openBridgeChannel","initializeBridgeChannel","terminate","sendSessionTerminate","onCallEnded","reasonCondition","reasonText","ACTION_JINGLE_TERMINATE","stopRemoteStats","stopCallStats","forceJvb121","p2pFailed","_stopP2PSession","sid","onSuspendDetected","supportsDTMF","isDTMFSupported","sendTones","tones","duration","pause","peerConnection","startRecording","stopRecording","sessionID","isSIPCallingSupported","dial","number","hangup","startTranscriber","stopTranscriber","getPhoneNumber","getPhonePin","getMeetingUniqueId","getMeetingId","getConnectionState","setStartMutedPolicy","policy","getStartMutedPolicy","isStartAudioMuted","isStartVideoMuted","getLogs","data","getJingleLog","metadata","time","Date","url","location","href","ua","navigator","userAgent","log","getXmppLog","getConnectionTimes","removeLocalParticipantProperty","getLocalParticipantProperty","property","presMap","nodes","prop","tagName","sendFeedback","overallFeedback","detailedFeedback","isCallstatsEnabled","_onTrackAttach","container","isLocal","ssrc","remoteUserId","getLocalSSRC","getSSRC","associateStreamWithVideoTag","getUsageLabel","sendApplicationLog","sendLog","_isFocus","mucJid","_fireIncompatibleVersionsEvent","sendEndpointMessage","payload","sendChannelMessage","broadcastEndpointMessage","sendThroughVideobridge","messageType","messageToSend","hasOwnProperty","JITSI_MEET_MUC_TYPE","JSON","stringify","isConnectionInterrupted","_onIceConnectionFailed","createP2PEvent","ACTION_P2P_FAILED","initiator","isInitiator","isPingSupported","IceFailedNotification","start","sendIceFailedNotification","remoteID","getStatsID","debug","_addRemoteJVBTracks","_addRemoteTracks","_addRemoteP2PTracks","logName","remoteTracks","RTCEvents","p2pEstablishmentDuration","establishmentDuration","jvbEstablishmentDuration","done","forceJVB121Ratio","Math","random","establishmentDurationDiff","ICE_ESTABLISHMENT_DURATION_DIFF","_setP2PStatus","_removeRemoteJVBTracks","ACTION_P2P_ESTABLISHED","changed","isEqual","analyticsKeys","replace","getProperty","_maybeClearDeferredStartP2P","_removeRemoteTracks","_removeRemoteP2PTracks","sessionNickname","_resumeMediaTransferForJvbConnection","newStatus","sendConnectionResumeOrHoldEvent","_startP2PSession","jingle","newP2PJingleSession","invite","userLeftEvent","peerCount","shouldBeInP2P","peer","myId","peersId","getId","ACTION_P2P_SWITCH_TO_JVB","hasBotPeer","wasP2PEstablished","getP2PConnectionState","startP2PSession","peerJid","stopP2PSession","getSpeakerStats","getStats","setReceiverVideoConstraint","maxFrameHeight","createVideoSIPGWSession","sipAddress","VideoSIPGWConstants","meetingId","createConferenceEvent","isE2EESupported","setE2EEKey","setKey","sender","findSenderForTrack","handleSender","getType","receiver","findReceiverForTrack","handleReceiver","AUTHENTICATION_REQUIRED","CHAT_ERROR","CONFERENCE_DESTROYED","CONFERENCE_MAX_USERS","CONNECTION_ERROR","NOT_ALLOWED_ERROR","FOCUS_DISCONNECTED","FOCUS_LEFT","GRACEFUL_SHUTDOWN","INCOMPATIBLE_SERVER_VERSIONS","OFFER_ANSWER_FAILED","PASSWORD_NOT_SUPPORTED","PASSWORD_REQUIRED","RESERVATION_ERROR","SETUP_FAILED","VIDEOBRIDGE_NOT_AVAILABLE","conference","xmppListeners","sendMuteEvent","chatRoom","chatRoomForwarder","EventEmitterForwarder","ICE_RESTARTING","ICE_RESTART_SUCCESS","AUDIO_MUTED_BY_FOCUS","actor","createRemotelyMutedEvent","forward","SUBJECT_CHANGED","MUC_JOINED","event","createConnectionStageReachedEvent","RENEGOTIATION_FAILED","ROOM_JOIN_ERROR","ROOM_CONNECT_ERROR","ROOM_CONNECT_NOT_ALLOWED_ERROR","ROOM_MAX_USERS_ERROR","BRIDGE_DOWN","createBridgeDownEvent","CONNECTION_ICE_FAILED","MUC_DESTROYED","CHAT_ERROR_RECEIVED","createFocusLeftEvent","SESSION_ACCEPT_TIMEOUT","ACTION_JINGLE_SA_TIMEOUT","RECORDER_STATE_CHANGED","getStatus","setTerminator","setInitiator","TRANSCRIPTION_STATUS_CHANGED","VIDEO_SIP_GW_AVAILABILITY_CHANGED","VIDEO_SIP_GW_SESSION_STATE_CHANGED","PHONE_NUMBER_CHANGED","setParticipantPropertyListener","node","from","substring","KICKED","SUSPEND_DETECTED","MUC_LOCK_CHANGED","MUC_MEMBER_JOINED","MUC_MEMBER_BOT_TYPE_CHANGED","MUC_MEMBER_LEFT","MUC_LEFT","DISPLAY_NAME_CHANGED","LOCAL_ROLE_CHANGED","recorderSession","logObject","getError","MUC_ROLE_CHANGED","AuthenticationEvents","IDENTITY_UPDATED","MESSAGE_RECEIVED","txt","myJid","ts","PRIVATE_MESSAGE_RECEIVED","PRESENCE_STATUS","_status","JSON_MESSAGE_RECEIVED","updated","sendIceConnectionFailedEvent","ADD_ICE_CANDIDATE_FAILED","sendAddIceCandidateFailed","REMOTE_TRACK_ADDED","REMOTE_TRACK_REMOVED","DOMINANT_SPEAKER_CHANGED","sendDominantSpeakerEvent","roomjid","DATA_CHANNEL_OPEN","performance","ENDPOINT_MESSAGE_RECEIVED","LOCAL_UFRAG_CHANGED","ufrag","REMOTE_UFRAG_CHANGED","CREATE_ANSWER_FAILED","sendCreateAnswerFailed","CREATE_OFFER_FAILED","sendCreateOfferFailed","SET_LOCAL_DESCRIPTION_FAILED","sendSetLocalDescFailed","SET_REMOTE_DESCRIPTION_FAILED","sendSetRemoteDescFailed","LOCAL_TRACK_SSRC_UPDATED","caps","PARTCIPANT_FEATURES_CHANGED","eventName","featuresChangedListener","_addConferenceXMPPListener","CALL_INCOMING","CALL_ACCEPTED","TRANSPORT_INFO","CALL_ENDED","START_MUTED_FROM_FOCUS","audioMuted","videoMuted","ignoreStartMuted","mute","CONFERENCE_TIMESTAMP_RECEIVED","createdTimestamp","listener","addAudioLevelListener","level","setAudioLevel","addBeforeDisposedListener","startSilent","addByteSentStatsListener","stats","_onByteSentStatsReceived","AUDIO_INPUT_STATE_CHANGE","AUTH_STATUS_CHANGED","AVATAR_CHANGED","BEFORE_STATISTICS_DISPOSED","CONFERENCE_ERROR","CONFERENCE_FAILED","CONFERENCE_JOINED","CONFERENCE_LEFT","CONNECTION_ESTABLISHED","CONNECTION_INTERRUPTED","CONNECTION_RESTORED","DATA_CHANNEL_OPENED","CONFERENCE_CREATED_TIMESTAMP","DTMF_SUPPORT_CHANGED","JVB121_STATUS","PARTICIPANT_KICKED","LAST_N_ENDPOINTS_CHANGED","LOCK_STATE_CHANGED","SERVER_REGION_CHANGED","NO_AUDIO_INPUT","NOISY_MIC","PARTICIPANT_CONN_STATUS_CHANGED","PARTICIPANT_PROPERTY_CHANGED","P2P_STATUS","PROPERTIES_CHANGED","START_MUTED_POLICY_CHANGED","STARTED_MUTED","TALK_WHILE_MUTED","TRACK_ADDED","TRACK_AUDIO_LEVEL_CHANGED","TRACK_MUTE_CHANGED","TRACK_REMOVED","USER_JOINED","USER_LEFT","USER_ROLE_CHANGED","USER_STATUS_CHANGED","BOT_TYPE_CHANGED","JitsiConnection","appID","token","XMPP","JitsiConnectionEvents","errType","credentials","details","createConnectionFailedEvent","ANALYTICS_CONNECTION_DISCONNECTED","connect","attach","disconnect","args","setToken","initJitsiConference","addFeature","feature","submit","removeFeature","CONNECTION_DROPPED_ERROR","OTHER_ERROR","SERVER_ERROR","CONNECTION_DISCONNECTED","CONNECTION_FAILED","WRONG_STATE","AUDIO_PERMISSION_NAME","PERMISSION_GRANTED_STATUS","VIDEO_PERMISSION_NAME","JitsiMediaDevices","_eventEmitter","_grantedPermissions","DEVICE_LIST_CHANGED","JitsiMediaDevicesEvents","DEVICE_LIST_AVAILABLE","_logOutputDevice","getAudioOutputDevice","GRANTED_PERMISSIONS","grantedPermissions","_handleGrantedPermissions","_permissionsApiSupported","permissions","query","deviceID","deviceId","enumerateDevices","callback","isDeviceListAvailable","isDeviceChangeAvailable","deviceType","isDevicePermissionGranted","type","supported","promises","results","every","permissionStatus","grantStatus","state","isMultipleAudioInputSupported","isFirefox","setAudioOutputDevice","availableDevices","emitEvent","supportsVideo","PERMISSION_PROMPT_IS_SHOWN","Logger","USER_MEDIA_PERMISSION_PROMPT_TIMEOUT","getLowerResolution","resolution","Resolutions","order","res","resName","r","getAnalyticsAttributesFromOptions","includes","video_requested","_mergeNamespaceAndModule","module","JitsiMeetJS","assign","version","ProxyConnectionService","constants","ParticipantConnectionStatus","recording","recordingConstants","sipVideoGW","JitsiTranscriptionStatus","events","detection","mediaDevices","ConnectionQualityEvents","E2ePingEvents","errors","JitsiConnectionErrors","errorTypes","logLevels","levels","enableAnalyticsLogging","enableWindowOnErrorHandler","addHandler","getGlobalOnErrorHandler","aprops","component","isDesktopSharingEnabled","isWebRtcSupported","setLogLevel","setLogLevelById","addGlobalLogTransport","globalTransport","addGlobalTransport","removeGlobalLogTransport","removeGlobalTransport","setGlobalLogOptions","setGlobalOptions","createLocalTracks","firePermissionPromptIsShownEvent","originalOptions","promiseFulfilled","obtainAudioAndVideoPermissions","createGetUserMediaEvent","disableAudioLevels","mStream","getOriginalStream","startLocalStats","stopLocalStats","currentlyAvailableMediaDevices","_setRealDeviceIdFromDeviceList","setVideoTrackContentHints","usesNewGumFlow","oldResolution","newResolution","gum","constraints","mandatory","sourceId","cameraDeviceId","sendGetUserMediaFailed","createTrackVADEmitter","localAudioDeviceId","sampleRate","vadProcessor","TrackVADEmitter","create","createAudioMixer","AudioMixer","getActiveAudioDevice","isCollectingLocalStats","audioLevelsEnabled","LocalStatsCollector","isLocalStatsSupported","source","lineno","colno","reportGlobalError","hint","contentHint","util","AuthUtil","ScriptUtil","hidden","_jid","_id","_conference","_hidden","_statsID","_connectionStatus","ACTIVE","_properties","_identity","getConference","hasAnyVideoTrackWebRTCMuted","some","jitsiTrack","isWebRTCTrackMuted","_setConnectionStatus","getConnectionStatus","oldValue","slice","getTracksByMediaType","getDisplayName","isAudioMuted","_isMediaTypeMuted","reduce","muted","isVideoMuted","timeout","_getFeaturesPromise","ERROR_FEATURE_VERSION_MISMATCH","result","getBotType","TRACK_ERROR_TO_MESSAGE_MAP","constraintName","constraint","indexOf","getResolutionFromFailedConstraint","stack","failedConstraintName","minWidth","minHeight","CHROME_EXTENSION_GENERIC_ERROR","CHROME_EXTENSION_INSTALLATION_ERROR","CHROME_EXTENSION_USER_GESTURE_REQUIRED","CHROME_EXTENSION_USER_CANCELED","CONSTRAINT_FAILED","ELECTRON_DESKTOP_PICKER_ERROR","ELECTRON_DESKTOP_PICKER_NOT_FOUND","FIREFOX_EXTENSION_NEEDED","GENERAL","NOT_FOUND","PERMISSION_DENIED","TRACK_IS_DISPOSED","TRACK_NO_STREAM_FOUND","UNSUPPORTED_RESOLUTION","LOCAL_TRACK_STOPPED","TRACK_AUDIO_OUTPUT_CHANGED","TRACK_VIDEOTYPE_CHANGED","NO_DATA_FROM_SOURCE","ON","OFF","onLoginSuccessful","roomPassword","canceled","rejectPromise","process","authenticate","authenticationError","connectionError","exports","require","default","BridgeChannel","TypeError","_channel","_mode","_areRetriesEnabled","_closedFromClient","datachannel","createDataChannel","protocol","_handleChannel","_wsUrl","_initWebSocket","ws","WebSocket","_startConnectionRetries","timeoutS","reload","isOpen","min","_retryTimeout","_stopConnectionRetries","_retryWebSocketConnection","closeEvent","code","createBridgeChannelClosedEvent","once","mode","readyState","OPEN","_send","colibriClass","msgPayload","sendSetLastNMessage","jsonObject","sendPinnedEndpointMessage","endpointId","pinnedEndpoint","sendSelectedEndpointsMessage","endpointIds","selectedEndpoints","sendReceiverVideoConstraintMessage","maxFrameHeightPixels","channel","onopen","onerror","onmessage","obj","parse","dominantSpeakerEndpoint","endpoint","isActive","active","ENDPOINT_CONN_STATUS_CHANGED","lastNEndpoints","LASTN_ENDPOINT_CHANGED","isSelected","IS_SELECTED_CHANGED","onclose","send","JitsiLocalTrack","JitsiTrack","facingMode","rtcId","sourceType","stream","effects","_setEffectInProgress","effect","isEnabled","_startStreamEffect","getSettings","height","_constraints","getConstraints","CAMERA","width","_prevSetMuted","_facingMode","_trackEnded","_hasSentData","_testDataSent","_realDeviceId","_trackMutedTS","_onDeviceListWillChange","oldRealDeviceId","RTCUtils","_onAudioOutputDeviceChanged","setAudioOutput","AUDIO_OUTPUT_DEVICE_CHANGED","DEVICE_LIST_WILL_CHANGE","_initNoDataFromSourceHandlers","isEnded","_isNoDataFromSourceEventsEnabled","_setHandler","_fireNoDataFromSourceEvent","TRACK_UNMUTED","isReceivingData","createNoDataFromSourceEvent","_setStream","storedMSID","getMSID","_streamEffect","_originalStream","startEffect","_stopStreamEffect","stopEffect","_switchStreamEffect","setEffect","usesUnifiedPlan","containers","cont","attachMediaStream","_queueSetMuted","unmute","setMuted","_setMuted","promise","logMuteInfo","doesVideoMuteByStreamRemove","_removeStreamFromConferenceAsMute","_unregisterHandlers","stopStream","streamOptions","getDeviceId","getCameraFacingMode","newObtainAudioAndVideoPermissions","streamsInfo","streamInfo","_addStreamToConferenceAsUnmute","_sendMuteStatus","successCallback","errorCallback","detach","_maybeFireTrackAttached","bytesSent","iceConnectionState","sendEvent","NO_BYTES_SENT","trackSettings","CameraFacingMode","USER","_stopStreamInProgress","stopMediaStream","_switchCamera","ENVIRONMENT","_effectEnabled","toString","ttfmTrackerAudioAttached","ttfmTrackerVideoAttached","containerEvents","JitsiRemoteTrack","ownerEndpointId","hasBeenMuted","_bindTrackHandlers","_containerHandlers","_containerEventHandler","_onTrackMute","_onTrackUnmute","REMOTE_TRACK_MUTE","REMOTE_TRACK_UNMUTE","setMute","_setVideoType","_playCallback","console","gumStart","gumEnd","gumDuration","ttfm","createTtfmEvent","_attachTTFMTracker","_onTrackDetach","_getStatus","trackHandler2Prop","addMediaStreamInactiveHandler","mediaStream","oninactive","streamInactiveHandler","trackMediaType","handlers","Map","_streamInactiveHandler","set","delete","videoTrack","getVideoTracks","get","isLocalAudioTrack","getStreamId","getTrackLabel","getTrackId","cs","c","removeAllListeners","isScreenSharing","getStreamID","streamId","trackId","audioOutputDeviceId","element","setSinkId","LocalSdpMunger","_addMutedLocalVideoTracksToSDP","transformer","localVideos","videoMLine","selectMedia","modified","isInPeerConnection","isMediaStreamInPc","shouldFakeSdp","requiredSSRCs","isSimulcastOn","simulcast","ssrcCache","sdpConsistency","cachedPrimarySsrc","direction","primarySSRC","primaryCname","ssrcNum","removeSSRC","addSSRCAttribute","attribute","group","ssrcs","semantics","findGroup","addSSRCGroup","disableRtx","rtxModifier","modifyRtxSsrcs2","_transformMediaIdentifiers","mediaSection","pcId","ssrcLine","streamAndTrackIDs","split","maybeAddMutedLocalVideoTracksToSDP","desc","SdpTransformWrap","sdp","RTCSessionDescription","toRawSDP","transformStreamIdentifiers","sessionDesc","audioMLine","peerConnectionIdCounter","rtcTrackIdCounter","tracksInfo","newTracks","trackInfo","micDeviceId","safeCounterIncrement","localTrack","_newCreateLocalTracks","mediaStreamMetaData","metaData","Listenable","peerConnections","_channelOpen","_lastN","_lastNEndpoints","_maxFrameHeight","_pinnedEndpoint","_selectedEndpoints","_lastNChangeListener","_onLastNChanged","_onDeviceListChanged","_updateAudioOutputForAudioTracks","_channelOpenListener","newCreateLocalTracks","obtainMediaPromise","_selectedEndpoint","oldLastNEndpoints","leavingLastNEndpoints","enteringLastNEndpoints","ids","eventType","createPeerConnection","signaling","iceConfig","pcConstraints","getPCConstraints","abtestSuspendVideo","setSuspendVideo","forceEncodedAudioInsertableStreams","forceEncodedVideoInsertableStreams","supportsSdpSemantics","sdpSemantics","bundlePolicy","newConnection","TraceablePeerConnection","_removePeerConnection","traceablePeerConnection","localVideo","pcRemoteTracks","concat","mutePromises","audioTrack","pos","owner","pcRemovedTracks","p2pPcConstraints","elSelector","getTrackID","isSupported","isUserStream","isUserStreamById","getTrackBySSRC","LASTN_VALUE_CHANGED","usesAdapter","AVAILABLE_DEVICES_POLL_INTERVAL_TIME","OLD_GUM_DEFAULT_RESOLUTION","OLD_GUM_DEFAULT_DEVICES","DEFAULT_CONSTRAINTS","ideal","max","SS_DEFAULT_FRAME_RATE","audioOutputChanged","disableAP","disableAEC","disableNS","disableAGC","disableHPF","featureDetectionAudioEl","document","createElement","isAudioOutputDeviceChangeAvailable","availableDevicesPollTimer","initEnumerateDevicesWithCallback","setResolutionConstraints","isNewStyleConstraintsSupported","maxWidth","maxHeight","um","isSafari","isReactNative","optional","minFps","maxFps","fps","minFrameRate","maxFrameRate","echoCancellation","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","googNoiseSuppression2","googEchoCancellation2","googAutoGainControl2","isChrome","getSSConstraints","mozMediaSource","mediaSource","frameRate","isElectron","screenShareAudio","desktopStream","chromeMediaSource","chromeMediaSourceId","bandwidth","firefox_fake_device","fake","newGetConstraints","screen","getTrackSSConstraints","desktopSharingFrameRate","updateGrantedPermissions","audioTracksReceived","getAudioTracks","videoTracksReceived","compareAvailableMediaDevices","newDevices","mediaDeviceInfoToJSON","sort","groupId","facing","sendDeviceListToAnalytics","deviceList","audioInputDeviceCount","audioOutputDeviceCount","videoInputDeviceCount","videoOutputDeviceCount","AVAILABLE_DEVICE","onMediaDevicesListChanged","devicesReceived","handleLocalStream","streams","audioStream","videoStream","audioVideo","audioTracks","MediaStream","videoTracks","j","desktop","defaultSetVideoSrc","srcObjectPropertyName","src","jitsiObjectURL","URL","createObjectURL","clearInterval","RTCPeerConnectionType","RTCPeerConnection","wrapAttachMediaStream","srcObject","isChromiumBased","SDPUtil","filterSpecialChars","_initPCConstraints","screenObtainer","getUserMediaWithConstraints","ds","updateKnownDevices","pds","supportsDeviceChangeEvent","setInterval","googHighStartBitrate","googPayloadPadding","googScreencastMinBitrate","googCpuOveruseDetection","googCpuOveruseEncodeUsage","googCpuUnderuseThreshold","googCpuOveruseThreshold","useIPv6","googIPv6","getUserMedia","_newGetUserMediaWithConstraints","umDevices","_newGetDesktopMedia","obtainStream","_parseDesktopSharingOptions","requestingDesktop","_getAudioAndVideoStreams","gumPromise","avStream","missingTracks","_getMissingTracks","desktopSharingSourceDevice","requestedDevices","missingDevices","audioDeviceRequested","videoDeviceRequested","desktopSharingExtensionExternalInstallation","desktopSharingSources","gumOptions","trackOptions","mediaStreamsMetaData","maybeRequestDesktopDevice","isDesktopDeviceRequested","matchingDevice","applyConstrainsPromise","applyConstraints","maybeCreateAndAddDesktopTrack","desktopAudioTracks","desktopAudioStream","desktopVideoTracks","desktopVideoStream","maybeRequestCaptureDevices","requestedCaptureDevices","maybeCreateAndAddAVTracks","release","revokeObjectURL","deviceData","enable","googSuspendBelowMinBitrate","rtcUtils","origAttachMediaStream","apply","arguments","ex","callUnhandledRejectionHandler","chromeExtInstalled","chromeExtUpdateRequired","gumFunction","CHROME_NO_EXTENSION_ERROR_MSG","ScreenObtainer","intChromeExtPromise","desktopSharingChromeDisabled","desktopSharingChromeExtId","desktopSharingFirefoxDisabled","_createObtainStreamMethod","isNWJS","_","onSuccess","onFailure","JitsiMeetNW","obtainDesktopStream","jitsiError","obtainScreenOnElectron","isOpera","supportsGetDisplayMedia","obtainScreenFromGetDisplayMedia","initChromeExtension","obtainScreenFromExtension","obtainScreenOnFirefox","obtainWebRTCScreen","JitsiMeetScreenObtainer","openDesktopPicker","desktopSharingChromeSources","streamType","onGetStreamResponse","response","streamCallback","failCallback","doGetStreamFromExtensionOptions","doGetStreamFromExtension","alert","handleExternalInstall","webStoreInstallUrl","getWebStoreInstallUrl","checkForChromeExtensionOnInterval","checkAgain","waitForExtensionAfterInstall","interval","getDisplayMedia","applyConstraintsPromise","isUpdateRequired","minVersion","extVersion","s1","s2","len","n1","n2","checkChromeExtInstalled","chrome","runtime","getVersion","lastError","updateRequired","desktopSharingChromeMinExtVersion","getStream","sources","initInlineInstalls","append","installed","waitInterval","retries","currentRetries","SIM_LAYER_1_RID","SIM_LAYER_2_RID","SIM_LAYER_3_RID","SIM_LAYER_RIDS","TPCUtils","simulcastEncodings","maxBitrate","rid","scaleResolutionDownBy","_ensureCorrectOrderOfSsrcs","parsedSdp","transform","media","mLine","ssrcGroups","reorderedSsrcs","write","_getStreamEncodings","_insertUnifiedPlanSimulcastReceive","usesSdpMungingForSimulcast","idx","findIndex","mline","rids","simulcast_03","simulcastLine","isVersionGreaterThan","transceiverInit","sendEncodings","addTransceiver","addTrackUnmute","transceiver","getTransceivers","t","addStream","setEncodings","removeTrackMute","stopped","localSSRCs","_addedStreams","s","_extractPrimarySSRC","setAudioTransferActive","parameters","getParameters","encodings","setParameters","transceivers","encoding","setVideoTransferActive","MAX_BITRATE","DESKSTOP_SHARE_RATE","signalingLayer","audioTransferActive","_dtmfSender","_dtmfTonesQueue","videoTransferActive","localUfrag","remoteUfrag","_peerVideoTypeChanged","SignalingEvents","_peerMutedChanged","tpcUtils","updateLog","statsinterval","maxstats","interop","Interop","Simulcast","numOfLayers","explodeRemoteSimulcast","SdpConsistency","localSdpMunger","RtxModifier","trace","what","onicecandidate","candidate","usesPlanB","onaddstream","_remoteStreamAdded","onremovestream","_remoteStreamRemoved","ontrack","_remoteTrackAdded","onremovetrack","evt","_remoteTrackRemoved","onsignalingstatechange","signalingState","oniceconnectionstatechange","onnegotiationneeded","ondatachannel","names","_processStat","stat","report","statValue","startTime","endTime","times","getTime","shift","dumpSDP","_getDesiredMediaDirection","mediaTransferActive","hasAnyTracksOfType","disableSimulcast","endpoints","endpointTrackMap","mediaTrack","getSsrcByTrackId","findTrackById","onaddtrack","streamAudioTracks","streamVideoTracks","remoteSDP","SDP","remoteDescription","mediaLines","mid","mls","findLine","msid","startsWith","ssrcLines","findLines","line","ssrcStr","trackSsrc","getSSRCOwner","peerMediaInfo","getPeerMediaInfo","_createRemoteTrack","remoteTracksMap","existingTrack","_removeRemoteTrackById","_getRemoteTrackById","removedAudioTrack","removedVideoTrack","_removeRemoteTrack","toBeRemoved","extractSSRCMap","ssrcMap","groupsMap","groupSSRCs","ssrcInfo","groups","ssrcNumber","normalizePlanB","firstSsrcs","newSsrcLines","replaceDefaultUnifiedPlanMsid","resStr","filteredLines","problematicSsrcIds","ssrcId","cnameLine","enforceSendRecv","localDescription","audioMedia","videoMedia","_getSSRC","_injectSsrcGroupForUnifiedSimulcast","getters","toPlanB","defineProperty","webrtcStream","_addStream","generateNewStreamSSRCInfo","setPrimarySsrc","simGroup","groupInfo","setSsrcCache","fidGroups","rtxSsrcMapping","fidGroup","primarySsrc","rtxSsrc","_assertTrackBelongs","webRtcStream","_removeStream","supportsRtpSender","_handleSenderRemoveStream","removeStream","methodName","doesBelong","findSenderByKind","getSenders","findSenderByStream","getReceivers","opts","_ensureSimulcastGroupIsLast","localSdp","sdpStr","videoStartIndex","simStartIndex","otherStartIndex","lastIndexOf","simEndIndex","simStr","otherEndIndex","sdpHead","simStrTrimmed","trim","sdpTail","_adjustLocalMediaDirection","modifiedDirection","desiredAudioDirection","desiredVideoDirection","setLocalDescription","disableH264","preferH264","m","stripVideoCodec","preferVideoCodec","toUnifiedPlan","getUfrag","setMaxBitRate","capScreenshareBitrate","setRemoteDescription","mungeRemoteDescription","currentDescription","interToneGap","rtpSender","dtmf","localAudioTrack","createDTMFSender","ontonechange","_onToneChange","toneBuffer","insertDTMF","tone","generateRecvonlySsrc","newSSRC","generateSsrc","clearRecvonlySsrc","clearVideoSsrcCache","peerTracks","clear","_fixAnswerRFC4145Setup","offer","a","raw","createAnswer","_createOfferOrAnswer","createOffer","hasCameraTrack","isOffer","handleSuccess","resultSdp","resolveFn","rejectFn","hasPrimarySsrcCached","makeVideoPrimarySsrcsConsistent","mungeLocalDescription","supportsRtx","modifyRtxSsrcs","_processLocalSSRCsMap","handleFailure","oaPromise","ssrcObj","trackMSID","oldSSRC","newSSRCNum","oldSSRCNum","addIceCandidate","sdpMid","sdpMLineIndex","usernameFragment","errback","currNumSsrcs","handleLayerSuspension","videoSender","simIndex","setIsSelected","enableLayerSuspension","BrowserCapabilities","BrowserDetection","isVersionLessThan","isUserInteractionRequiredForUnmute","supportsVideoMuteOnConnInterrupted","supportsBandwidthStatistics","ondevicechange","supportsLocalCandidateRttStatistics","supportsRTTStatistics","RTCRtpTransceiver","REQUIRED_CHROME_VERSION","_getChromiumBasedVersion","usesRidsForSimulcast","RTCRtpSender","createEncodedVideoStreams","versions","chromium","match","STATS_MESSAGE_TYPE","kSimulcastFormats","layers","target","MAX_TARGET_BITRATE","startBitrate","videoBitrateCap","getTarget","millisSinceStart","simulcastFormat","f","targetHeight","pixels","rampUp","MAX_SAFE_INTEGER","pow","_localStats","jvbRTT","_lastConnectionQualityUpdate","_remoteStats","_timeIceConnected","_timeVideoUnmuted","_timeLastBwCapRemoved","ConferenceEvents","_updateLocalConnectionQuality","_broadcastLocalStats","ICE_CONNECTION_STATE_CHANGED","newState","_updateRemoteStats","addConnectionStatsListener","_updateLocalStats","_maybeUpdateUnmuteTime","bridgeCount","_calculateConnectionQuality","resolutionName","quality","packetLoss","upload","newVideoBitrateCap","bandwidthLimiter","getBandwidthLimit","bitrate","maxIncreasePerSecond","prevConnectionQuality","diffSeconds","avgAudioLevels","localAvgAudioLevels","transport","rtt","updateLocalConnectionQuality","ping","_canceled","_iceFailedTimeout","DEFAULT_NOT_IN_LAST_N_TIMEOUT","DEFAULT_RTC_MUTE_TIMEOUT","DEFAULT_RESTORING_TIMEOUT","INACTIVE","INTERRUPTED","RESTORING","_getNewStateForJvbMode","isConnectionActiveByJvb","isRestoringTimedout","isVideoTrackFrozen","_getNewStateForP2PMode","trackTimers","connStatusFromJvb","rtcMutedTimestamp","enteredLastNTimestamp","restoringTimers","connectionStatusMap","_getVideoFrozenTimeout","_onEndpointConnStatusChanged","onEndpointConnStatusChanged","_onP2PStatus","refreshConnectionStatusForAll","_onUserLeft","onUserLeft","_onTrackRtcMuted","onTrackRtcMuted","_onTrackRtcUnmuted","onTrackRtcUnmuted","_onRemoteTrackAdded","_onRemoteTrackRemoved","_onSignallingMuteChanged","onSignallingMuteChanged","_onTrackVideoTypeChanged","onTrackVideoTypeChanged","_onLastNValueChanged","clearRtcMutedTimestamp","figureOutConnectionStatus","_changeConnectionStatus","hasAnyVideoRTCMuted","inP2PMode","isRestoringTimedOut","_isRestoringTimedout","audioOnlyMode","isConnActiveByJvb","_clearRestoringTimer","oldConnectionStatus","connectionStatus","nowMs","maybeSendParticipantConnectionStatusEvent","startedMs","createParticipantConnectionStatusEvent","leavingLastN","enteringLastN","rTimer","DETECTION_TIMEOUT","audioDevices","devicePromiseArray","micDevice","devicePromise","originalStream","allSettled","outcomeArray","successfulPromises","rejectedPromises","rejectReasons","stopActiveDevices","deviceLabel","DETECTOR_STATE_CHANGE","VAD_NOISY_DEVICE","VAD_REPORT_PUBLISHED","VAD_SCORE_PUBLISHED","VAD_TALK_WHILE_MUTED","SILENCE_PERIOD_MS","_timeoutTrigger","_hasAudioInput","_audioLevel","_trackAdded","_clearTriggerTimeout","_handleAudioInputStateChange","_handleNoAudioInputDetection","_eventFired","_audioTrack","SPEECH_DETECT_THRESHOLD","myUserID","_callback","_trackMuteChanged","_isLocalAudioTrack","procNodeSampleRate","jitsiLocalTrack","_procNodeSampleRate","_vadProcessor","_localTrack","_bufferResidue","Float32Array","_audioContext","createAudioContext","getRequiredPCMFrequency","_vadSampleSize","getSampleLength","_onAudioProcess","_initializeAudioContext","_audioSource","createMediaStreamSource","_audioProcessingNode","createScriptProcessor","audioEvent","inData","inputBuffer","getChannelData","completeInData","sampleTimestamp","pcmSample","vadScore","calculateAudioFrameVAD","timestamp","score","pcmData","_connectAudioGraph","onaudioprocess","destination","_disconnectAudioGraph","_cleanupResources","getDeviceLabel","_destroyed","VAD_EMITTER_SAMPLE_RATE","_createVADProcessor","_vadEmitter","_isVADEmitterRunning","_detectionServices","_vadInitTracker","_processVADScore","_trackRemoved","vadService","activeDetector","detector","_stopVADEmitter","_startVADEmitter","processVADScore","_changeDetectorsMuteState","changeMuteState","vadEmitter","reset","VAD_NOISE_AVG_THRESHOLD","NOISY_AUDIO_LEVEL_THRESHOLD","VAD_SCORE_TRIGGER","AUDIO_LEVEL_SCORE_TRIGGER","PROCESS_TIME_FRAME_SPAN_MS","_processing","_scoreArray","_audioLvlArray","_active","_calculateNoisyScore","scoreAvg","calculateAverage","audioLevelAvg","_setActiveState","_recordValues","avgAudioLvl","_processTimeout","posAudioLevels","filterPositiveValues","VAD_AVG_THRESHOLD","VAD_VOICE_LEVEL","_calculateVADScore","keyRingSize","ivLength","unencryptedBytes","delta","kJitsiE2EE","Symbol","E2EEcontext","_options","_cryptoKeyRing","_currentKeyIndex","_sendCounts","encoder","TextEncoder","_salt","encode","receiverStreams","createEncodedAudioStreams","TransformStream","_decodeFunction","readableStream","pipeThrough","pipeTo","writableStream","senderStreams","_encodeFunction","_deriveKey","keyBytes","material","crypto","subtle","importKey","deriveKey","iterations","hash","_makeIV","synchronizationSource","iv","ArrayBuffer","ivView","DataView","floor","sendCount","setUint32","encodedFrame","controller","keyIndex","encrypt","additionalData","Uint8Array","cipherText","newData","byteLength","newUint8","enqueue","cipherTextStart","cipherTextLength","decrypt","plainText","E2E_PING_REQUEST","E2E_PING_RESPONSE","ParticipantWrapper","requests","lastRequestId","clearIntervals","sendRequest","handleResponse","maybeSendAnalytics","isDataChannelOpen","pingInterval","pingIntervalMs","analyticsInterval","analyticsIntervalMs","requestId","requestMessage","timeSent","request","Infinity","createE2eRttEvent","participantJoined","participantLeft","messageReceived","dataChannelOpened","participantWrapper","handleRequest","_jvb121","evaluateStatus","oldStatus","ProxyConnectionPC","receiveAudio","receiveVideo","_peerConnection","_onError","_onRemoteStream","_onSendMessage","getPeerJid","processMessage","$jingle","ACTIONS","ACCEPT","_onSessionAccept","INITIATE","_onSessionInitiate","TERMINATE","_onSessionTerminate","_onTransportInfo","_createPeerConnection","configStub","connectionStub","connected","sendIQ","iceConfigStub","iceServers","DEFAULT_STUN_SERVERS","roomStub","getMediaPresenceInfo","_rtc","JingleSessionPC","offerToReceiveAudio","offerToReceiveVideo","errorType","onError","jitsiRemoteTrack","onRemoteStream","iq","onSendMessage","onTerminated","jitsiConnection","otherOptions","p2pIceConfig","_onFatalError","_convertStringToXML","action","UNAVAILABLE","_selfCloseConnection","xml","xmlDom","DOMParser","parseFromString","pcOptions","$iq","up","isVideo","convertVideoToDesktop","jitsiLocalTracks","stringifiedIq","XMLSerializer","serializeToString","nodeTree","onConnectionClosed","JibriSession","_connection","_setSessionID","setStatus","_error","getID","_sessionID","getInitiator","_initiator","getLiveStreamViewURL","_liveStreamViewURL","getTerminator","_terminator","getMode","setError","setLiveStreamViewURL","appData","broadcastId","focusMucJid","_createIQ","recordingXMLUtils","getSessionIdFromIq","_setErrorFromIq","errorIq","getElementsByTagName","children","_sessions","_chatRoom","onPresence","PRESENCE_RECEIVED","getSession","fromHiddenDomain","presence","isFromFocus","_handleFocusPresence","_handleJibriPresence","_addSession","_emitSessionUpdate","_createSession","jibriStatus","getFocusRecordingUpdate","recordingMode","liveStreamViewURL","getHiddenDomainUpdate","BUSY","ERROR","RESOURCE_CONSTRAINT","SERVICE_UNAVAILABLE","FILE","STREAM","PENDING","liveStreamViewURLContainer","textContent","modeContainer","sessionIDContainer","jibri","getSessionId","sessionIdContainer","sessionId","offerOptions","stunKeepAliveIntervalMs","PCMonitor","region","address","getStatsIntervalMs","getStatsInterval","rtts","candidates","startStatsInterval","handleCandidateRtt","rttTotal","candidateKey","responsesReceived","requestsSent","NaN","rttTotalDiff","responsesReceivedDiff","requestsResponsesDiff","pcMonitors","startPCMonitors","initialDelay","stunServers","count","offset","createRttByRegionEvent","_callStatsUserName","_machineId","localStorage","getLocalStorage","getItem","generateCallStatsUserName","setItem","machineId","generateJitsiMeetId","removeItem","username","UsernameGenerator","generateUsername","jitsiMeetId","generateUniqueId","storage","_p8","MAX_CACHE_SIZE","AnalyticsAdapter","analyticsHandlers","Set","cache","permanentProperties","conferenceName","size","setAnalyticsHandlers","_setUserProperties","_sendEvent","setUserProperties","setConferenceName","TYPE_OPERATIONAL","actionSubject","_verifyRequiredFields","TYPE_PAGE","TYPE_UI","TYPE_TRACK","objectType","containerType","containerId","objectId","_maybeCacheEvent","NUMBER_OF_LOCAL_SAMPLES","_localAudioLevelCache","_reportedParticipants","_audioProblemCandidates","_numberOfRemoteAudioLevelsReceived","_onLocalAudioLevelsReport","_onRemoteAudioLevelReceived","_clearUserData","userID","numberOfReports","localAudioLevels","remoteAudioLevels","localAudioLevelsString","createAudioOutputProblemEvent","removeConnectionStatsListener","AverageStatReport","sum","samples","addNext","nextValue","calculate","appendReport","ConnectionAvgStats","_n","_sampleIdx","_avgRTT","_avgRemoteRTTMap","_avgRtpStatsReporter","_avgEnd2EndRTT","_onConnectionStats","_calculateAvgStats","_onRemoteStatsUpdated","_processRemoteStats","batchReport","localCandidateType","remoteCandidateType","jvbEnd2EndRTT","jvbStatsMonitor","avgRemoteRTT","_calculateAvgRemoteRTT","avgLocalRTT","createRtpStatsEvent","_resetAvgStats","remoteAvg","avg","validData","rttAvg","_avgAudioBitrateUp","_avgAudioBitrateDown","_avgVideoBitrateUp","_avgVideoBitrateDown","_avgBandwidthUp","_avgBandwidthDown","_avgPacketLossTotal","_avgPacketLossUp","_avgPacketLossDown","_avgRemoteFPS","_avgRemoteScreenFPS","_avgLocalFPS","_avgLocalScreenFPS","_avgRemoteCameraPixels","_avgRemoteScreenPixels","_avgLocalCameraPixels","_avgLocalScreenPixels","_avgCQ","_cachedTransportStats","_onLocalStatsUpdated","_maybeSendTransportAnalyticsEvent","_onP2PStatusChanged","p2pStatsMonitor","_onJvb121StatusChanged","_resetAvgJvbStats","confSize","framerate","download","total","_calculateAvgVideoFps","_calculateAvgVideoPixels","peerResolutions","peerPixelsSum","myID","peerID","videosResolution","peerAvgPixels","_calculatePeerAvgVideoPixels","videos","peerSsrcCount","peerSsrcPixels","peerFpsSum","videosFps","peerAvgFPS","_calculatePeerAvgVideoFps","peerSsrcFps","transportStats","createTransportStatsEvent","wrtcFuncNames","iceConnectionFailure","signalingError","applicationLog","fabricEvent","fabricHold","fabricResume","audioMute","audioUnmute","videoPause","videoResume","fabricUsageEvent","fabricStats","fabricTerminated","screenShareStart","screenShareStop","dominantSpeaker","activeDeviceList","DEFAULT_REMOTE_USER","reportType","EVENT","MST_WITH_USERID","_fabrics","CallStats","_addNewFabricCallback","backend","_initCallback","backendInitialized","atLeastOneFabric","defaultInstance","callStatsInstance","fabrics","hasFabric","_addNewFabric","_emptyReportQueue","csInstance","defaultConfID","defaultPC","reportsQueue","errorData","_reportError","eventData","sendFabricEvent","associateMstWithUserID","callStatsId","usageLabel","reportError","_reportEvent","_traceAndCatchBackendCalls","theBackend","tryCatchMethods","originalMethod","theArguments","debugMethods","originalReportError","exception","initBackend","CallStatsBackend","callstats","configParams","applicationVersion","siteID","attachWifiStatsHandler","addresses","isBackendInitialized","devicesData","conferenceID","overall","comment","sendUserFeedback","remoteUserID","add","fabricAttributes","remoteEndpointType","endpointType","server","ret","addNewFabric","fabricUsage","multiplex","success","streamEndpointId","sendTerminateEvent","sendResumeOrHoldEvent","isResume","WEBAUDIO_ANALYZER_FFT_SIZE","WEBAUDIO_ANALYZER_SMOOTING_TIME","AudioContext","webkitAudioContext","context","suspend","timeDomainDataToAudioLevel","maxVolume","parseFloat","toFixed","animateLevel","newLevel","lastLevel","diff","intervalId","intervalMilis","resume","analyser","createAnalyser","smoothingTimeConstant","fftSize","self","array","frequencyBinCount","getByteTimeDomainData","KEYS_BY_BROWSER_TYPE","browsers","FIREFOX","CHROME","OPERA","NWJS","ELECTRON","SAFARI","REACT_NATIVE","calculatePacketLoss","lostPackets","totalPackets","round","SsrcStats","loss","setLoss","setResolution","addBitrate","resetBitrate","setFramerate","ConferenceStats","StatsCollector","audioLevelsInterval","statsInterval","_browserType","_usesPromiseGetStats","_getStatValue","_defineNewGetStatValueMethod","_defineGetStatValueMethod","baselineAudioLevelsReport","currentAudioLevelsReport","currentStatsReport","previousStatsReport","audioLevelReportHistory","audioLevelsIntervalId","conferenceStats","audioLevelsIntervalMilis","statsIntervalId","statsIntervalMilis","ssrc2stats","startAudioLevelStats","processNewAudioLevelReport","processAudioLevelReport","processNewStatsReport","processStatsReport","keyFromName","itemStatByKey","item","pair","getNonNegativeStat","getStatValue","byteSentStats","receiveBandwidth","sendBandwidth","ip","localip","conferenceStatsTransport","selected","local","localCandidateId","remote","remoteCandidateId","ipAddress","portNumber","candidateType","before","ssrcIds","isRemote","remoteSource","ssrcStats","isDownloadStream","packetsNow","packetsBefore","packetsDiff","packetsLostNow","packetsLostBefore","packetsLostDiff","packetsTotal","packetsLost","bytesReceivedNow","bytesReceivedBefore","bytesReceived","nowBytesTransmitted","timeMs","bitrateReceivedKbps","bitrateSentKbps","StatisticsEvents","_processAndEmitReport","bitrateDownload","bitrateUpload","resolutions","framerates","audioBitrateDownload","audioBitrateUpload","videoBitrateDownload","videoBitrateUpload","userResolutions","userFramerates","avgAudioLevel","currentValue","getNonNegativeValue","v","_calculateBitrate","fieldName","bytesNow","bytesBefore","bytesProcessed","bitrateKbps","nominated","availableIncomingBitrate","availableOutgoingBitrate","remoteUsedCandidate","localUsedCandidate","remoteIpAddress","remotePort","localIpAddress","localPort","localIp","networkType","currentRoundTripTime","framerateMean","frameHeight","frameWidth","framesPerSecond","framesSent","numberOfFramesSinceBefore","trackIdentifier","SpeakerStats","userId","isLocalStats","_userId","_isLocalStats","setDominantSpeaker","totalDominantSpeakerTime","_dominantSpeakerStart","_hasLeft","getUserId","newName","isDominantSpeaker","isNowDominantSpeaker","timeElapsed","getTotalDominantSpeakerTime","hasLeft","markAsHasLeft","users","dominantSpeakerId","_onDominantSpeaker","_onUserJoin","_onUserLeave","_onDisplayNameChange","SPEAKER_STATS_RECEIVED","_updateStats","oldDominantSpeaker","newDominantSpeaker","savedUser","newStats","speakerStatsToUpdate","newParticipant","_instances","isCallstatsLoaded","loadCallStatsAPI","loadScript","_initCallStatsBackend","formatJitsiTrackErrorForCallStats","pcStatsInterval","disableThirdPartyRequests","rtpStatsMap","callStatsIntegrationEnabled","callsStatsInstances","instances","rtpStats","RTPStats","localStats","LocalStats","removeAudioLevelListener","removeBeforeDisposedListener","removeByteSentStatsListener","callStats","tpcId","_stopRemoteStats","newInstance","_getCallStatsConfID","_getAllCallStatsInstances","csInstances","instance","roomJid","globalSet","globalSubSet","next","csPerStats","FEEDBACK","rating","LOCAL_JID","eventToLog","RecordingResult","AUDIO_WEBM","AUDIO_OGG","TrackRecorder","recorder","startRecorder","trackRecorder","stopRecorder","determineCorrectFileType","MediaRecorder","isTypeSupported","AudioRecorder","jitsiConference","recorders","fileType","isRecording","instantiateTrackRecorder","updateNames","createEmptyStream","mimeType","ondataavailable","dataEvent","recorderToRemove","blob","Blob","body","appendChild","style","click","getRecordingResults","getFileType","wordArray","SphinxService","BEFORE_STATE","RECORDING_STATE","TRANSCRIBING_STATE","FINISHED_STATE","MAXIMUM_SENTENCE_LENGTH","audioRecorder","transcriptionService","counter","transcription","lineLength","callBack","blobCallBack","recordingResult","getUTCMilliseconds","wordObject","begin","end","word","maybeMerge","merge","arrays","potentialWords","hasPopulatedArrays","pushWordToSortedArray","lowestWordArray","wordToAdd","updateTranscription","foundSmaller","wordToCompare","twoDimensionalArray","getTranscription","getState","TranscriptionService","verify","formatResponse","audioBlob","Word","getURL","audioFileBlob","XMLHttpRequest","onreadystatechange","DONE","responseText","open","setRequestHeader","objects","filler","json","sphinxURL","toReturn","getWord","getBeginTime","getEndTime","AsyncQueue","_queue","async","queue","_processQueueTasks","_stopped","kill","task","finishedCallback","shutdown","getTokenAuthUrl","urlPattern","roleUpgrade","dest","srcEvent","Function","oldOnErrorHandler","JitsiGlobalErrorHandler","oldOnUnhandledRejection","onunhandledrejection","JitsiGlobalUnhandledRejection","errHandler","valueArray","b","ALPHANUM","HEX_DIGITS","randomInt","randomElement","arr","randomAlphanumStr","randomHexDigit","getJitterDelay","retry","minDelay","base","currentExecutingScript","prepend","relativeURL","loadCallback","script","referenceNode","scriptEl","scriptSrc","baseScriptSrc","onload","parentNode","insertBefore","integerHash","string","char","charCodeAt","abs","suffix","processVersions","mucResource","getComponentVersion","componentName","STATE_CHANGED","JitsiVideoSIPGWSession","_sendJibriIQ","setState","failureReason","oldState","addStateListener","removeStateListener","sipaddress","displayname","sessions","sessionStateChangeListener","sessionStateChanged","handleJibriSIPState","Constants","failure_reason","STATUS_AVAILABLE","STATUS_UNDEFINED","STATUS_BUSY","STATE_ON","STATE_OFF","STATE_PENDING","STATE_RETRYING","STATE_FAILED","ERROR_NO_CONNECTION","ERROR_SESSION_EXISTS","_started","_streamsToMix","_streamMSSArray","addMediaStream","_mixedMSD","createMediaStreamDestination","streamMSS","AudioContextImpl","IDENTITY_PROPERTIES","IDENTITY_PROPERTIES_FOR_COMPARE","HASH","compareIdentities","generateSha","identities","sortedIdentities","accumulatedValue","tmp","sortedFeatures","b64_sha1","Caps","disco","versionToCapabilities","jidToVersion","rooms","emuc","EMUC_ROOM_ADDED","_addChatRoom","EMUC_ROOM_REMOVED","_removeChatRoom","addNamespace","NS","CAPS","_handleCaps","_onMucMemberLeft","_removeJidToVersionEntry","_generateVersion","user","_getDiscoInfo","sha","receivedNode","getFeaturesAndIdentities","each","el","category","_fixChatRoomPresenceMap","ver","_notifyVersionChanged","_identities","_features","stanza","querySelector","oldVersion","parser","packet2JSON","xmlElement","child","text","getText","xmlunescape","json2packet","packet","filterNodeFromPresenceJSON","pres","nodeName","ChatRoom","getBareJidFromJid","members","presHandlers","_removeConnListeners","noBridgeAvailable","Moderator","initPresenceMap","lastPresences","phoneNumber","phonePin","participantPropertyListener","locked","xns","addVideoInfoToPresence","disableFocus","preJoin","allocateConferenceFocus","XmppConnection","Events","CONN_STATUS_CHANGED","onConnStatusChanged","fromJoin","$pres","flush","doLeave","isUsingWebSocket","discoRoomInfo","getInfo","DISCO_INFO","meetingIdValEl","setMeetingId","MEETING_ID_SET","createNonAnonymousRoom","getForm","form","formSubmit","Status","CONNECTED","member","statusEl","hasStatusUpdate","hasVersionUpdate","xElement","getElementsByTagNameNS","mucUserItem","affiliation","getFocusUserJid","isHiddenDomain","xEl","remove","extractIdentityInformation","userInfo","tag","newRole","_initFocus","memberOfThis","displayJids","CONFERENCE_PROPERTIES_CHANGED","att","phone","pin","processNode","tagHandlers","nickname","$msg","SENDING_CHAT_MESSAGE","SENDING_PRIVATE_CHAT_MESSAGE","onParticipantLeft","skipEvents","onMucMemberLeft","onPresenceUnavailable","reasonSelect","isKick","membersKeys","actorSelect","actorNick","onMessage","subjectText","stamp","dateParts","jsonMessage","parsedJson","tryParseJSONAndVerify","onPresenceError","toDomain","anonymousdomain","kickIQ","onNotSupported","formsubmit","handlerIdx","getMemberRole","sendVideoInfoPresence","sendAudioInfoPresence","addAudioInfoToPresence","mutedNode","videoTypeNode","isSipGatewayEnabled","rayo","iqToFocus","onMute","onMucLeft","doReject","getConnectionPluginDefinition","ConnectionPluginListenable","JingleSession","localJid","mediaConstraints","usedrip","dripContainer","initiatorJid","responderJid","JingleSessionState","doInitialize","contents","addSources","removeSources","failure","_getInitiatorJid","IQ_TIMEOUT","DEFAULT_MAX_STATS","parseVideoSenders","jingleContents","videoContents","senders","_bridgeSessionId","_cachedOldLocalSdp","_cachedNewLocalSdp","_iceCheckingStartedTimestamp","_gatheringStartedTimestamp","_localVideoActive","_remoteVideoActive","_gatheringReported","lasticecandidate","closed","SignalingLayerImpl","modificationQueue","wasConnected","_xmppListeners","onXmppStatusChanged","_assertNotEnded","failICE","isReconnect","wasstable","webrtcIceUdpDisable","webrtcIceTcpDisable","gatherStats","_abtestSuspendVideoEnabled","ev","ICE_DURATION","phase","sendIceCandidate","connectionState","ICE_STATE_CHANGED","reconnect","iceStarted","PEERCONNECTION_READY","workFunction","oldSdp","_renegotiate","newSdp","notifyMySSRCUpdate","setChatRoom","localSDP","ice","iceparams","jcand","candidateToJingle","errorMesssage","sendIceCandidates","cand","cands","parseMLine","creator","fingerprintLine","parseFingerprint","required","fingerprint","attrs","newJingleErrorHandler","sessionInfo","elem","iceCandidates","candidateFromJingle","rtcCandidate","RTCIceCandidate","outerHTML","iceCandidate","readSsrcInfo","ssrcElement","setSSRCOwner","i3","ssrcInfoElement","setOfferAnswerCycle","sendSessionAccept","offerSdp","sendSessionInitiate","toJingle","tree","jingleAnswer","jingleOfferAnswerIq","newRemoteSdp","_processNewJingleOfferIq","oldLocalSdp","bridgeSession","bridgeSessionId","sendContentModify","newLocalSdp","replaceTransport","jingleOfferElem","originalOffer","clone","newFingerprint","sendTransportAccept","accept","responder","removeTcpCandidates","removeUdpCandidates","newSendersValue","sessionModify","transportAccept","medialines","transportToJingle","sendTransportReject","transportReject","sessionTerminate","_parseSsrcInfoFromSourceAdd","sourceAddElem","currentRemoteSdp","addSsrcInfo","i1","content","lines","containsSSRC","i2","addRemoteStream","_addOrRemoveRemoteStream","removeRemoteStream","isAdd","logPrefix","errMsg","addOrRemoveSsrcInfo","_parseSsrcInfoFromSourceRemove","_processRemoteAddSource","_processRemoteRemoveSource","remoteSdp","fromJingle","removeSsrcInfo","pop","optionalRemoteSdp","_initiatorRenegotiate","_responderRenegotiate","shouldRenegotiate","newLocalSDP","sourceRemoveElem","_verifyNoSSRCChanged","operationName","oldSDP","currentLocalSDP","sdpDiff","SDPDiffer","addedMedia","getNewMedia","removedMedia","_addRemoveTrackAsMuteUnmute","isMute","oldLocalSDP","operationPromise","audioActive","videoActive","logAudioStr","logVideoStr","isSessionActive","audioActiveChanged","pcVideoActiveChanged","modifyContents","newVideoSenders","_modifyRemoteVideoActive","remoteVideoSenders","isRemoteVideoActive","newSDP","sdpDiffer","removedAnySSRCs","containsNewSSRCs","failureCb","errResponse","errorElSel","errorReasonSel","errorMsgSel","getIceConnectionState","finishCallback","abTesting","enableSuspendVideoTest","ENDED","updateAssociatedRtxStream","primarySsrcInfo","primarySsrcMsid","primarySsrcCname","cname","previousRtxSSRC","getRtxSSRC","dumpSSRCGroups","removeGroupsWithSSRC","correspondingRtxSsrcs","clearSsrcCache","ssrcMapping","sdpTransformer","getSSRCCount","primaryVideoSsrcs","getPrimaryVideoSSRCs","getSSRCAttrValue","correspondingRtxSsrc","previousAssociatedRtxStream","stripRtx","containsAnySSRCGroups","findGroups","removeGroupsBySemantics","parseSecondarySSRC","mediaI","getMediaSsrcMap","mediaSSRCs","mediaindex","parseMID","linessrc","medias","mangle","newdesc","rtpmap","fmt","parseRTPMap","buildMLine","removeSessionLines","prefix","removeMediaLines","thecreator","k","assrcline","amidline","afmtpline","parseFmtp","rtcpFbToJingle","parseCrypto","parseSSRC","availableSsrc","ssrcParameters","ssrcSdpLine","kv","ssrcGroupLines","ridLines","ridLine","ridInfo","unifiedSimulcast","parseExtmap","uri","port","sctpmap","sctpAttrs","parseSCTPMap","fingerprints","setup","payloadtype","parseRTCPFB","params","rtcpFbFromJingle","jingle2media","sctp","proto","streamCount","buildICEUfrag","buildICEPwd","buildRTPMap","setAttribute","arrayEquals","array1","array2","l","equals","mySDP","otherSDP","myMedias","othersMedias","newMedia","othersMediaIdx","myMedia","othersMedia","myContainMsid","newContainMsid","otherSsrcGroup","matched","mySsrcGroup","modify","sdpMediaSsrcs","mediaSsrc","nv","ssrcGroup","mediadesc","sessiondesc","pwd","parseICEUfrag","parseICEPwd","frag","parts","clockrate","channels","sctpPort","parseICECandidate","elems","foundation","priority","generation","tcptype","network","buildICECandidate","hasOwnAttribute","pt","haystack","needle","sessionpart","needles","parsePrimaryVideoSsrc","numSsrcs","index","numGroups","getSsrcAttribute","attributeName","parseGroupSsrcs","getMedia","ufragLines","codecName","payloadType","rtp","codec","payloadTypes","payloads","payloadIndex","unshift","removePts","rtxApts","rtxPts","fmtp","allPts","keepPts","rtcpFb","injectRecvOnly","newPrimarySsrc","getPrimaryVideoSsrc","replaceSSRC","parsePrimarySSRC","_getSSRCCount","MLineWrap","attrName","findGroupByPrimarySSRC","findSSRCByMSID","fecGroup","getSSRCs","videoSSRCs","ssrcGroupInfo","secondarySsrc","rawSDP","parsedSDP","selectedMLine","SignalingLayer","ssrcOwners","oldChatRoom","_audioMuteHandler","_videoMuteHandler","_videoTypeHandler","LastRequestTracker","_lastSuccess","startTracking","stropheConnection","originalRawInput","rawInput","getTimeSinceLastSuccess","enableWebsocketResume","websocketKeepAlive","serviceUrl","_resumeRetryN","_stropheConn","Connection","_usesWebsocket","maxRetries","_lastSuccessTracker","LastSuccessTracker","ATTACHED","disconnecting","lastResponseHeaders","_proto","service","addConnectionPlugin","plugin","_stropheConnectionCb","pass","targetCallback","blockCallback","_maybeEnableStreamResume","_maybeStartWSKeepAlive","DISCONNECTED","_tryResumingConnection","_wsKeepAlive","closeWebsocket","socket","_resumeTimeout","streamManagement","getResumeToken","intervalWithJitter","fetch","sendUnavailableBeacon","sendBeacon","_changeConnectStatus","DISCONNECTING","_buildBody","CLIENT","cnode","serialize","_abortAllRequests","_doDisconnect","resumeToken","retryTimeout","search","createExpBackoffTimer","step","xmppService","getNextTimeout","getNextErrorTimeout","externalAuthEnabled","sipGatewayEnabled","call_control","origin","attachEvent","resource","setFocusUserJid","focusJid","focusUserJid","getFocusComponent","focusComponent","focus","createConferenceIq","machineUID","enforcedBridge","enableTcc","enableRemb","minParticipants","enableLipSync","audioPacketDelay","minBitrate","octo","probability","openSctp","stereo","useRoomAsSharedDocumentName","parseSessionId","resultIq","parseConfigOptions","authenticationEnabled","_allocateConferenceFocusSuccess","_allocateConferenceFocusError","invalidSession","reservationErr","errorCode","errorTextNode","waitMs","retrySec","urlCallback","failureCallback","_getLoginUrl","popup","urlCb","str","decodeURIComponent","logout","logoutUrl","MucConnectionPlugin","JingleConnectionPlugin","ConnectionPlugin","jvbIceConfig","jvb","onJingle","fromJid","ack","sess","startMuted","ACTION_JINGLE_TR_RECEIVED","successTime","ACTION_JINGLE_TR_SUCCESS","me","getStunAndTurnCredentials","iceservers","dict","urls","credential","useStunTurn","getLog","StropheLogger","logIncoming","rawOutput","logOutgoing","PING_INTERVAL","PING_TIMEOUT","PING_THRESHOLD","PING_TIMESTAMPS_TO_KEEP","PingConnectionPlugin","failedPings","pingExecIntervals","_addPingExecutionTimestamp","PING","startInterval","stopInterval","getPingSuspendTime","pingIntervals","maxInterval","previousTS","currentInterval","RAYO_XMLNS","RayoConnectionPlugin","onRayo","roomPass","req","callResource","lastErrorStatus","resetLastErrorStatusRegExpr","lastErrorStatusRegExpr","LogLevel","WARN","DEBUG","errStatusCapture","exec","FATAL","getLastErrorStatus","getStatusString","BINDREQUIRED","CONNECTING","CONNFAIL","AUTHENTICATING","AUTHFAIL","createConnection","initStropheNativePlugins","initStropheUtil","initStropheLogger","disconnectInProgress","authenticatedUser","bosh","_initStrophePlugins","clientNode","initFeaturesList","_pingSupported","connectionHandler","statusStr","CONNECTION_STATUS_CHANGED","_resetState","pingJid","speakerStatsComponentAddress","conferenceDurationComponentAddress","_onPrivateMessage","anonymousConnectionFailed","connectionFailed","lastErrorMsg","wasIntentionalDisconnect","_getConnectionFailedReasonDetails","_connect","attaching","configDomain","hostname","muc","getSessions","disconnectListener","_cleanupXmppConnection","evType","sync","p2pStunServers","iceTransportPolicy","shard","headersArr","headers","header","shard_changed","suspend_time","time_since_last_success","jsonString","created_timestamp","PLAN_B_MIDS","findSimGroup","grp","findFidGroup","addSimGroupSources","sourceGroups","sourceList","findSourcebyId","relatedFidGroup","relatedSsrc","addSourcesToMline","otherSsrc","simGroup2","checkIfMlineForSsrcExists","mlines","findMatchingMline","createSourceGroupMap","ssrc2group","sessionMedia","bLine","clonedeep","bundle","mids","msidSemantic","semantic","current","currentDesc","newMline","mLineForData","bundleOnly","inactiveMid","cmLine","sessionVersion","found","transformUtils","parseSsrcs","writeSsrcs","DEFAULT_NUM_OF_LAYERS","generateSSRC","processVideo","validateDescription","simulcastSsrcs","relatedGroup","relatedSsrcs","relatedSSRC","implodeRemoteSimulcast","simulcastGroup","nuke","removeGoogConference","invalid","assertGoogConference","_parseSimLayers","_buildNewToOldSsrcMap","newSsrcList","oldSsrcList","newSsrc","oldSsrc","_fillInSourceDataFromCache","newSimSsrcs","newMsid","newCname","ssrcsToReplace","ssrcsToAdd","_generateSourceData","addAssociatedStream","primarySsrcs","simSsrcs","simSsrc","_restoreSimulcast","seenPrimarySsrc","root","previous_async","noConflict","only_once","fn","called","_toString","_isArray","_each","iterator","_map","x","_reduce","memo","_keys","nextTick","setImmediate","completed","eachSeries","iterate","forEachSeries","eachLimit","limit","_eachLimit","forEachLimit","started","running","replenish","doParallel","doParallelLimit","doSeries","_asyncMap","eachfn","mapSeries","mapLimit","_mapLimit","inject","foldl","reduceRight","reversed","reverse","foldr","_filter","filterSeries","select","selectSeries","_reject","rejectSeries","_detect","main_callback","detect","detectSeries","any","sortBy","criteria","left","right","auto","tasks","remainingTasks","listeners","taskComplete","theCallback","taskCallback","safeResults","rkey","requires","ready","DEFAULT_TIMES","attempts","wrappedTask","wrappedCallback","wrappedResults","retryAttempt","finalAttempt","seriesCallback","series","waterfall","wrapIterator","_parallel","parallel","parallelLimit","makeCallback","_concat","cb","y","concatSeries","whilst","doWhilst","until","doUntil","worker","concurrency","_insert","q","drain","saturated","workers","empty","paused","idle","priorityQueue","_compareTasks","_binarySearch","sequence","compare","beg","cargo","working","drained","_console_fn","dir","memoize","hasher","queues","memoized","unmemoized","unmemoize","timesSeries","seq","fns","that","newargs","nextargs","compose","_applyEach","go","applyEach","applyEachSeries","forever","define","o","enumerable","toStringTag","__esModule","getFirstMatch","getSecondMatch","matchAndReturnConst","getWindowsVersionName","getMacOSVersionName","getAndroidVersionName","getVersionPrecision","compareVersions","u","getBrowserAlias","BROWSER_ALIASES_MAP","getBrowserTypeByAlias","BROWSER_MAP","ENGINE_MAP","OS_MAP","PLATFORMS_MAP","Bada","BlackBerry","Chrome","Chromium","Epiphany","Firefox","Focus","Generic","Googlebot","Maxthon","Opera","PhantomJS","Puffin","QupZilla","QQ","QQLite","Safari","Sailfish","SeaMonkey","Sleipnir","Swing","Tizen","Vivaldi","WeChat","Roku","amazon_silk","android","bada","blackberry","epiphany","firefox","generic","googlebot","google_search","ie","k_meleon","maxthon","edge","mz","naver","opera","opera_coast","phantomjs","puffin","qupzilla","qq","qqlite","safari","sailfish","samsung_internet","seamonkey","sleipnir","swing","tizen","uc","vivaldi","webos","wechat","yandex","tablet","mobile","tv","WindowsPhone","Windows","MacOS","iOS","Android","WebOS","Linux","ChromeOS","PlayStation4","EdgeHTML","Blink","Trident","Presto","Gecko","WebKit","configurable","writable","getParser","getResult","_ua","parsedResult","getUA","parseBrowser","describe","getBrowser","getBrowserName","String","getBrowserVersion","getOS","os","parseOS","getOSName","getOSVersion","getPlatform","platform","parsePlatform","getPlatformType","getEngine","engine","parseEngine","getEngineName","satisfies","isOS","isPlatform","isBrowser","compareVersion","isEngine","is","versionName","vendor","model","factory","scriptReadyRegex","fullPageUrl","pageUrl","scripts","supportsScriptReadyState","isNotOpera","hasNativeCurrentScriptAccessor","originalStackDepthConfig","stackTraceLimit","hasStackBeforeThrowing","hasStackAfterThrowing","thrownErr","normalizeWhitespace","getScriptFromUrl","eligibleScripts","getInlineScriptFromCallerSource","callerFnSource","inlineScriptText","callerSourceText","hasAttribute","getSoleInlineScript","getScriptUrlFromStack","skipStackDepth","matches","remainingStack","ignoreMessage","_farthestExecutingScript","_originatingExecutingScript","_nearestExecutingScript","currentScript","near","far","_events","_maxListeners","defaultMaxListeners","setMaxListeners","isNumber","er","isObject","isUndefined","isFunction","newListener","warned","fired","g","list","position","listenerCount","evlistener","arg","LogCollector","logStorage","stringifyObjects","storeInterval","maxEntryLength","logLevel","_log","storeLogsIntervalID","totalLen","outputCache","someObject","formatLogMessage","prevMessage","prevMessageText","_flush","_reschedulePublishInterval","force","reschedule","isReady","cachedQueue","storeLogs","consoleTransport","globalTransports","transportIdx","globalOptions","getCallerInfo","callerInfo","fileLocation","column","disableCallerInfo","transports","logPrefixes","toISOString","fullLogParts","methods","setLevel","TRACE","INFO","LOG","idLoggers","loggers","curLevel","WINDOW","JS_MD5_NO_WINDOW","WEB_WORKER","NODE_JS","JS_MD5_NO_NODE_JS","global","COMMON_JS","JS_MD5_NO_COMMON_JS","AMD","ARRAY_BUFFER","JS_MD5_NO_ARRAY_BUFFER","HEX_CHARS","EXTRA","SHIFT","OUTPUT_TYPES","BASE64_ENCODE_CHAR","blocks","buffer8","buffer","Uint32Array","JS_MD5_NO_ARRAY_BUFFER_IS_VIEW","isView","createOutputMethod","outputType","Md5","update","createMethod","method","nodeWrap","eval","Buffer","nodeMethod","createHash","digest","sharedMemory","h0","h1","h2","h3","bytes","hBytes","finalized","hashed","notString","lastByteIndex","finalize","bc","da","hex","arrayBuffer","base64","v1","v2","v3","base64Str","md5","getAvatarURL","avatarID","email","urlPrefix","urlSuffix","getGravatarURL","generateAvatarURL","avatarKey","isValidEmail","capabilitiesDB","isUsingIFrame","browserInfo","capabilitiesByVersion","browserCapabilities","capabilities","_capabilities","iframeCapabilities","supportsAudioIn","audioIn","supportsAudioOut","audioOut","supportsScreenSharing","screenSharing","supportsVideoIn","videoIn","supportsVideoOut","videoOut","bowserNameToJitsiName","INTERNET_EXPLORER","_detectChromiumBased","UNKNOWN","_detectElectron","_detectNWJS","_detectReactNative","product","bowser","detectors","_bowser","Bowser","detectedBrowserInfo","_name","_version","isIExplorer","_checkCondition","checkTree","isVersionEqualTo","LARGE_ARRAY_SIZE","HASH_UNDEFINED","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reRegExpChar","reFlags","reIsHostCtor","reIsUint","cloneableTags","freeGlobal","freeSelf","freeExports","nodeType","freeModule","moduleExports","addMapEntry","addSetEntry","arrayEach","iteratee","arrayPush","arrayReduce","accumulator","initAccum","baseTimes","getValue","object","isHostObject","mapToArray","overArg","func","setToArray","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","uid","IE_PROTO","funcToString","objectToString","reIsNative","RegExp","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","getNative","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","entry","hashClear","__data__","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","lastIndex","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArguments","skipIndexes","isIndex","assignValue","objValue","eq","baseAssign","copyObject","baseClone","isDeep","isFull","customizer","isArr","initCloneArray","copyArray","getTag","isFunc","cloneBuffer","initCloneObject","copySymbols","initCloneByTag","stacked","props","getAllKeys","subValue","baseCreate","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","baseIsNative","isMasked","pattern","baseKeys","isPrototype","copy","cloneArrayBuffer","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","cloneSymbol","symbol","cloneTypedArray","typedArray","newValue","getSymbols","isKeyable","stubArray","Ctor","ctorString","input","cloneDeep","other","isArrayLikeObject","isArrayLike","isLength","isObjectLike","stubFalse","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","asyncTag","nullTag","proxyTag","undefinedTag","typedArrayTags","freeProcess","nodeUtil","binding","nodeIsTypedArray","isTypedArray","arrayFilter","predicate","resIndex","arraySome","baseUnary","cacheHas","nativeObjectToString","symToStringTag","SetCache","setCacheAdd","setCacheHas","isArg","isBuff","isType","getRawTag","baseIsArguments","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsTypedArray","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","isOwn","unmasked","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","run","Item","title","env","argv","noop","prependListener","prependOnceListener","cwd","chdir","umask","SDPUtils","fixStatsType","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","writeMediaSection","dtlsRole","writeRtpDescription","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","rtpReceiver","_initialTrackId","sendEncodingParameters","rtx","localCName","filterIceServers","edgeVersion","hasTurn","isString","validTurn","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","codecs","headerExtensions","fecMechanisms","findCodecByPayloadType","preferredPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","apt","rCodec","clockRate","numChannels","rtcpFeedback","fb","parameter","lHeaderExtension","rHeaderExtension","isActionAllowedInSignalingState","maybeAddCandidate","iceTransport","alreadyAdded","getRemoteCandidates","remoteCandidate","addRemoteCandidate","makeError","NotSupportedError","InvalidStateError","InvalidAccessError","OperationError","addTrackToStreamAndFireEvent","dispatchEvent","MediaStreamTrackEvent","removeTrackFromStreamAndFireEvent","fireAddTrack","trackEvent","Event","_dispatchEvent","_eventTarget","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceGatheringState","usingBundle","rtcpMuxPolicy","_iceGatherers","iceCandidatePoolSize","RTCIceGatherer","gatherPolicy","_config","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onconnectionstatechange","onicegatheringstatechange","_emitGatheringStateChange","getConfiguration","getLocalStreams","getRemoteStreams","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","_createIceAndDtlsTransports","alreadyExists","_maybeFireNegotiationNeeded","clonedStream","clonedTrack","_createIceGatherer","bufferedCandidateEvents","bufferCandidates","_gather","onlocalcandidate","serializedCandidate","writeCandidate","parseCandidate","toJSON","sections","getMediaSections","getDescription","complete","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","_disposeIceAndDtlsTransports","_transceive","recv","rtcp","compound","rtcpParameters","receive","splitSections","parseRtpParameters","isIceLite","matchPrefix","rejected","isRejected","remoteIceParameters","getIceParameters","remoteDtlsParameters","getDtlsParameters","_updateSignalingState","receiverList","iceOptions","splitLines","getKind","getDirection","remoteMsid","parseMsid","getMid","generateIdentifier","parseRtpEncodingParameters","parseRtcpParameters","isComplete","setTransport","setRemoteCandidates","RTCRtpReceiver","getCapabilities","isNewTrack","nativeTrack","hasRtx","states","checking","disconnected","failed","new","connecting","numAudioTracks","numVideoTracks","writeSessionBoilerplate","remoteCodec","hdrExt","remoteExtensions","rHdrExt","getLocalCandidates","mediaSectionsInOffer","reducedSize","candidateString","selector","MediaStreamTrack","senderOrReceiver","allStats","ortcObjects","ortcObjectName","nativeGetstats","nativeStats","mapStats","nativeMethod","grammar","reg","format","z","rate","subtype","sessionConfig","raddr","maxMessageSize","dir2","objs","writer","parseFmtpConfig","parseParams","parsePayloads","parseRemoteCandidates","parseImageAttributes","parseSimulcastStreamList","toIntIfInt","attachProperties","rawName","parseReg","needsBlank","keyLocation","validLine","paramReducer","acc","expr","scid","formatRegExp","formatStr","makeLine","defaultOuterOrder","defaultInnerOrder","outerOrder","innerOrder","part","relatedAddress","relatedPort","tcpType","toUpperCase","parseIceOptions","parseRtpMap","parsed","writeRtpMap","writeExtmap","headerExtension","preferredId","writeFmtp","param","parseRtcpFb","writeRtcpFb","parseSsrcMedia","sp","colon","parseSsrcGroup","algorithm","setupType","fp","parseCryptoLine","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","rtpmapline","fmtps","maxptime","extension","encodingParameters","hasRed","hasUlpfec","flows","encParam","codecPayloadType","fec","mechanism","remoteSsrc","rsize","mux","spec","planB","msidParts","parseSctpDescription","maxSizeLine","sctpMapLines","writeSctpDescription","output","sessId","sessVer","sessUser","parseOLine","netType","addressType","isValidSDP","charAt","nextHandle","tasksByHandle","currentlyRunningATask","doc","registerImmediate","clearImmediate","handle","runIfPresent","installNextTickImplementation","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","installPostMessageImplementation","messagePrefix","onGlobalMessage","installMessageChannelImplementation","MessageChannel","port1","port2","installReadyStateChangeImplementation","html","documentElement","removeChild","installSetTimeoutImplementation","attachTo","global$1","_typeof","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","arr2","iter","safe_add","lsw","msw","bit_rol","num","cnt","str2binl","bin","binl2str","fromCharCode","binl2hex","binarray","hex_tab","md5_cmn","md5_ff","md5_gg","md5_hh","md5_ii","core_md5","olda","oldb","oldc","oldd","MD5","hexdigest","core_sha1","w","olde","rol","safe_add$1","sha1_ft","sha1_kt","core_hmac_sha1","bkey","str2binb","ipad","opad","mask","binb2b64","tab","triplet","binb2str","SHA1","b64_hmac_sha1","str_hmac_sha1","str_sha1","utils","utf16to8","out","addCookies","cookies","cookieName","expires","path","cookieObj","isObj","cookieValue","escape","unescape","cookie","$build","Builder","VERSION","HTTPBIND","BOSH","AUTH","ROSTER","PROFILE","DISCO_ITEMS","MUC","SASL","FRAMING","BIND","SESSION","STANZAS","XHTML_IM","XHTML","tags","css","validTag","validAttribute","validCSS","REDIRECT","CONNTIMEOUT","ErrorCondition","BAD_FORMAT","CONFLICT","MISSING_JID_NODE","NO_AUTH_MECH","UNKNOWN_REASON","ElementType","NORMAL","TEXT","CDATA","FRAGMENT","TIMEOUT","SECONDARY_TIMEOUT","forEachChild","elemName","childNodes","childNode","isTagEqual","_xmlGenerator","_makeGenerator","implementation","createDocument","documentMode","_getIEXmlDom","xmlGenerator","docStrings","ActiveXObject","xmlTextNode","xmlescape","createTextNode","xmlHtmlNode","loadXML","nodeValue","copyElement","_i","createHtml","cssText","cssAttrs","cssName","cssValue","_i2","_i3","_i4","escapeNode","unescapeNode","bare","_handleError","fatal","sourceURL","fileName","lineNumber","getNamedItem","_requestId","_connectionPlugins","ptype","moreattrs","removeAttribute","impNode","xmlGen","importNode","newElem","h","fragment","innerHTML","xhtml","Handler","ns","matchBare","matchBareFromJid","getNamespace","elNamespace","ignoreNamespaceFragment","namespaceMatch","_this","nsMatch","isMatch","elem_type","TimedHandler","period","lastCalled","_this2","Websocket","Bosh","_sasl_data","do_session","do_bind","timedHandlers","removeTimeds","removeHandlers","addTimeds","addHandlers","protocolErrorHandlers","_idleTimeout","_disconnectTimeout","authenticated","do_authentication","restored","_data","_uniqueId","_sasl_success_handler","_sasl_failure_handler","_sasl_challenge_handler","_onIdle","registerSASLMechanisms","mechanisms","F","_reset","_requests","getUniqueId","uuid","addProtocolErrorHandler","status_code","wait","hold","route","authcid","authzid","servtype","connect_callback","wind","_attach","restore","_sessionCachingSupported","_restore","sessionStorage","xmlInput","xmlOutput","nextValidRid","_queueData","_this3","timeoutHandler","deleteTimedHandler","addTimedHandler","deleteHandler","_this4","iqtype","_sendRestart","_this5","thand","handRef","hand","SASLAnonymous","SASLExternal","SASLMD5","SASLOAuthBearer","SASLXOAuth2","SASLPlain","SASLSHA1","registerSASLMechanism","_addSysTimedHandler","_onDisconnectTimeout","_disconnect","condition","statusChanged","_dataRecv","_this6","_reqToData","strip","_emptyQueue","cond","conflict","UNKOWN_REASON","newList","_i5","_hand","_connect_cb","bodyWrap","conncheck","hasFeatures","_no_auth_received","mech","sortMechanismsByPriority","higher","swap","_attemptSASLAuth","_attemptLegacyAuth","mechanism_found","_addSysHandler","_sasl_success_cb","_sasl_failure_cb","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","isClientFirst","onChallenge","btoa","challenge","atob","_onLegacyAuthIQResult","_auth2_cb","_this7","serverSignature","attribMatch","streamfeature_handlers","wrapper","_onStreamFeaturesAfterSASL","explicitResourceBinding","_onResourceBindResultIQ","jidNode","_establishSession","_onSessionResultIQ","_this8","_i6","_thand","since","SASLMechanism","auth_str","test_cnonce","cnonce","nonce","Hi","U","U_old","authMessage","clientKey","serverKey","clientSignature","_quote","realm","host","qop","digest_uri","cred","A1","A2","core","Strophe$1","$build$1","Request","sends","xmlData","origFunc","date","abort","dead","age","timeDead","xhr","_newXHR","getResponse","responseXML","overrideMimeType","_conn","inactivity","keepalive","_cacheSession","_onRequestStateChange","_throttledRequestHandler","typ","_sendTerminate","_callProtocolErrorHandlers","reqStatus","_getRequestStatus","err_callback","HTTP","_hitError","time_elapsed","def","getAllResponseHeaders","valid_request","too_many_retries","_removeRequest","reqIs0","reqIs1","_restartRequest","_processRequest","primary_timeout","secondary_timeout","server_error","content_type","contentType","withCredentials","e2","sendFunc","customHeaders","backoff","Strophe$2","$build$2","new_service","pathname","_buildStream","_check_streamerror","connectstatus","errorString","_closeSocket","_onOpen","_onClose","_connect_cb_wrapper","_handleStreamStart","streamStart","parsedMessage","see_uri","isSecureRedirect","_streamWrap","_onMessage","CLOSED","closeString","rawStanza","firstChild","startString","scope","Timeout","clearFn","_clearFn","unref","ref","enroll","msecs","_idleTimeoutId","unenroll","_unrefActive","onTimeout","_onTimeout","webpackPolyfill","deprecate","paths","adapter","adapterFactory","shimChrome","shimFirefox","shimEdge","shimSafari","logging","browserDetails","commonShim","extractVersion","disableLog","disableWarnings","chromeShim","browserShim","firefoxShim","edgeShim","safariShim","shimMediaStream","webkitMediaStream","shimOnTrack","_ontrack","origSetRemoteDescription","_ontrackpoly","te","shimGetSendersWithDtmf","shimSenderWithDtmf","_dtmf","_pc","_senders","origAddTrack","origRemoveTrack","origAddStream","origRemoveStream","origGetSenders","shimGetStats","origGetStats","onSucc","onErr","fixChromeStats_","standardReport","reports","standardStats","makeMapStats","successCallbackWrapper_","shimSenderReceiverGetStats","origGetReceivers","receivers","srcElement","DOMException","shimAddTrackRemoveTrackWithNative","_shimmedLocalStreams","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","oldStream","replaceInternalStreamId","internalId","externalStream","internalStream","replaceExternalStreamId","methodObj","isLegacyCall","origSetLocalDescription","origLocalDescription","getOwnPropertyDescriptor","streamid","hasTrack","shimPeerConnection","webkitRTCPeerConnection","addIceCandidateNullSupported","nativeAddIceCandidate","fixNegotiationNeeded","shimGetDisplayMedia","getSourceId","widthSpecified","heightSpecified","frameRateSpecified","shimGetUserMedia","constraintsToChrome_","cc","exact","oldname_","oc","mix","advanced","shimConstraints_","remap","face","getSupportedFacingModeLies","getSupportedConstraints","dev","shimError_","PermissionDeniedError","PermissionDismissedError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","getUserMedia_","webkitGetUserMedia","origGetUserMedia","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","augmentedCandidate","shimMaxMessageSize","_sctp","sctpInDescription","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","getMaxMessageSize","canSendMMS","remoteMMS","POSITIVE_INFINITY","shimSendThrowTypeError","wrapDcSend","dc","origDataChannelSend","origCreateDataChannel","dataChannel","shimConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","newEvent","removeAllowExtmapMixed","nativeSRD","origMSTEnabled","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","shimRTCPeerConnection","shimReplaceTrack","setTrack","RTCTrackEvent","mozRTCPeerConnection","modernStatsTypes","nativeGetStats","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","origAddTransceiver","setParametersPromises","initParameters","shouldPerformCheck","encodingParam","ridRegex","maxFramerate","shimCreateOffer","origCreateOffer","finally","shimCreateAnswer","origCreateAnswer","preferredMediaSource","nativeGetUserMedia","nativeGetSettings","nativeApplyConstraints","shimLocalStreamsAPI","_localStreams","_addTrack","shimRemoteStreamsAPI","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","withCallback","_getUserMedia","shimConstraints","errcb","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","newIceServers","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","audioTransceiver","setDirection","videoTransceiver","logDisabled_","deprecationWarnings_","uastring","wrapPeerConnectionEvent","eventNameToWrap","nativeAddEventListener","nativeEventName","modifiedEvent","_eventMap","nativeRemoveEventListener","unwrappedCb","bool","deprecated","oldMethod","newMethod","detectBrowser","mozGetUserMedia","isSecureContext","supportsUnifiedPlan","val","compactObject","isEmptyObject","walkStats","resultSet","endsWith","filterStats","outbound","streamStatsType","filteredResult","trackStats","trackStat","AUDIO","PRESENTER","VIDEO","TRACK_ATTACHED","PEER_MUTED_CHANGED","PEER_VIDEO_TYPE_CHANGED","LOCAL_STATS_UPDATED","REMOTE_STATS_UPDATED","E2E_RTT_CHANGED","bridgeDown","errorMessage","stage","AUDIO_LEVEL","BEFORE_DISPOSED","BYTE_SENT_STATS","CONNECTION_STATS","ETHERPAD","PARTICIPANT_AUDIO_MUTED","PARTICIPANT_VIDEO_MUTED","PARTICIPANT_VIDEO_TYPE_CHANGED","PROMPT_FOR_LOGIN","READY_TO_JOIN","REMOTE_STATS"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AAEA,MAAMA,MAAM,GAAGC,mEAAS,CAACC,UAAD,CAAxB;AAEA;;;;;;AAKA,MAAMC,iBAAiB,GAAG,IAA1B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCe,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAC7C,MAAI,CAACA,OAAO,CAACC,IAAT,IAAiBD,OAAO,CAACC,IAAR,CAAaC,WAAb,OAA+BF,OAAO,CAACC,IAA5D,EAAkE;AAC9D,UAAME,MAAM,GACN,8DACI,oDAFV;AAIAR,UAAM,CAACS,KAAP,CAAaD,MAAb;AACA,UAAM,IAAIE,KAAJ,C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inC,eAAe,CAAC,CAAD,CAAxB;AACD;AACF;;AAED,QAAI,CAACjnC,MAAL,EAAa;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAIymC,8BAAJ,EAAoC;AAClCzmC,cAAM,GAAGx/C,QAAQ,CAACwnF,aAAlB;AACD;AACF;;AAED,QAAI,CAAChoC,MAAL,EAAa;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAIwmC,UAAU,IAAID,wBAAlB,EAA4C;AAC1C,aAAK3gH,CAAC,GAAGqhH,eAAe,CAACnlH,MAAzB,EAAiC8D,CAAC,EAAlC,GAAwC;AACtC,cAAIqhH,eAAe,CAACrhH,CAAD,CAAf,CAAmBkoB,UAAnB,KAAkC,aAAtC,EAAqD;AACnDkyD,kBAAM,GAAGinC,eAAe,CAACrhH,CAAD,CAAxB;AACA;AACD;AACF;AACF;AACF;;AAED,QAAI,CAACo6E,MAAL,EAAa;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,YAAM,GAAGinC,eAAe,CAACA,eAAe,CAACnlH,MAAhB,GAAyB,CAA1B,CAAf,IAA+C,IAAxD;AACD;;AAED,WAAOk+E,MAAP;AACD,GA7aY,CA+ab;;;AACA+nC,yBAAuB,CAACN,cAAxB,GAAyC,CAAzC,CAhba,CAobT;AACA;AACA;;AACA,MAAI7nC,sBAAsB,GAAMmoC,uBAAhC,CAvbS,CAubqD;;AAC9DnoC,wBAAsB,CAACqoC,IAAvB,GAAgCF,uBAAhC;AACAnoC,wBAAsB,CAACsoC,GAAvB,GAAgCL,wBAAhC;AACAjoC,wBAAsB,CAACgoB,MAAvB,GAAgCkgB,2BAAhC,CA1bS,CA6bT;AACA;AACA;;AACA,SAAOloC,sBAAP;AACD,CAldF,CAAD,C;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"lib-jitsi-meet.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JitsiMeetJS\"] = factory();\n\telse\n\t\troot[\"JitsiMeetJS\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","/* global __filename, $, Promise */\r\nimport { Strophe } from 'strophe.js';\r\n\r\nimport EventEmitter from 'events';\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport isEqual from 'lodash.isequal';\r\n\r\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\r\nimport JitsiConferenceEventManager from './JitsiConferenceEventManager';\r\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\r\nimport JitsiParticipant from './JitsiParticipant';\r\nimport JitsiTrackError from './JitsiTrackError';\r\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\r\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\r\nimport authenticateAndUpgradeRole from './authenticateAndUpgradeRole';\r\nimport P2PDominantSpeakerDetection from './modules/detection/P2PDominantSpeakerDetection';\r\nimport RTC from './modules/RTC/RTC';\r\nimport TalkMutedDetection from './modules/detection/TalkMutedDetection';\r\nimport VADTalkMutedDetection from './modules/detection/VADTalkMutedDetection';\r\nimport VADNoiseDetection from './modules/detection/VADNoiseDetection';\r\nimport VADAudioAnalyser from './modules/detection/VADAudioAnalyser';\r\nimport * as DetectionEvents from './modules/detection/DetectionEvents';\r\nimport NoAudioSignalDetection from './modules/detection/NoAudioSignalDetection';\r\nimport browser from './modules/browser';\r\nimport ConnectionQuality from './modules/connectivity/ConnectionQuality';\r\nimport IceFailedNotification\r\n    from './modules/connectivity/IceFailedNotification';\r\nimport ParticipantConnectionStatusHandler\r\n    from './modules/connectivity/ParticipantConnectionStatus';\r\nimport E2EEContext from './modules/e2ee/E2EEContext';\r\nimport E2ePing from './modules/e2eping/e2eping';\r\nimport Jvb121EventGenerator from './modules/event/Jvb121EventGenerator';\r\nimport RecordingManager from './modules/recording/RecordingManager';\r\nimport RttMonitor from './modules/rttmonitor/rttmonitor';\r\nimport Settings from './modules/settings/Settings';\r\nimport AvgRTPStatsReporter from './modules/statistics/AvgRTPStatsReporter';\r\nimport AudioOutputProblemDetector from './modules/statistics/AudioOutputProblemDetector';\r\nimport SpeakerStatsCollector from './modules/statistics/SpeakerStatsCollector';\r\nimport Statistics from './modules/statistics/statistics';\r\nimport Transcriber from './modules/transcription/transcriber';\r\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\r\nimport RandomUtil from './modules/util/RandomUtil';\r\nimport ComponentsVersions from './modules/version/ComponentsVersions';\r\nimport VideoSIPGW from './modules/videosipgw/VideoSIPGW';\r\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\r\nimport { JITSI_MEET_MUC_TYPE } from './modules/xmpp/xmpp';\r\nimport * as MediaType from './service/RTC/MediaType';\r\nimport * as RTCEvents from './service/RTC/RTCEvents';\r\nimport VideoType from './service/RTC/VideoType';\r\nimport {\r\n    ACTION_JINGLE_RESTART,\r\n    ACTION_JINGLE_SI_RECEIVED,\r\n    ACTION_JINGLE_SI_TIMEOUT,\r\n    ACTION_JINGLE_TERMINATE,\r\n    ACTION_P2P_DECLINED,\r\n    ACTION_P2P_ESTABLISHED,\r\n    ACTION_P2P_FAILED,\r\n    ACTION_P2P_SWITCH_TO_JVB,\r\n    ICE_ESTABLISHMENT_DURATION_DIFF,\r\n    createConferenceEvent,\r\n    createJingleEvent,\r\n    createP2PEvent\r\n} from './service/statistics/AnalyticsEvents';\r\nimport * as XMPPEvents from './service/xmpp/XMPPEvents';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * How long since Jicofo is supposed to send a session-initiate, before\r\n * {@link ACTION_JINGLE_SI_TIMEOUT} analytics event is sent (in ms).\r\n * @type {number}\r\n */\r\nconst JINGLE_SI_TIMEOUT = 5000;\r\n\r\n/**\r\n * Creates a JitsiConference object with the given name and properties.\r\n * Note: this constructor is not a part of the public API (objects should be\r\n * created using JitsiConnection.createConference).\r\n * @param options.config properties / settings related to the conference that\r\n * will be created.\r\n * @param options.name the name of the conference\r\n * @param options.connection the JitsiConnection object for this\r\n * JitsiConference.\r\n * @param {number} [options.config.avgRtpStatsN=15] how many samples are to be\r\n * collected by {@link AvgRTPStatsReporter}, before arithmetic mean is\r\n * calculated and submitted to the analytics module.\r\n * @param {boolean} [options.config.p2p.enabled] when set to <tt>true</tt>\r\n * the peer to peer mode will be enabled. It means that when there are only 2\r\n * participants in the conference an attempt to make direct connection will be\r\n * made. If the connection succeeds the conference will stop sending data\r\n * through the JVB connection and will use the direct one instead.\r\n * @param {number} [options.config.p2p.backToP2PDelay=5] a delay given in\r\n * seconds, before the conference switches back to P2P, after the 3rd\r\n * participant has left the room.\r\n * @param {number} [options.config.channelLastN=-1] The requested amount of\r\n * videos are going to be delivered after the value is in effect. Set to -1 for\r\n * unlimited or all available videos.\r\n * @param {number} [options.config.forceJVB121Ratio]\r\n * \"Math.random() < forceJVB121Ratio\" will determine whether a 2 people\r\n * conference should be moved to the JVB instead of P2P. The decision is made on\r\n * the responder side, after ICE succeeds on the P2P connection.\r\n * @param {*} [options.config.openBridgeChannel] Which kind of communication to\r\n * open with the videobridge. Values can be \"datachannel\", \"websocket\", true\r\n * (treat it as \"datachannel\"), undefined (treat it as \"datachannel\") and false\r\n * (don't open any channel).\r\n * @constructor\r\n *\r\n * FIXME Make all methods which are called from lib-internal classes\r\n *       to non-public (use _). To name a few:\r\n *       {@link JitsiConference.onLocalRoleChanged}\r\n *       {@link JitsiConference.onUserRoleChanged}\r\n *       {@link JitsiConference.onMemberLeft}\r\n *       and so on...\r\n */\r\nexport default function JitsiConference(options) {\r\n    if (!options.name || options.name.toLowerCase() !== options.name) {\r\n        const errmsg\r\n            = 'Invalid conference name (no conference name passed or it '\r\n                + 'contains invalid characters like capital letters)!';\r\n\r\n        logger.error(errmsg);\r\n        throw new Error(errmsg);\r\n    }\r\n    this.eventEmitter = new EventEmitter();\r\n    this.options = options;\r\n    this.eventManager = new JitsiConferenceEventManager(this);\r\n    this.participants = {};\r\n    this._init(options);\r\n    this.componentsVersions = new ComponentsVersions(this);\r\n\r\n    /**\r\n     * Jingle session instance for the JVB connection.\r\n     * @type {JingleSessionPC}\r\n     */\r\n    this.jvbJingleSession = null;\r\n    this.lastDominantSpeaker = null;\r\n    this.dtmfManager = null;\r\n    this.somebodySupportsDTMF = false;\r\n    this.authEnabled = false;\r\n    this.startAudioMuted = false;\r\n    this.startVideoMuted = false;\r\n    this.startMutedPolicy = {\r\n        audio: false,\r\n        video: false\r\n    };\r\n    this.isMutedByFocus = false;\r\n\r\n    // when muted by focus we receive the jid of the initiator of the mute\r\n    this.mutedByFocusActor = null;\r\n\r\n    // Flag indicates if the 'onCallEnded' method was ever called on this\r\n    // instance. Used to log extra analytics event for debugging purpose.\r\n    // We need to know if the potential issue happened before or after\r\n    // the restart.\r\n    this.wasStopped = false;\r\n\r\n    // Conference properties, maintained by jicofo.\r\n    this.properties = {};\r\n\r\n    /**\r\n     * The object which monitors local and remote connection statistics (e.g.\r\n     * sending bitrate) and calculates a number which represents the connection\r\n     * quality.\r\n     */\r\n    this.connectionQuality\r\n        = new ConnectionQuality(this, this.eventEmitter, options);\r\n\r\n    /**\r\n     * Reports average RTP statistics to the analytics module.\r\n     * @type {AvgRTPStatsReporter}\r\n     */\r\n    this.avgRtpStatsReporter\r\n        = new AvgRTPStatsReporter(this, options.config.avgRtpStatsN || 15);\r\n\r\n    /**\r\n     * Detects issues with the audio of remote participants.\r\n     * @type {AudioOutputProblemDetector}\r\n     */\r\n    this._audioOutputProblemDetector = new AudioOutputProblemDetector(this);\r\n\r\n    /**\r\n     * Indicates whether the connection is interrupted or not.\r\n     */\r\n    this.isJvbConnectionInterrupted = false;\r\n\r\n    /**\r\n     * The object which tracks active speaker times\r\n     */\r\n    this.speakerStatsCollector = new SpeakerStatsCollector(this);\r\n\r\n    /* P2P related fields below: */\r\n\r\n    /**\r\n     * Stores reference to deferred start P2P task. It's created when 3rd\r\n     * participant leaves the room in order to avoid ping pong effect (it\r\n     * could be just a page reload).\r\n     * @type {number|null}\r\n     */\r\n    this.deferredStartP2PTask = null;\r\n\r\n    const delay\r\n        = parseInt(options.config.p2p && options.config.p2p.backToP2PDelay, 10);\r\n\r\n    /**\r\n     * A delay given in seconds, before the conference switches back to P2P\r\n     * after the 3rd participant has left.\r\n     * @type {number}\r\n     */\r\n    this.backToP2PDelay = isNaN(delay) ? 5 : delay;\r\n    logger.info(`backToP2PDelay: ${this.backToP2PDelay}`);\r\n\r\n    /**\r\n     * If set to <tt>true</tt> it means the P2P ICE is no longer connected.\r\n     * When <tt>false</tt> it means that P2P ICE (media) connection is up\r\n     * and running.\r\n     * @type {boolean}\r\n     */\r\n    this.isP2PConnectionInterrupted = false;\r\n\r\n    /**\r\n     * Flag set to <tt>true</tt> when P2P session has been established\r\n     * (ICE has been connected) and this conference is currently in the peer to\r\n     * peer mode (P2P connection is the active one).\r\n     * @type {boolean}\r\n     */\r\n    this.p2p = false;\r\n\r\n    /**\r\n     * A JingleSession for the direct peer to peer connection.\r\n     * @type {JingleSessionPC}\r\n     */\r\n    this.p2pJingleSession = null;\r\n\r\n    this.videoSIPGWHandler = new VideoSIPGW(this.room);\r\n    this.recordingManager = new RecordingManager(this.room);\r\n    this._conferenceJoinAnalyticsEventSent = false;\r\n\r\n    if (browser.supportsInsertableStreams()) {\r\n        this._e2eeCtx = new E2EEContext({ salt: this.options.name });\r\n    }\r\n}\r\n\r\n// FIXME convert JitsiConference to ES6 - ASAP !\r\nJitsiConference.prototype.constructor = JitsiConference;\r\n\r\n/**\r\n * Create a resource for the a jid. We use the room nickname (the resource part\r\n * of the occupant JID, see XEP-0045) as the endpoint ID in colibri. We require\r\n * endpoint IDs to be 8 hex digits because in some cases they get serialized\r\n * into a 32bit field.\r\n *\r\n * @param {string} jid - The id set onto the XMPP connection.\r\n * @param {boolean} isAuthenticatedUser - Whether or not the user has connected\r\n * to the XMPP service with a password.\r\n * @returns {string}\r\n * @static\r\n */\r\nJitsiConference.resourceCreator = function(jid, isAuthenticatedUser) {\r\n    let mucNickname;\r\n\r\n    if (isAuthenticatedUser) {\r\n        // For authenticated users generate a random ID.\r\n        mucNickname = RandomUtil.randomHexString(8).toLowerCase();\r\n    } else {\r\n        // We try to use the first part of the node (which for anonymous users\r\n        // on prosody is a UUID) to match the previous behavior (and maybe make\r\n        // debugging easier).\r\n        mucNickname = Strophe.getNodeFromJid(jid).substr(0, 8)\r\n            .toLowerCase();\r\n\r\n        // But if this doesn't have the required format we just generate a new\r\n        // random nickname.\r\n        const re = /[0-9a-f]{8}/g;\r\n\r\n        if (!re.test(mucNickname)) {\r\n            mucNickname = RandomUtil.randomHexString(8).toLowerCase();\r\n        }\r\n    }\r\n\r\n    return mucNickname;\r\n};\r\n\r\n/**\r\n * Initializes the conference object properties\r\n * @param options {object}\r\n * @param options.connection {JitsiConnection} overrides this.connection\r\n */\r\nJitsiConference.prototype._init = function(options = {}) {\r\n    // Override connection and xmpp properties (Useful if the connection\r\n    // reloaded)\r\n    if (options.connection) {\r\n        this.connection = options.connection;\r\n        this.xmpp = this.connection.xmpp;\r\n\r\n        // Setup XMPP events only if we have new connection object.\r\n        this.eventManager.setupXMPPListeners();\r\n    }\r\n\r\n    const { config } = this.options;\r\n\r\n    this._statsCurrentId = config.statisticsId ? config.statisticsId : Settings.callStatsUserName;\r\n    this.room = this.xmpp.createRoom(\r\n        this.options.name, {\r\n            ...config,\r\n            statsId: this._statsCurrentId\r\n        },\r\n        JitsiConference.resourceCreator\r\n    );\r\n\r\n    // Connection interrupted/restored listeners\r\n    this._onIceConnectionInterrupted\r\n        = this._onIceConnectionInterrupted.bind(this);\r\n    this.room.addListener(\r\n        XMPPEvents.CONNECTION_INTERRUPTED, this._onIceConnectionInterrupted);\r\n\r\n    this._onIceConnectionRestored = this._onIceConnectionRestored.bind(this);\r\n    this.room.addListener(\r\n        XMPPEvents.CONNECTION_RESTORED, this._onIceConnectionRestored);\r\n\r\n    this._onIceConnectionEstablished\r\n        = this._onIceConnectionEstablished.bind(this);\r\n    this.room.addListener(\r\n        XMPPEvents.CONNECTION_ESTABLISHED, this._onIceConnectionEstablished);\r\n\r\n    this._updateProperties = this._updateProperties.bind(this);\r\n    this.room.addListener(XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\r\n        this._updateProperties);\r\n\r\n    this._sendConferenceJoinAnalyticsEvent = this._sendConferenceJoinAnalyticsEvent.bind(this);\r\n    this.room.addListener(XMPPEvents.MEETING_ID_SET, this._sendConferenceJoinAnalyticsEvent);\r\n\r\n    this.rttMonitor = new RttMonitor(config.rttMonitor || {});\r\n\r\n    this.e2eping = new E2ePing(\r\n        this,\r\n        config,\r\n        (message, to) => {\r\n            try {\r\n                this.sendMessage(\r\n                    message, to, true /* sendThroughVideobridge */);\r\n            } catch (error) {\r\n                logger.warn('Failed to send E2E ping request or response.', error && error.msg);\r\n            }\r\n        });\r\n\r\n    if (!this.rtc) {\r\n        this.rtc = new RTC(this, options);\r\n        this.eventManager.setupRTCListeners();\r\n    }\r\n\r\n    this.participantConnectionStatus\r\n        = new ParticipantConnectionStatusHandler(\r\n            this.rtc,\r\n            this,\r\n            {\r\n                // Both these options are not public API, leaving it here only\r\n                // as an entry point through config for tuning up purposes.\r\n                // Default values should be adjusted as soon as optimal values\r\n                // are discovered.\r\n                rtcMuteTimeout: config._peerConnStatusRtcMuteTimeout,\r\n                outOfLastNTimeout: config._peerConnStatusOutOfLastNTimeout\r\n            });\r\n    this.participantConnectionStatus.init();\r\n\r\n    if (!this.statistics) {\r\n        this.statistics = new Statistics(this.xmpp, {\r\n            aliasName: this._statsCurrentId,\r\n            userName: config.statisticsDisplayName ? config.statisticsDisplayName : this.myUserId(),\r\n            callStatsConfIDNamespace: this.connection.options.hosts.domain,\r\n            confID: config.confID || `${this.connection.options.hosts.domain}/${this.options.name}`,\r\n            customScriptUrl: config.callStatsCustomScriptUrl,\r\n            callStatsID: config.callStatsID,\r\n            callStatsSecret: config.callStatsSecret,\r\n            callStatsApplicationLogsDisabled: config.callStatsApplicationLogsDisabled,\r\n            roomName: this.options.name,\r\n            applicationName: config.applicationName,\r\n            getWiFiStatsMethod: config.getWiFiStatsMethod\r\n        });\r\n        Statistics.analytics.addPermanentProperties({\r\n            'callstats_name': this._statsCurrentId\r\n        });\r\n    }\r\n\r\n    this.eventManager.setupChatRoomListeners();\r\n\r\n    // Always add listeners because on reload we are executing leave and the\r\n    // listeners are removed from statistics module.\r\n    this.eventManager.setupStatisticsListeners();\r\n\r\n    if (config.enableTalkWhileMuted) {\r\n\r\n        // If VAD processor factory method is provided uses VAD based detection, otherwise fallback to audio level\r\n        // based detection.\r\n        if (config.createVADProcessor) {\r\n            logger.info('Using VAD detection for generating talk while muted events');\r\n\r\n            if (!this._audioAnalyser) {\r\n                this._audioAnalyser = new VADAudioAnalyser(this, config.createVADProcessor);\r\n            }\r\n\r\n            const vadTalkMutedDetection = new VADTalkMutedDetection();\r\n\r\n            vadTalkMutedDetection.on(DetectionEvents.VAD_TALK_WHILE_MUTED, () =>\r\n                this.eventEmitter.emit(JitsiConferenceEvents.TALK_WHILE_MUTED));\r\n\r\n            this._audioAnalyser.addVADDetectionService(vadTalkMutedDetection);\r\n\r\n\r\n        } else {\r\n            logger.info('Using audio level based detection for generating talk while muted events');\r\n            this._talkWhileMutedDetection = new TalkMutedDetection(\r\n                this, () => this.eventEmitter.emit(JitsiConferenceEvents.TALK_WHILE_MUTED));\r\n        }\r\n    }\r\n\r\n    if (config.enableNoisyMicDetection) {\r\n        if (config.createVADProcessor) {\r\n            if (!this._audioAnalyser) {\r\n                this._audioAnalyser = new VADAudioAnalyser(this, config.createVADProcessor);\r\n            }\r\n\r\n            const vadNoiseDetection = new VADNoiseDetection();\r\n\r\n            vadNoiseDetection.on(DetectionEvents.VAD_NOISY_DEVICE, () =>\r\n                this.eventEmitter.emit(JitsiConferenceEvents.NOISY_MIC));\r\n\r\n            this._audioAnalyser.addVADDetectionService(vadNoiseDetection);\r\n        } else {\r\n            logger.warn('No VAD Processor was provided. Noisy microphone detection service was not initialized!');\r\n        }\r\n    }\r\n\r\n    // Generates events based on no audio input detector.\r\n    if (config.enableNoAudioDetection) {\r\n        this._noAudioSignalDetection = new NoAudioSignalDetection(this);\r\n        this._noAudioSignalDetection.on(DetectionEvents.NO_AUDIO_INPUT, () => {\r\n            this.eventEmitter.emit(JitsiConferenceEvents.NO_AUDIO_INPUT);\r\n        });\r\n        this._noAudioSignalDetection.on(DetectionEvents.AUDIO_INPUT_STATE_CHANGE, hasAudioSignal => {\r\n            this.eventEmitter.emit(JitsiConferenceEvents.AUDIO_INPUT_STATE_CHANGE, hasAudioSignal);\r\n        });\r\n    }\r\n\r\n\r\n    if ('channelLastN' in config) {\r\n        this.setLastN(config.channelLastN);\r\n    }\r\n\r\n    /**\r\n     * Emits {@link JitsiConferenceEvents.JVB121_STATUS}.\r\n     * @type {Jvb121EventGenerator}\r\n     */\r\n    this.jvb121Status = new Jvb121EventGenerator(this);\r\n\r\n    // creates dominant speaker detection that works only in p2p mode\r\n    this.p2pDominantSpeakerDetection = new P2PDominantSpeakerDetection(this);\r\n\r\n    if (config && config.deploymentInfo && config.deploymentInfo.userRegion) {\r\n        this.setLocalParticipantProperty(\r\n            'region', config.deploymentInfo.userRegion);\r\n    }\r\n};\r\n\r\n/**\r\n * Joins the conference.\r\n * @param password {string} the password\r\n */\r\nJitsiConference.prototype.join = function(password) {\r\n    if (this.room) {\r\n        this.room.join(password).then(() => this._maybeSetSITimeout());\r\n    }\r\n};\r\n\r\n/**\r\n * Authenticates and upgrades the role of the local participant/user.\r\n *\r\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\r\n * authenticating and upgrading the role of the local participant/user finishes\r\n * and (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\r\n * process.\r\n */\r\nJitsiConference.prototype.authenticateAndUpgradeRole = function(options) {\r\n    return authenticateAndUpgradeRole.call(this, {\r\n        ...options,\r\n        onCreateResource: JitsiConference.resourceCreator\r\n    });\r\n};\r\n\r\n/**\r\n * Check if joined to the conference.\r\n */\r\nJitsiConference.prototype.isJoined = function() {\r\n    return this.room && this.room.joined;\r\n};\r\n\r\n/**\r\n * Tells whether or not the P2P mode is enabled in the configuration.\r\n * @return {boolean}\r\n */\r\nJitsiConference.prototype.isP2PEnabled = function() {\r\n    return Boolean(this.options.config.p2p && this.options.config.p2p.enabled)\r\n\r\n        // FIXME: remove once we have a default config template. -saghul\r\n        || typeof this.options.config.p2p === 'undefined';\r\n};\r\n\r\n/**\r\n * When in P2P test mode, the conference will not automatically switch to P2P\r\n * when there 2 participants.\r\n * @return {boolean}\r\n */\r\nJitsiConference.prototype.isP2PTestModeEnabled = function() {\r\n    return Boolean(this.options.config.testing\r\n        && this.options.config.testing.p2pTestMode);\r\n};\r\n\r\n/**\r\n * Leaves the conference.\r\n * @returns {Promise}\r\n */\r\nJitsiConference.prototype.leave = function() {\r\n    if (this.participantConnectionStatus) {\r\n        this.participantConnectionStatus.dispose();\r\n        this.participantConnectionStatus = null;\r\n    }\r\n    if (this.avgRtpStatsReporter) {\r\n        this.avgRtpStatsReporter.dispose();\r\n        this.avgRtpStatsReporter = null;\r\n    }\r\n\r\n    if (this._audioOutputProblemDetector) {\r\n        this._audioOutputProblemDetector.dispose();\r\n        this._audioOutputProblemDetector = null;\r\n    }\r\n\r\n    if (this.rttMonitor) {\r\n        this.rttMonitor.stop();\r\n        this.rttMonitor = null;\r\n    }\r\n\r\n    if (this.e2eping) {\r\n        this.e2eping.stop();\r\n        this.e2eping = null;\r\n    }\r\n\r\n    this.getLocalTracks().forEach(track => this.onLocalTrackRemoved(track));\r\n\r\n    this.rtc.closeBridgeChannel();\r\n    if (this.statistics) {\r\n        this.statistics.dispose();\r\n    }\r\n\r\n    this._delayedIceFailed && this._delayedIceFailed.cancel();\r\n\r\n    // Close both JVb and P2P JingleSessions\r\n    if (this.jvbJingleSession) {\r\n        this.jvbJingleSession.close();\r\n        this.jvbJingleSession = null;\r\n    }\r\n    if (this.p2pJingleSession) {\r\n        this.p2pJingleSession.close();\r\n        this.p2pJingleSession = null;\r\n    }\r\n\r\n    // leave the conference\r\n    if (this.room) {\r\n        const room = this.room;\r\n\r\n        // Unregister connection state listeners\r\n        room.removeListener(\r\n            XMPPEvents.CONNECTION_INTERRUPTED,\r\n            this._onIceConnectionInterrupted);\r\n        room.removeListener(\r\n            XMPPEvents.CONNECTION_RESTORED,\r\n            this._onIceConnectionRestored);\r\n        room.removeListener(\r\n            XMPPEvents.CONNECTION_ESTABLISHED,\r\n            this._onIceConnectionEstablished);\r\n\r\n        room.removeListener(\r\n            XMPPEvents.CONFERENCE_PROPERTIES_CHANGED,\r\n            this._updateProperties);\r\n\r\n        room.removeListener(XMPPEvents.MEETING_ID_SET, this._sendConferenceJoinAnalyticsEvent);\r\n\r\n        this.eventManager.removeXMPPListeners();\r\n\r\n        this.room = null;\r\n\r\n        return room.leave()\r\n            .then(() => {\r\n                if (this.rtc) {\r\n                    this.rtc.destroy();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                // remove all participants because currently the conference\r\n                // won't be usable anyway. This is done on success automatically\r\n                // by the ChatRoom instance.\r\n                this.getParticipants().forEach(\r\n                    participant => this.onMemberLeft(participant.getJid()));\r\n\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    // If this.room == null we are calling second time leave().\r\n    return Promise.reject(\r\n        new Error('The conference is has been already left'));\r\n};\r\n\r\n/**\r\n * Returns name of this conference.\r\n */\r\nJitsiConference.prototype.getName = function() {\r\n    return this.options.name;\r\n};\r\n\r\n/**\r\n * Returns the {@link JitsiConnection} used by this this conference.\r\n */\r\nJitsiConference.prototype.getConnection = function() {\r\n    return this.connection;\r\n};\r\n\r\n/**\r\n * Check if authentication is enabled for this conference.\r\n */\r\nJitsiConference.prototype.isAuthEnabled = function() {\r\n    return this.authEnabled;\r\n};\r\n\r\n/**\r\n * Check if user is logged in.\r\n */\r\nJitsiConference.prototype.isLoggedIn = function() {\r\n    return Boolean(this.authIdentity);\r\n};\r\n\r\n/**\r\n * Get authorized login.\r\n */\r\nJitsiConference.prototype.getAuthLogin = function() {\r\n    return this.authIdentity;\r\n};\r\n\r\n/**\r\n * Check if external authentication is enabled for this conference.\r\n */\r\nJitsiConference.prototype.isExternalAuthEnabled = function() {\r\n    return this.room && this.room.moderator.isExternalAuthEnabled();\r\n};\r\n\r\n/**\r\n * Get url for external authentication.\r\n * @param {boolean} [urlForPopup] if true then return url for login popup,\r\n *                                else url of login page.\r\n * @returns {Promise}\r\n */\r\nJitsiConference.prototype.getExternalAuthUrl = function(urlForPopup) {\r\n    return new Promise((resolve, reject) => {\r\n        if (!this.isExternalAuthEnabled()) {\r\n            reject();\r\n\r\n            return;\r\n        }\r\n        if (urlForPopup) {\r\n            this.room.moderator.getPopupLoginUrl(resolve, reject);\r\n        } else {\r\n            this.room.moderator.getLoginUrl(resolve, reject);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Returns the local tracks of the given media type, or all local tracks if no\r\n * specific type is given.\r\n * @param {MediaType} [mediaType] Optional media type (audio or video).\r\n */\r\nJitsiConference.prototype.getLocalTracks = function(mediaType) {\r\n    let tracks = [];\r\n\r\n    if (this.rtc) {\r\n        tracks = this.rtc.getLocalTracks(mediaType);\r\n    }\r\n\r\n    return tracks;\r\n};\r\n\r\n/**\r\n * Obtains local audio track.\r\n * @return {JitsiLocalTrack|null}\r\n */\r\nJitsiConference.prototype.getLocalAudioTrack = function() {\r\n    return this.rtc ? this.rtc.getLocalAudioTrack() : null;\r\n};\r\n\r\n/**\r\n * Obtains local video track.\r\n * @return {JitsiLocalTrack|null}\r\n */\r\nJitsiConference.prototype.getLocalVideoTrack = function() {\r\n    return this.rtc ? this.rtc.getLocalVideoTrack() : null;\r\n};\r\n\r\n/**\r\n * Attaches a handler for events(For example - \"participant joined\".) in the\r\n * conference. All possible event are defined in JitsiConferenceEvents.\r\n * @param eventId the event ID.\r\n * @param handler handler for the event.\r\n *\r\n * Note: consider adding eventing functionality by extending an EventEmitter\r\n * impl, instead of rolling ourselves\r\n */\r\nJitsiConference.prototype.on = function(eventId, handler) {\r\n    if (this.eventEmitter) {\r\n        this.eventEmitter.on(eventId, handler);\r\n    }\r\n};\r\n\r\n/**\r\n * Removes event listener\r\n * @param eventId the event ID.\r\n * @param [handler] optional, the specific handler to unbind\r\n *\r\n * Note: consider adding eventing functionality by extending an EventEmitter\r\n * impl, instead of rolling ourselves\r\n */\r\nJitsiConference.prototype.off = function(eventId, handler) {\r\n    if (this.eventEmitter) {\r\n        this.eventEmitter.removeListener(eventId, handler);\r\n    }\r\n};\r\n\r\n// Common aliases for event emitter\r\nJitsiConference.prototype.addEventListener = JitsiConference.prototype.on;\r\nJitsiConference.prototype.removeEventListener = JitsiConference.prototype.off;\r\n\r\n/**\r\n * Receives notifications from other participants about commands / custom events\r\n * (sent by sendCommand or sendCommandOnce methods).\r\n * @param command {String} the name of the command\r\n * @param handler {Function} handler for the command\r\n */\r\nJitsiConference.prototype.addCommandListener = function(command, handler) {\r\n    if (this.room) {\r\n        this.room.addPresenceListener(command, handler);\r\n    }\r\n};\r\n\r\n/**\r\n  * Removes command  listener\r\n  * @param command {String} the name of the command\r\n  * @param handler {Function} handler to remove for the command\r\n  */\r\nJitsiConference.prototype.removeCommandListener = function(command, handler) {\r\n    if (this.room) {\r\n        this.room.removePresenceListener(command, handler);\r\n    }\r\n};\r\n\r\n/**\r\n * Sends text message to the other participants in the conference\r\n * @param message the text message.\r\n * @param elementName the element name to encapsulate the message.\r\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\r\n */\r\nJitsiConference.prototype.sendTextMessage = function(\r\n        message, elementName = 'body') {\r\n    if (this.room) {\r\n        const displayName = (this.room.getFromPresence('nick') || {}).value;\r\n\r\n        this.room.sendMessage(message, elementName, displayName);\r\n    }\r\n};\r\n\r\n/**\r\n * Send private text message to another participant of the conference\r\n * @param id the id of the participant to send a private message.\r\n * @param message the text message.\r\n * @param elementName the element name to encapsulate the message.\r\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\r\n */\r\nJitsiConference.prototype.sendPrivateTextMessage = function(\r\n        id, message, elementName = 'body') {\r\n    if (this.room) {\r\n        this.room.sendPrivateMessage(id, message, elementName);\r\n    }\r\n};\r\n\r\n/**\r\n * Send presence command.\r\n * @param name {String} the name of the command.\r\n * @param values {Object} with keys and values that will be sent.\r\n **/\r\nJitsiConference.prototype.sendCommand = function(name, values) {\r\n    if (this.room) {\r\n        this.room.addToPresence(name, values);\r\n        this.room.sendPresence();\r\n    } else {\r\n        logger.warn('Not sending a command, room not initialized.');\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * Send presence command one time.\r\n * @param name {String} the name of the command.\r\n * @param values {Object} with keys and values that will be sent.\r\n **/\r\nJitsiConference.prototype.sendCommandOnce = function(name, values) {\r\n    this.sendCommand(name, values);\r\n    this.removeCommand(name);\r\n};\r\n\r\n/**\r\n * Removes presence command.\r\n * @param name {String} the name of the command.\r\n **/\r\nJitsiConference.prototype.removeCommand = function(name) {\r\n    if (this.room) {\r\n        this.room.removeFromPresence(name);\r\n    }\r\n};\r\n\r\n/**\r\n * Sets the display name for this conference.\r\n * @param name the display name to set\r\n */\r\nJitsiConference.prototype.setDisplayName = function(name) {\r\n    if (this.room) {\r\n        // remove previously set nickname\r\n        this.room.removeFromPresence('nick');\r\n\r\n        this.room.addToPresence('nick', {\r\n            attributes: { xmlns: 'http://jabber.org/protocol/nick' },\r\n            value: name\r\n        });\r\n        this.room.sendPresence();\r\n    }\r\n};\r\n\r\n/**\r\n * Set new subject for this conference. (available only for moderator)\r\n * @param {string} subject new subject\r\n */\r\nJitsiConference.prototype.setSubject = function(subject) {\r\n    if (this.room && this.isModerator()) {\r\n        this.room.setSubject(subject);\r\n    }\r\n};\r\n\r\n/**\r\n * Get a transcriber object for all current participants in this conference\r\n * @return {Transcriber} the transcriber object\r\n */\r\nJitsiConference.prototype.getTranscriber = function() {\r\n    if (this.transcriber === undefined) {\r\n        this.transcriber = new Transcriber();\r\n\r\n        // add all existing local audio tracks to the transcriber\r\n        const localAudioTracks = this.getLocalTracks(MediaType.AUDIO);\r\n\r\n        for (const localAudio of localAudioTracks) {\r\n            this.transcriber.addTrack(localAudio);\r\n        }\r\n\r\n        // and all remote audio tracks\r\n        const remoteAudioTracks = this.rtc.getRemoteTracks(MediaType.AUDIO);\r\n\r\n        for (const remoteTrack of remoteAudioTracks) {\r\n            this.transcriber.addTrack(remoteTrack);\r\n        }\r\n    }\r\n\r\n    return this.transcriber;\r\n};\r\n\r\n/**\r\n * Returns the transcription status.\r\n *\r\n * @returns {String} \"on\" or \"off\".\r\n */\r\nJitsiConference.prototype.getTranscriptionStatus = function() {\r\n    return this.room.transcriptionStatus;\r\n};\r\n\r\n/**\r\n * Adds JitsiLocalTrack object to the conference.\r\n * @param track the JitsiLocalTrack object.\r\n * @returns {Promise<JitsiLocalTrack>}\r\n * @throws {Error} if the specified track is a video track and there is already\r\n * another video track in the conference.\r\n */\r\nJitsiConference.prototype.addTrack = function(track) {\r\n    if (track.isVideoTrack()) {\r\n        // Ensure there's exactly 1 local video track in the conference.\r\n        const localVideoTrack = this.rtc.getLocalVideoTrack();\r\n\r\n        if (localVideoTrack) {\r\n            // Don't be excessively harsh and severe if the API client happens\r\n            // to attempt to add the same local video track twice.\r\n            if (track === localVideoTrack) {\r\n                return Promise.resolve(track);\r\n            }\r\n\r\n            return Promise.reject(new Error(\r\n                'cannot add second video track to the conference'));\r\n\r\n        }\r\n    }\r\n\r\n    return this.replaceTrack(null, track);\r\n};\r\n\r\n/**\r\n * Fires TRACK_AUDIO_LEVEL_CHANGED change conference event (for local tracks).\r\n * @param {number} audioLevel the audio level\r\n * @param {TraceablePeerConnection} [tpc]\r\n */\r\nJitsiConference.prototype._fireAudioLevelChangeEvent = function(\r\n        audioLevel,\r\n        tpc) {\r\n    const activeTpc = this.getActivePeerConnection();\r\n\r\n    // There will be no TraceablePeerConnection if audio levels do not come from\r\n    // a peerconnection. LocalStatsCollector.js measures audio levels using Web\r\n    // Audio Analyser API and emits local audio levels events through\r\n    // JitsiTrack.setAudioLevel, but does not provide TPC instance which is\r\n    // optional.\r\n    if (!tpc || activeTpc === tpc) {\r\n        this.eventEmitter.emit(\r\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\r\n            this.myUserId(), audioLevel);\r\n    }\r\n};\r\n\r\n/**\r\n * Fires TRACK_MUTE_CHANGED change conference event.\r\n * @param track the JitsiTrack object related to the event.\r\n */\r\nJitsiConference.prototype._fireMuteChangeEvent = function(track) {\r\n    // check if track was muted by focus and now is unmuted by user\r\n    if (this.isMutedByFocus && track.isAudioTrack() && !track.isMuted()) {\r\n        this.isMutedByFocus = false;\r\n\r\n        // unmute local user on server\r\n        this.room.muteParticipant(this.room.myroomjid, false);\r\n    }\r\n\r\n    let actorParticipant;\r\n\r\n    if (this.mutedByFocusActor) {\r\n        const actorId = Strophe.getResourceFromJid(this.mutedByFocusActor);\r\n\r\n        actorParticipant = this.participants[actorId];\r\n    }\r\n\r\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track, actorParticipant);\r\n};\r\n\r\n/**\r\n * Clear JitsiLocalTrack properties and listeners.\r\n * @param track the JitsiLocalTrack object.\r\n */\r\nJitsiConference.prototype.onLocalTrackRemoved = function(track) {\r\n    track._setConference(null);\r\n    this.rtc.removeLocalTrack(track);\r\n    track.removeEventListener(JitsiTrackEvents.TRACK_MUTE_CHANGED,\r\n        track.muteHandler);\r\n    track.removeEventListener(JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\r\n        track.audioLevelHandler);\r\n\r\n    // send event for stopping screen sharing\r\n    // FIXME: we assume we have only one screen sharing track\r\n    // if we change this we need to fix this check\r\n    if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\r\n        this.statistics.sendScreenSharingEvent(false);\r\n    }\r\n\r\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track);\r\n};\r\n\r\n/**\r\n * Removes JitsiLocalTrack from the conference and performs\r\n * a new offer/answer cycle.\r\n * @param {JitsiLocalTrack} track\r\n * @returns {Promise}\r\n */\r\nJitsiConference.prototype.removeTrack = function(track) {\r\n    return this.replaceTrack(track, null);\r\n};\r\n\r\n/**\r\n * Replaces oldTrack with newTrack and performs a single offer/answer\r\n *  cycle after both operations are done.  Either oldTrack or newTrack\r\n *  can be null; replacing a valid 'oldTrack' with a null 'newTrack'\r\n *  effectively just removes 'oldTrack'\r\n * @param {JitsiLocalTrack} oldTrack the current stream in use to be replaced\r\n * @param {JitsiLocalTrack} newTrack the new stream to use\r\n * @returns {Promise} resolves when the replacement is finished\r\n */\r\nJitsiConference.prototype.replaceTrack = function(oldTrack, newTrack) {\r\n    // First do the removal of the oldTrack at the JitsiConference level\r\n    if (oldTrack) {\r\n        if (oldTrack.disposed) {\r\n            return Promise.reject(\r\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\r\n        }\r\n    }\r\n    if (newTrack) {\r\n        if (newTrack.disposed) {\r\n            return Promise.reject(\r\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\r\n        }\r\n    }\r\n\r\n    // Now replace the stream at the lower levels\r\n    return this._doReplaceTrack(oldTrack, newTrack)\r\n        .then(() => {\r\n            if (oldTrack) {\r\n                this.onLocalTrackRemoved(oldTrack);\r\n            }\r\n            if (newTrack) {\r\n                // Now handle the addition of the newTrack at the\r\n                // JitsiConference level\r\n                this._setupNewTrack(newTrack);\r\n            }\r\n\r\n            return Promise.resolve();\r\n        }, error => Promise.reject(new Error(error)));\r\n};\r\n\r\n/**\r\n * Replaces the tracks at the lower level by going through the Jingle session\r\n * and WebRTC peer connection. The method will resolve immediately if there is\r\n * currently no JingleSession started.\r\n * @param {JitsiLocalTrack|null} oldTrack the track to be removed during\r\n * the process or <tt>null</t> if the method should act as \"add track\"\r\n * @param {JitsiLocalTrack|null} newTrack the new track to be added or\r\n * <tt>null</tt> if the method should act as \"remove track\"\r\n * @return {Promise} resolved when the process is done or rejected with a string\r\n * which describes the error.\r\n * @private\r\n */\r\nJitsiConference.prototype._doReplaceTrack = function(oldTrack, newTrack) {\r\n    const replaceTrackPromises = [];\r\n\r\n    if (this.jvbJingleSession) {\r\n        replaceTrackPromises.push(\r\n            this.jvbJingleSession.replaceTrack(oldTrack, newTrack));\r\n    } else {\r\n        logger.info('_doReplaceTrack - no JVB JingleSession');\r\n    }\r\n\r\n    if (this.p2pJingleSession) {\r\n        replaceTrackPromises.push(\r\n            this.p2pJingleSession.replaceTrack(oldTrack, newTrack));\r\n    } else {\r\n        logger.info('_doReplaceTrack - no P2P JingleSession');\r\n    }\r\n\r\n    return Promise.all(replaceTrackPromises);\r\n};\r\n\r\n/**\r\n * Operations related to creating a new track\r\n * @param {JitsiLocalTrack} newTrack the new track being created\r\n */\r\nJitsiConference.prototype._setupNewTrack = function(newTrack) {\r\n    if (newTrack.isAudioTrack() || (newTrack.isVideoTrack()\r\n            && newTrack.videoType !== VideoType.DESKTOP)) {\r\n        // Report active device to statistics\r\n        const devices = RTC.getCurrentlyAvailableMediaDevices();\r\n        const device\r\n            = devices.find(\r\n                d =>\r\n                    d.kind === `${newTrack.getTrack().kind}input`\r\n                        && d.label === newTrack.getTrack().label);\r\n\r\n        if (device) {\r\n            Statistics.sendActiveDeviceListEvent(\r\n                RTC.getEventDataForActiveDevice(device));\r\n        }\r\n    }\r\n    if (newTrack.isVideoTrack()) {\r\n        this.removeCommand('videoType');\r\n        this.sendCommand('videoType', {\r\n            value: newTrack.videoType,\r\n            attributes: {\r\n                xmlns: 'http://jitsi.org/jitmeet/video'\r\n            }\r\n        });\r\n    }\r\n    this.rtc.addLocalTrack(newTrack);\r\n\r\n    // ensure that we're sharing proper \"is muted\" state\r\n    if (newTrack.isAudioTrack()) {\r\n        this.room.setAudioMute(newTrack.isMuted());\r\n    } else {\r\n        this.room.setVideoMute(newTrack.isMuted());\r\n    }\r\n\r\n    newTrack.muteHandler = this._fireMuteChangeEvent.bind(this, newTrack);\r\n    newTrack.audioLevelHandler = this._fireAudioLevelChangeEvent.bind(this);\r\n    newTrack.addEventListener(\r\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\r\n        newTrack.muteHandler);\r\n    newTrack.addEventListener(\r\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\r\n        newTrack.audioLevelHandler);\r\n\r\n    newTrack._setConference(this);\r\n\r\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_ADDED, newTrack);\r\n};\r\n\r\n/**\r\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to add\r\n * back the underlying WebRTC MediaStream to the PeerConnection (which has\r\n * removed on video mute).\r\n * @param {JitsiLocalTrack} track the local track that will be added as part of\r\n * the unmute operation.\r\n * @return {Promise} resolved when the process is done or rejected with a string\r\n * which describes the error.\r\n */\r\nJitsiConference.prototype._addLocalTrackAsUnmute = function(track) {\r\n    const addAsUnmutePromises = [];\r\n\r\n    if (this.jvbJingleSession) {\r\n        addAsUnmutePromises.push(this.jvbJingleSession.addTrackAsUnmute(track));\r\n    } else {\r\n        logger.info(\r\n            'Add local MediaStream as unmute -'\r\n                + ' no JVB Jingle session started yet');\r\n    }\r\n\r\n    if (this.p2pJingleSession) {\r\n        addAsUnmutePromises.push(this.p2pJingleSession.addTrackAsUnmute(track));\r\n    } else {\r\n        logger.info(\r\n            'Add local MediaStream as unmute -'\r\n                + ' no P2P Jingle session started yet');\r\n    }\r\n\r\n    return Promise.all(addAsUnmutePromises);\r\n};\r\n\r\n/**\r\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to remove\r\n * the underlying WebRTC MediaStream from the PeerConnection. The purpose of\r\n * that is to stop sending any data and turn off the HW camera device.\r\n * @param {JitsiLocalTrack} track the local track that will be removed.\r\n * @return {Promise}\r\n */\r\nJitsiConference.prototype._removeLocalTrackAsMute = function(track) {\r\n    const removeAsMutePromises = [];\r\n\r\n    if (this.jvbJingleSession) {\r\n        removeAsMutePromises.push(\r\n            this.jvbJingleSession.removeTrackAsMute(track));\r\n    } else {\r\n        logger.info(\r\n            'Remove local MediaStream - no JVB JingleSession started yet');\r\n    }\r\n    if (this.p2pJingleSession) {\r\n        removeAsMutePromises.push(\r\n            this.p2pJingleSession.removeTrackAsMute(track));\r\n    } else {\r\n        logger.info(\r\n            'Remove local MediaStream - no P2P JingleSession started yet');\r\n    }\r\n\r\n    return Promise.all(removeAsMutePromises);\r\n};\r\n\r\n/**\r\n * Get role of the local user.\r\n * @returns {string} user role: 'moderator' or 'none'\r\n */\r\nJitsiConference.prototype.getRole = function() {\r\n    return this.room.role;\r\n};\r\n\r\n/**\r\n * Returns whether or not the current conference has been joined as a hidden\r\n * user.\r\n *\r\n * @returns {boolean|null} True if hidden, false otherwise. Will return null if\r\n * no connection is active.\r\n */\r\nJitsiConference.prototype.isHidden = function() {\r\n    if (!this.connection) {\r\n        return null;\r\n    }\r\n\r\n    return Strophe.getDomainFromJid(this.connection.getJid())\r\n        === this.options.config.hiddenDomain;\r\n};\r\n\r\n/**\r\n * Check if local user is moderator.\r\n * @returns {boolean|null} true if local user is moderator, false otherwise. If\r\n * we're no longer in the conference room then <tt>null</tt> is returned.\r\n */\r\nJitsiConference.prototype.isModerator = function() {\r\n    return this.room ? this.room.isModerator() : null;\r\n};\r\n\r\n/**\r\n * Set password for the room.\r\n * @param {string} password new password for the room.\r\n * @returns {Promise}\r\n */\r\nJitsiConference.prototype.lock = function(password) {\r\n    if (!this.isModerator()) {\r\n        return Promise.reject(new Error('You are not moderator.'));\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        this.room.lockRoom(\r\n            password || '',\r\n            () => resolve(),\r\n            err => reject(err),\r\n            () => reject(JitsiConferenceErrors.PASSWORD_NOT_SUPPORTED));\r\n    });\r\n};\r\n\r\n/**\r\n * Remove password from the room.\r\n * @returns {Promise}\r\n */\r\nJitsiConference.prototype.unlock = function() {\r\n    return this.lock();\r\n};\r\n\r\n/**\r\n * Elects the participant with the given id to be the selected participant in\r\n * order to receive higher video quality (if simulcast is enabled).\r\n * Or cache it if channel is not created and send it once channel is available.\r\n * @param participantId the identifier of the participant\r\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\r\n * @returns {void}\r\n */\r\nJitsiConference.prototype.selectParticipant = function(participantId) {\r\n    this.selectParticipants([ participantId ]);\r\n};\r\n\r\n/*\r\n * Elects participants with given ids to be the selected participants in order\r\n * to receive higher video quality (if simulcast is enabled). The argument\r\n * should be an array of participant id strings or an empty array; an error will\r\n * be thrown if a non-array is passed in. The error is thrown as a layer of\r\n * protection against passing an invalid argument, as the error will happen in\r\n * the bridge and may not be visible in the client.\r\n *\r\n * @param {Array<strings>} participantIds - An array of identifiers for\r\n * participants.\r\n * @returns {void}\r\n */\r\nJitsiConference.prototype.selectParticipants = function(participantIds) {\r\n    if (!Array.isArray(participantIds)) {\r\n        throw new Error('Invalid argument; participantIds must be an array.');\r\n    }\r\n\r\n    this.rtc.selectEndpoints(participantIds);\r\n};\r\n\r\n/**\r\n * Elects the participant with the given id to be the pinned participant in\r\n * order to always receive video for this participant (even when last n is\r\n * enabled).\r\n * @param participantId the identifier of the participant\r\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\r\n */\r\nJitsiConference.prototype.pinParticipant = function(participantId) {\r\n    this.rtc.pinEndpoint(participantId);\r\n};\r\n\r\n/**\r\n * Obtains the current value for \"lastN\". See {@link setLastN} for more info.\r\n * @returns {number}\r\n */\r\nJitsiConference.prototype.getLastN = function() {\r\n    return this.rtc.getLastN();\r\n};\r\n\r\n/**\r\n * Selects a new value for \"lastN\". The requested amount of videos are going\r\n * to be delivered after the value is in effect. Set to -1 for unlimited or\r\n * all available videos.\r\n * @param lastN the new number of videos the user would like to receive.\r\n * @throws Error or RangeError if the given value is not a number or is smaller\r\n * than -1.\r\n */\r\nJitsiConference.prototype.setLastN = function(lastN) {\r\n    if (!Number.isInteger(lastN) && !Number.parseInt(lastN, 10)) {\r\n        throw new Error(`Invalid value for lastN: ${lastN}`);\r\n    }\r\n    const n = Number(lastN);\r\n\r\n    if (n < -1) {\r\n        throw new RangeError('lastN cannot be smaller than -1');\r\n    }\r\n    this.rtc.setLastN(n);\r\n\r\n    // If the P2P session is not fully established yet, we wait until it gets\r\n    // established.\r\n    if (this.p2pJingleSession) {\r\n        const isVideoActive = n !== 0;\r\n\r\n        this.p2pJingleSession\r\n            .setMediaTransferActive(true, isVideoActive)\r\n            .catch(error => {\r\n                logger.error(\r\n                    `Failed to adjust video transfer status (${isVideoActive})`,\r\n                    error);\r\n            });\r\n    }\r\n};\r\n\r\n/**\r\n * Checks if the participant given by participantId is currently included in\r\n * the last N.\r\n * @param {string} participantId the identifier of the participant we would\r\n * like to check.\r\n * @return {boolean} true if the participant with id is in the last N set or\r\n * if there's no last N set, false otherwise.\r\n * @deprecated this method should never be used to figure out the UI, but\r\n * {@link ParticipantConnectionStatus} should be used instead.\r\n */\r\nJitsiConference.prototype.isInLastN = function(participantId) {\r\n    return this.rtc.isInLastN(participantId);\r\n};\r\n\r\n/**\r\n * @return Array<JitsiParticipant> an array of all participants in this\r\n * conference.\r\n */\r\nJitsiConference.prototype.getParticipants = function() {\r\n    return Object.keys(this.participants).map(function(key) {\r\n        return this.participants[key];\r\n    }, this);\r\n};\r\n\r\n/**\r\n * Returns the number of participants in the conference, including the local\r\n * participant.\r\n * @param countHidden {boolean} Whether or not to include hidden participants\r\n * in the count. Default: false.\r\n **/\r\nJitsiConference.prototype.getParticipantCount\r\n    = function(countHidden = false) {\r\n\r\n        let participants = this.getParticipants();\r\n\r\n        if (!countHidden) {\r\n            participants = participants.filter(p => !p.isHidden());\r\n        }\r\n\r\n        // Add one for the local participant.\r\n        return participants.length + 1;\r\n    };\r\n\r\n/**\r\n * @returns {JitsiParticipant} the participant in this conference with the\r\n * specified id (or undefined if there isn't one).\r\n * @param id the id of the participant.\r\n */\r\nJitsiConference.prototype.getParticipantById = function(id) {\r\n    return this.participants[id];\r\n};\r\n\r\n/**\r\n * Kick participant from this conference.\r\n * @param {string} id id of the participant to kick\r\n */\r\nJitsiConference.prototype.kickParticipant = function(id) {\r\n    const participant = this.getParticipantById(id);\r\n\r\n    if (!participant) {\r\n        return;\r\n    }\r\n    this.room.kick(participant.getJid());\r\n};\r\n\r\n/**\r\n * Maybe clears the timeout which emits {@link ACTION_JINGLE_SI_TIMEOUT}\r\n * analytics event.\r\n * @private\r\n */\r\nJitsiConference.prototype._maybeClearSITimeout = function() {\r\n    if (this._sessionInitiateTimeout\r\n            && (this.jvbJingleSession || this.getParticipantCount() < 2)) {\r\n        window.clearTimeout(this._sessionInitiateTimeout);\r\n        this._sessionInitiateTimeout = null;\r\n    }\r\n};\r\n\r\n/**\r\n * Sets a timeout which will emit {@link ACTION_JINGLE_SI_TIMEOUT} analytics\r\n * event.\r\n * @private\r\n */\r\nJitsiConference.prototype._maybeSetSITimeout = function() {\r\n    // Jicofo is supposed to invite if there are at least 2 participants\r\n    if (!this.jvbJingleSession\r\n            && this.getParticipantCount() >= 2\r\n            && !this._sessionInitiateTimeout) {\r\n        this._sessionInitiateTimeout = window.setTimeout(() => {\r\n            this._sessionInitiateTimeout = null;\r\n            Statistics.sendAnalytics(createJingleEvent(\r\n                ACTION_JINGLE_SI_TIMEOUT,\r\n                {\r\n                    p2p: false,\r\n                    value: JINGLE_SI_TIMEOUT\r\n                }));\r\n        }, JINGLE_SI_TIMEOUT);\r\n    }\r\n};\r\n\r\n/**\r\n * Mutes a participant.\r\n * @param {string} id The id of the participant to mute.\r\n */\r\nJitsiConference.prototype.muteParticipant = function(id) {\r\n    const participant = this.getParticipantById(id);\r\n\r\n    if (!participant) {\r\n        return;\r\n    }\r\n    this.room.muteParticipant(participant.getJid(), true);\r\n};\r\n\r\n/* eslint-disable max-params */\r\n\r\n/**\r\n * Notifies this JitsiConference that a new member has joined its chat room.\r\n *\r\n * FIXME This should NOT be exposed!\r\n *\r\n * @param jid the jid of the participant in the MUC\r\n * @param nick the display name of the participant\r\n * @param role the role of the participant in the MUC\r\n * @param isHidden indicates if this is a hidden participant (system\r\n * participant for example a recorder).\r\n * @param statsID the participant statsID (optional)\r\n * @param status the initial status if any\r\n * @param identity the member identity, if any\r\n * @param botType the member botType, if any\r\n */\r\nJitsiConference.prototype.onMemberJoined = function(\r\n        jid, nick, role, isHidden, statsID, status, identity, botType) {\r\n    const id = Strophe.getResourceFromJid(jid);\r\n\r\n    if (id === 'focus' || this.myUserId() === id) {\r\n        return;\r\n    }\r\n\r\n    const participant\r\n        = new JitsiParticipant(jid, this, nick, isHidden, statsID, status, identity);\r\n\r\n    participant._role = role;\r\n    participant._botType = botType;\r\n    this.participants[id] = participant;\r\n    this.eventEmitter.emit(\r\n        JitsiConferenceEvents.USER_JOINED,\r\n        id,\r\n        participant);\r\n\r\n    this._updateFeatures(participant);\r\n\r\n    this._maybeStartOrStopP2P();\r\n    this._maybeSetSITimeout();\r\n};\r\n\r\n/* eslint-enable max-params */\r\n\r\n/**\r\n * Updates features for a participant.\r\n * @param {JitsiParticipant} participant - The participant to query for features.\r\n * @returns {void}\r\n * @private\r\n */\r\nJitsiConference.prototype._updateFeatures = function(participant) {\r\n    participant.getFeatures()\r\n        .then(features => {\r\n            participant._supportsDTMF = features.has('urn:xmpp:jingle:dtmf:0');\r\n            this.updateDTMFSupport();\r\n\r\n            if (features.has('http://jitsi.org/protocol/jigasi')) {\r\n                participant.setProperty('features_jigasi', true);\r\n            }\r\n\r\n            if (features.has('https://jitsi.org/meet/e2ee')) {\r\n                participant.setProperty('features_e2ee', true);\r\n            }\r\n        })\r\n        .catch(() => false);\r\n};\r\n\r\n/**\r\n * Get notified when member bot type had changed.\r\n * @param jid the member jid\r\n * @param botType the new botType value\r\n * @private\r\n */\r\nJitsiConference.prototype._onMemberBotTypeChanged = function(jid, botType) {\r\n\r\n    // find the participant and mark it as non bot, as the real one will join\r\n    // in a moment\r\n    const peers = this.getParticipants();\r\n    const botParticipant = peers.find(p => p.getJid() === jid);\r\n\r\n    if (botParticipant) {\r\n        botParticipant._botType = botType;\r\n        const id = Strophe.getResourceFromJid(jid);\r\n\r\n        this.eventEmitter.emit(\r\n            JitsiConferenceEvents.BOT_TYPE_CHANGED,\r\n            id,\r\n            botType);\r\n    }\r\n\r\n    // if botType changed to undefined, botType was removed, in case of\r\n    // poltergeist mode this is the moment when the poltergeist had exited and\r\n    // the real participant had already replaced it.\r\n    // In this case we can check and try p2p\r\n    if (!botParticipant._botType) {\r\n        this._maybeStartOrStopP2P();\r\n    }\r\n};\r\n\r\nJitsiConference.prototype.onMemberLeft = function(jid) {\r\n    const id = Strophe.getResourceFromJid(jid);\r\n\r\n    if (id === 'focus' || this.myUserId() === id) {\r\n        return;\r\n    }\r\n\r\n    const participant = this.participants[id];\r\n\r\n    delete this.participants[id];\r\n\r\n    const removedTracks = this.rtc.removeRemoteTracks(id);\r\n\r\n    removedTracks.forEach(\r\n        track =>\r\n            this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track));\r\n\r\n    // there can be no participant in case the member that left is focus\r\n    if (participant) {\r\n        this.eventEmitter.emit(\r\n            JitsiConferenceEvents.USER_LEFT, id, participant);\r\n    }\r\n\r\n    this._maybeStartOrStopP2P(true /* triggered by user left event */);\r\n    this._maybeClearSITimeout();\r\n};\r\n\r\n/**\r\n * Designates an event indicating that we were kicked from the XMPP MUC.\r\n * @param {boolean} isSelfPresence - whether it is for local participant\r\n * or another participant.\r\n * @param {string} actorId - the id of the participant who was initiator\r\n * of the kick.\r\n * @param {string?} kickedParticipantId - when it is not a kick for local participant,\r\n * this is the id of the participant which was kicked.\r\n */\r\nJitsiConference.prototype.onMemberKicked = function(isSelfPresence, actorId, kickedParticipantId) {\r\n    const actorParticipant = this.participants[actorId];\r\n\r\n    if (isSelfPresence) {\r\n        this.eventEmitter.emit(\r\n            JitsiConferenceEvents.KICKED, actorParticipant);\r\n\r\n        this.leave();\r\n\r\n        return;\r\n    }\r\n\r\n    const kickedParticipant = this.participants[kickedParticipantId];\r\n\r\n    this.eventEmitter.emit(\r\n        JitsiConferenceEvents.PARTICIPANT_KICKED, actorParticipant, kickedParticipant);\r\n};\r\n\r\n/**\r\n * Method called on local MUC role change.\r\n * @param {string} role the name of new user's role as defined by XMPP MUC.\r\n */\r\nJitsiConference.prototype.onLocalRoleChanged = function(role) {\r\n    // Emit role changed for local  JID\r\n    this.eventEmitter.emit(\r\n        JitsiConferenceEvents.USER_ROLE_CHANGED, this.myUserId(), role);\r\n};\r\n\r\nJitsiConference.prototype.onUserRoleChanged = function(jid, role) {\r\n    const id = Strophe.getResourceFromJid(jid);\r\n    const participant = this.getParticipantById(id);\r\n\r\n    if (!participant) {\r\n        return;\r\n    }\r\n    participant._role = role;\r\n    this.eventEmitter.emit(JitsiConferenceEvents.USER_ROLE_CHANGED, id, role);\r\n};\r\n\r\nJitsiConference.prototype.onDisplayNameChanged = function(jid, displayName) {\r\n    const id = Strophe.getResourceFromJid(jid);\r\n    const participant = this.getParticipantById(id);\r\n\r\n    if (!participant) {\r\n        return;\r\n    }\r\n\r\n    if (participant._displayName === displayName) {\r\n        return;\r\n    }\r\n\r\n    participant._displayName = displayName;\r\n    this.eventEmitter.emit(\r\n        JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\r\n        id,\r\n        displayName);\r\n};\r\n\r\n/**\r\n * Notifies this JitsiConference that a JitsiRemoteTrack was added into\r\n * the conference.\r\n *\r\n * @param {JitsiRemoteTrack} track the JitsiRemoteTrack which was added to this\r\n * JitsiConference\r\n */\r\nJitsiConference.prototype.onRemoteTrackAdded = function(track) {\r\n    if (track.isP2P && !this.isP2PActive()) {\r\n        logger.info(\r\n            'Trying to add remote P2P track, when not in P2P - IGNORED');\r\n\r\n        return;\r\n    } else if (!track.isP2P && this.isP2PActive()) {\r\n        logger.info(\r\n            'Trying to add remote JVB track, when in P2P - IGNORED');\r\n\r\n        return;\r\n    }\r\n\r\n    // Setup E2EE handling, if supported.\r\n    this._setupReceiverE2EEForTrack(track);\r\n\r\n    const id = track.getParticipantId();\r\n    const participant = this.getParticipantById(id);\r\n\r\n    if (!participant) {\r\n        logger.error(`No participant found for id: ${id}`);\r\n\r\n        return;\r\n    }\r\n\r\n    // Add track to JitsiParticipant.\r\n    participant._tracks.push(track);\r\n\r\n    if (this.transcriber) {\r\n        this.transcriber.addTrack(track);\r\n    }\r\n\r\n    const emitter = this.eventEmitter;\r\n\r\n    track.addEventListener(\r\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\r\n        () => emitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track));\r\n    track.addEventListener(\r\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\r\n        (audioLevel, tpc) => {\r\n            const activeTPC = this.getActivePeerConnection();\r\n\r\n            if (activeTPC === tpc) {\r\n                emitter.emit(\r\n                    JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\r\n                    id,\r\n                    audioLevel);\r\n            }\r\n        }\r\n    );\r\n\r\n    emitter.emit(JitsiConferenceEvents.TRACK_ADDED, track);\r\n};\r\n\r\n/**\r\n * Callback called by the Jingle plugin when 'session-answer' is received.\r\n * @param {JingleSessionPC} session the Jingle session for which an answer was\r\n * received.\r\n * @param {jQuery} answer a jQuery selector pointing to 'jingle' IQ element\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nJitsiConference.prototype.onCallAccepted = function(session, answer) {\r\n    if (this.p2pJingleSession === session) {\r\n        logger.info('P2P setAnswer');\r\n\r\n        // Setup E2EE.\r\n        const localTracks = this.getLocalTracks();\r\n\r\n        for (const track of localTracks) {\r\n            this._setupSenderE2EEForTrack(session, track);\r\n        }\r\n\r\n        this.p2pJingleSession.setAnswer(answer);\r\n    }\r\n};\r\n\r\n/**\r\n * Callback called by the Jingle plugin when 'transport-info' is received.\r\n * @param {JingleSessionPC} session the Jingle session for which the IQ was\r\n * received\r\n * @param {jQuery} transportInfo a jQuery selector pointing to 'jingle' IQ\r\n * element\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nJitsiConference.prototype.onTransportInfo = function(session, transportInfo) {\r\n    if (this.p2pJingleSession === session) {\r\n        logger.info('P2P addIceCandidates');\r\n        this.p2pJingleSession.addIceCandidates(transportInfo);\r\n    }\r\n};\r\n\r\n/**\r\n * Notifies this JitsiConference that a JitsiRemoteTrack was removed from\r\n * the conference.\r\n *\r\n * @param {JitsiRemoteTrack} removedTrack\r\n */\r\nJitsiConference.prototype.onRemoteTrackRemoved = function(removedTrack) {\r\n    this.getParticipants().forEach(participant => {\r\n        const tracks = participant.getTracks();\r\n\r\n        for (let i = 0; i < tracks.length; i++) {\r\n            if (tracks[i] === removedTrack) {\r\n                // Since the tracks have been compared and are\r\n                // considered equal the result of splice can be ignored.\r\n                participant._tracks.splice(i, 1);\r\n\r\n                this.eventEmitter.emit(\r\n                    JitsiConferenceEvents.TRACK_REMOVED, removedTrack);\r\n\r\n                if (this.transcriber) {\r\n                    this.transcriber.removeTrack(removedTrack);\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n    }, this);\r\n};\r\n\r\n/**\r\n * Handles an incoming call event for the P2P jingle session.\r\n */\r\nJitsiConference.prototype._onIncomingCallP2P = function(\r\n        jingleSession,\r\n        jingleOffer) {\r\n\r\n    let rejectReason;\r\n\r\n    if (!browser.supportsP2P()) {\r\n        rejectReason = {\r\n            reason: 'unsupported-applications',\r\n            reasonDescription: 'P2P not supported',\r\n            errorMsg: 'This client does not support P2P connections'\r\n        };\r\n    } else if (!this.isP2PEnabled() && !this.isP2PTestModeEnabled()) {\r\n        rejectReason = {\r\n            reason: 'decline',\r\n            reasonDescription: 'P2P disabled',\r\n            errorMsg: 'P2P mode disabled in the configuration'\r\n        };\r\n    } else if (this.p2pJingleSession) {\r\n        // Reject incoming P2P call (already in progress)\r\n        rejectReason = {\r\n            reason: 'busy',\r\n            reasonDescription: 'P2P already in progress',\r\n            errorMsg: 'Duplicated P2P \"session-initiate\"'\r\n        };\r\n    } else if (!this._shouldBeInP2PMode()) {\r\n        rejectReason = {\r\n            reason: 'decline',\r\n            reasonDescription: 'P2P requirements not met',\r\n            errorMsg: 'Received P2P \"session-initiate\" when should not be in P2P mode'\r\n        };\r\n        Statistics.sendAnalytics(createJingleEvent(ACTION_P2P_DECLINED));\r\n    }\r\n\r\n    if (rejectReason) {\r\n        this._rejectIncomingCall(jingleSession, rejectReason);\r\n    } else {\r\n        this._acceptP2PIncomingCall(jingleSession, jingleOffer);\r\n    }\r\n};\r\n\r\n/**\r\n * Handles an incoming call event.\r\n */\r\nJitsiConference.prototype.onIncomingCall = function(\r\n        jingleSession,\r\n        jingleOffer,\r\n        now) {\r\n    // Handle incoming P2P call\r\n    if (jingleSession.isP2P) {\r\n        this._onIncomingCallP2P(jingleSession, jingleOffer);\r\n    } else {\r\n        if (!this.room.isFocus(jingleSession.remoteJid)) {\r\n            const description = 'Rejecting session-initiate from non-focus.';\r\n\r\n            this._rejectIncomingCall(\r\n                jingleSession, {\r\n                    reason: 'security-error',\r\n                    reasonDescription: description,\r\n                    errorMsg: description\r\n                });\r\n\r\n            return;\r\n        }\r\n        this._acceptJvbIncomingCall(jingleSession, jingleOffer, now);\r\n    }\r\n};\r\n\r\n/**\r\n * Accepts an incoming call event for the JVB jingle session.\r\n */\r\nJitsiConference.prototype._acceptJvbIncomingCall = function(\r\n        jingleSession,\r\n        jingleOffer,\r\n        now) {\r\n\r\n    // Accept incoming call\r\n    this.jvbJingleSession = jingleSession;\r\n    this.room.connectionTimes['session.initiate'] = now;\r\n    this._sendConferenceJoinAnalyticsEvent();\r\n\r\n    if (this.wasStopped) {\r\n        Statistics.sendAnalyticsAndLog(\r\n            createJingleEvent(ACTION_JINGLE_RESTART, { p2p: false }));\r\n    }\r\n\r\n    const serverRegion\r\n        = $(jingleOffer)\r\n            .find('>bridge-session[xmlns=\"http://jitsi.org/protocol/focus\"]')\r\n            .attr('region');\r\n\r\n    this.eventEmitter.emit(\r\n        JitsiConferenceEvents.SERVER_REGION_CHANGED,\r\n        serverRegion);\r\n\r\n    this._maybeClearSITimeout();\r\n    Statistics.sendAnalytics(createJingleEvent(\r\n        ACTION_JINGLE_SI_RECEIVED,\r\n        {\r\n            p2p: false,\r\n            value: now\r\n        }));\r\n\r\n    try {\r\n        jingleSession.initialize(this.room, this.rtc, this.options.config);\r\n    } catch (error) {\r\n        GlobalOnErrorHandler.callErrorHandler(error);\r\n    }\r\n\r\n    // Open a channel with the videobridge.\r\n    this._setBridgeChannel(jingleOffer, jingleSession.peerconnection);\r\n\r\n    // Add local tracks to the session\r\n    const localTracks = this.getLocalTracks();\r\n\r\n    try {\r\n        jingleSession.acceptOffer(\r\n            jingleOffer,\r\n            () => {\r\n                // If for any reason invite for the JVB session arrived after\r\n                // the P2P has been established already the media transfer needs\r\n                // to be turned off here.\r\n                if (this.isP2PActive() && this.jvbJingleSession) {\r\n                    this._suspendMediaTransferForJvbConnection();\r\n                }\r\n\r\n                // Setup E2EE.\r\n                for (const track of localTracks) {\r\n                    this._setupSenderE2EEForTrack(jingleSession, track);\r\n                }\r\n            },\r\n            error => {\r\n                GlobalOnErrorHandler.callErrorHandler(error);\r\n                logger.error(\r\n                    'Failed to accept incoming Jingle session', error);\r\n            },\r\n            localTracks\r\n        );\r\n\r\n        // Start callstats as soon as peerconnection is initialized,\r\n        // do not wait for XMPPEvents.PEERCONNECTION_READY, as it may never\r\n        // happen in case if user doesn't have or denied permission to\r\n        // both camera and microphone.\r\n        logger.info('Starting CallStats for JVB connection...');\r\n        this.statistics.startCallStats(\r\n            this.jvbJingleSession.peerconnection,\r\n            'jitsi' /* Remote user ID for JVB is 'jitsi' */);\r\n        this.statistics.startRemoteStats(this.jvbJingleSession.peerconnection);\r\n    } catch (e) {\r\n        GlobalOnErrorHandler.callErrorHandler(e);\r\n        logger.error(e);\r\n    }\r\n};\r\n\r\n/**\r\n * Sets the BridgeChannel.\r\n *\r\n * @param {jQuery} offerIq a jQuery selector pointing to the jingle element of\r\n * the offer IQ which may carry the WebSocket URL for the 'websocket'\r\n * BridgeChannel mode.\r\n * @param {TraceablePeerConnection} pc the peer connection which will be used\r\n * to listen for new WebRTC Data Channels (in the 'datachannel' mode).\r\n */\r\nJitsiConference.prototype._setBridgeChannel = function(offerIq, pc) {\r\n    let wsUrl = null;\r\n    const webSocket\r\n        = $(offerIq)\r\n            .find('>content>transport>web-socket')\r\n            .first();\r\n\r\n    if (webSocket.length === 1) {\r\n        wsUrl = webSocket[0].getAttribute('url');\r\n    }\r\n\r\n    let bridgeChannelType;\r\n\r\n    switch (this.options.config.openBridgeChannel) {\r\n    case 'datachannel':\r\n    case true:\r\n    case undefined:\r\n        bridgeChannelType = 'datachannel';\r\n        break;\r\n    case 'websocket':\r\n        bridgeChannelType = 'websocket';\r\n        break;\r\n    }\r\n\r\n    if (bridgeChannelType === 'datachannel') {\r\n        this.rtc.initializeBridgeChannel(pc, null);\r\n    } else if (bridgeChannelType === 'websocket' && wsUrl) {\r\n        this.rtc.initializeBridgeChannel(null, wsUrl);\r\n    }\r\n};\r\n\r\n/**\r\n * Rejects incoming Jingle call.\r\n * @param {JingleSessionPC} jingleSession the session instance to be rejected.\r\n * @param {object} [options]\r\n * @param {string} options.reason the name of the reason element as defined\r\n * by Jingle\r\n * @param {string} options.reasonDescription the reason description which will\r\n * be included in Jingle 'session-terminate' message.\r\n * @param {string} options.errorMsg an error message to be logged on global\r\n * error handler\r\n * @private\r\n */\r\nJitsiConference.prototype._rejectIncomingCall = function(\r\n        jingleSession,\r\n        options) {\r\n    if (options && options.errorMsg) {\r\n        GlobalOnErrorHandler.callErrorHandler(new Error(options.errorMsg));\r\n    }\r\n\r\n    // Terminate the jingle session with a reason\r\n    jingleSession.terminate(\r\n        null /* success callback => we don't care */,\r\n        error => {\r\n            logger.warn(\r\n                'An error occurred while trying to terminate'\r\n                    + ' invalid Jingle session', error);\r\n        }, {\r\n            reason: options && options.reason,\r\n            reasonDescription: options && options.reasonDescription,\r\n            sendSessionTerminate: true\r\n        });\r\n};\r\n\r\n/**\r\n * Handles the call ended event.\r\n * XXX is this due to the remote side terminating the Jingle session?\r\n *\r\n * @param {JingleSessionPC} jingleSession the jingle session which has been\r\n * terminated.\r\n * @param {String} reasonCondition the Jingle reason condition.\r\n * @param {String|null} reasonText human readable reason text which may provide\r\n * more details about why the call has been terminated.\r\n */\r\nJitsiConference.prototype.onCallEnded = function(\r\n        jingleSession,\r\n        reasonCondition,\r\n        reasonText) {\r\n    logger.info(\r\n        `Call ended: ${reasonCondition} - ${reasonText} P2P ?${\r\n            jingleSession.isP2P}`);\r\n    if (jingleSession === this.jvbJingleSession) {\r\n        this.wasStopped = true;\r\n\r\n        Statistics.sendAnalytics(\r\n            createJingleEvent(ACTION_JINGLE_TERMINATE, { p2p: false }));\r\n\r\n        // Stop the stats\r\n        if (this.statistics) {\r\n            this.statistics.stopRemoteStats(\r\n                this.jvbJingleSession.peerconnection);\r\n            logger.info('Stopping JVB CallStats');\r\n            this.statistics.stopCallStats(\r\n                this.jvbJingleSession.peerconnection);\r\n        }\r\n\r\n        // Current JVB JingleSession is no longer valid, so set it to null\r\n        this.jvbJingleSession = null;\r\n\r\n        // Let the RTC service do any cleanups\r\n        this.rtc.onCallEnded();\r\n    } else if (jingleSession === this.p2pJingleSession) {\r\n        // It's the responder who decides to enforce JVB mode, so that both\r\n        // initiator and responder are aware if it was intentional.\r\n        if (reasonCondition === 'decline' && reasonText === 'force JVB121') {\r\n            logger.info('In forced JVB 121 mode...');\r\n            Statistics.analytics.addPermanentProperties({ forceJvb121: true });\r\n        } else if (reasonCondition === 'connectivity-error'\r\n            && reasonText === 'ICE FAILED') {\r\n            // It can happen that the other peer detects ICE failed and\r\n            // terminates the session, before we get the event on our side.\r\n            // But we are able to parse the reason and mark it here.\r\n            Statistics.analytics.addPermanentProperties({ p2pFailed: true });\r\n        }\r\n        this._stopP2PSession();\r\n    } else {\r\n        logger.error(\r\n            'Received onCallEnded for invalid session',\r\n            jingleSession.sid,\r\n            jingleSession.remoteJid,\r\n            reasonCondition,\r\n            reasonText);\r\n    }\r\n};\r\n\r\n/**\r\n * Handles the suspend detected event. Leaves the room and fires suspended.\r\n * @param {JingleSessionPC} jingleSession\r\n */\r\nJitsiConference.prototype.onSuspendDetected = function(jingleSession) {\r\n    if (!jingleSession.isP2P) {\r\n        this.leave();\r\n        this.eventEmitter.emit(JitsiConferenceEvents.SUSPEND_DETECTED);\r\n    }\r\n};\r\n\r\nJitsiConference.prototype.updateDTMFSupport = function() {\r\n    let somebodySupportsDTMF = false;\r\n    const participants = this.getParticipants();\r\n\r\n    // check if at least 1 participant supports DTMF\r\n    for (let i = 0; i < participants.length; i += 1) {\r\n        if (participants[i].supportsDTMF()) {\r\n            somebodySupportsDTMF = true;\r\n            break;\r\n        }\r\n    }\r\n    if (somebodySupportsDTMF !== this.somebodySupportsDTMF) {\r\n        this.somebodySupportsDTMF = somebodySupportsDTMF;\r\n        this.eventEmitter.emit(\r\n            JitsiConferenceEvents.DTMF_SUPPORT_CHANGED,\r\n            somebodySupportsDTMF);\r\n    }\r\n};\r\n\r\n/**\r\n * Allows to check if there is at least one user in the conference\r\n * that supports DTMF.\r\n * @returns {boolean} true if somebody supports DTMF, false otherwise\r\n */\r\nJitsiConference.prototype.isDTMFSupported = function() {\r\n    return this.somebodySupportsDTMF;\r\n};\r\n\r\n/**\r\n * Returns the local user's ID\r\n * @return {string} local user's ID\r\n */\r\nJitsiConference.prototype.myUserId = function() {\r\n    return (\r\n        this.room && this.room.myroomjid\r\n            ? Strophe.getResourceFromJid(this.room.myroomjid)\r\n            : null);\r\n};\r\n\r\nJitsiConference.prototype.sendTones = function(tones, duration, pause) {\r\n    const peerConnection = this.getActivePeerConnection();\r\n\r\n    if (peerConnection) {\r\n        peerConnection.sendTones(tones, duration, pause);\r\n    } else {\r\n        logger.warn('cannot sendTones: no peer connection');\r\n    }\r\n};\r\n\r\n/**\r\n * Starts recording the current conference.\r\n *\r\n * @param {Object} options - Configuration for the recording. See\r\n * {@link Chatroom#startRecording} for more info.\r\n * @returns {Promise} See {@link Chatroom#startRecording} for more info.\r\n */\r\nJitsiConference.prototype.startRecording = function(options) {\r\n    if (this.room) {\r\n        return this.recordingManager.startRecording(options);\r\n    }\r\n\r\n    return Promise.reject(new Error('The conference is not created yet!'));\r\n};\r\n\r\n/**\r\n * Stop a recording session.\r\n *\r\n * @param {string} sessionID - The ID of the recording session that\r\n * should be stopped.\r\n * @returns {Promise} See {@link Chatroom#stopRecording} for more info.\r\n */\r\nJitsiConference.prototype.stopRecording = function(sessionID) {\r\n    if (this.room) {\r\n        return this.recordingManager.stopRecording(sessionID);\r\n    }\r\n\r\n    return Promise.reject(new Error('The conference is not created yet!'));\r\n};\r\n\r\n/**\r\n * Returns true if the SIP calls are supported and false otherwise\r\n */\r\nJitsiConference.prototype.isSIPCallingSupported = function() {\r\n    if (this.room) {\r\n        return this.room.isSIPCallingSupported();\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * Dials a number.\r\n * @param number the number\r\n */\r\nJitsiConference.prototype.dial = function(number) {\r\n    if (this.room) {\r\n        return this.room.dial(number);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        reject(new Error('The conference is not created yet!'));\r\n    });\r\n};\r\n\r\n/**\r\n * Hangup an existing call\r\n */\r\nJitsiConference.prototype.hangup = function() {\r\n    if (this.room) {\r\n        return this.room.hangup();\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        reject(new Error('The conference is not created yet!'));\r\n    });\r\n};\r\n\r\n/**\r\n * Starts the transcription service.\r\n */\r\nJitsiConference.prototype.startTranscriber = function() {\r\n    return this.dial('jitsi_meet_transcribe');\r\n};\r\n\r\n\r\n/**\r\n * Stops the transcription service.\r\n */\r\nJitsiConference.prototype.stopTranscriber = JitsiConference.prototype.hangup;\r\n\r\n/**\r\n * Returns the phone number for joining the conference.\r\n */\r\nJitsiConference.prototype.getPhoneNumber = function() {\r\n    if (this.room) {\r\n        return this.room.getPhoneNumber();\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * Returns the pin for joining the conference with phone.\r\n */\r\nJitsiConference.prototype.getPhonePin = function() {\r\n    if (this.room) {\r\n        return this.room.getPhonePin();\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * Returns the meeting unique ID if any.\r\n *\r\n * @returns {string|undefined}\r\n */\r\nJitsiConference.prototype.getMeetingUniqueId = function() {\r\n    if (this.room) {\r\n        return this.room.getMeetingId();\r\n    }\r\n};\r\n\r\n/**\r\n * Will return P2P or JVB <tt>TraceablePeerConnection</tt> depending on\r\n * which connection is currently active.\r\n *\r\n * @return {TraceablePeerConnection|null} null if there isn't any active\r\n * <tt>TraceablePeerConnection</tt> currently available.\r\n * @public (FIXME how to make package local ?)\r\n */\r\nJitsiConference.prototype.getActivePeerConnection = function() {\r\n    if (this.isP2PActive()) {\r\n        return this.p2pJingleSession.peerconnection;\r\n    }\r\n\r\n    return this.jvbJingleSession ? this.jvbJingleSession.peerconnection : null;\r\n};\r\n\r\n/**\r\n * Returns the connection state for the current room. Its ice connection state\r\n * for its session.\r\n * NOTE that \"completed\" ICE state which can appear on the P2P connection will\r\n * be converted to \"connected\".\r\n * @return {string|null} ICE state name or <tt>null</tt> if there is no active\r\n * peer connection at this time.\r\n */\r\nJitsiConference.prototype.getConnectionState = function() {\r\n    const peerConnection = this.getActivePeerConnection();\r\n\r\n    return peerConnection ? peerConnection.getConnectionState() : null;\r\n};\r\n\r\n/**\r\n * Make all new participants mute their audio/video on join.\r\n * @param policy {Object} object with 2 boolean properties for video and audio:\r\n * @param {boolean} audio if audio should be muted.\r\n * @param {boolean} video if video should be muted.\r\n */\r\nJitsiConference.prototype.setStartMutedPolicy = function(policy) {\r\n    if (!this.isModerator()) {\r\n        return;\r\n    }\r\n    this.startMutedPolicy = policy;\r\n    this.room.removeFromPresence('startmuted');\r\n    this.room.addToPresence('startmuted', {\r\n        attributes: {\r\n            audio: policy.audio,\r\n            video: policy.video,\r\n            xmlns: 'http://jitsi.org/jitmeet/start-muted'\r\n        }\r\n    });\r\n    this.room.sendPresence();\r\n};\r\n\r\n/**\r\n * Returns current start muted policy\r\n * @returns {Object} with 2 properties - audio and video.\r\n */\r\nJitsiConference.prototype.getStartMutedPolicy = function() {\r\n    return this.startMutedPolicy;\r\n};\r\n\r\n/**\r\n * Check if audio is muted on join.\r\n */\r\nJitsiConference.prototype.isStartAudioMuted = function() {\r\n    return this.startAudioMuted;\r\n};\r\n\r\n/**\r\n * Check if video is muted on join.\r\n */\r\nJitsiConference.prototype.isStartVideoMuted = function() {\r\n    return this.startVideoMuted;\r\n};\r\n\r\n/**\r\n * Get object with internal logs.\r\n */\r\nJitsiConference.prototype.getLogs = function() {\r\n    const data = this.xmpp.getJingleLog();\r\n\r\n    const metadata = {};\r\n\r\n    metadata.time = new Date();\r\n    metadata.url = window.location.href;\r\n    metadata.ua = navigator.userAgent;\r\n\r\n    const log = this.xmpp.getXmppLog();\r\n\r\n    if (log) {\r\n        metadata.xmpp = log;\r\n    }\r\n\r\n    data.metadata = metadata;\r\n\r\n    return data;\r\n};\r\n\r\n/**\r\n * Returns measured connectionTimes.\r\n */\r\nJitsiConference.prototype.getConnectionTimes = function() {\r\n    return this.room.connectionTimes;\r\n};\r\n\r\n/**\r\n * Sets a property for the local participant.\r\n */\r\nJitsiConference.prototype.setLocalParticipantProperty = function(name, value) {\r\n    this.sendCommand(`jitsi_participant_${name}`, { value });\r\n};\r\n\r\n/**\r\n *  Removes a property for the local participant and sends the updated presence.\r\n */\r\nJitsiConference.prototype.removeLocalParticipantProperty = function(name) {\r\n    this.removeCommand(`jitsi_participant_${name}`);\r\n    this.room.sendPresence();\r\n};\r\n\r\n/**\r\n * Gets a local participant property.\r\n *\r\n * @return value of the local participant property if the tagName exists in the\r\n * list of properties, otherwise returns undefined.\r\n */\r\nJitsiConference.prototype.getLocalParticipantProperty = function(name) {\r\n    const property = this.room.presMap.nodes.find(prop =>\r\n        prop.tagName === `jitsi_participant_${name}`\r\n    );\r\n\r\n    return property ? property.value : undefined;\r\n};\r\n\r\n/**\r\n * Sends the given feedback through CallStats if enabled.\r\n *\r\n * @param overallFeedback an integer between 1 and 5 indicating the\r\n * user feedback\r\n * @param detailedFeedback detailed feedback from the user. Not yet used\r\n * @returns {Promise} Resolves if feedback is submitted successfully.\r\n */\r\nJitsiConference.prototype.sendFeedback = function(\r\n        overallFeedback,\r\n        detailedFeedback) {\r\n    return this.statistics.sendFeedback(overallFeedback, detailedFeedback);\r\n};\r\n\r\n/**\r\n * Returns true if the callstats integration is enabled, otherwise returns\r\n * false.\r\n *\r\n * @returns true if the callstats integration is enabled, otherwise returns\r\n * false.\r\n */\r\nJitsiConference.prototype.isCallstatsEnabled = function() {\r\n    return this.statistics.isCallstatsEnabled();\r\n};\r\n\r\n\r\n/**\r\n * Handles track attached to container (Calls associateStreamWithVideoTag method\r\n * from statistics module)\r\n * @param {JitsiLocalTrack|JitsiRemoteTrack} track the track\r\n * @param container the container\r\n */\r\nJitsiConference.prototype._onTrackAttach = function(track, container) {\r\n    const isLocal = track.isLocal();\r\n    let ssrc = null;\r\n    const isP2P = track.isP2P;\r\n    const remoteUserId = isP2P ? track.getParticipantId() : 'jitsi';\r\n    const peerConnection\r\n        = isP2P\r\n            ? this.p2pJingleSession && this.p2pJingleSession.peerconnection\r\n            : this.jvbJingleSession && this.jvbJingleSession.peerconnection;\r\n\r\n    if (isLocal) {\r\n        // Local tracks have SSRC stored on per peer connection basis\r\n        if (peerConnection) {\r\n            ssrc = peerConnection.getLocalSSRC(track);\r\n        }\r\n    } else {\r\n        ssrc = track.getSSRC();\r\n    }\r\n    if (!container.id || !ssrc || !peerConnection) {\r\n        return;\r\n    }\r\n\r\n    this.statistics.associateStreamWithVideoTag(\r\n        peerConnection,\r\n        ssrc,\r\n        isLocal,\r\n        remoteUserId,\r\n        track.getUsageLabel(),\r\n        container.id);\r\n};\r\n\r\n/**\r\n * Logs an \"application log\" message.\r\n * @param message {string} The message to log. Note that while this can be a\r\n * generic string, the convention used by lib-jitsi-meet and jitsi-meet is to\r\n * log valid JSON strings, with an \"id\" field used for distinguishing between\r\n * message types. E.g.: {id: \"recorder_status\", status: \"off\"}\r\n */\r\nJitsiConference.prototype.sendApplicationLog = function(message) {\r\n    Statistics.sendLog(message);\r\n};\r\n\r\n/**\r\n * Checks if the user identified by given <tt>mucJid</tt> is the conference\r\n * focus.\r\n * @param mucJid the full MUC address of the user to be checked.\r\n * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus,\r\n * <tt>false</tt> when is not. <tt>null</tt> if we're not in the MUC anymore and\r\n * are unable to figure out the status or if given <tt>mucJid</tt> is invalid.\r\n */\r\nJitsiConference.prototype._isFocus = function(mucJid) {\r\n    return this.room ? this.room.isFocus(mucJid) : null;\r\n};\r\n\r\n/**\r\n * Fires CONFERENCE_FAILED event with INCOMPATIBLE_SERVER_VERSIONS parameter\r\n */\r\nJitsiConference.prototype._fireIncompatibleVersionsEvent = function() {\r\n    this.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.INCOMPATIBLE_SERVER_VERSIONS);\r\n};\r\n\r\n/**\r\n * Sends a message via the data channel.\r\n * @param to {string} the id of the endpoint that should receive the message.\r\n * If \"\" the message will be sent to all participants.\r\n * @param payload {object} the payload of the message.\r\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\r\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\r\n */\r\nJitsiConference.prototype.sendEndpointMessage = function(to, payload) {\r\n    this.rtc.sendChannelMessage(to, payload);\r\n};\r\n\r\n/**\r\n * Sends a broadcast message via the data channel.\r\n * @param payload {object} the payload of the message.\r\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\r\n * @deprecated Use 'sendMessage' instead. TODO: this should be private.\r\n */\r\nJitsiConference.prototype.broadcastEndpointMessage = function(payload) {\r\n    this.sendEndpointMessage('', payload);\r\n};\r\n\r\n/**\r\n * Sends a message to a given endpoint (if 'to' is a non-empty string), or\r\n * broadcasts it to all endpoints in the conference.\r\n * @param {string} to The ID of the endpoint/participant which is to receive\r\n * the message, or '' to broadcast the message to all endpoints in the\r\n * conference.\r\n * @param {string|object} message the message to send. If this is of type\r\n * 'string' it will be sent as a chat message. If it is of type 'object', it\r\n * will be encapsulated in a format recognized by jitsi-meet and converted to\r\n * JSON before being sent.\r\n * @param {boolean} sendThroughVideobridge Whether to send the message through\r\n * jitsi-videobridge (via the COLIBRI data channel or web socket), or through\r\n * the XMPP MUC. Currently only objects can be sent through jitsi-videobridge.\r\n */\r\nJitsiConference.prototype.sendMessage = function(\r\n        message,\r\n        to = '',\r\n        sendThroughVideobridge = false) {\r\n    const messageType = typeof message;\r\n\r\n    // Through videobridge we support only objects. Through XMPP we support\r\n    // objects (encapsulated in a specific JSON format) and strings (i.e.\r\n    // regular chat messages).\r\n    if (messageType !== 'object'\r\n            && (sendThroughVideobridge || messageType !== 'string')) {\r\n        logger.error(`Can not send a message of type ${messageType}`);\r\n\r\n        return;\r\n    }\r\n\r\n    if (sendThroughVideobridge) {\r\n        this.sendEndpointMessage(to, message);\r\n    } else {\r\n        let messageToSend = message;\r\n\r\n        // Name of packet extension of message stanza to send the required\r\n        // message in.\r\n        let elementName = 'body';\r\n\r\n        if (messageType === 'object') {\r\n            elementName = 'json-message';\r\n\r\n            // Mark as valid JSON message if not already\r\n            if (!messageToSend.hasOwnProperty(JITSI_MEET_MUC_TYPE)) {\r\n                messageToSend[JITSI_MEET_MUC_TYPE] = '';\r\n            }\r\n\r\n            try {\r\n                messageToSend = JSON.stringify(messageToSend);\r\n            } catch (e) {\r\n                logger.error('Can not send a message, stringify failed: ', e);\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (to) {\r\n            this.sendPrivateTextMessage(to, messageToSend, elementName);\r\n        } else {\r\n            // Broadcast\r\n            this.sendTextMessage(messageToSend, elementName);\r\n        }\r\n    }\r\n\r\n};\r\n\r\nJitsiConference.prototype.isConnectionInterrupted = function() {\r\n    return this.isP2PActive()\r\n        ? this.isP2PConnectionInterrupted : this.isJvbConnectionInterrupted;\r\n};\r\n\r\n/**\r\n * Handles {@link XMPPEvents.CONNECTION_INTERRUPTED}\r\n * @param {JingleSessionPC} session\r\n * @private\r\n */\r\nJitsiConference.prototype._onIceConnectionInterrupted = function(session) {\r\n    if (session.isP2P) {\r\n        this.isP2PConnectionInterrupted = true;\r\n    } else {\r\n        this.isJvbConnectionInterrupted = true;\r\n    }\r\n    if (session.isP2P === this.isP2PActive()) {\r\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_INTERRUPTED);\r\n    }\r\n};\r\n\r\n/**\r\n * Handles {@link XMPPEvents.CONNECTION_ICE_FAILED}\r\n * @param {JingleSessionPC} session\r\n * @private\r\n */\r\nJitsiConference.prototype._onIceConnectionFailed = function(session) {\r\n    // We do nothing for the JVB connection, because it's up to the Jicofo to\r\n    // eventually come up with the new offer (at least for the time being).\r\n    if (session.isP2P) {\r\n        // Add p2pFailed property to analytics to distinguish, between \"good\"\r\n        // and \"bad\" connection\r\n        Statistics.analytics.addPermanentProperties({ p2pFailed: true });\r\n\r\n        if (this.p2pJingleSession) {\r\n            Statistics.sendAnalyticsAndLog(\r\n                createP2PEvent(\r\n                    ACTION_P2P_FAILED,\r\n                    {\r\n                        initiator: this.p2pJingleSession.isInitiator\r\n                    }));\r\n\r\n        }\r\n        this._stopP2PSession('connectivity-error', 'ICE FAILED');\r\n    } else if (session && this.jvbJingleSession === session) {\r\n        if (this.xmpp.isPingSupported()) {\r\n            this._delayedIceFailed = new IceFailedNotification(this);\r\n            this._delayedIceFailed.start(session);\r\n        } else {\r\n            // Let Jicofo know that the JVB's ICE connection has failed\r\n            logger.info('PING not supported - sending ICE failed immediately');\r\n            session.sendIceFailedNotification();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Handles {@link XMPPEvents.CONNECTION_RESTORED}\r\n * @param {JingleSessionPC} session\r\n * @private\r\n */\r\nJitsiConference.prototype._onIceConnectionRestored = function(session) {\r\n    if (session.isP2P) {\r\n        this.isP2PConnectionInterrupted = false;\r\n    } else {\r\n        this.isJvbConnectionInterrupted = false;\r\n        this._delayedIceFailed && this._delayedIceFailed.cancel();\r\n    }\r\n\r\n    if (session.isP2P === this.isP2PActive()) {\r\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_RESTORED);\r\n    }\r\n};\r\n\r\n/**\r\n * Accept incoming P2P Jingle call.\r\n * @param {JingleSessionPC} jingleSession the session instance\r\n * @param {jQuery} jingleOffer a jQuery selector pointing to 'jingle' IQ element\r\n * @private\r\n */\r\nJitsiConference.prototype._acceptP2PIncomingCall = function(\r\n        jingleSession,\r\n        jingleOffer) {\r\n    this.isP2PConnectionInterrupted = false;\r\n\r\n    // Accept the offer\r\n    this.p2pJingleSession = jingleSession;\r\n    this._sendConferenceJoinAnalyticsEvent();\r\n\r\n    this.p2pJingleSession.initialize(this.room, this.rtc, this.options.config);\r\n\r\n    logger.info('Starting CallStats for P2P connection...');\r\n\r\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\r\n\r\n    const participant = this.participants[remoteID];\r\n\r\n    if (participant) {\r\n        remoteID = participant.getStatsID() || remoteID;\r\n    }\r\n\r\n    this.statistics.startCallStats(\r\n        this.p2pJingleSession.peerconnection,\r\n        remoteID);\r\n\r\n    const localTracks = this.getLocalTracks();\r\n\r\n    this.p2pJingleSession.acceptOffer(\r\n        jingleOffer,\r\n        () => {\r\n            logger.debug('Got RESULT for P2P \"session-accept\"');\r\n\r\n            // Setup E2EE.\r\n            for (const track of localTracks) {\r\n                this._setupSenderE2EEForTrack(jingleSession, track);\r\n            }\r\n        },\r\n        error => {\r\n            logger.error(\r\n                'Failed to accept incoming P2P Jingle session', error);\r\n        },\r\n        localTracks);\r\n};\r\n\r\n/**\r\n * Adds remote tracks to the conference associated with the JVB session.\r\n * @private\r\n */\r\nJitsiConference.prototype._addRemoteJVBTracks = function() {\r\n    this._addRemoteTracks(\r\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\r\n};\r\n\r\n/**\r\n * Adds remote tracks to the conference associated with the P2P session.\r\n * @private\r\n */\r\nJitsiConference.prototype._addRemoteP2PTracks = function() {\r\n    this._addRemoteTracks(\r\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\r\n};\r\n\r\n/**\r\n * Generates fake \"remote track added\" events for given Jingle session.\r\n * @param {string} logName the session's nickname which will appear in log\r\n * messages.\r\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be added\r\n * @private\r\n */\r\nJitsiConference.prototype._addRemoteTracks = function(logName, remoteTracks) {\r\n    for (const track of remoteTracks) {\r\n        logger.info(`Adding remote ${logName} track: ${track}`);\r\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_ADDED, track);\r\n    }\r\n};\r\n\r\n/**\r\n * Called when {@link XMPPEvents.CONNECTION_ESTABLISHED} event is\r\n * triggered for a {@link JingleSessionPC}. Switches the conference to use\r\n * the P2P connection if the event comes from the P2P session.\r\n * @param {JingleSessionPC} jingleSession the session instance.\r\n * @private\r\n */\r\nJitsiConference.prototype._onIceConnectionEstablished = function(\r\n        jingleSession) {\r\n    if (this.p2pJingleSession !== null) {\r\n        // store the establishment time of the p2p session as a field of the\r\n        // JitsiConference because the p2pJingleSession might get disposed (thus\r\n        // the value is lost).\r\n        this.p2pEstablishmentDuration\r\n            = this.p2pJingleSession.establishmentDuration;\r\n    }\r\n\r\n    if (this.jvbJingleSession !== null) {\r\n        this.jvbEstablishmentDuration\r\n            = this.jvbJingleSession.establishmentDuration;\r\n    }\r\n\r\n    let done = false;\r\n    const forceJVB121Ratio = this.options.config.forceJVB121Ratio;\r\n\r\n    // We don't care about the JVB case, there's nothing to be done\r\n    if (!jingleSession.isP2P) {\r\n        done = true;\r\n    } else if (this.p2pJingleSession !== jingleSession) {\r\n        logger.error('CONNECTION_ESTABLISHED - wrong P2P session instance ?!');\r\n\r\n        done = true;\r\n    } else if (!jingleSession.isInitiator\r\n        && typeof forceJVB121Ratio === 'number'\r\n        && Math.random() < forceJVB121Ratio) {\r\n        logger.info(`Forcing JVB 121 mode (ratio=${forceJVB121Ratio})...`);\r\n        Statistics.analytics.addPermanentProperties({ forceJvb121: true });\r\n        this._stopP2PSession('decline', 'force JVB121');\r\n\r\n        done = true;\r\n    }\r\n\r\n    if (!isNaN(this.p2pEstablishmentDuration)\r\n        && !isNaN(this.jvbEstablishmentDuration)) {\r\n        const establishmentDurationDiff\r\n            = this.p2pEstablishmentDuration - this.jvbEstablishmentDuration;\r\n\r\n        Statistics.sendAnalytics(\r\n            ICE_ESTABLISHMENT_DURATION_DIFF,\r\n            { value: establishmentDurationDiff });\r\n    }\r\n\r\n    if (jingleSession.isP2P === this.isP2PActive()) {\r\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_ESTABLISHED);\r\n    }\r\n\r\n    if (done) {\r\n\r\n        return;\r\n    }\r\n\r\n    // Update P2P status and emit events\r\n    this._setP2PStatus(true);\r\n\r\n    // Remove remote tracks\r\n    if (this.jvbJingleSession) {\r\n        this._removeRemoteJVBTracks();\r\n    } else {\r\n        logger.info('Not removing remote JVB tracks - no session yet');\r\n    }\r\n\r\n    this._addRemoteP2PTracks();\r\n\r\n    // Stop media transfer over the JVB connection\r\n    if (this.jvbJingleSession) {\r\n        this._suspendMediaTransferForJvbConnection();\r\n    }\r\n\r\n    logger.info('Starting remote stats with p2p connection');\r\n    this.statistics.startRemoteStats(this.p2pJingleSession.peerconnection);\r\n\r\n    Statistics.sendAnalyticsAndLog(\r\n        createP2PEvent(\r\n            ACTION_P2P_ESTABLISHED,\r\n            {\r\n                initiator: this.p2pJingleSession.isInitiator\r\n            }));\r\n\r\n};\r\n\r\n/**\r\n * Called when the chat room reads a new list of properties from jicofo's\r\n * presence. The properties may have changed, but they don't have to.\r\n *\r\n * @param {Object} properties - The properties keyed by the property name\r\n * ('key').\r\n * @private\r\n */\r\nJitsiConference.prototype._updateProperties = function(properties = {}) {\r\n    const changed = !isEqual(properties, this.properties);\r\n\r\n    this.properties = properties;\r\n    if (changed) {\r\n        this.eventEmitter.emit(\r\n            JitsiConferenceEvents.PROPERTIES_CHANGED,\r\n            this.properties);\r\n\r\n        // Some of the properties need to be added to analytics events.\r\n        const analyticsKeys = [\r\n\r\n            // The number of jitsi-videobridge instances currently used for the\r\n            // conference.\r\n            'bridge-count',\r\n\r\n            // The conference creation time (set by jicofo).\r\n            'created-ms',\r\n            'octo-enabled'\r\n        ];\r\n\r\n        analyticsKeys.forEach(key => {\r\n            if (properties[key] !== undefined) {\r\n                Statistics.analytics.addPermanentProperties({\r\n                    [key.replace('-', '_')]: properties[key]\r\n                });\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * Gets a conference property with a given key.\r\n *\r\n * @param {string} key - The key.\r\n * @returns {*} The value\r\n */\r\nJitsiConference.prototype.getProperty = function(key) {\r\n    return this.properties[key];\r\n};\r\n\r\n/**\r\n * Clears the deferred start P2P task if it has been scheduled.\r\n * @private\r\n */\r\nJitsiConference.prototype._maybeClearDeferredStartP2P = function() {\r\n    if (this.deferredStartP2PTask) {\r\n        logger.info('Cleared deferred start P2P task');\r\n        clearTimeout(this.deferredStartP2PTask);\r\n        this.deferredStartP2PTask = null;\r\n    }\r\n};\r\n\r\n/**\r\n * Removes from the conference remote tracks associated with the JVB\r\n * connection.\r\n * @private\r\n */\r\nJitsiConference.prototype._removeRemoteJVBTracks = function() {\r\n    this._removeRemoteTracks(\r\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\r\n};\r\n\r\n/**\r\n * Removes from the conference remote tracks associated with the P2P\r\n * connection.\r\n * @private\r\n */\r\nJitsiConference.prototype._removeRemoteP2PTracks = function() {\r\n    this._removeRemoteTracks(\r\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\r\n};\r\n\r\n/**\r\n * Generates fake \"remote track removed\" events for given Jingle session.\r\n * @param {string} sessionNickname the session's nickname which will appear in\r\n * log messages.\r\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be removed\r\n * @private\r\n */\r\nJitsiConference.prototype._removeRemoteTracks = function(\r\n        sessionNickname,\r\n        remoteTracks) {\r\n    for (const track of remoteTracks) {\r\n        logger.info(`Removing remote ${sessionNickname} track: ${track}`);\r\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_REMOVED, track);\r\n    }\r\n};\r\n\r\n/**\r\n * Resumes media transfer over the JVB connection.\r\n * @private\r\n */\r\nJitsiConference.prototype._resumeMediaTransferForJvbConnection = function() {\r\n    logger.info('Resuming media transfer over the JVB connection...');\r\n    this.jvbJingleSession.setMediaTransferActive(true, true).then(\r\n        () => {\r\n            logger.info('Resumed media transfer over the JVB connection!');\r\n        },\r\n        error => {\r\n            logger.error(\r\n                'Failed to resume media transfer over the JVB connection:',\r\n                error);\r\n        });\r\n};\r\n\r\n/**\r\n * Sets new P2P status and updates some events/states hijacked from\r\n * the <tt>JitsiConference</tt>.\r\n * @param {boolean} newStatus the new P2P status value, <tt>true</tt> means that\r\n * P2P is now in use, <tt>false</tt> means that the JVB connection is now in use\r\n * @private\r\n */\r\nJitsiConference.prototype._setP2PStatus = function(newStatus) {\r\n    if (this.p2p === newStatus) {\r\n        logger.debug(`Called _setP2PStatus with the same status: ${newStatus}`);\r\n\r\n        return;\r\n    }\r\n    this.p2p = newStatus;\r\n    if (newStatus) {\r\n        logger.info('Peer to peer connection established!');\r\n\r\n        // When we end up in a valid P2P session need to reset the properties\r\n        // in case they have persisted, after session with another peer.\r\n        Statistics.analytics.addPermanentProperties({\r\n            p2pFailed: false,\r\n            forceJvb121: false\r\n        });\r\n\r\n        // Sync up video transfer active in case p2pJingleSession not existed\r\n        // when the lastN value was being adjusted.\r\n        const isVideoActive = this.rtc.getLastN() !== 0;\r\n\r\n        this.p2pJingleSession\r\n            .setMediaTransferActive(true, isVideoActive)\r\n            .catch(error => {\r\n                logger.error(\r\n                    'Failed to sync up P2P video transfer status'\r\n                        + `(${isVideoActive})`, error);\r\n            });\r\n    } else {\r\n        logger.info('Peer to peer connection closed!');\r\n    }\r\n\r\n    // Put the JVB connection on hold/resume\r\n    if (this.jvbJingleSession) {\r\n        this.statistics.sendConnectionResumeOrHoldEvent(\r\n            this.jvbJingleSession.peerconnection, !newStatus);\r\n    }\r\n\r\n    // Clear dtmfManager, so that it can be recreated with new connection\r\n    this.dtmfManager = null;\r\n\r\n    // Update P2P status\r\n    this.eventEmitter.emit(\r\n        JitsiConferenceEvents.P2P_STATUS,\r\n        this,\r\n        this.p2p);\r\n\r\n    // Refresh connection interrupted/restored\r\n    this.eventEmitter.emit(\r\n        this.isConnectionInterrupted()\r\n            ? JitsiConferenceEvents.CONNECTION_INTERRUPTED\r\n            : JitsiConferenceEvents.CONNECTION_RESTORED);\r\n};\r\n\r\n/**\r\n * Starts new P2P session.\r\n * @param {string} remoteJid the JID of the remote participant\r\n * @private\r\n */\r\nJitsiConference.prototype._startP2PSession = function(remoteJid) {\r\n    this._maybeClearDeferredStartP2P();\r\n    if (this.p2pJingleSession) {\r\n        logger.error('P2P session already started!');\r\n\r\n        return;\r\n    }\r\n\r\n    this.isP2PConnectionInterrupted = false;\r\n    this.p2pJingleSession\r\n        = this.xmpp.connection.jingle.newP2PJingleSession(\r\n            this.room.myroomjid,\r\n            remoteJid);\r\n    logger.info(\r\n        'Created new P2P JingleSession', this.room.myroomjid, remoteJid);\r\n    this._sendConferenceJoinAnalyticsEvent();\r\n\r\n    this.p2pJingleSession.initialize(this.room, this.rtc, this.options.config);\r\n\r\n    logger.info('Starting CallStats for P2P connection...');\r\n\r\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\r\n\r\n    const participant = this.participants[remoteID];\r\n\r\n    if (participant) {\r\n        remoteID = participant.getStatsID() || remoteID;\r\n    }\r\n\r\n    this.statistics.startCallStats(\r\n        this.p2pJingleSession.peerconnection,\r\n        remoteID);\r\n\r\n    // NOTE one may consider to start P2P with the local tracks detached,\r\n    // but no data will be sent until ICE succeeds anyway. And we switch\r\n    // immediately once the P2P ICE connects.\r\n    const localTracks = this.getLocalTracks();\r\n\r\n    this.p2pJingleSession.invite(localTracks);\r\n};\r\n\r\n/**\r\n * Suspends media transfer over the JVB connection.\r\n * @private\r\n */\r\nJitsiConference.prototype._suspendMediaTransferForJvbConnection = function() {\r\n    logger.info('Suspending media transfer over the JVB connection...');\r\n    this.jvbJingleSession.setMediaTransferActive(false, false).then(\r\n        () => {\r\n            logger.info('Suspended media transfer over the JVB connection !');\r\n        },\r\n        error => {\r\n            logger.error(\r\n                'Failed to suspend media transfer over the JVB connection:',\r\n                error);\r\n        });\r\n};\r\n\r\n/**\r\n * Method when called will decide whether it's the time to start or stop\r\n * the P2P session.\r\n * @param {boolean} userLeftEvent if <tt>true</tt> it means that the call\r\n * originates from the user left event.\r\n * @private\r\n */\r\nJitsiConference.prototype._maybeStartOrStopP2P = function(userLeftEvent) {\r\n    if (!browser.supportsP2P()\r\n        || !this.isP2PEnabled()\r\n        || this.isP2PTestModeEnabled()) {\r\n        logger.info('Auto P2P disabled');\r\n\r\n        return;\r\n    }\r\n    const peers = this.getParticipants();\r\n    const peerCount = peers.length;\r\n\r\n    // FIXME 1 peer and it must *support* P2P switching\r\n    const shouldBeInP2P = this._shouldBeInP2PMode();\r\n\r\n    // Clear deferred \"start P2P\" task\r\n    if (!shouldBeInP2P && this.deferredStartP2PTask) {\r\n        this._maybeClearDeferredStartP2P();\r\n    }\r\n\r\n    // Start peer to peer session\r\n    if (!this.p2pJingleSession && shouldBeInP2P) {\r\n        const peer = peerCount && peers[0];\r\n\r\n\r\n        const myId = this.myUserId();\r\n        const peersId = peer.getId();\r\n\r\n        if (myId > peersId) {\r\n            logger.debug(\r\n                'I\\'m the bigger peersId - '\r\n                + 'the other peer should start P2P', myId, peersId);\r\n\r\n            return;\r\n        } else if (myId === peersId) {\r\n            logger.error('The same IDs ? ', myId, peersId);\r\n\r\n            return;\r\n        }\r\n\r\n        const jid = peer.getJid();\r\n\r\n        if (userLeftEvent) {\r\n            if (this.deferredStartP2PTask) {\r\n                logger.error('Deferred start P2P task\\'s been set already!');\r\n\r\n                return;\r\n            }\r\n            logger.info(\r\n                `Will start P2P with: ${jid} after ${\r\n                    this.backToP2PDelay} seconds...`);\r\n            this.deferredStartP2PTask = setTimeout(\r\n                this._startP2PSession.bind(this, jid),\r\n                this.backToP2PDelay * 1000);\r\n        } else {\r\n            logger.info(`Will start P2P with: ${jid}`);\r\n            this._startP2PSession(jid);\r\n        }\r\n    } else if (this.p2pJingleSession && !shouldBeInP2P) {\r\n        logger.info(`Will stop P2P with: ${this.p2pJingleSession.remoteJid}`);\r\n\r\n        // Log that there will be a switch back to the JVB connection\r\n        if (this.p2pJingleSession.isInitiator && peerCount > 1) {\r\n            Statistics.sendAnalyticsAndLog(\r\n                createP2PEvent(ACTION_P2P_SWITCH_TO_JVB));\r\n        }\r\n        this._stopP2PSession();\r\n    }\r\n};\r\n\r\n/**\r\n * Tells whether or not this conference should be currently in the P2P mode.\r\n *\r\n * @private\r\n * @returns {boolean}\r\n */\r\nJitsiConference.prototype._shouldBeInP2PMode = function() {\r\n    const peers = this.getParticipants();\r\n    const peerCount = peers.length;\r\n    const hasBotPeer = peers.find(p => p._botType === 'poltergeist') !== undefined;\r\n    const shouldBeInP2P = peerCount === 1 && !hasBotPeer;\r\n\r\n    logger.debug(`P2P? peerCount: ${peerCount}, hasBotPeer: ${hasBotPeer} => ${shouldBeInP2P}`);\r\n\r\n    return shouldBeInP2P;\r\n};\r\n\r\n/**\r\n * Stops the current P2P session.\r\n * @param {string} [reason=\"success\"] one of the Jingle \"reason\" element\r\n * names as defined by https://xmpp.org/extensions/xep-0166.html#def-reason\r\n * @param {string} [reasonDescription=\"Turing off P2P session\"] text\r\n * description that will be included in the session terminate message\r\n * @private\r\n */\r\nJitsiConference.prototype._stopP2PSession = function(\r\n        reason,\r\n        reasonDescription) {\r\n    if (!this.p2pJingleSession) {\r\n        logger.error('No P2P session to be stopped!');\r\n\r\n        return;\r\n    }\r\n\r\n    const wasP2PEstablished = this.isP2PActive();\r\n\r\n    // Swap remote tracks, but only if the P2P has been fully established\r\n    if (wasP2PEstablished) {\r\n        if (this.jvbJingleSession) {\r\n            this._resumeMediaTransferForJvbConnection();\r\n        }\r\n\r\n        // Remove remote P2P tracks\r\n        this._removeRemoteP2PTracks();\r\n    }\r\n\r\n    // Stop P2P stats\r\n    logger.info('Stopping remote stats for P2P connection');\r\n    this.statistics.stopRemoteStats(this.p2pJingleSession.peerconnection);\r\n    logger.info('Stopping CallStats for P2P connection');\r\n    this.statistics.stopCallStats(this.p2pJingleSession.peerconnection);\r\n\r\n    this.p2pJingleSession.terminate(\r\n        () => {\r\n            logger.info('P2P session terminate RESULT');\r\n        },\r\n        error => {\r\n            // Because both initiator and responder are simultaneously\r\n            // terminating their JingleSessions in case of the 'to JVB switch'\r\n            // when 3rd participant joins, both will dispose their sessions and\r\n            // reply with 'item-not-found' (see strophe.jingle.js). We don't\r\n            // want to log this as an error since it's expected behaviour.\r\n            //\r\n            // We want them both to terminate, because in case of initiator's\r\n            // crash the responder would stay in P2P mode until ICE fails which\r\n            // could take up to 20 seconds.\r\n            //\r\n            // NOTE lack of 'reason' is considered as graceful session terminate\r\n            // where both initiator and responder terminate their sessions\r\n            // simultaneously.\r\n            if (reason) {\r\n                logger.error(\r\n                    'An error occurred while trying to terminate'\r\n                        + ' P2P Jingle session', error);\r\n            }\r\n        }, {\r\n            reason: reason ? reason : 'success',\r\n            reasonDescription: reasonDescription\r\n                ? reasonDescription : 'Turing off P2P session',\r\n            sendSessionTerminate: this.room\r\n                && this.getParticipantById(\r\n                    Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid))\r\n        });\r\n\r\n    this.p2pJingleSession = null;\r\n\r\n    // Update P2P status and other affected events/states\r\n    this._setP2PStatus(false);\r\n\r\n    if (wasP2PEstablished) {\r\n        // Add back remote JVB tracks\r\n        if (this.jvbJingleSession) {\r\n            this._addRemoteJVBTracks();\r\n        } else {\r\n            logger.info('Not adding remote JVB tracks - no session yet');\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Checks whether or not the conference is currently in the peer to peer mode.\r\n * Being in peer to peer mode means that the direct connection has been\r\n * established and the P2P connection is being used for media transmission.\r\n * @return {boolean} <tt>true</tt> if in P2P mode or <tt>false</tt> otherwise.\r\n */\r\nJitsiConference.prototype.isP2PActive = function() {\r\n    return this.p2p;\r\n};\r\n\r\n/**\r\n * Returns the current ICE state of the P2P connection.\r\n * NOTE: method is used by the jitsi-meet-torture tests.\r\n * @return {string|null} an ICE state or <tt>null</tt> if there's currently\r\n * no P2P connection.\r\n */\r\nJitsiConference.prototype.getP2PConnectionState = function() {\r\n    if (this.isP2PActive()) {\r\n        return this.p2pJingleSession.peerconnection.getConnectionState();\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n\r\n/**\r\n * Manually starts new P2P session (should be used only in the tests).\r\n */\r\nJitsiConference.prototype.startP2PSession = function() {\r\n    const peers = this.getParticipants();\r\n\r\n    // Start peer to peer session\r\n    if (peers.length === 1) {\r\n        const peerJid = peers[0].getJid();\r\n\r\n        this._startP2PSession(peerJid);\r\n    } else {\r\n        throw new Error(\r\n            'There must be exactly 1 participant to start the P2P session !');\r\n    }\r\n};\r\n\r\n/**\r\n * Manually stops the current P2P session (should be used only in the tests)\r\n */\r\nJitsiConference.prototype.stopP2PSession = function() {\r\n    this._stopP2PSession();\r\n};\r\n\r\n/**\r\n * Get a summary of how long current participants have been the dominant speaker\r\n * @returns {object}\r\n */\r\nJitsiConference.prototype.getSpeakerStats = function() {\r\n    return this.speakerStatsCollector.getStats();\r\n};\r\n\r\n/**\r\n * Sets the maximum video size the local participant should receive from remote\r\n * participants.\r\n *\r\n * @param {number} maxFrameHeightPixels the maximum frame height, in pixels,\r\n * this receiver is willing to receive.\r\n * @returns {void}\r\n */\r\nJitsiConference.prototype.setReceiverVideoConstraint = function(\r\n        maxFrameHeight) {\r\n    this.rtc.setReceiverVideoConstraint(maxFrameHeight);\r\n};\r\n\r\n/**\r\n * Creates a video SIP GW session and returns it if service is enabled. Before\r\n * creating a session one need to check whether video SIP GW service is\r\n * available in the system {@link JitsiConference.isVideoSIPGWAvailable}. Even\r\n * if there are available nodes to serve this request, after creating the\r\n * session those nodes can be taken and the request about using the\r\n * created session can fail.\r\n *\r\n * @param {string} sipAddress - The sip address to be used.\r\n * @param {string} displayName - The display name to be used for this session.\r\n * @returns {JitsiVideoSIPGWSession|Error} Returns null if conference is not\r\n * initialised and there is no room.\r\n */\r\nJitsiConference.prototype.createVideoSIPGWSession\r\n    = function(sipAddress, displayName) {\r\n        if (!this.room) {\r\n            return new Error(VideoSIPGWConstants.ERROR_NO_CONNECTION);\r\n        }\r\n\r\n        return this.videoSIPGWHandler\r\n            .createVideoSIPGWSession(sipAddress, displayName);\r\n    };\r\n\r\n/**\r\n * Sends a conference.join analytics event.\r\n *\r\n * @returns {void}\r\n */\r\nJitsiConference.prototype._sendConferenceJoinAnalyticsEvent = function() {\r\n    const meetingId = this.getMeetingUniqueId();\r\n\r\n    if (this._conferenceJoinAnalyticsEventSent || !meetingId || this.getActivePeerConnection() === null) {\r\n        return;\r\n    }\r\n\r\n    Statistics.sendAnalytics(createConferenceEvent('joined', {\r\n        meetingId,\r\n        participantId: `${meetingId}.${this._statsCurrentId}`\r\n    }));\r\n    this._conferenceJoinAnalyticsEventSent = true;\r\n};\r\n\r\n/**\r\n * Returns whether End-To-End encryption is supported. Note that not all participants\r\n * in the conference may support it.\r\n *\r\n * @returns {boolean}\r\n */\r\nJitsiConference.prototype.isE2EESupported = function() {\r\n    return Boolean(this._e2eeCtx);\r\n};\r\n\r\n/**\r\n * Sets the key to be used for End-To-End encryption.\r\n *\r\n * @param {string} key the key to be used.\r\n * @returns {void}\r\n */\r\nJitsiConference.prototype.setE2EEKey = function(key) {\r\n    if (!this._e2eeCtx) {\r\n        logger.warn('Cannot set E2EE key: there is no defined context, platform is likely unsupported.');\r\n\r\n        return;\r\n    }\r\n\r\n    this._e2eeCtx.setKey(key);\r\n};\r\n\r\n/**\r\n * Setup E2EE for the sending side, if supported.\r\n * Note that this is only done for the JVB Peer Connecction.\r\n *\r\n * @returns {void}\r\n */\r\nJitsiConference.prototype._setupSenderE2EEForTrack = function(session, track) {\r\n    if (!this._e2eeCtx) {\r\n        return;\r\n    }\r\n    const pc = session.peerconnection;\r\n    const sender = pc.findSenderForTrack(track.track);\r\n\r\n    if (sender) {\r\n        this._e2eeCtx.handleSender(sender, track.getType());\r\n    } else {\r\n        logger.warn(`Could not handle E2EE for local ${track.getType()} track: sender not found`);\r\n    }\r\n};\r\n\r\n/**\r\n * Setup E2EE for the receiving side, if supported.\r\n * Note that this is only done for the JVB Peer Connecction.\r\n *\r\n * @returns {void}\r\n */\r\nJitsiConference.prototype._setupReceiverE2EEForTrack = function(track) {\r\n    if (!this._e2eeCtx) {\r\n        return;\r\n    }\r\n    const session = track.isP2P ? this.p2pJingleSession : this.jvbJingleSession;\r\n    const pc = session && session.peerconnection;\r\n\r\n    if (pc) {\r\n        const receiver = pc.findReceiverForTrack(track.track);\r\n\r\n        if (receiver) {\r\n            this._e2eeCtx.handleReceiver(receiver, track.getType());\r\n        } else {\r\n            logger.warn(`Could not handle E2EE for remote ${track.getType()} track: receiver not found`);\r\n        }\r\n    }\r\n};\r\n","/**\r\n * The errors for the conference.\r\n */\r\n\r\n/**\r\n * Indicates that client must be authenticated to create the conference.\r\n */\r\nexport const AUTHENTICATION_REQUIRED = 'conference.authenticationRequired';\r\n\r\n/**\r\n * Indicates that chat error occurred.\r\n */\r\nexport const CHAT_ERROR = 'conference.chatError';\r\n\r\n/**\r\n * Indicates that conference has been destroyed.\r\n */\r\nexport const CONFERENCE_DESTROYED = 'conference.destroyed';\r\n\r\n/**\r\n * Indicates that max users limit has been reached.\r\n */\r\nexport const CONFERENCE_MAX_USERS = 'conference.max_users';\r\n\r\n/**\r\n * Indicates that a connection error occurred when trying to join a conference.\r\n */\r\nexport const CONNECTION_ERROR = 'conference.connectionError';\r\n\r\n/**\r\n * Indicates that a connection error is due to not allowed,\r\n * occurred when trying to join a conference.\r\n */\r\nexport const NOT_ALLOWED_ERROR = 'conference.connectionError.notAllowed';\r\n\r\n/**\r\n * Indicates that focus error happened.\r\n */\r\nexport const FOCUS_DISCONNECTED = 'conference.focusDisconnected';\r\n\r\n/**\r\n * Indicates that focus left the conference.\r\n */\r\nexport const FOCUS_LEFT = 'conference.focusLeft';\r\n\r\n/**\r\n * Indicates that graceful shutdown happened.\r\n */\r\nexport const GRACEFUL_SHUTDOWN = 'conference.gracefulShutdown';\r\n\r\n/**\r\n * Indicates that the versions of the server side components are incompatible\r\n * with the client side.\r\n */\r\nexport const INCOMPATIBLE_SERVER_VERSIONS\r\n    = 'conference.incompatible_server_versions';\r\n\r\n/**\r\n * Indicates that offer/answer had failed.\r\n */\r\nexport const OFFER_ANSWER_FAILED = 'conference.offerAnswerFailed';\r\n\r\n/**\r\n * Indicates that password cannot be set for this conference.\r\n */\r\nexport const PASSWORD_NOT_SUPPORTED = 'conference.passwordNotSupported';\r\n\r\n/**\r\n * Indicates that a password is required in order to join the conference.\r\n */\r\nexport const PASSWORD_REQUIRED = 'conference.passwordRequired';\r\n\r\n/**\r\n * Indicates that reservation system returned error.\r\n */\r\nexport const RESERVATION_ERROR = 'conference.reservationError';\r\n\r\n/**\r\n * Indicates that the conference setup failed.\r\n */\r\nexport const SETUP_FAILED = 'conference.setup_failed';\r\n\r\n/**\r\n * Indicates that there is no available videobridge.\r\n */\r\nexport const VIDEOBRIDGE_NOT_AVAILABLE = 'conference.videobridgeNotAvailable';\r\n","/* global __filename */\r\nimport { Strophe } from 'strophe.js';\r\n\r\nimport {\r\n    ACTION_JINGLE_SA_TIMEOUT,\r\n    createBridgeDownEvent,\r\n    createConnectionStageReachedEvent,\r\n    createFocusLeftEvent,\r\n    createJingleEvent,\r\n    createRemotelyMutedEvent\r\n} from './service/statistics/AnalyticsEvents';\r\nimport AuthenticationEvents\r\n    from './service/authentication/AuthenticationEvents';\r\nimport EventEmitterForwarder from './modules/util/EventEmitterForwarder';\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\r\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\r\nimport * as MediaType from './service/RTC/MediaType';\r\nimport RTCEvents from './service/RTC/RTCEvents';\r\nimport VideoType from './service/RTC/VideoType';\r\nimport Statistics from './modules/statistics/statistics';\r\nimport XMPPEvents from './service/xmpp/XMPPEvents';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Setups all event listeners related to conference\r\n * @param conference {JitsiConference} the conference\r\n */\r\nexport default function JitsiConferenceEventManager(conference) {\r\n    this.conference = conference;\r\n    this.xmppListeners = {};\r\n\r\n    // Listeners related to the conference only\r\n    conference.on(JitsiConferenceEvents.TRACK_MUTE_CHANGED,\r\n        track => {\r\n            if (!track.isLocal() || !conference.statistics) {\r\n                return;\r\n            }\r\n            const session\r\n                = track.isP2P\r\n                    ? conference.p2pJingleSession : conference.jvbJingleSession;\r\n\r\n            // TPC will be null, before the conference starts, but the event\r\n            // still should be queued\r\n            const tpc = (session && session.peerconnection) || null;\r\n\r\n            conference.statistics.sendMuteEvent(\r\n                tpc,\r\n                track.isMuted(),\r\n                track.getType());\r\n        });\r\n}\r\n\r\n/**\r\n * Setups event listeners related to conference.chatRoom\r\n */\r\nJitsiConferenceEventManager.prototype.setupChatRoomListeners = function() {\r\n    const conference = this.conference;\r\n    const chatRoom = conference.room;\r\n\r\n    this.chatRoomForwarder = new EventEmitterForwarder(chatRoom,\r\n        this.conference.eventEmitter);\r\n\r\n    chatRoom.addListener(XMPPEvents.ICE_RESTARTING, jingleSession => {\r\n        if (!jingleSession.isP2P) {\r\n            // If using DataChannel as bridge channel, it must be closed\r\n            // before ICE restart, otherwise Chrome will not trigger \"opened\"\r\n            // event for the channel established with the new bridge.\r\n            // TODO: This may be bypassed when using a WebSocket as bridge\r\n            // channel.\r\n            conference.rtc.closeBridgeChannel();\r\n        }\r\n\r\n        // else: there are no DataChannels in P2P session (at least for now)\r\n    });\r\n\r\n    chatRoom.addListener(\r\n        XMPPEvents.ICE_RESTART_SUCCESS,\r\n        (jingleSession, offerIq) => {\r\n            // The JVB data chanel needs to be reopened in case the conference\r\n            // has been moved to a new bridge.\r\n            !jingleSession.isP2P\r\n                && conference._setBridgeChannel(\r\n                    offerIq, jingleSession.peerconnection);\r\n        });\r\n\r\n\r\n    chatRoom.addListener(XMPPEvents.AUDIO_MUTED_BY_FOCUS,\r\n        actor => {\r\n            // TODO: Add a way to differentiate between commands which caused\r\n            // us to mute and those that did not change our state (i.e. we were\r\n            // already muted).\r\n            Statistics.sendAnalytics(createRemotelyMutedEvent());\r\n\r\n            conference.mutedByFocusActor = actor;\r\n\r\n            // set isMutedByFocus when setAudioMute Promise ends\r\n            conference.rtc.setAudioMute(true).then(\r\n                () => {\r\n                    conference.isMutedByFocus = true;\r\n                    conference.mutedByFocusActor = null;\r\n                })\r\n                .catch(\r\n                    error => {\r\n                        conference.mutedByFocusActor = null;\r\n                        logger.warn(\r\n                            'Error while audio muting due to focus request', error);\r\n                    });\r\n        }\r\n    );\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.SUBJECT_CHANGED,\r\n        JitsiConferenceEvents.SUBJECT_CHANGED);\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_JOINED,\r\n        JitsiConferenceEvents.CONFERENCE_JOINED);\r\n\r\n    // send some analytics events\r\n    chatRoom.addListener(XMPPEvents.MUC_JOINED,\r\n        () => {\r\n            this.conference.isJvbConnectionInterrupted = false;\r\n\r\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\r\n            Object.keys(chatRoom.connectionTimes).forEach(key => {\r\n                const event\r\n                    = createConnectionStageReachedEvent(\r\n                        `conference_${key}`,\r\n                        { value: chatRoom.connectionTimes[key] });\r\n\r\n                Statistics.sendAnalytics(event);\r\n            });\r\n\r\n            // TODO: Move all of the 'connectionTimes' logic to its own module.\r\n            Object.keys(chatRoom.xmpp.connectionTimes).forEach(key => {\r\n                const event\r\n                    = createConnectionStageReachedEvent(\r\n                        `xmpp_${key}`,\r\n                        { value: chatRoom.xmpp.connectionTimes[key] });\r\n\r\n                Statistics.sendAnalytics(event);\r\n            });\r\n        });\r\n\r\n    chatRoom.addListener(XMPPEvents.RENEGOTIATION_FAILED, (e, session) => {\r\n        if (!session.isP2P) {\r\n            conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\r\n                JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\r\n        }\r\n    });\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_JOIN_ERROR,\r\n        JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.CONNECTION_ERROR);\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_ERROR,\r\n        JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.CONNECTION_ERROR);\r\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR,\r\n        JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.NOT_ALLOWED_ERROR);\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_MAX_USERS_ERROR,\r\n        JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.CONFERENCE_MAX_USERS);\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.PASSWORD_REQUIRED,\r\n        JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.PASSWORD_REQUIRED);\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.AUTHENTICATION_REQUIRED,\r\n        JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.AUTHENTICATION_REQUIRED);\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.BRIDGE_DOWN,\r\n        JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.VIDEOBRIDGE_NOT_AVAILABLE);\r\n    chatRoom.addListener(\r\n        XMPPEvents.BRIDGE_DOWN,\r\n        () => Statistics.sendAnalytics(createBridgeDownEvent()));\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.RESERVATION_ERROR,\r\n        JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.RESERVATION_ERROR);\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.GRACEFUL_SHUTDOWN,\r\n        JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.GRACEFUL_SHUTDOWN);\r\n\r\n    chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\r\n        jingleSession => {\r\n            conference._onIceConnectionFailed(jingleSession);\r\n        });\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_DESTROYED,\r\n        JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.CONFERENCE_DESTROYED);\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.CHAT_ERROR_RECEIVED,\r\n        JitsiConferenceEvents.CONFERENCE_ERROR,\r\n        JitsiConferenceErrors.CHAT_ERROR);\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.FOCUS_DISCONNECTED,\r\n        JitsiConferenceEvents.CONFERENCE_FAILED,\r\n        JitsiConferenceErrors.FOCUS_DISCONNECTED);\r\n\r\n    chatRoom.addListener(XMPPEvents.FOCUS_LEFT,\r\n        () => {\r\n            Statistics.sendAnalytics(createFocusLeftEvent());\r\n            conference.eventEmitter.emit(\r\n                JitsiConferenceEvents.CONFERENCE_FAILED,\r\n                JitsiConferenceErrors.FOCUS_LEFT);\r\n        });\r\n\r\n    chatRoom.addListener(XMPPEvents.SESSION_ACCEPT_TIMEOUT,\r\n        jingleSession => {\r\n            Statistics.sendAnalyticsAndLog(\r\n                createJingleEvent(\r\n                    ACTION_JINGLE_SA_TIMEOUT,\r\n                    { p2p: jingleSession.isP2P }));\r\n        });\r\n\r\n    chatRoom.addListener(XMPPEvents.RECORDER_STATE_CHANGED,\r\n        (session, jid) => {\r\n\r\n            if (jid) {\r\n                const participant = conference.getParticipantById(\r\n                    Strophe.getResourceFromJid(jid));\r\n\r\n                if (session.getStatus() === 'off') {\r\n                    session.setTerminator(participant);\r\n                } else if (session.getStatus() === 'on') {\r\n                    session.setInitiator(participant);\r\n                }\r\n            }\r\n\r\n            conference.eventEmitter.emit(\r\n                JitsiConferenceEvents.RECORDER_STATE_CHANGED,\r\n                session);\r\n        });\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\r\n        JitsiConferenceEvents.TRANSCRIPTION_STATUS_CHANGED);\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED,\r\n        JitsiConferenceEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED);\r\n\r\n    this.chatRoomForwarder.forward(\r\n        XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\r\n        JitsiConferenceEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED);\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.PHONE_NUMBER_CHANGED,\r\n        JitsiConferenceEvents.PHONE_NUMBER_CHANGED);\r\n\r\n    chatRoom.setParticipantPropertyListener((node, from) => {\r\n        const participant = conference.getParticipantById(from);\r\n\r\n        if (!participant) {\r\n            return;\r\n        }\r\n\r\n        participant.setProperty(\r\n            node.tagName.substring('jitsi_participant_'.length),\r\n            node.value);\r\n    });\r\n\r\n    chatRoom.addListener(XMPPEvents.KICKED,\r\n        conference.onMemberKicked.bind(conference));\r\n    chatRoom.addListener(XMPPEvents.SUSPEND_DETECTED,\r\n        conference.onSuspendDetected.bind(conference));\r\n\r\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOCK_CHANGED,\r\n        JitsiConferenceEvents.LOCK_STATE_CHANGED);\r\n\r\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_JOINED,\r\n        conference.onMemberJoined.bind(conference));\r\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_BOT_TYPE_CHANGED,\r\n        conference._onMemberBotTypeChanged.bind(conference));\r\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_LEFT,\r\n        conference.onMemberLeft.bind(conference));\r\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LEFT,\r\n        JitsiConferenceEvents.CONFERENCE_LEFT);\r\n\r\n    chatRoom.addListener(XMPPEvents.DISPLAY_NAME_CHANGED,\r\n        conference.onDisplayNameChanged.bind(conference));\r\n\r\n    chatRoom.addListener(XMPPEvents.LOCAL_ROLE_CHANGED, role => {\r\n        conference.onLocalRoleChanged(role);\r\n\r\n        // log all events for the recorder operated by the moderator\r\n        if (conference.statistics && conference.isModerator()) {\r\n            conference.on(JitsiConferenceEvents.RECORDER_STATE_CHANGED,\r\n                recorderSession => {\r\n                    const logObject = {\r\n                        error: recorderSession.getError(),\r\n                        id: 'recorder_status',\r\n                        status: recorderSession.getStatus()\r\n                    };\r\n\r\n                    Statistics.sendLog(JSON.stringify(logObject));\r\n                });\r\n        }\r\n    });\r\n\r\n    chatRoom.addListener(XMPPEvents.MUC_ROLE_CHANGED,\r\n        conference.onUserRoleChanged.bind(conference));\r\n\r\n    chatRoom.addListener(AuthenticationEvents.IDENTITY_UPDATED,\r\n        (authEnabled, authIdentity) => {\r\n            conference.authEnabled = authEnabled;\r\n            conference.authIdentity = authIdentity;\r\n            conference.eventEmitter.emit(\r\n                JitsiConferenceEvents.AUTH_STATUS_CHANGED, authEnabled,\r\n                authIdentity);\r\n        });\r\n\r\n    chatRoom.addListener(\r\n        XMPPEvents.MESSAGE_RECEIVED,\r\n\r\n        // eslint-disable-next-line max-params\r\n        (jid, displayName, txt, myJid, ts) => {\r\n            const id = Strophe.getResourceFromJid(jid);\r\n\r\n            conference.eventEmitter.emit(\r\n                JitsiConferenceEvents.MESSAGE_RECEIVED,\r\n                id, txt, ts, displayName);\r\n        });\r\n\r\n    chatRoom.addListener(\r\n        XMPPEvents.PRIVATE_MESSAGE_RECEIVED,\r\n\r\n        // eslint-disable-next-line max-params\r\n        (jid, displayName, txt, myJid, ts) => {\r\n            const id = Strophe.getResourceFromJid(jid);\r\n\r\n            conference.eventEmitter.emit(\r\n                JitsiConferenceEvents.PRIVATE_MESSAGE_RECEIVED,\r\n                id, txt, ts);\r\n        });\r\n\r\n    chatRoom.addListener(XMPPEvents.PRESENCE_STATUS,\r\n        (jid, status) => {\r\n            const id = Strophe.getResourceFromJid(jid);\r\n            const participant = conference.getParticipantById(id);\r\n\r\n            if (!participant || participant._status === status) {\r\n                return;\r\n            }\r\n            participant._status = status;\r\n            conference.eventEmitter.emit(\r\n                JitsiConferenceEvents.USER_STATUS_CHANGED, id, status);\r\n        });\r\n\r\n    chatRoom.addListener(XMPPEvents.JSON_MESSAGE_RECEIVED,\r\n        (from, payload) => {\r\n            const id = Strophe.getResourceFromJid(from);\r\n            const participant = conference.getParticipantById(id);\r\n\r\n            if (participant) {\r\n                conference.eventEmitter.emit(\r\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\r\n                    participant, payload);\r\n            } else {\r\n                logger.warn(\r\n                    'Ignored XMPPEvents.JSON_MESSAGE_RECEIVED for not existing '\r\n                    + `participant: ${from}`,\r\n                    payload);\r\n            }\r\n        });\r\n\r\n    chatRoom.addPresenceListener('startmuted', (data, from) => {\r\n        let isModerator = false;\r\n\r\n        if (conference.myUserId() === from && conference.isModerator()) {\r\n            isModerator = true;\r\n        } else {\r\n            const participant = conference.getParticipantById(from);\r\n\r\n            if (participant && participant.isModerator()) {\r\n                isModerator = true;\r\n            }\r\n        }\r\n\r\n        if (!isModerator) {\r\n            return;\r\n        }\r\n\r\n        const startAudioMuted = data.attributes.audio === 'true';\r\n        const startVideoMuted = data.attributes.video === 'true';\r\n\r\n        let updated = false;\r\n\r\n        if (startAudioMuted !== conference.startMutedPolicy.audio) {\r\n            conference.startMutedPolicy.audio = startAudioMuted;\r\n            updated = true;\r\n        }\r\n\r\n        if (startVideoMuted !== conference.startMutedPolicy.video) {\r\n            conference.startMutedPolicy.video = startVideoMuted;\r\n            updated = true;\r\n        }\r\n\r\n        if (updated) {\r\n            conference.eventEmitter.emit(\r\n                JitsiConferenceEvents.START_MUTED_POLICY_CHANGED,\r\n                conference.startMutedPolicy\r\n            );\r\n        }\r\n    });\r\n\r\n    if (conference.statistics) {\r\n        // FIXME ICE related events should end up in RTCEvents eventually\r\n        chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\r\n            session => {\r\n                conference.statistics.sendIceConnectionFailedEvent(\r\n                    session.peerconnection);\r\n            });\r\n\r\n        // FIXME XMPPEvents.ADD_ICE_CANDIDATE_FAILED is never emitted\r\n        chatRoom.addListener(XMPPEvents.ADD_ICE_CANDIDATE_FAILED,\r\n            (e, pc) => {\r\n                conference.statistics.sendAddIceCandidateFailed(e, pc);\r\n            });\r\n    }\r\n};\r\n\r\n/**\r\n * Setups event listeners related to conference.rtc\r\n */\r\nJitsiConferenceEventManager.prototype.setupRTCListeners = function() {\r\n    const conference = this.conference;\r\n    const rtc = conference.rtc;\r\n\r\n    rtc.addListener(\r\n        RTCEvents.REMOTE_TRACK_ADDED,\r\n        conference.onRemoteTrackAdded.bind(conference));\r\n\r\n    rtc.addListener(\r\n        RTCEvents.REMOTE_TRACK_REMOVED,\r\n        conference.onRemoteTrackRemoved.bind(conference));\r\n\r\n    rtc.addListener(RTCEvents.DOMINANT_SPEAKER_CHANGED,\r\n        id => {\r\n            if (conference.lastDominantSpeaker !== id && conference.room) {\r\n                conference.lastDominantSpeaker = id;\r\n                conference.eventEmitter.emit(\r\n                    JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED, id);\r\n\r\n                if (conference.statistics && conference.myUserId() === id) {\r\n                    // We are the new dominant speaker.\r\n                    conference.statistics.sendDominantSpeakerEvent(\r\n                        conference.room.roomjid);\r\n                }\r\n            }\r\n        });\r\n\r\n    rtc.addListener(RTCEvents.DATA_CHANNEL_OPEN, () => {\r\n        const now = window.performance.now();\r\n        const key = 'data.channel.opened';\r\n\r\n        // TODO: Move all of the 'connectionTimes' logic to its own module.\r\n        logger.log(`(TIME) ${key}:\\t`, now);\r\n        conference.room.connectionTimes[key] = now;\r\n        Statistics.sendAnalytics(\r\n            createConnectionStageReachedEvent(key, { value: now }));\r\n\r\n        conference.eventEmitter.emit(JitsiConferenceEvents.DATA_CHANNEL_OPENED);\r\n    });\r\n\r\n    rtc.addListener(RTCEvents.ENDPOINT_MESSAGE_RECEIVED,\r\n        (from, payload) => {\r\n            const participant = conference.getParticipantById(from);\r\n\r\n            if (participant) {\r\n                conference.eventEmitter.emit(\r\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\r\n                    participant, payload);\r\n            } else {\r\n                logger.warn(\r\n                    'Ignored ENDPOINT_MESSAGE_RECEIVED for not existing '\r\n                        + `participant: ${from}`,\r\n                    payload);\r\n            }\r\n        });\r\n\r\n    rtc.addListener(RTCEvents.LOCAL_UFRAG_CHANGED,\r\n        (tpc, ufrag) => {\r\n            if (!tpc.isP2P) {\r\n                Statistics.sendLog(\r\n                    JSON.stringify({\r\n                        id: 'local_ufrag',\r\n                        value: ufrag\r\n                    }));\r\n            }\r\n        });\r\n    rtc.addListener(RTCEvents.REMOTE_UFRAG_CHANGED,\r\n        (tpc, ufrag) => {\r\n            if (!tpc.isP2P) {\r\n                Statistics.sendLog(\r\n                    JSON.stringify({\r\n                        id: 'remote_ufrag',\r\n                        value: ufrag\r\n                    }));\r\n            }\r\n        });\r\n\r\n    rtc.addListener(RTCEvents.CREATE_ANSWER_FAILED,\r\n        (e, tpc) => {\r\n            conference.statistics.sendCreateAnswerFailed(e, tpc);\r\n            if (!tpc.isP2P) {\r\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\r\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\r\n            }\r\n        });\r\n\r\n    rtc.addListener(RTCEvents.CREATE_OFFER_FAILED,\r\n        (e, tpc) => {\r\n            conference.statistics.sendCreateOfferFailed(e, tpc);\r\n            if (!tpc.isP2P) {\r\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\r\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\r\n            }\r\n        });\r\n\r\n    rtc.addListener(RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\r\n        (e, tpc) => {\r\n            conference.statistics.sendSetLocalDescFailed(e, tpc);\r\n            if (!tpc.isP2P) {\r\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\r\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\r\n            }\r\n        });\r\n\r\n    rtc.addListener(RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\r\n        (e, tpc) => {\r\n            conference.statistics.sendSetRemoteDescFailed(e, tpc);\r\n            if (!tpc.isP2P) {\r\n                conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\r\n                    JitsiConferenceErrors.OFFER_ANSWER_FAILED, e);\r\n            }\r\n        });\r\n\r\n    rtc.addListener(RTCEvents.LOCAL_TRACK_SSRC_UPDATED,\r\n        (track, ssrc) => {\r\n            // when starting screen sharing, the track is created and when\r\n            // we do set local description and we process the ssrc we\r\n            // will be notified for it and we will report it with the event\r\n            // for screen sharing\r\n            if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\r\n                conference.statistics.sendScreenSharingEvent(true, ssrc);\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * Removes event listeners related to conference.xmpp\r\n */\r\nJitsiConferenceEventManager.prototype.removeXMPPListeners = function() {\r\n    const conference = this.conference;\r\n\r\n    conference.xmpp.caps.removeListener(\r\n        XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\r\n        this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED]);\r\n    delete this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED];\r\n\r\n    Object.keys(this.xmppListeners).forEach(eventName => {\r\n        conference.xmpp.removeListener(\r\n            eventName,\r\n            this.xmppListeners[eventName]);\r\n    });\r\n    this.xmppListeners = {};\r\n};\r\n\r\n\r\n/**\r\n * Setups event listeners related to conference.xmpp\r\n */\r\nJitsiConferenceEventManager.prototype.setupXMPPListeners = function() {\r\n    const conference = this.conference;\r\n\r\n    const featuresChangedListener = from => {\r\n        const participant\r\n            = conference.getParticipantById(\r\n            Strophe.getResourceFromJid(from));\r\n\r\n        if (participant) {\r\n            conference.eventEmitter.emit(\r\n                JitsiConferenceEvents.PARTCIPANT_FEATURES_CHANGED,\r\n                participant);\r\n        }\r\n    };\r\n\r\n    conference.xmpp.caps.addListener(\r\n        XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\r\n        featuresChangedListener);\r\n    this.xmppListeners[XMPPEvents.PARTCIPANT_FEATURES_CHANGED]\r\n        = featuresChangedListener;\r\n\r\n    this._addConferenceXMPPListener(\r\n        XMPPEvents.CALL_INCOMING,\r\n        conference.onIncomingCall.bind(conference));\r\n    this._addConferenceXMPPListener(\r\n        XMPPEvents.CALL_ACCEPTED,\r\n        conference.onCallAccepted.bind(conference));\r\n    this._addConferenceXMPPListener(\r\n        XMPPEvents.TRANSPORT_INFO,\r\n        conference.onTransportInfo.bind(conference));\r\n    this._addConferenceXMPPListener(\r\n        XMPPEvents.CALL_ENDED,\r\n        conference.onCallEnded.bind(conference));\r\n\r\n    this._addConferenceXMPPListener(XMPPEvents.START_MUTED_FROM_FOCUS,\r\n        (audioMuted, videoMuted) => {\r\n            if (conference.options.config.ignoreStartMuted) {\r\n                return;\r\n            }\r\n\r\n            conference.startAudioMuted = audioMuted;\r\n            conference.startVideoMuted = videoMuted;\r\n\r\n            // mute existing local tracks because this is initial mute from\r\n            // Jicofo\r\n            conference.getLocalTracks().forEach(track => {\r\n                switch (track.getType()) {\r\n                case MediaType.AUDIO:\r\n                    conference.startAudioMuted && track.mute();\r\n                    break;\r\n                case MediaType.VIDEO:\r\n                    conference.startVideoMuted && track.mute();\r\n                    break;\r\n                }\r\n            });\r\n\r\n            conference.eventEmitter.emit(JitsiConferenceEvents.STARTED_MUTED);\r\n        });\r\n\r\n    this._addConferenceXMPPListener(XMPPEvents.CONFERENCE_TIMESTAMP_RECEIVED,\r\n        createdTimestamp => {\r\n            conference.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_CREATED_TIMESTAMP, createdTimestamp);\r\n        });\r\n};\r\n\r\n/**\r\n * Add XMPP listener and save its reference for remove on leave conference.\r\n */\r\nJitsiConferenceEventManager.prototype._addConferenceXMPPListener = function(\r\n        eventName, listener) {\r\n    this.xmppListeners[eventName] = listener;\r\n    this.conference.xmpp.addListener(eventName, listener);\r\n};\r\n\r\n/**\r\n * Setups event listeners related to conference.statistics\r\n */\r\nJitsiConferenceEventManager.prototype.setupStatisticsListeners = function() {\r\n    const conference = this.conference;\r\n\r\n    if (!conference.statistics) {\r\n        return;\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n    conference.statistics.addAudioLevelListener((tpc, ssrc, level, isLocal) => {\r\n        conference.rtc.setAudioLevel(tpc, ssrc, level, isLocal);\r\n    });\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    // Forward the \"before stats disposed\" event\r\n    conference.statistics.addBeforeDisposedListener(() => {\r\n        conference.eventEmitter.emit(\r\n            JitsiConferenceEvents.BEFORE_STATISTICS_DISPOSED);\r\n    });\r\n\r\n    // if we are in startSilent mode we will not be sending/receiving so nothing to detect\r\n    if (!conference.options.config.startSilent) {\r\n        conference.statistics.addByteSentStatsListener((tpc, stats) => {\r\n            conference.getLocalTracks(MediaType.AUDIO).forEach(track => {\r\n                const ssrc = tpc.getLocalSSRC(track);\r\n\r\n                if (!ssrc || !stats.hasOwnProperty(ssrc)) {\r\n                    return;\r\n                }\r\n\r\n                track._onByteSentStatsReceived(tpc, stats[ssrc]);\r\n            });\r\n        });\r\n    }\r\n};\r\n","/**\r\n * The events for the conference.\r\n */\r\n\r\n/**\r\n * Event indicates that the current conference audio input switched between audio\r\n * input states,i.e. with or without audio input.\r\n */\r\nexport const AUDIO_INPUT_STATE_CHANGE = 'conference.audio_input_state_changed';\r\n\r\n/**\r\n * Indicates that authentication status changed.\r\n */\r\nexport const AUTH_STATUS_CHANGED = 'conference.auth_status_changed';\r\n\r\n/**\r\n * A participant avatar has changed.\r\n */\r\nexport const AVATAR_CHANGED = 'conference.avatarChanged';\r\n\r\n/**\r\n * Fired just before the statistics module is disposed and it's the last chance\r\n * to submit some logs to the statistics service (ex. CallStats if enabled),\r\n * before it's disconnected.\r\n */\r\nexport const BEFORE_STATISTICS_DISPOSED = 'conference.beforeStatisticsDisposed';\r\n\r\n/**\r\n * Indicates that an error occured.\r\n */\r\nexport const CONFERENCE_ERROR = 'conference.error';\r\n\r\n/**\r\n * Indicates that conference failed.\r\n */\r\nexport const CONFERENCE_FAILED = 'conference.failed';\r\n\r\n/**\r\n * Indicates that conference has been joined. The event does NOT provide any\r\n * parameters to its listeners.\r\n */\r\nexport const CONFERENCE_JOINED = 'conference.joined';\r\n\r\n/**\r\n * Indicates that conference has been left.\r\n */\r\nexport const CONFERENCE_LEFT = 'conference.left';\r\n\r\n/**\r\n * Indicates that the connection to the conference has been established\r\n * XXX This is currently fired whenVthe *ICE* connection enters 'connected'\r\n * state for the first time.\r\n */\r\nexport const CONNECTION_ESTABLISHED = 'conference.connectionEstablished';\r\n\r\n/**\r\n * Indicates that the connection to the conference has been interrupted for some\r\n * reason.\r\n * XXX This is currently fired when the *ICE* connection is interrupted.\r\n */\r\nexport const CONNECTION_INTERRUPTED = 'conference.connectionInterrupted';\r\n\r\n/**\r\n * Indicates that the connection to the conference has been restored.\r\n * XXX This is currently fired when the *ICE* connection is restored.\r\n */\r\nexport const CONNECTION_RESTORED = 'conference.connectionRestored';\r\n\r\n/**\r\n * A connection to the video bridge's data channel has been established.\r\n */\r\nexport const DATA_CHANNEL_OPENED = 'conference.dataChannelOpened';\r\n\r\n/**\r\n * A user has changed it display name\r\n */\r\nexport const DISPLAY_NAME_CHANGED = 'conference.displayNameChanged';\r\n\r\n/**\r\n * The dominant speaker was changed.\r\n */\r\nexport const DOMINANT_SPEAKER_CHANGED = 'conference.dominantSpeaker';\r\n\r\n/**\r\n * UTC conference timestamp when first participant joined.\r\n */\r\nexport const CONFERENCE_CREATED_TIMESTAMP = 'conference.createdTimestamp';\r\n\r\n/**\r\n * Indicates that DTMF support changed.\r\n */\r\nexport const DTMF_SUPPORT_CHANGED = 'conference.dtmfSupportChanged';\r\n\r\n/**\r\n * Indicates that a message from another participant is received on data\r\n * channel.\r\n */\r\nexport const ENDPOINT_MESSAGE_RECEIVED = 'conference.endpoint_message_received';\r\n\r\n/**\r\n * NOTE This is lib-jitsi-meet internal event and can be removed at any time !\r\n *\r\n * Event emitted when conference transits, between one to one and multiparty JVB\r\n * conference. If the conference switches to P2P it's neither one to one nor\r\n * a multiparty JVB conference, but P2P (the status argument of this event will\r\n * be <tt>false</tt>).\r\n *\r\n * The first argument is a boolean which carries the previous value and\r\n * the seconds argument is a boolean with the new status. The event is emitted\r\n * only if the previous and the new values are different.\r\n *\r\n * @type {string}\r\n */\r\nexport const JVB121_STATUS = 'conference.jvb121Status';\r\n\r\n/**\r\n * You are kicked from the conference.\r\n * @param {JitsiParticipant} the participant that initiated the kick.\r\n */\r\nexport const KICKED = 'conference.kicked';\r\n\r\n/**\r\n * Participant was kicked from the conference.\r\n * @param {JitsiParticipant} the participant that initiated the kick.\r\n * @param {JitsiParticipant} the participant that was kicked.\r\n */\r\nexport const PARTICIPANT_KICKED = 'conference.participant_kicked';\r\n\r\n/**\r\n * The Last N set is changed.\r\n *\r\n * @param {Array<string>|null} leavingEndpointIds the ids of all the endpoints\r\n * which are leaving Last N\r\n * @param {Array<string>|null} enteringEndpointIds the ids of all the endpoints\r\n * which are entering Last N\r\n */\r\nexport const LAST_N_ENDPOINTS_CHANGED = 'conference.lastNEndpointsChanged';\r\n\r\n/**\r\n * Indicates that the room has been locked or unlocked.\r\n */\r\nexport const LOCK_STATE_CHANGED = 'conference.lock_state_changed';\r\n\r\n/**\r\n * Indicates that the region of the media server (jitsi-videobridge) that we\r\n * are connected to changed (or was initially set).\r\n * @type {string} the region.\r\n */\r\nexport const SERVER_REGION_CHANGED = 'conference.server_region_changed';\r\n\r\n/**\r\n * New text message was received.\r\n */\r\nexport const MESSAGE_RECEIVED = 'conference.messageReceived';\r\n\r\n/**\r\n * Event indicates that the current selected input device has no signal\r\n */\r\nexport const NO_AUDIO_INPUT = 'conference.no_audio_input';\r\n\r\n/**\r\n * Event indicates that the current microphone used by the conference is noisy.\r\n */\r\nexport const NOISY_MIC = 'conference.noisy_mic';\r\n\r\n/**\r\n * New private text message was received.\r\n */\r\nexport const PRIVATE_MESSAGE_RECEIVED = 'conference.privateMessageReceived';\r\n\r\n/**\r\n * Event fired when JVB sends notification about interrupted/restored user's\r\n * ICE connection status or we detect local problem with the video track.\r\n * First argument is the ID of the participant and\r\n * the seconds is a string indicating if the connection is currently\r\n * - active - the connection is active\r\n * - inactive - the connection is inactive, was intentionally interrupted by\r\n * the bridge\r\n * - interrupted - a network problem occurred\r\n * - restoring - the connection was inactive and is restoring now\r\n *\r\n * The current status value can be obtained by calling\r\n * JitsiParticipant.getConnectionStatus().\r\n */\r\nexport const PARTICIPANT_CONN_STATUS_CHANGED\r\n    = 'conference.participant_conn_status_changed';\r\n\r\n/**\r\n * Indicates that the features of the participant has been changed.\r\n */\r\nexport const PARTCIPANT_FEATURES_CHANGED\r\n    = 'conference.partcipant_features_changed';\r\n\r\n/**\r\n * Indicates that a the value of a specific property of a specific participant\r\n * has changed.\r\n */\r\nexport const PARTICIPANT_PROPERTY_CHANGED\r\n    = 'conference.participant_property_changed';\r\n\r\n/**\r\n * Indicates that the conference has switched between JVB and P2P connections.\r\n * The first argument of this event is a <tt>boolean</tt> which when set to\r\n * <tt>true</tt> means that the conference is running on the P2P connection.\r\n */\r\nexport const P2P_STATUS = 'conference.p2pStatus';\r\n\r\n/**\r\n * Indicates that phone number changed.\r\n */\r\nexport const PHONE_NUMBER_CHANGED = 'conference.phoneNumberChanged';\r\n\r\n/**\r\n * The conference properties changed.\r\n * @type {string}\r\n */\r\nexport const PROPERTIES_CHANGED = 'conference.propertiesChanged';\r\n\r\n/**\r\n * Indicates that recording state changed.\r\n */\r\nexport const RECORDER_STATE_CHANGED = 'conference.recorderStateChanged';\r\n\r\n/**\r\n * Indicates that video SIP GW state changed.\r\n * @param {VideoSIPGWConstants} status.\r\n */\r\nexport const VIDEO_SIP_GW_AVAILABILITY_CHANGED\r\n    = 'conference.videoSIPGWAvailabilityChanged';\r\n\r\n/**\r\n * Indicates that video SIP GW Session state changed.\r\n * @param {options} event - {\r\n *     {string} address,\r\n *     {VideoSIPGWConstants} oldState,\r\n *     {VideoSIPGWConstants} newState,\r\n *     {string} displayName}\r\n * }.\r\n */\r\nexport const VIDEO_SIP_GW_SESSION_STATE_CHANGED\r\n    = 'conference.videoSIPGWSessionStateChanged';\r\n\r\n/**\r\n * Indicates that start muted settings changed.\r\n */\r\nexport const START_MUTED_POLICY_CHANGED\r\n    = 'conference.start_muted_policy_changed';\r\n\r\n/**\r\n * Indicates that the local user has started muted.\r\n */\r\nexport const STARTED_MUTED = 'conference.started_muted';\r\n\r\n/**\r\n * Indicates that subject of the conference has changed.\r\n */\r\nexport const SUBJECT_CHANGED = 'conference.subjectChanged';\r\n\r\n/**\r\n * Indicates that DTMF support changed.\r\n */\r\nexport const SUSPEND_DETECTED = 'conference.suspendDetected';\r\n\r\n/**\r\n * Event indicates that local user is talking while he muted himself\r\n */\r\nexport const TALK_WHILE_MUTED = 'conference.talk_while_muted';\r\n\r\n/**\r\n * A new media track was added to the conference. The event provides the\r\n * following parameters to its listeners:\r\n *\r\n * @param {JitsiTrack} track the added JitsiTrack\r\n */\r\nexport const TRACK_ADDED = 'conference.trackAdded';\r\n\r\n/**\r\n * Audio levels of a media track ( attached to the conference) was changed.\r\n */\r\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'conference.audioLevelsChanged';\r\n\r\n/**\r\n * A media track ( attached to the conference) mute status was changed.\r\n * @param {JitsiParticipant|null} the participant that initiated the mute\r\n * if it is a remote mute.\r\n */\r\nexport const TRACK_MUTE_CHANGED = 'conference.trackMuteChanged';\r\n\r\n/**\r\n * The media track was removed from the conference. The event provides the\r\n * following parameters to its listeners:\r\n *\r\n * @param {JitsiTrack} track the removed JitsiTrack\r\n */\r\nexport const TRACK_REMOVED = 'conference.trackRemoved';\r\n\r\n/**\r\n * Notifies for transcription status changes. The event provides the\r\n * following parameters to its listeners:\r\n *\r\n * @param {String} status - The new status.\r\n */\r\nexport const TRANSCRIPTION_STATUS_CHANGED\r\n    = 'conference.transcriptionStatusChanged';\r\n\r\n\r\n/**\r\n * A new user joined the conference.\r\n */\r\nexport const USER_JOINED = 'conference.userJoined';\r\n\r\n/**\r\n * A user has left the conference.\r\n */\r\nexport const USER_LEFT = 'conference.userLeft';\r\n\r\n/**\r\n * User role changed.\r\n */\r\nexport const USER_ROLE_CHANGED = 'conference.roleChanged';\r\n\r\n/**\r\n * User status changed.\r\n */\r\nexport const USER_STATUS_CHANGED = 'conference.statusChanged';\r\n\r\n/**\r\n * Event indicates that the bot participant type changed.\r\n */\r\nexport const BOT_TYPE_CHANGED = 'conference.bot_type_changed';\r\n","import {\r\n    CONNECTION_DISCONNECTED as ANALYTICS_CONNECTION_DISCONNECTED,\r\n    createConnectionFailedEvent\r\n} from './service/statistics/AnalyticsEvents';\r\nimport JitsiConference from './JitsiConference';\r\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\r\nimport Statistics from './modules/statistics/statistics';\r\nimport XMPP from './modules/xmpp/xmpp';\r\n\r\n/**\r\n * Creates a new connection object for the Jitsi Meet server side video\r\n * conferencing service. Provides access to the JitsiConference interface.\r\n * @param appID identification for the provider of Jitsi Meet video conferencing\r\n * services.\r\n * @param token the JWT token used to authenticate with the server(optional)\r\n * @param options Object with properties / settings related to connection with\r\n * the server.\r\n * @constructor\r\n */\r\nexport default function JitsiConnection(appID, token, options) {\r\n    this.appID = appID;\r\n    this.token = token;\r\n    this.options = options;\r\n    this.xmpp = new XMPP(options, token);\r\n\r\n    /* eslint-disable max-params */\r\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_FAILED,\r\n        (errType, msg, credentials, details) => {\r\n            Statistics.sendAnalyticsAndLog(\r\n                createConnectionFailedEvent(errType, msg, details));\r\n        });\r\n    /* eslint-enable max-params */\r\n\r\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_DISCONNECTED,\r\n        msg => {\r\n            // we can see disconnects from normal tab closing of the browser\r\n            // and then there are no msgs, but we want to log only disconnects\r\n            // when there is real error\r\n            // XXX Do we need the difference in handling between the log and\r\n            // analytics event here?\r\n            if (msg) {\r\n                Statistics.sendAnalytics(\r\n                    ANALYTICS_CONNECTION_DISCONNECTED,\r\n                    { message: msg });\r\n            }\r\n            Statistics.sendLog(\r\n                JSON.stringify(\r\n                    {\r\n                        id: ANALYTICS_CONNECTION_DISCONNECTED,\r\n                        msg\r\n                    }));\r\n        });\r\n}\r\n\r\n/**\r\n * Connect the client with the server.\r\n * @param options {object} connecting options\r\n * (for example authentications parameters).\r\n */\r\nJitsiConnection.prototype.connect = function(options = {}) {\r\n    this.xmpp.connect(options.id, options.password);\r\n};\r\n\r\n/**\r\n * Attach to existing connection. Can be used for optimizations. For example:\r\n * if the connection is created on the server we can attach to it and start\r\n * using it.\r\n *\r\n * @param options {object} connecting options - rid, sid and jid.\r\n */\r\nJitsiConnection.prototype.attach = function(options) {\r\n    this.xmpp.attach(options);\r\n};\r\n\r\n/**\r\n * Disconnect the client from the server.\r\n * @returns {Promise} - Resolves when the disconnect process is finished or rejects with an error.\r\n */\r\nJitsiConnection.prototype.disconnect = function(...args) {\r\n    // XXX Forward any arguments passed to JitsiConnection.disconnect to\r\n    // XMPP.disconnect. For example, the caller of JitsiConnection.disconnect\r\n    // may optionally pass the event which triggered the disconnect in order to\r\n    // provide the implementation with finer-grained context.\r\n    return this.xmpp.disconnect(...args);\r\n};\r\n\r\n/**\r\n * Returns the jid of the participant associated with the XMPP connection.\r\n *\r\n * @returns {string} The jid of the participant.\r\n */\r\nJitsiConnection.prototype.getJid = function() {\r\n    return this.xmpp.getJid();\r\n};\r\n\r\n/**\r\n * This method allows renewal of the tokens if they are expiring.\r\n * @param token the new token.\r\n */\r\nJitsiConnection.prototype.setToken = function(token) {\r\n    this.token = token;\r\n};\r\n\r\n/**\r\n * Creates and joins new conference.\r\n * @param name the name of the conference; if null - a generated name will be\r\n * provided from the api\r\n * @param options Object with properties / settings related to the conference\r\n * that will be created.\r\n * @returns {JitsiConference} returns the new conference object.\r\n */\r\nJitsiConnection.prototype.initJitsiConference = function(name, options) {\r\n    return new JitsiConference({\r\n        name,\r\n        config: options,\r\n        connection: this\r\n    });\r\n};\r\n\r\n/**\r\n * Subscribes the passed listener to the event.\r\n * @param event {JitsiConnectionEvents} the connection event.\r\n * @param listener {Function} the function that will receive the event\r\n */\r\nJitsiConnection.prototype.addEventListener = function(event, listener) {\r\n    this.xmpp.addListener(event, listener);\r\n};\r\n\r\n/**\r\n * Unsubscribes the passed handler.\r\n * @param event {JitsiConnectionEvents} the connection event.\r\n * @param listener {Function} the function that will receive the event\r\n */\r\nJitsiConnection.prototype.removeEventListener = function(event, listener) {\r\n    this.xmpp.removeListener(event, listener);\r\n};\r\n\r\n/**\r\n * Returns measured connectionTimes.\r\n */\r\nJitsiConnection.prototype.getConnectionTimes = function() {\r\n    return this.xmpp.connectionTimes;\r\n};\r\n\r\n/**\r\n * Adds new feature to the list of supported features for the local\r\n * participant.\r\n * @param {String} feature the name of the feature.\r\n * @param {boolean} submit if true - the new list of features will be\r\n * immediately submitted to the others.\r\n */\r\nJitsiConnection.prototype.addFeature = function(feature, submit = false) {\r\n    return this.xmpp.caps.addFeature(feature, submit);\r\n};\r\n\r\n/**\r\n * Removes a feature from the list of supported features for the local\r\n * participant\r\n * @param {String} feature the name of the feature.\r\n * @param {boolean} submit if true - the new list of features will be\r\n * immediately submitted to the others.\r\n */\r\nJitsiConnection.prototype.removeFeature = function(feature, submit = false) {\r\n    return this.xmpp.caps.removeFeature(feature, submit);\r\n};\r\n","/**\r\n * The errors for the connection.\r\n */\r\n\r\n/**\r\n * Indicates that the connection was dropped with an error which was most likely\r\n * caused by some networking issues. The dropped term in this context means that\r\n * the connection was closed unexpectedly (not on user's request).\r\n *\r\n * One example is 'item-not-found' error thrown by Prosody when the BOSH session\r\n * times out after 60 seconds of inactivity. On the other hand 'item-not-found'\r\n * could also happen when BOSH request is sent to the server with the session-id\r\n * that is not know to the server. But this should not happen in lib-jitsi-meet\r\n * case as long as the service is configured correctly (there is no bug).\r\n */\r\nexport const CONNECTION_DROPPED_ERROR = 'connection.droppedError';\r\n\r\n/**\r\n * Not specified errors.\r\n */\r\nexport const OTHER_ERROR = 'connection.otherError';\r\n\r\n/**\r\n * Indicates that a password is required in order to join the conference.\r\n */\r\nexport const PASSWORD_REQUIRED = 'connection.passwordRequired';\r\n\r\n/**\r\n * Indicates that the connection was dropped, because of too many 5xx HTTP\r\n * errors on BOSH requests.\r\n */\r\nexport const SERVER_ERROR = 'connection.serverError';\r\n","/**\r\n * The events for the connection.\r\n */\r\n\r\n/**\r\n * Indicates that the connection has been disconnected. The event provides\r\n * the following parameters to its listeners:\r\n *\r\n * @param msg {string} a message associated with the disconnect such as the\r\n * last (known) error message\r\n */\r\nexport const CONNECTION_DISCONNECTED = 'connection.connectionDisconnected';\r\n\r\n/**\r\n * Indicates that the connection has been established. The event provides\r\n * the following parameters to its listeners:\r\n *\r\n * @param id {string} the ID of the local endpoint/participant/peer (within\r\n * the context of the established connection)\r\n */\r\nexport const CONNECTION_ESTABLISHED = 'connection.connectionEstablished';\r\n\r\n/**\r\n * Indicates that the connection has been failed for some reason. The event\r\n * provides the following parameters to its listeners:\r\n *\r\n * @param errType {JitsiConnectionErrors} the type of error associated with\r\n * the failure\r\n * @param errReason {string} the error (message) associated with the failure\r\n * @param credentials {object} the credentials used to connect (if any)\r\n * @param errReasonDetails {object} an optional object with details about\r\n * the error, like shard moving, suspending. Used for analytics purposes.\r\n */\r\nexport const CONNECTION_FAILED = 'connection.connectionFailed';\r\n\r\n/**\r\n * Indicates that the performed action cannot be executed because the\r\n * connection is not in the correct state(connected, disconnected, etc.)\r\n */\r\nexport const WRONG_STATE = 'connection.wrongState';\r\n","import EventEmitter from 'events';\r\n\r\nimport * as MediaType from './service/RTC/MediaType';\r\nimport browser from './modules/browser';\r\nimport RTC from './modules/RTC/RTC';\r\nimport RTCEvents from './service/RTC/RTCEvents';\r\nimport Statistics from './modules/statistics/statistics';\r\n\r\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\r\n\r\nconst AUDIO_PERMISSION_NAME = 'microphone';\r\nconst PERMISSION_GRANTED_STATUS = 'granted';\r\nconst VIDEO_PERMISSION_NAME = 'camera';\r\n\r\n/**\r\n * Media devices utilities for Jitsi.\r\n */\r\nclass JitsiMediaDevices {\r\n    /**\r\n     * Initializes a {@code JitsiMediaDevices} object. There will be a single\r\n     * instance of this class.\r\n     */\r\n    constructor() {\r\n        this._eventEmitter = new EventEmitter();\r\n        this._grantedPermissions = {};\r\n\r\n        RTC.addListener(\r\n            RTCEvents.DEVICE_LIST_CHANGED,\r\n            devices =>\r\n                this._eventEmitter.emit(\r\n                    JitsiMediaDevicesEvents.DEVICE_LIST_CHANGED,\r\n                    devices));\r\n        RTC.addListener(\r\n            RTCEvents.DEVICE_LIST_AVAILABLE,\r\n            devices =>\r\n                this._logOutputDevice(\r\n                    this.getAudioOutputDevice(),\r\n                    devices));\r\n        RTC.addListener(\r\n            RTCEvents.GRANTED_PERMISSIONS,\r\n            grantedPermissions =>\r\n                this._handleGrantedPermissions(grantedPermissions));\r\n\r\n        // Test if the W3C Permissions API is implemented and the 'camera' and\r\n        // 'microphone' permissions are implemented. (Testing for at least one\r\n        // of them seems sufficient).\r\n        this._permissionsApiSupported = new Promise(resolve => {\r\n            if (!navigator.permissions) {\r\n                resolve(false);\r\n\r\n                return;\r\n            }\r\n\r\n            navigator.permissions.query({ name: VIDEO_PERMISSION_NAME })\r\n                .then(() => resolve(true), () => resolve(false));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updated the local granted permissions cache. A permissions might be\r\n     * granted, denied, or undefined. This is represented by having its media\r\n     * type key set to {@code true} or {@code false} respectively.\r\n     *\r\n     * @param {Object} grantedPermissions - Array with the permissions\r\n     * which were granted.\r\n     */\r\n    _handleGrantedPermissions(grantedPermissions) {\r\n        this._grantedPermissions = {\r\n            ...this._grantedPermissions,\r\n            ...grantedPermissions\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gathers data and sends it to statistics.\r\n     * @param deviceID the device id to log\r\n     * @param devices list of devices\r\n     */\r\n    _logOutputDevice(deviceID, devices) {\r\n        const device\r\n            = devices.find(\r\n                d => d.kind === 'audiooutput' && d.deviceId === deviceID);\r\n\r\n        if (device) {\r\n            Statistics.sendActiveDeviceListEvent(\r\n                RTC.getEventDataForActiveDevice(device));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Executes callback with list of media devices connected.\r\n     * @param {function} callback\r\n     */\r\n    enumerateDevices(callback) {\r\n        RTC.enumerateDevices(callback);\r\n    }\r\n\r\n    /**\r\n     * Checks if its possible to enumerate available cameras/micropones.\r\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\r\n     * the WebRTC stack is ready, either with true if the device listing is\r\n     * available available or with false otherwise.\r\n     */\r\n    isDeviceListAvailable() {\r\n        return RTC.isDeviceListAvailable();\r\n    }\r\n\r\n    /**\r\n     * Returns true if changing the input (camera / microphone) or output\r\n     * (audio) device is supported and false if not.\r\n     * @param {string} [deviceType] - type of device to change. Default is\r\n     *      undefined or 'input', 'output' - for audio output device change.\r\n     * @returns {boolean} true if available, false otherwise.\r\n     */\r\n    isDeviceChangeAvailable(deviceType) {\r\n        return RTC.isDeviceChangeAvailable(deviceType);\r\n    }\r\n\r\n    /**\r\n     * Checks if the permission for the given device was granted.\r\n     *\r\n     * @param {'audio'|'video'} [type] - type of devices to check,\r\n     *      undefined stands for both 'audio' and 'video' together\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    isDevicePermissionGranted(type) {\r\n        return new Promise(resolve => {\r\n            // Shortcut: first check if we already know the permission was\r\n            // granted.\r\n            if (type in this._grantedPermissions) {\r\n                resolve(this._grantedPermissions[type]);\r\n\r\n                return;\r\n            }\r\n\r\n            // Check using the Permissions API.\r\n            this._permissionsApiSupported.then(supported => {\r\n                if (!supported) {\r\n                    resolve(false);\r\n\r\n                    return;\r\n                }\r\n\r\n                const promises = [];\r\n\r\n                switch (type) {\r\n                case MediaType.VIDEO:\r\n                    promises.push(\r\n                        navigator.permissions.query({\r\n                            name: VIDEO_PERMISSION_NAME\r\n                        }));\r\n                    break;\r\n                case MediaType.AUDIO:\r\n                    promises.push(\r\n                        navigator.permissions.query({\r\n                            name: AUDIO_PERMISSION_NAME\r\n                        }));\r\n                    break;\r\n                default:\r\n                    promises.push(\r\n                        navigator.permissions.query({\r\n                            name: VIDEO_PERMISSION_NAME\r\n                        }));\r\n                    promises.push(\r\n                        navigator.permissions.query({\r\n                            name: AUDIO_PERMISSION_NAME\r\n                        }));\r\n                }\r\n\r\n                Promise.all(promises).then(\r\n                    results => resolve(results.every(permissionStatus => {\r\n                        // The status attribute is deprecated, and state\r\n                        // should be used instead, but check both for now\r\n                        // for backwards compatibility.\r\n                        const grantStatus = permissionStatus.state\r\n                            || permissionStatus.status;\r\n\r\n                        return grantStatus === PERMISSION_GRANTED_STATUS;\r\n                    })),\r\n                    () => resolve(false)\r\n                );\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns true if it is possible to be simultaneously capturing audio\r\n     * from more than one device.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isMultipleAudioInputSupported() {\r\n        return !browser.isFirefox();\r\n    }\r\n\r\n    /**\r\n     * Returns currently used audio output device id, 'default' stands\r\n     * for default device\r\n     * @returns {string}\r\n     */\r\n    getAudioOutputDevice() {\r\n        return RTC.getAudioOutputDevice();\r\n    }\r\n\r\n    /**\r\n     * Sets current audio output device.\r\n     * @param {string} deviceId - id of 'audiooutput' device from\r\n     *      navigator.mediaDevices.enumerateDevices(), 'default' is for\r\n     *      default device\r\n     * @returns {Promise} - resolves when audio output is changed, is rejected\r\n     *      otherwise\r\n     */\r\n    setAudioOutputDevice(deviceId) {\r\n        const availableDevices = RTC.getCurrentlyAvailableMediaDevices();\r\n\r\n        if (availableDevices && availableDevices.length > 0) {\r\n            // if we have devices info report device to stats\r\n            // normally this will not happen on startup as this method is called\r\n            // too early. This will happen only on user selection of new device\r\n            this._logOutputDevice(\r\n                deviceId, RTC.getCurrentlyAvailableMediaDevices());\r\n        }\r\n\r\n        return RTC.setAudioOutputDevice(deviceId);\r\n    }\r\n\r\n    /**\r\n     * Adds an event handler.\r\n     * @param {string} event - event name\r\n     * @param {function} handler - event handler\r\n     */\r\n    addEventListener(event, handler) {\r\n        this._eventEmitter.addListener(event, handler);\r\n    }\r\n\r\n    /**\r\n     * Removes event handler.\r\n     * @param {string} event - event name\r\n     * @param {function} handler - event handler\r\n     */\r\n    removeEventListener(event, handler) {\r\n        this._eventEmitter.removeListener(event, handler);\r\n    }\r\n\r\n    /**\r\n     * Emits an event.\r\n     * @param {string} event - event name\r\n     */\r\n    emitEvent(event, ...args) {\r\n        this._eventEmitter.emit(event, ...args);\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the current browser can support capturing video,\r\n     * be it camera or desktop, and displaying received video.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    supportsVideo() {\r\n        // Defer to the browser capabilities to allow exposure of the api to the\r\n        // consumer but prevent other files from having to import\r\n        // JitsiMediaDevices.\r\n        return browser.supportsVideo();\r\n    }\r\n}\r\n\r\nexport default new JitsiMediaDevices();\r\n","/**\r\n * The events for the media devices.\r\n */\r\n\r\n/**\r\n * Indicates that the list of available media devices has been changed. The\r\n * event provides the following parameters to its listeners:\r\n *\r\n * @param {MediaDeviceInfo[]} devices - array of MediaDeviceInfo or\r\n *  MediaDeviceInfo-like objects that are currently connected.\r\n *  @see https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo\r\n */\r\nexport const DEVICE_LIST_CHANGED = 'mediaDevices.devicechange';\r\n\r\n/**\r\n * Indicates that the environment is currently showing permission prompt to\r\n * access camera and/or microphone. The event provides the following\r\n * parameters to its listeners:\r\n *\r\n * @param {'chrome'|'opera'|'firefox'|'safari'|'nwjs'\r\n *  |'react-native'|'android'} environmentType - type of browser or\r\n *  other execution environment.\r\n */\r\nexport const PERMISSION_PROMPT_IS_SHOWN\r\n    = 'mediaDevices.permissionPromptIsShown';\r\n","/* global __filename */\r\n\r\nimport getActiveAudioDevice from './modules/detection/ActiveDeviceDetector';\r\nimport AudioMixer from './modules/webaudio/AudioMixer';\r\nimport * as DetectionEvents from './modules/detection/DetectionEvents';\r\nimport TrackVADEmitter from './modules/detection/TrackVADEmitter';\r\nimport { createGetUserMediaEvent } from './service/statistics/AnalyticsEvents';\r\nimport AuthUtil from './modules/util/AuthUtil';\r\nimport * as ConnectionQualityEvents\r\n    from './service/connectivity/ConnectionQualityEvents';\r\nimport * as E2ePingEvents from './service/e2eping/E2ePingEvents';\r\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\r\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\r\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\r\nimport JitsiConnection from './JitsiConnection';\r\nimport * as JitsiConnectionErrors from './JitsiConnectionErrors';\r\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\r\nimport JitsiMediaDevices from './JitsiMediaDevices';\r\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\r\nimport JitsiTrackError from './JitsiTrackError';\r\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\r\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\r\nimport * as JitsiTranscriptionStatus from './JitsiTranscriptionStatus';\r\nimport LocalStatsCollector from './modules/statistics/LocalStatsCollector';\r\nimport Logger from 'jitsi-meet-logger';\r\nimport * as MediaType from './service/RTC/MediaType';\r\nimport Resolutions from './service/RTC/Resolutions';\r\nimport { ParticipantConnectionStatus }\r\n    from './modules/connectivity/ParticipantConnectionStatus';\r\nimport RTC from './modules/RTC/RTC';\r\nimport browser from './modules/browser';\r\nimport ScriptUtil from './modules/util/ScriptUtil';\r\nimport recordingConstants from './modules/recording/recordingConstants';\r\nimport ProxyConnectionService\r\n    from './modules/proxyconnection/ProxyConnectionService';\r\nimport Statistics from './modules/statistics/statistics';\r\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\r\n\r\nconst logger = Logger.getLogger(__filename);\r\n\r\n/**\r\n * The amount of time to wait until firing\r\n * {@link JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN} event.\r\n */\r\nconst USER_MEDIA_PERMISSION_PROMPT_TIMEOUT = 1000;\r\n\r\n/**\r\n * Gets the next lowest desirable resolution to try for a camera. If the given\r\n * resolution is already the lowest acceptable resolution, returns {@code null}.\r\n *\r\n * @param resolution the current resolution\r\n * @return the next lowest resolution from the given one, or {@code null} if it\r\n * is already the lowest acceptable resolution.\r\n */\r\nfunction getLowerResolution(resolution) {\r\n    if (!Resolutions[resolution]) {\r\n        return null;\r\n    }\r\n    const order = Resolutions[resolution].order;\r\n    let res = null;\r\n    let resName = null;\r\n\r\n    Object.keys(Resolutions).forEach(r => {\r\n        const value = Resolutions[r];\r\n\r\n        if (!res || (res.order < value.order && value.order < order)) {\r\n            resName = r;\r\n            res = value;\r\n        }\r\n    });\r\n\r\n    if (resName === resolution) {\r\n        resName = null;\r\n    }\r\n\r\n    return resName;\r\n}\r\n\r\n/**\r\n * Extracts from an 'options' objects with a specific format (TODO what IS the\r\n * format?) the attributes which are to be logged in analytics events.\r\n *\r\n * @param options gum options (???)\r\n * @returns {*} the attributes to attach to analytics events.\r\n */\r\nfunction getAnalyticsAttributesFromOptions(options) {\r\n    const attributes = {\r\n        'audio_requested':\r\n            options.devices.includes('audio'),\r\n        'video_requested':\r\n            options.devices.includes('video'),\r\n        'screen_sharing_requested':\r\n            options.devices.includes('desktop')\r\n    };\r\n\r\n    if (attributes.video_requested) {\r\n        attributes.resolution = options.resolution;\r\n    }\r\n\r\n    return attributes;\r\n}\r\n\r\n/**\r\n * Tries to deal with the following problem: {@code JitsiMeetJS} is not only\r\n * this module, it's also a global (i.e. attached to {@code window}) namespace\r\n * for all globals of the projects in the Jitsi Meet family. If lib-jitsi-meet\r\n * is loaded through an HTML {@code script} tag, {@code JitsiMeetJS} will\r\n * automatically be attached to {@code window} by webpack. Unfortunately,\r\n * webpack's source code does not check whether the global variable has already\r\n * been assigned and overwrites it. Which is OK for the module\r\n * {@code JitsiMeetJS} but is not OK for the namespace {@code JitsiMeetJS}\r\n * because it may already contain the values of other projects in the Jitsi Meet\r\n * family. The solution offered here works around webpack by merging all\r\n * existing values of the namespace {@code JitsiMeetJS} into the module\r\n * {@code JitsiMeetJS}.\r\n *\r\n * @param {Object} module - The module {@code JitsiMeetJS} (which will be\r\n * exported and may be attached to {@code window} by webpack later on).\r\n * @private\r\n * @returns {Object} - A {@code JitsiMeetJS} module which contains all existing\r\n * value of the namespace {@code JitsiMeetJS} (if any).\r\n */\r\nfunction _mergeNamespaceAndModule(module) {\r\n    return (\r\n        typeof window.JitsiMeetJS === 'object'\r\n            ? Object.assign({}, window.JitsiMeetJS, module)\r\n            : module);\r\n}\r\n\r\n/**\r\n * The public API of the Jitsi Meet library (a.k.a. {@code JitsiMeetJS}).\r\n */\r\nexport default _mergeNamespaceAndModule({\r\n\r\n    version: '{#COMMIT_HASH#}',\r\n\r\n    JitsiConnection,\r\n\r\n    /**\r\n     * {@code ProxyConnectionService} is used to connect a remote peer to a\r\n     * local Jitsi participant without going through a Jitsi conference. It is\r\n     * currently used for room integration development, specifically wireless\r\n     * screensharing. Its API is experimental and will likely change; usage of\r\n     * it is advised against.\r\n     */\r\n    ProxyConnectionService,\r\n\r\n    constants: {\r\n        participantConnectionStatus: ParticipantConnectionStatus,\r\n        recording: recordingConstants,\r\n        sipVideoGW: VideoSIPGWConstants,\r\n        transcriptionStatus: JitsiTranscriptionStatus\r\n    },\r\n    events: {\r\n        conference: JitsiConferenceEvents,\r\n        connection: JitsiConnectionEvents,\r\n        detection: DetectionEvents,\r\n        track: JitsiTrackEvents,\r\n        mediaDevices: JitsiMediaDevicesEvents,\r\n        connectionQuality: ConnectionQualityEvents,\r\n        e2eping: E2ePingEvents\r\n    },\r\n    errors: {\r\n        conference: JitsiConferenceErrors,\r\n        connection: JitsiConnectionErrors,\r\n        track: JitsiTrackErrors\r\n    },\r\n    errorTypes: {\r\n        JitsiTrackError\r\n    },\r\n    logLevels: Logger.levels,\r\n    mediaDevices: JitsiMediaDevices,\r\n    analytics: Statistics.analytics,\r\n    init(options = {}) {\r\n        Statistics.init(options);\r\n\r\n        // Initialize global window.connectionTimes\r\n        // FIXME do not use 'window'\r\n        if (!window.connectionTimes) {\r\n            window.connectionTimes = {};\r\n        }\r\n\r\n        if (options.enableAnalyticsLogging !== true) {\r\n            logger.warn('Analytics disabled, disposing.');\r\n            this.analytics.dispose();\r\n        }\r\n\r\n        if (options.enableWindowOnErrorHandler) {\r\n            GlobalOnErrorHandler.addHandler(\r\n                this.getGlobalOnErrorHandler.bind(this));\r\n        }\r\n\r\n        // Log deployment-specific information, if available. Defined outside\r\n        // the application by individual deployments\r\n        const aprops = options.deploymentInfo;\r\n\r\n        if (aprops && Object.keys(aprops).length > 0) {\r\n            const logObject = {};\r\n\r\n            for (const attr in aprops) {\r\n                if (aprops.hasOwnProperty(attr)) {\r\n                    logObject[attr] = aprops[attr];\r\n                }\r\n            }\r\n\r\n            logObject.id = 'deployment_info';\r\n            Statistics.sendLog(JSON.stringify(logObject));\r\n        }\r\n\r\n        if (this.version) {\r\n            const logObject = {\r\n                id: 'component_version',\r\n                component: 'lib-jitsi-meet',\r\n                version: this.version\r\n            };\r\n\r\n            Statistics.sendLog(JSON.stringify(logObject));\r\n        }\r\n\r\n        return RTC.init(options);\r\n    },\r\n\r\n    /**\r\n     * Returns whether the desktop sharing is enabled or not.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isDesktopSharingEnabled() {\r\n        return RTC.isDesktopSharingEnabled();\r\n    },\r\n\r\n    /**\r\n     * Returns whether the current execution environment supports WebRTC (for\r\n     * use within this library).\r\n     *\r\n     * @returns {boolean} {@code true} if WebRTC is supported in the current\r\n     * execution environment (for use within this library); {@code false},\r\n     * otherwise.\r\n     */\r\n    isWebRtcSupported() {\r\n        return RTC.isWebRtcSupported();\r\n    },\r\n\r\n    setLogLevel(level) {\r\n        Logger.setLogLevel(level);\r\n    },\r\n\r\n    /**\r\n     * Sets the log level to the <tt>Logger</tt> instance with given id.\r\n     *\r\n     * @param {Logger.levels} level the logging level to be set\r\n     * @param {string} id the logger id to which new logging level will be set.\r\n     * Usually it's the name of the JavaScript source file including the path\r\n     * ex. \"modules/xmpp/ChatRoom.js\"\r\n     */\r\n    setLogLevelById(level, id) {\r\n        Logger.setLogLevelById(level, id);\r\n    },\r\n\r\n    /**\r\n     * Registers new global logger transport to the library logging framework.\r\n     *\r\n     * @param globalTransport\r\n     * @see Logger.addGlobalTransport\r\n     */\r\n    addGlobalLogTransport(globalTransport) {\r\n        Logger.addGlobalTransport(globalTransport);\r\n    },\r\n\r\n    /**\r\n     * Removes global logging transport from the library logging framework.\r\n     *\r\n     * @param globalTransport\r\n     * @see Logger.removeGlobalTransport\r\n     */\r\n    removeGlobalLogTransport(globalTransport) {\r\n        Logger.removeGlobalTransport(globalTransport);\r\n    },\r\n\r\n    /**\r\n    * Sets global options which will be used by all loggers. Changing these\r\n    * works even after other loggers are created.\r\n    *\r\n    * @param options\r\n    * @see Logger.setGlobalOptions\r\n    */\r\n    setGlobalLogOptions(options) {\r\n        Logger.setGlobalOptions(options);\r\n    },\r\n\r\n    /**\r\n     * Creates the media tracks and returns them trough the callback.\r\n     *\r\n     * @param options Object with properties / settings specifying the tracks\r\n     * which should be created. should be created or some additional\r\n     * configurations about resolution for example.\r\n     * @param {Array} options.effects optional effects array for the track\r\n     * @param {Array} options.devices the devices that will be requested\r\n     * @param {string} options.resolution resolution constraints\r\n     * @param {string} options.cameraDeviceId\r\n     * @param {string} options.micDeviceId\r\n     * @param {object} options.desktopSharingExtensionExternalInstallation -\r\n     * enables external installation process for desktop sharing extension if\r\n     * the inline installation is not posible. The following properties should\r\n     * be provided:\r\n     * @param {intiger} interval - the interval (in ms) for\r\n     * checking whether the desktop sharing extension is installed or not\r\n     * @param {Function} checkAgain - returns boolean. While checkAgain()==true\r\n     * createLocalTracks will wait and check on every \"interval\" ms for the\r\n     * extension. If the desktop extension is not install and checkAgain()==true\r\n     * createLocalTracks will finish with rejected Promise.\r\n     * @param {Function} listener - The listener will be called to notify the\r\n     * user of lib-jitsi-meet that createLocalTracks is starting external\r\n     * extension installation process.\r\n     * NOTE: If the inline installation process is not possible and external\r\n     * installation is enabled the listener property will be called to notify\r\n     * the start of external installation process. After that createLocalTracks\r\n     * will start to check for the extension on every interval ms until the\r\n     * plugin is installed or until checkAgain return false. If the extension\r\n     * is found createLocalTracks will try to get the desktop sharing track and\r\n     * will finish the execution. If checkAgain returns false, createLocalTracks\r\n     * will finish the execution with rejected Promise.\r\n     *\r\n     * @param {boolean} (firePermissionPromptIsShownEvent) - if event\r\n     * JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN should be fired\r\n     * @param originalOptions - internal use only, to be able to store the\r\n     * originally requested options.\r\n     * @returns {Promise.<{Array.<JitsiTrack>}, JitsiConferenceError>} A promise\r\n     * that returns an array of created JitsiTracks if resolved, or a\r\n     * JitsiConferenceError if rejected.\r\n     */\r\n    createLocalTracks(\r\n            options = {}, firePermissionPromptIsShownEvent, originalOptions) {\r\n        let promiseFulfilled = false;\r\n\r\n        if (firePermissionPromptIsShownEvent === true) {\r\n            window.setTimeout(() => {\r\n                if (!promiseFulfilled) {\r\n                    JitsiMediaDevices.emitEvent(\r\n                        JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN,\r\n                        browser.getName());\r\n                }\r\n            }, USER_MEDIA_PERMISSION_PROMPT_TIMEOUT);\r\n        }\r\n\r\n        if (!window.connectionTimes) {\r\n            window.connectionTimes = {};\r\n        }\r\n        window.connectionTimes['obtainPermissions.start']\r\n            = window.performance.now();\r\n\r\n        return RTC.obtainAudioAndVideoPermissions(options)\r\n            .then(tracks => {\r\n                promiseFulfilled = true;\r\n\r\n                window.connectionTimes['obtainPermissions.end']\r\n                    = window.performance.now();\r\n\r\n                Statistics.sendAnalytics(\r\n                    createGetUserMediaEvent(\r\n                        'success',\r\n                        getAnalyticsAttributesFromOptions(options)));\r\n\r\n                if (!RTC.options.disableAudioLevels) {\r\n                    for (let i = 0; i < tracks.length; i++) {\r\n                        const track = tracks[i];\r\n                        const mStream = track.getOriginalStream();\r\n\r\n                        if (track.getType() === MediaType.AUDIO) {\r\n                            Statistics.startLocalStats(mStream,\r\n                                track.setAudioLevel.bind(track));\r\n                            track.addEventListener(\r\n                                JitsiTrackEvents.LOCAL_TRACK_STOPPED,\r\n                                () => {\r\n                                    Statistics.stopLocalStats(mStream);\r\n                                });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // set real device ids\r\n                const currentlyAvailableMediaDevices\r\n                    = RTC.getCurrentlyAvailableMediaDevices();\r\n\r\n                if (currentlyAvailableMediaDevices) {\r\n                    for (let i = 0; i < tracks.length; i++) {\r\n                        const track = tracks[i];\r\n\r\n                        track._setRealDeviceIdFromDeviceList(\r\n                            currentlyAvailableMediaDevices);\r\n                    }\r\n                }\r\n\r\n                // set the contentHint to \"detail\" for desktop tracks\r\n                // eslint-disable-next-line prefer-const\r\n                for (const track of tracks) {\r\n                    if (track.type === MediaType.VIDEO\r\n                        && track.videoType === 'desktop') {\r\n                        this.setVideoTrackContentHints(track.track, 'detail');\r\n                    }\r\n                }\r\n\r\n                return tracks;\r\n            })\r\n            .catch(error => {\r\n                promiseFulfilled = true;\r\n\r\n                if (error.name === JitsiTrackErrors.UNSUPPORTED_RESOLUTION\r\n                    && !browser.usesNewGumFlow()) {\r\n                    const oldResolution = options.resolution || '720';\r\n                    const newResolution = getLowerResolution(oldResolution);\r\n\r\n                    if (newResolution !== null) {\r\n                        options.resolution = newResolution;\r\n\r\n                        logger.debug(\r\n                            'Retry createLocalTracks with resolution',\r\n                            newResolution);\r\n\r\n                        Statistics.sendAnalytics(createGetUserMediaEvent(\r\n                            'warning',\r\n                            {\r\n                                'old_resolution': oldResolution,\r\n                                'new_resolution': newResolution,\r\n                                reason: 'unsupported resolution'\r\n                            }));\r\n\r\n                        return this.createLocalTracks(\r\n                            options,\r\n                            undefined,\r\n                            originalOptions || Object.assign({}, options));\r\n                    }\r\n\r\n                    // We tried everything. If there is a mandatory device id,\r\n                    // remove it and let gum find a device to use.\r\n                    if (originalOptions\r\n                        && error.gum.constraints\r\n                        && error.gum.constraints.video\r\n                        && error.gum.constraints.video.mandatory\r\n                        && error.gum.constraints.video.mandatory.sourceId) {\r\n                        originalOptions.cameraDeviceId = undefined;\r\n\r\n                        return this.createLocalTracks(originalOptions);\r\n                    }\r\n                }\r\n\r\n                if (error.name\r\n                        === JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED) {\r\n                    // User cancelled action is not really an error, so only\r\n                    // log it as an event to avoid having conference classified\r\n                    // as partially failed\r\n                    const logObject = {\r\n                        id: 'chrome_extension_user_canceled',\r\n                        message: error.message\r\n                    };\r\n\r\n                    Statistics.sendLog(JSON.stringify(logObject));\r\n\r\n                    Statistics.sendAnalytics(\r\n                        createGetUserMediaEvent(\r\n                            'warning',\r\n                            {\r\n                                reason: 'extension install user canceled'\r\n                            }));\r\n                } else if (error.name === JitsiTrackErrors.NOT_FOUND) {\r\n                    // logs not found devices with just application log to cs\r\n                    const logObject = {\r\n                        id: 'usermedia_missing_device',\r\n                        status: error.gum.devices\r\n                    };\r\n\r\n                    Statistics.sendLog(JSON.stringify(logObject));\r\n\r\n                    const attributes\r\n                        = getAnalyticsAttributesFromOptions(options);\r\n\r\n                    attributes.reason = 'device not found';\r\n                    attributes.devices = error.gum.devices.join('.');\r\n                    Statistics.sendAnalytics(\r\n                        createGetUserMediaEvent('error', attributes));\r\n                } else {\r\n                    // Report gUM failed to the stats\r\n                    Statistics.sendGetUserMediaFailed(error);\r\n\r\n                    const attributes\r\n                        = getAnalyticsAttributesFromOptions(options);\r\n\r\n                    attributes.reason = error.name;\r\n                    Statistics.sendAnalytics(\r\n                        createGetUserMediaEvent('error', attributes));\r\n                }\r\n\r\n                window.connectionTimes['obtainPermissions.end']\r\n                    = window.performance.now();\r\n\r\n                return Promise.reject(error);\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Create a TrackVADEmitter service that connects an audio track to an VAD (voice activity detection) processor in\r\n     * order to obtain VAD scores for individual PCM audio samples.\r\n     * @param {string} localAudioDeviceId - The target local audio device.\r\n     * @param {number} sampleRate - Sample rate at which the emitter will operate. Possible values  256, 512, 1024,\r\n     * 4096, 8192, 16384. Passing other values will default to closes neighbor.\r\n     * I.e. Providing a value of 4096 means that the emitter will process 4096 PCM samples at a time, higher values mean\r\n     * longer calls, lowers values mean more calls but shorter.\r\n     * @param {Object} vadProcessor - VAD Processors that does the actual compute on a PCM sample.The processor needs\r\n     * to implement the following functions:\r\n     * - <tt>getSampleLength()</tt> - Returns the sample size accepted by calculateAudioFrameVAD.\r\n     * - <tt>getRequiredPCMFrequency()</tt> - Returns the PCM frequency at which the processor operates.\r\n     * i.e. (16KHz, 44.1 KHz etc.)\r\n     * - <tt>calculateAudioFrameVAD(pcmSample)</tt> - Process a 32 float pcm sample of getSampleLength size.\r\n     * @returns {Promise<TrackVADEmitter>}\r\n     */\r\n    createTrackVADEmitter(localAudioDeviceId, sampleRate, vadProcessor) {\r\n        return TrackVADEmitter.create(localAudioDeviceId, sampleRate, vadProcessor);\r\n    },\r\n\r\n    /**\r\n     * Create AudioMixer, which is essentially a wrapper over web audio ChannelMergerNode. It essentially allows the\r\n     * user to mix multiple MediaStreams into a single one.\r\n     *\r\n     * @returns {AudioMixer}\r\n     */\r\n    createAudioMixer() {\r\n        return new AudioMixer();\r\n    },\r\n\r\n    /**\r\n     * Go through all audio devices on the system and return one that is active, i.e. has audio signal.\r\n     *\r\n     * @returns Promise<Object> - Object containing information about the found device.\r\n     */\r\n    getActiveAudioDevice() {\r\n        return getActiveAudioDevice();\r\n    },\r\n\r\n    /**\r\n     * Checks if its possible to enumerate available cameras/microphones.\r\n     *\r\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\r\n     * the WebRTC stack is ready, either with true if the device listing is\r\n     * available available or with false otherwise.\r\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceListAvailable instead\r\n     */\r\n    isDeviceListAvailable() {\r\n        logger.warn('This method is deprecated, use '\r\n            + 'JitsiMeetJS.mediaDevices.isDeviceListAvailable instead');\r\n\r\n        return this.mediaDevices.isDeviceListAvailable();\r\n    },\r\n\r\n    /**\r\n     * Returns true if changing the input (camera / microphone) or output\r\n     * (audio) device is supported and false if not.\r\n     *\r\n     * @param {string} [deviceType] - type of device to change. Default is\r\n     * {@code undefined} or 'input', 'output' - for audio output device change.\r\n     * @returns {boolean} {@code true} if available; {@code false}, otherwise.\r\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead\r\n     */\r\n    isDeviceChangeAvailable(deviceType) {\r\n        logger.warn('This method is deprecated, use '\r\n            + 'JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead');\r\n\r\n        return this.mediaDevices.isDeviceChangeAvailable(deviceType);\r\n    },\r\n\r\n\r\n    /**\r\n     * Checks if the current environment supports having multiple audio\r\n     * input devices in use simultaneously.\r\n     *\r\n     * @returns {boolean} True if multiple audio input devices can be used.\r\n     */\r\n    isMultipleAudioInputSupported() {\r\n        return this.mediaDevices.isMultipleAudioInputSupported();\r\n    },\r\n\r\n    /**\r\n     * Checks if local tracks can collect stats and collection is enabled.\r\n     *\r\n     * @param {boolean} True if stats are being collected for local tracks.\r\n     */\r\n    isCollectingLocalStats() {\r\n        return Statistics.audioLevelsEnabled\r\n            && LocalStatsCollector.isLocalStatsSupported();\r\n    },\r\n\r\n    /**\r\n     * Executes callback with list of media devices connected.\r\n     *\r\n     * @param {function} callback\r\n     * @deprecated use JitsiMeetJS.mediaDevices.enumerateDevices instead\r\n     */\r\n    enumerateDevices(callback) {\r\n        logger.warn('This method is deprecated, use '\r\n            + 'JitsiMeetJS.mediaDevices.enumerateDevices instead');\r\n        this.mediaDevices.enumerateDevices(callback);\r\n    },\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    /**\r\n     * @returns function that can be used to be attached to window.onerror and\r\n     * if options.enableWindowOnErrorHandler is enabled returns\r\n     * the function used by the lib.\r\n     * (function(message, source, lineno, colno, error)).\r\n     */\r\n    getGlobalOnErrorHandler(message, source, lineno, colno, error) {\r\n        logger.error(\r\n            `UnhandledError: ${message}`,\r\n            `Script: ${source}`,\r\n            `Line: ${lineno}`,\r\n            `Column: ${colno}`,\r\n            'StackTrace: ', error);\r\n        Statistics.reportGlobalError(error);\r\n    },\r\n\r\n    /**\r\n     * Set the contentHint on the transmitted stream track to indicate\r\n     * charaterstics in the video stream, which informs PeerConnection\r\n     * on how to encode the track (to prefer motion or individual frame detail)\r\n     * @param {MediaStreamTrack} track - the track that is transmitted\r\n     * @param {String} hint - contentHint value that needs to be set on the track\r\n     */\r\n    setVideoTrackContentHints(track, hint) {\r\n        if ('contentHint' in track) {\r\n            track.contentHint = hint;\r\n            if (track.contentHint !== hint) {\r\n                logger.debug('Invalid video track contentHint');\r\n            }\r\n        } else {\r\n            logger.debug('MediaStreamTrack contentHint attribute not supported');\r\n        }\r\n    },\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Represents a hub/namespace for utility functionality which may be of\r\n     * interest to lib-jitsi-meet clients.\r\n     */\r\n    util: {\r\n        AuthUtil,\r\n        ScriptUtil,\r\n        browser\r\n    }\r\n});\r\n","\r\nimport { Strophe } from 'strophe.js';\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\n\r\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\r\nimport { ParticipantConnectionStatus }\r\n    from './modules/connectivity/ParticipantConnectionStatus';\r\nimport { ERROR_FEATURE_VERSION_MISMATCH } from './modules/xmpp/Caps';\r\nimport * as MediaType from './service/RTC/MediaType';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Represents a participant in (i.e. a member of) a conference.\r\n */\r\nexport default class JitsiParticipant {\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    /**\r\n     * Initializes a new JitsiParticipant instance.\r\n     *\r\n     * @constructor\r\n     * @param jid the conference XMPP jid\r\n     * @param conference\r\n     * @param displayName\r\n     * @param {Boolean} hidden - True if the new JitsiParticipant instance is to\r\n     * represent a hidden participant; otherwise, false.\r\n     * @param {string} statsID - optional participant statsID\r\n     * @param {string} status - the initial status if any.\r\n     * @param {object} identity - the xmpp identity\r\n     */\r\n    constructor(jid, conference, displayName, hidden, statsID, status, identity) {\r\n        this._jid = jid;\r\n        this._id = Strophe.getResourceFromJid(jid);\r\n        this._conference = conference;\r\n        this._displayName = displayName;\r\n        this._supportsDTMF = false;\r\n        this._tracks = [];\r\n        this._role = 'none';\r\n        this._status = status;\r\n        this._hidden = hidden;\r\n        this._statsID = statsID;\r\n        this._connectionStatus = ParticipantConnectionStatus.ACTIVE;\r\n        this._properties = {};\r\n        this._identity = identity;\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * @returns {JitsiConference} The conference that this participant belongs\r\n     * to.\r\n     */\r\n    getConference() {\r\n        return this._conference;\r\n    }\r\n\r\n    /**\r\n     * Gets the value of a property of this participant.\r\n     */\r\n    getProperty(name) {\r\n        return this._properties[name];\r\n    }\r\n\r\n    /**\r\n     * Checks whether this <tt>JitsiParticipant</tt> has any video tracks which\r\n     * are muted according to their underlying WebRTC <tt>MediaStreamTrack</tt>\r\n     * muted status.\r\n     * @return {boolean} <tt>true</tt> if this <tt>participant</tt> contains any\r\n     * video <tt>JitsiTrack</tt>s which are muted as defined in\r\n     * {@link JitsiTrack.isWebRTCTrackMuted}.\r\n     */\r\n    hasAnyVideoTrackWebRTCMuted() {\r\n        return (\r\n            this.getTracks().some(\r\n                jitsiTrack =>\r\n                    jitsiTrack.getType() === MediaType.VIDEO\r\n                        && jitsiTrack.isWebRTCTrackMuted()));\r\n    }\r\n\r\n    /**\r\n     * Updates participant's connection status.\r\n     * @param {string} state the current participant connection state.\r\n     * {@link ParticipantConnectionStatus}.\r\n     * @private\r\n     */\r\n    _setConnectionStatus(status) {\r\n        this._connectionStatus = status;\r\n    }\r\n\r\n    /**\r\n     * Return participant's connectivity status.\r\n     *\r\n     * @returns {string} the connection status\r\n     * <tt>ParticipantConnectionStatus</tt> of the user.\r\n     * {@link ParticipantConnectionStatus}.\r\n     */\r\n    getConnectionStatus() {\r\n        return this._connectionStatus;\r\n    }\r\n\r\n    /**\r\n     * Sets the value of a property of this participant, and fires an event if\r\n     * the value has changed.\r\n     * @name the name of the property.\r\n     * @value the value to set.\r\n     */\r\n    setProperty(name, value) {\r\n        const oldValue = this._properties[name];\r\n\r\n        if (value !== oldValue) {\r\n            this._properties[name] = value;\r\n            this._conference.eventEmitter.emit(\r\n                JitsiConferenceEvents.PARTICIPANT_PROPERTY_CHANGED,\r\n                this,\r\n                name,\r\n                oldValue,\r\n                value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @returns {Array.<JitsiTrack>} The list of media tracks for this\r\n     * participant.\r\n     */\r\n    getTracks() {\r\n        return this._tracks.slice();\r\n    }\r\n\r\n    /**\r\n     * @param {MediaType} mediaType\r\n     * @returns {Array.<JitsiTrack>} an array of media tracks for this\r\n     * participant, for given media type.\r\n     */\r\n    getTracksByMediaType(mediaType) {\r\n        return this.getTracks().filter(track => track.getType() === mediaType);\r\n    }\r\n\r\n    /**\r\n     * @returns {String} The ID of this participant.\r\n     */\r\n    getId() {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * @returns {String} The JID of this participant.\r\n     */\r\n    getJid() {\r\n        return this._jid;\r\n    }\r\n\r\n    /**\r\n     * @returns {String} The human-readable display name of this participant.\r\n     */\r\n    getDisplayName() {\r\n        return this._displayName;\r\n    }\r\n\r\n    /**\r\n     * @returns {String} The stats ID of this participant.\r\n     */\r\n    getStatsID() {\r\n        return this._statsID;\r\n    }\r\n\r\n    /**\r\n     * @returns {String} The status of the participant.\r\n     */\r\n    getStatus() {\r\n        return this._status;\r\n    }\r\n\r\n    /**\r\n     * @returns {Boolean} Whether this participant is a moderator or not.\r\n     */\r\n    isModerator() {\r\n        return this._role === 'moderator';\r\n    }\r\n\r\n    /**\r\n     * @returns {Boolean} Whether this participant is a hidden participant. Some\r\n     * special system participants may want to join hidden (like for example the\r\n     * recorder).\r\n     */\r\n    isHidden() {\r\n        return this._hidden;\r\n    }\r\n\r\n    /**\r\n     * @returns {Boolean} Whether this participant has muted their audio.\r\n     */\r\n    isAudioMuted() {\r\n        return this._isMediaTypeMuted(MediaType.AUDIO);\r\n    }\r\n\r\n    /**\r\n     * Determines whether all JitsiTracks which are of a specific MediaType and\r\n     * which belong to this JitsiParticipant are muted.\r\n     *\r\n     * @param {MediaType} mediaType - The MediaType of the JitsiTracks to be\r\n     * checked.\r\n     * @private\r\n     * @returns {Boolean} True if all JitsiTracks which are of the specified\r\n     * mediaType and which belong to this JitsiParticipant are muted; otherwise,\r\n     * false.\r\n     */\r\n    _isMediaTypeMuted(mediaType) {\r\n        return this.getTracks().reduce(\r\n            (muted, track) =>\r\n                muted && (track.getType() !== mediaType || track.isMuted()),\r\n            true);\r\n    }\r\n\r\n    /**\r\n     * @returns {Boolean} Whether this participant has muted their video.\r\n     */\r\n    isVideoMuted() {\r\n        return this._isMediaTypeMuted(MediaType.VIDEO);\r\n    }\r\n\r\n    /**\r\n     * @returns {String} The role of this participant.\r\n     */\r\n    getRole() {\r\n        return this._role;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    supportsDTMF() {\r\n        return this._supportsDTMF;\r\n    }\r\n\r\n    /**\r\n     * Returns a set with the features for the participant.\r\n     * @param {int} timeout the timeout in ms for reply from the participant.\r\n     * @returns {Promise<Set<String>, Error>}\r\n     */\r\n    getFeatures(timeout = 5000) {\r\n        if (this._getFeaturesPromise) {\r\n            return this._getFeaturesPromise;\r\n        }\r\n\r\n        this._getFeaturesPromise = this._conference.xmpp.caps.getFeatures(this._jid, timeout)\r\n            .catch(error => {\r\n                // Retry on feature version mismatch\r\n                if (error === ERROR_FEATURE_VERSION_MISMATCH) {\r\n                    return this._conference.xmpp.caps.getFeatures(this._jid, timeout);\r\n                }\r\n\r\n                logger.warn(`Failed to discover features of ${this._jid}`, error);\r\n\r\n                return Promise.reject(error);\r\n            });\r\n\r\n        return this._getFeaturesPromise\r\n            .then(result => {\r\n                this._getFeaturesPromise = undefined;\r\n\r\n                return result;\r\n            }, error => {\r\n                this._getFeaturesPromise = undefined;\r\n\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Returns the bot type for the participant.\r\n     *\r\n     * @returns {string|undefined} - The bot type of the participant.\r\n     */\r\n    getBotType() {\r\n        return this._botType;\r\n    }\r\n}\r\n","import * as JitsiTrackErrors from './JitsiTrackErrors';\r\n\r\nconst TRACK_ERROR_TO_MESSAGE_MAP = {};\r\n\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.UNSUPPORTED_RESOLUTION]\r\n    = 'Video resolution is not supported: ';\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_INSTALLATION_ERROR]\r\n    = 'Failed to install Chrome extension';\r\nTRACK_ERROR_TO_MESSAGE_MAP[\r\n    JitsiTrackErrors.CHROME_EXTENSION_USER_GESTURE_REQUIRED]\r\n    = 'Failed to install Chrome extension - installations can only be initiated'\r\n        + ' by a user gesture.';\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED]\r\n    = 'User canceled Chrome\\'s screen sharing prompt';\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR]\r\n    = 'Unknown error from Chrome extension';\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR]\r\n    = 'Unkown error from desktop picker';\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND]\r\n    = 'Failed to detect desktop picker';\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.GENERAL]\r\n    = 'Generic getUserMedia error';\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.PERMISSION_DENIED]\r\n    = 'User denied permission to use device(s): ';\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.NOT_FOUND]\r\n    = 'Requested device(s) was/were not found: ';\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CONSTRAINT_FAILED]\r\n    = 'Constraint could not be satisfied: ';\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_IS_DISPOSED]\r\n    = 'Track has been already disposed';\r\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_NO_STREAM_FOUND]\r\n    = 'Track does not have an associated Media Stream';\r\n\r\n// FIXME: Using prototype inheritance because otherwise instanceof is not\r\n// working properly (see https://github.com/babel/babel/issues/3083)\r\n\r\n/**\r\n *\r\n * Represents an error that occurred to a JitsiTrack. Can represent various\r\n * types of errors. For error descriptions (@see JitsiTrackErrors).\r\n *\r\n * @extends Error\r\n *\r\n *\r\n * @constructor\r\n * @param {Object|string} error - error object or error name\r\n * @param {Object|string} (options) - getUserMedia constraints object or\r\n * error message\r\n * @param {('audio'|'video'|'desktop'|'screen'|'audiooutput')[]} (devices) -\r\n * list of getUserMedia requested devices\r\n */\r\nfunction JitsiTrackError(error, options, devices) {\r\n    if (typeof error === 'object' && typeof error.name !== 'undefined') {\r\n        /**\r\n         * Additional information about original getUserMedia error\r\n         * and constraints.\r\n         * @type {{\r\n         *     error: Object,\r\n         *     constraints: Object,\r\n         *     devices: Array.<'audio'|'video'|'desktop'|'screen'>\r\n         * }}\r\n         */\r\n        this.gum = {\r\n            error,\r\n            constraints: options,\r\n            devices: devices && Array.isArray(devices)\r\n                ? devices.slice(0)\r\n                : undefined\r\n        };\r\n\r\n        switch (error.name) {\r\n        case 'NotAllowedError':\r\n        case 'PermissionDeniedError':\r\n        case 'SecurityError':\r\n            this.name = JitsiTrackErrors.PERMISSION_DENIED;\r\n            this.message\r\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\r\n                    + (this.gum.devices || []).join(', ');\r\n            break;\r\n        case 'DevicesNotFoundError':\r\n        case 'NotFoundError':\r\n            this.name = JitsiTrackErrors.NOT_FOUND;\r\n            this.message\r\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\r\n                    + (this.gum.devices || []).join(', ');\r\n            break;\r\n        case 'ConstraintNotSatisfiedError':\r\n        case 'OverconstrainedError': {\r\n            const constraintName = error.constraintName || error.constraint;\r\n\r\n            // we treat deviceId as unsupported resolution, as we want to\r\n            // retry and finally if everything fails to remove deviceId from\r\n            // mandatory constraints\r\n            if (options\r\n                    && options.video\r\n                    && (!devices || devices.indexOf('video') > -1)\r\n                    && (constraintName === 'minWidth'\r\n                        || constraintName === 'maxWidth'\r\n                        || constraintName === 'minHeight'\r\n                        || constraintName === 'maxHeight'\r\n                        || constraintName === 'width'\r\n                        || constraintName === 'height'\r\n                        || constraintName === 'deviceId')) {\r\n                this.name = JitsiTrackErrors.UNSUPPORTED_RESOLUTION;\r\n                this.message\r\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\r\n                        + getResolutionFromFailedConstraint(\r\n                            constraintName,\r\n                            options);\r\n            } else {\r\n                this.name = JitsiTrackErrors.CONSTRAINT_FAILED;\r\n                this.message\r\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\r\n                        + error.constraintName;\r\n            }\r\n            break;\r\n        }\r\n\r\n        default:\r\n            this.name = JitsiTrackErrors.GENERAL;\r\n            this.message\r\n                = error.message || TRACK_ERROR_TO_MESSAGE_MAP[this.name];\r\n            break;\r\n        }\r\n    } else if (typeof error === 'string') {\r\n        if (TRACK_ERROR_TO_MESSAGE_MAP[error]) {\r\n            this.name = error;\r\n            this.message = options || TRACK_ERROR_TO_MESSAGE_MAP[error];\r\n        } else {\r\n            // this is some generic error that do not fit any of our\r\n            // pre-defined errors, so don't give it any specific name, just\r\n            // store message\r\n            this.message = error;\r\n        }\r\n    } else {\r\n        throw new Error('Invalid arguments');\r\n    }\r\n\r\n    this.stack = error.stack || (new Error()).stack;\r\n}\r\n\r\nJitsiTrackError.prototype = Object.create(Error.prototype);\r\nJitsiTrackError.prototype.constructor = JitsiTrackError;\r\n\r\n/**\r\n * Gets failed resolution constraint from corresponding object.\r\n * @param {string} failedConstraintName\r\n * @param {Object} constraints\r\n * @returns {string|number}\r\n */\r\nfunction getResolutionFromFailedConstraint(failedConstraintName, constraints) {\r\n    if (constraints && constraints.video && constraints.video.mandatory) {\r\n        switch (failedConstraintName) {\r\n        case 'width':\r\n            return constraints.video.mandatory.minWidth;\r\n        case 'height':\r\n            return constraints.video.mandatory.minHeight;\r\n        default:\r\n            return constraints.video.mandatory[failedConstraintName] || '';\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nexport default JitsiTrackError;\r\n","/**\r\n * The errors for the JitsiTrack objects.\r\n */\r\n\r\n/**\r\n * Generic error for jidesha extension for Chrome.\r\n */\r\nexport const CHROME_EXTENSION_GENERIC_ERROR\r\n    = 'gum.chrome_extension_generic_error';\r\n\r\n/**\r\n * An error which indicates that the jidesha extension for Chrome is\r\n * failed to install.\r\n */\r\nexport const CHROME_EXTENSION_INSTALLATION_ERROR\r\n    = 'gum.chrome_extension_installation_error';\r\n\r\n/**\r\n * This error indicates that the attempt to start screensharing was initiated by\r\n * a script which did not originate in user gesture handler. It means that\r\n * you should to trigger the action again in response to a button click for\r\n * example.\r\n * @type {string}\r\n */\r\nexport const CHROME_EXTENSION_USER_GESTURE_REQUIRED\r\n    = 'gum.chrome_extension_user_gesture_required';\r\n\r\n/**\r\n * An error which indicates that user canceled screen sharing window\r\n * selection dialog in jidesha extension for Chrome.\r\n */\r\nexport const CHROME_EXTENSION_USER_CANCELED\r\n    = 'gum.chrome_extension_user_canceled';\r\n\r\n/**\r\n * An error which indicates that some of requested constraints in\r\n * getUserMedia call were not satisfied.\r\n */\r\nexport const CONSTRAINT_FAILED = 'gum.constraint_failed';\r\n\r\n/**\r\n * A generic error which indicates an error occurred while selecting\r\n * a DesktopCapturerSource from the electron app.\r\n */\r\nexport const ELECTRON_DESKTOP_PICKER_ERROR\r\n    = 'gum.electron_desktop_picker_error';\r\n\r\n/**\r\n * An error which indicates a custom desktop picker could not be detected\r\n * for the electron app.\r\n */\r\nexport const ELECTRON_DESKTOP_PICKER_NOT_FOUND\r\n    = 'gum.electron_desktop_picker_not_found';\r\n\r\n/**\r\n * An error which indicates that the jidesha extension for Firefox is\r\n * needed to proceed with screen sharing, and that it is not installed.\r\n */\r\nexport const FIREFOX_EXTENSION_NEEDED = 'gum.firefox_extension_needed';\r\n\r\n/**\r\n * Generic getUserMedia error.\r\n */\r\nexport const GENERAL = 'gum.general';\r\n\r\n/**\r\n * An error which indicates that requested device was not found.\r\n */\r\nexport const NOT_FOUND = 'gum.not_found';\r\n\r\n/**\r\n * An error which indicates that user denied permission to share requested\r\n * device.\r\n */\r\nexport const PERMISSION_DENIED = 'gum.permission_denied';\r\n\r\n/**\r\n * An error which indicates that track has been already disposed and cannot\r\n * be longer used.\r\n */\r\nexport const TRACK_IS_DISPOSED = 'track.track_is_disposed';\r\n\r\n/**\r\n * An error which indicates that track has no MediaStream associated.\r\n */\r\nexport const TRACK_NO_STREAM_FOUND = 'track.no_stream_found';\r\n\r\n/**\r\n * An error which indicates that requested video resolution is not supported\r\n * by a webcam.\r\n */\r\nexport const UNSUPPORTED_RESOLUTION = 'gum.unsupported_resolution';\r\n","/**\r\n * The media track was removed to the conference.\r\n */\r\nexport const LOCAL_TRACK_STOPPED = 'track.stopped';\r\n\r\n/**\r\n * Audio levels of a this track was changed.\r\n * The first argument is a number with audio level value in range [0, 1].\r\n * The second argument is a <tt>TraceablePeerConnection</tt> which is the peer\r\n * connection which measured the audio level (one audio track can be added\r\n * to multiple peer connection at the same time). This argument is optional for\r\n * local tracks for which we can measure audio level without the peer\r\n * connection (the value will be <tt>undefined</tt>).\r\n *\r\n * NOTE The second argument should be treated as library internal and can be\r\n * removed at any time.\r\n */\r\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'track.audioLevelsChanged';\r\n\r\n/**\r\n * The audio output of the track was changed.\r\n */\r\nexport const TRACK_AUDIO_OUTPUT_CHANGED = 'track.audioOutputChanged';\r\n\r\n/**\r\n * A media track mute status was changed.\r\n */\r\nexport const TRACK_MUTE_CHANGED = 'track.trackMuteChanged';\r\n\r\n/**\r\n * The video type(\"camera\" or \"desktop\") of the track was changed.\r\n */\r\nexport const TRACK_VIDEOTYPE_CHANGED = 'track.videoTypeChanged';\r\n\r\n/**\r\n * Indicates that the track is not receiving any data even though we expect it\r\n * to receive data (i.e. the stream is not stopped).\r\n */\r\nexport const NO_DATA_FROM_SOURCE = 'track.no_data_from_source';\r\n","/**\r\n * The transciption is on.\r\n *\r\n * @type {String}\r\n */\r\nexport const ON = 'on';\r\n\r\n/**\r\n * The transciption is off.\r\n *\r\n * @type {String}\r\n */\r\nexport const OFF = 'off';\r\n","import {\r\n    CONNECTION_DISCONNECTED,\r\n    CONNECTION_ESTABLISHED,\r\n    CONNECTION_FAILED\r\n} from './JitsiConnectionEvents';\r\nimport XMPP from './modules/xmpp/xmpp';\r\n\r\n/**\r\n * @typedef {Object} UpgradeRoleError\r\n *\r\n * @property {JitsiConnectionErrors} [connectionError] - One of\r\n * {@link JitsiConnectionErrors} which occurred when trying to connect to the\r\n * XMPP server.\r\n * @property {String} [authenticationError] - One of XMPP error conditions\r\n * returned by Jicofo on authentication attempt. See\r\n * {@link https://xmpp.org/rfcs/rfc3920.html#streams-error}.\r\n * @property {String} [message] - More details about the error.\r\n * @property {Object} [credentials] - The credentials that failed the\r\n * authentication.\r\n * @property {String} [credentials.jid] - The XMPP ID part of the credentials\r\n * that failed the authentication.\r\n * @property {string} [credentials.password] - The password part of the\r\n * credentials that failed the authentication.\r\n *\r\n * NOTE If neither one of the errors is present, then the operation has been\r\n * canceled.\r\n */\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\n/**\r\n * Connects to the XMPP server using the specified credentials and contacts\r\n * Jicofo in order to obtain a session ID (which is then stored in the local\r\n * storage). The user's role of the parent conference will be upgraded to\r\n * moderator (by Jicofo). It's also used to join the conference when starting\r\n * from anonymous domain and only authenticated users are allowed to create new\r\n * rooms.\r\n *\r\n * @param {Object} options\r\n * @param {string} options.id - XMPP user's ID to log in. For example,\r\n * user@xmpp-server.com.\r\n * @param {string} options.password - XMPP user's password to log in with.\r\n * @param {string} [options.roomPassword] - The password to join the MUC with.\r\n * @param {Function} [options.onLoginSuccessful] - Callback called when logging\r\n * into the XMPP server was successful. The next step will be to obtain a new\r\n * session ID from Jicofo and join the MUC using it which will effectively\r\n * upgrade the user's role to moderator.\r\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\r\n * authenticating and upgrading the role of the specified XMPP user finishes and\r\n * (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\r\n * process. If the process finishes successfully, the session ID has been stored\r\n * in the settings and the <tt>thenable</tt> is resolved. If the process\r\n * finishes with failure, the <tt>thenable</tt> is rejected with reason of type\r\n * {@link UpgradeRoleError} which will have either <tt>connectionError</tt> or\r\n * <tt>authenticationError</tt> property set depending on which of the steps has\r\n * failed. If <tt>cancel</tt> is called before the process finishes, then the\r\n * thenable will be rejected with an empty object (i.e. no error property will\r\n * be set on the rejection reason).\r\n */\r\nexport default function authenticateAndUpgradeRole({\r\n    // 1. Log the specified XMPP user in.\r\n    id,\r\n    password,\r\n    onCreateResource,\r\n\r\n    // 2. Let the API client/consumer know as soon as the XMPP user has been\r\n    //    successfully logged in.\r\n    onLoginSuccessful,\r\n\r\n    // 3. Join the MUC.\r\n    roomPassword\r\n}) {\r\n    let canceled = false;\r\n    let rejectPromise;\r\n    let xmpp = new XMPP(this.connection.options);\r\n\r\n    const process = new Promise((resolve, reject) => {\r\n        // The process is represented by a Thenable with a cancel method. The\r\n        // Thenable is implemented using Promise and the cancel using the\r\n        // Promise's reject function.\r\n        rejectPromise = reject;\r\n\r\n\r\n        xmpp.addListener(\r\n            CONNECTION_DISCONNECTED,\r\n            () => {\r\n                xmpp = undefined;\r\n            });\r\n        xmpp.addListener(\r\n            CONNECTION_ESTABLISHED,\r\n            () => {\r\n                if (canceled) {\r\n                    return;\r\n                }\r\n\r\n                // Let the caller know that the XMPP login was successful.\r\n                onLoginSuccessful && onLoginSuccessful();\r\n\r\n                // Now authenticate with Jicofo and get a new session ID.\r\n                const room = xmpp.createRoom(\r\n                    this.options.name,\r\n                    this.options.config,\r\n                    onCreateResource\r\n                );\r\n\r\n                room.moderator.authenticate()\r\n                    .then(() => {\r\n                        xmpp && xmpp.disconnect();\r\n\r\n                        if (canceled) {\r\n                            return;\r\n                        }\r\n\r\n                        // At this point we should have the new session ID\r\n                        // stored in the settings. Jicofo will allow to join the\r\n                        // room.\r\n                        this.join(roomPassword);\r\n\r\n                        resolve();\r\n                    })\r\n                    .catch(({ error, message }) => {\r\n                        xmpp.disconnect();\r\n\r\n                        reject({\r\n                            authenticationError: error,\r\n                            message\r\n                        });\r\n                    });\r\n            });\r\n        xmpp.addListener(\r\n            CONNECTION_FAILED,\r\n            (connectionError, message, credentials) => {\r\n                reject({\r\n                    connectionError,\r\n                    credentials,\r\n                    message\r\n                });\r\n                xmpp = undefined;\r\n            });\r\n\r\n        canceled || xmpp.connect(id, password);\r\n    });\r\n\r\n    /**\r\n     * Cancels the process, if it's in progress, of authenticating and upgrading\r\n     * the role of the local participant/user.\r\n     *\r\n     * @public\r\n     * @returns {void}\r\n     */\r\n    process.cancel = () => {\r\n        canceled = true;\r\n        rejectPromise({});\r\n        xmpp && xmpp.disconnect();\r\n    };\r\n\r\n    return process;\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n","// For legacy purposes, preserve the UMD of the public API of the Jitsi Meet\r\n// library (a.k.a. JitsiMeetJS).\r\nmodule.exports = require('./JitsiMeetJS').default;\r\n","import { getLogger } from 'jitsi-meet-logger';\r\n\r\nimport RTCEvents from '../../service/RTC/RTCEvents';\r\nimport { createBridgeChannelClosedEvent } from '../../service/statistics/AnalyticsEvents';\r\nimport Statistics from '../statistics/statistics';\r\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Handles a WebRTC RTCPeerConnection or a WebSocket instance to communicate\r\n * with the videobridge.\r\n */\r\nexport default class BridgeChannel {\r\n    /**\r\n     * Binds \"ondatachannel\" event listener on the given RTCPeerConnection\r\n     * instance, or creates a WebSocket connection with the videobridge.\r\n     * At least one of both, peerconnection or wsUrl parameters, must be\r\n     * given.\r\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\r\n     * instance.\r\n     * @param {string} [wsUrl] WebSocket URL.\r\n     * @param {EventEmitter} eventEmitter EventEmitter instance.\r\n     */\r\n    constructor(peerconnection, wsUrl, emitter) {\r\n        if (!peerconnection && !wsUrl) {\r\n            throw new TypeError(\r\n                'At least peerconnection or wsUrl must be given');\r\n        } else if (peerconnection && wsUrl) {\r\n            throw new TypeError(\r\n                'Just one of peerconnection or wsUrl must be given');\r\n        }\r\n\r\n        if (peerconnection) {\r\n            logger.debug('constructor() with peerconnection');\r\n        } else {\r\n            logger.debug(`constructor() with wsUrl:\"${wsUrl}\"`);\r\n        }\r\n\r\n        // The underlying WebRTC RTCDataChannel or WebSocket instance.\r\n        // @type {RTCDataChannel|WebSocket}\r\n        this._channel = null;\r\n\r\n        // @type {EventEmitter}\r\n        this._eventEmitter = emitter;\r\n\r\n        // Whether a RTCDataChannel or WebSocket is internally used.\r\n        // @type {string} \"datachannel\" / \"websocket\"\r\n        this._mode = null;\r\n\r\n        // Indicates whether the connection retries are enabled or not.\r\n        this._areRetriesEnabled = false;\r\n\r\n        // Indicates whether the connection was closed from the client or not.\r\n        this._closedFromClient = false;\r\n\r\n        // If a RTCPeerConnection is given, listen for new RTCDataChannel\r\n        // event.\r\n        if (peerconnection) {\r\n            const datachannel\r\n                = peerconnection.createDataChannel(\r\n                    'JVB data channel', {\r\n                        protocol: 'http://jitsi.org/protocols/colibri'\r\n                    });\r\n\r\n            // Handle the RTCDataChannel.\r\n            this._handleChannel(datachannel);\r\n            this._mode = 'datachannel';\r\n\r\n        // Otherwise create a WebSocket connection.\r\n        } else if (wsUrl) {\r\n            this._areRetriesEnabled = true;\r\n            this._wsUrl = wsUrl;\r\n            this._initWebSocket();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes the web socket channel.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    _initWebSocket() {\r\n        // Create a WebSocket instance.\r\n        const ws = new WebSocket(this._wsUrl);\r\n\r\n        // Handle the WebSocket.\r\n        this._handleChannel(ws);\r\n        this._mode = 'websocket';\r\n    }\r\n\r\n    /**\r\n     * Starts the websocket connection retries.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    _startConnectionRetries() {\r\n        let timeoutS = 1;\r\n\r\n        const reload = () => {\r\n            if (this.isOpen()) {\r\n                return;\r\n            }\r\n            this._initWebSocket(this._wsUrl);\r\n            timeoutS = Math.min(timeoutS * 2, 60);\r\n            this._retryTimeout = setTimeout(reload, timeoutS * 1000);\r\n        };\r\n\r\n        this._retryTimeout = setTimeout(reload, timeoutS * 1000);\r\n    }\r\n\r\n    /**\r\n     * Stops the websocket connection retries.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    _stopConnectionRetries() {\r\n        if (this._retryTimeout) {\r\n            clearTimeout(this._retryTimeout);\r\n            this._retryTimeout = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retries to establish the websocket connection after the connection was closed by the server.\r\n     *\r\n     * @param {CloseEvent} closeEvent - The close event that triggered the retries.\r\n     * @returns {void}\r\n     */\r\n    _retryWebSocketConnection(closeEvent) {\r\n        if (!this._areRetriesEnabled) {\r\n            return;\r\n        }\r\n        const { code, reason } = closeEvent;\r\n\r\n        Statistics.sendAnalytics(createBridgeChannelClosedEvent(code, reason));\r\n        this._areRetriesEnabled = false;\r\n        this._eventEmitter.once(RTCEvents.DATA_CHANNEL_OPEN, () => {\r\n            this._stopConnectionRetries();\r\n            this._areRetriesEnabled = true;\r\n        });\r\n        this._startConnectionRetries();\r\n    }\r\n\r\n    /**\r\n     * The channel mode.\r\n     * @return {string} \"datachannel\" or \"websocket\" (or null if not yet set).\r\n     */\r\n    get mode() {\r\n        return this._mode;\r\n    }\r\n\r\n    /**\r\n     * Closes the currently opened channel.\r\n     */\r\n    close() {\r\n        this._closedFromClient = true;\r\n        this._stopConnectionRetries();\r\n        this._areRetriesEnabled = false;\r\n        if (this._channel) {\r\n            try {\r\n                this._channel.close();\r\n            } catch (error) {} // eslint-disable-line no-empty\r\n\r\n            this._channel = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Whether there is an underlying RTCDataChannel or WebSocket and it's\r\n     * open.\r\n     * @return {boolean}\r\n     */\r\n    isOpen() {\r\n        return this._channel && (this._channel.readyState === 'open'\r\n            || this._channel.readyState === WebSocket.OPEN);\r\n    }\r\n\r\n    /**\r\n     * Sends message via the channel.\r\n     * @param {string} to The id of the endpoint that should receive the\r\n     * message. If \"\" the message will be sent to all participants.\r\n     * @param  {object} payload The payload of the message.\r\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\r\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\r\n     * or from WebSocket#send or Error with \"No opened channel\" message.\r\n     */\r\n    sendMessage(to, payload) {\r\n        this._send({\r\n            colibriClass: 'EndpointMessage',\r\n            msgPayload: payload,\r\n            to\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends a \"lastN value changed\" message via the channel.\r\n     * @param {number} value The new value for lastN. -1 means unlimited.\r\n     */\r\n    sendSetLastNMessage(value) {\r\n        const jsonObject = {\r\n            colibriClass: 'LastNChangedEvent',\r\n            lastN: value\r\n        };\r\n\r\n        this._send(jsonObject);\r\n        logger.log(`Channel lastN set to: ${value}`);\r\n    }\r\n\r\n    /**\r\n     * Sends a \"pinned endpoint changed\" message via the channel.\r\n     * @param {string} endpointId The id of the pinned endpoint.\r\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\r\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\r\n     * or from WebSocket#send or Error with \"No opened channel\" message.\r\n     */\r\n    sendPinnedEndpointMessage(endpointId) {\r\n        logger.log(\r\n            'sending pinned changed notification to the bridge for endpoint ',\r\n            endpointId);\r\n\r\n        this._send({\r\n            colibriClass: 'PinnedEndpointChangedEvent',\r\n            pinnedEndpoint: endpointId || null\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends a \"selected endpoints changed\" message via the channel.\r\n     *\r\n     * @param {Array<string>} endpointIds - The ids of the selected endpoints.\r\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\r\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\r\n     * or from WebSocket#send or Error with \"No opened channel\" message.\r\n     */\r\n    sendSelectedEndpointsMessage(endpointIds) {\r\n        logger.log(\r\n            'sending selected changed notification to the bridge for endpoints',\r\n            endpointIds);\r\n\r\n        this._send({\r\n            colibriClass: 'SelectedEndpointsChangedEvent',\r\n            selectedEndpoints: endpointIds\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends a \"receiver video constraint\" message via the channel.\r\n     * @param {Number} maxFrameHeightPixels the maximum frame height,\r\n     * in pixels, this receiver is willing to receive\r\n     */\r\n    sendReceiverVideoConstraintMessage(maxFrameHeightPixels) {\r\n        logger.log('sending a ReceiverVideoConstraint message with '\r\n            + `a maxFrameHeight of ${maxFrameHeightPixels} pixels`);\r\n        this._send({\r\n            colibriClass: 'ReceiverVideoConstraint',\r\n            maxFrameHeight: maxFrameHeightPixels\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set events on the given RTCDataChannel or WebSocket instance.\r\n     */\r\n    _handleChannel(channel) {\r\n        const emitter = this._eventEmitter;\r\n\r\n        channel.onopen = () => {\r\n            logger.info(`${this._mode} channel opened`);\r\n\r\n            // Code sample for sending string and/or binary data.\r\n            // Sends string message to the bridge:\r\n            //     channel.send(\"Hello bridge!\");\r\n            // Sends 12 bytes binary message to the bridge:\r\n            //     channel.send(new ArrayBuffer(12));\r\n\r\n            emitter.emit(RTCEvents.DATA_CHANNEL_OPEN);\r\n        };\r\n\r\n        channel.onerror = event => {\r\n            // WS error events contain no information about the failure (this is available in the onclose event) and\r\n            // the event references the WS object itself, which causes hangs on mobile.\r\n            if (this._mode !== 'websocket') {\r\n                logger.error(`Channel error: ${event.message}`);\r\n            }\r\n        };\r\n\r\n        channel.onmessage = ({ data }) => {\r\n            // JSON object.\r\n            let obj;\r\n\r\n            try {\r\n                obj = JSON.parse(data);\r\n            } catch (error) {\r\n                GlobalOnErrorHandler.callErrorHandler(error);\r\n                logger.error(\r\n                    'Failed to parse channel message as JSON: ',\r\n                    data, error);\r\n\r\n                return;\r\n            }\r\n\r\n            const colibriClass = obj.colibriClass;\r\n\r\n            switch (colibriClass) {\r\n            case 'DominantSpeakerEndpointChangeEvent': {\r\n                // Endpoint ID from the Videobridge.\r\n                const dominantSpeakerEndpoint = obj.dominantSpeakerEndpoint;\r\n\r\n                logger.info(\r\n                    'Channel new dominant speaker event: ',\r\n                    dominantSpeakerEndpoint);\r\n                emitter.emit(\r\n                    RTCEvents.DOMINANT_SPEAKER_CHANGED,\r\n                    dominantSpeakerEndpoint);\r\n                break;\r\n            }\r\n            case 'EndpointConnectivityStatusChangeEvent': {\r\n                const endpoint = obj.endpoint;\r\n                const isActive = obj.active === 'true';\r\n\r\n                logger.info(\r\n                    `Endpoint connection status changed: ${endpoint} active ? ${\r\n                        isActive}`);\r\n                emitter.emit(RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\r\n                    endpoint, isActive);\r\n\r\n                break;\r\n            }\r\n            case 'EndpointMessage': {\r\n                emitter.emit(\r\n                    RTCEvents.ENDPOINT_MESSAGE_RECEIVED, obj.from,\r\n                    obj.msgPayload);\r\n\r\n                break;\r\n            }\r\n            case 'LastNEndpointsChangeEvent': {\r\n                // The new/latest list of last-n endpoint IDs.\r\n                const lastNEndpoints = obj.lastNEndpoints;\r\n\r\n                logger.info('Channel new last-n event: ',\r\n                    lastNEndpoints, obj);\r\n                emitter.emit(RTCEvents.LASTN_ENDPOINT_CHANGED,\r\n                    lastNEndpoints, obj);\r\n\r\n                break;\r\n            }\r\n            case 'SelectedUpdateEvent': {\r\n                const isSelected = obj.isSelected;\r\n\r\n                logger.info(`SelectedUpdateEvent isSelected? ${isSelected}`);\r\n                emitter.emit(RTCEvents.IS_SELECTED_CHANGED, isSelected);\r\n                break;\r\n            }\r\n            default: {\r\n                logger.debug('Channel JSON-formatted message: ', obj);\r\n\r\n                // The received message appears to be appropriately formatted\r\n                // (i.e. is a JSON object which assigns a value to the\r\n                // mandatory property colibriClass) so don't just swallow it,\r\n                // expose it to public consumption.\r\n                emitter.emit(`rtc.datachannel.${colibriClass}`, obj);\r\n            }\r\n            }\r\n        };\r\n\r\n        channel.onclose = event => {\r\n            logger.info(`Channel closed by ${this._closedFromClient ? 'client' : 'server'}`);\r\n\r\n            if (this._mode === 'websocket') {\r\n                if (!this._closedFromClient) {\r\n                    logger.error(`Channel closed: ${event.code} ${event.reason}`);\r\n                    this._retryWebSocketConnection(event);\r\n                }\r\n            }\r\n\r\n            // Remove the channel.\r\n            this._channel = null;\r\n        };\r\n\r\n        // Store the channel.\r\n        this._channel = channel;\r\n    }\r\n\r\n    /**\r\n     * Sends passed object via the channel.\r\n     * @param {object} jsonObject The object that will be sent.\r\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\r\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\r\n     * or from WebSocket#send or Error with \"No opened channel\" message.\r\n     */\r\n    _send(jsonObject) {\r\n        const channel = this._channel;\r\n\r\n        if (!this.isOpen()) {\r\n            logger.error('Bridge Channel send: no opened channel.');\r\n            throw new Error('No opened channel');\r\n        }\r\n\r\n        channel.send(JSON.stringify(jsonObject));\r\n    }\r\n}\r\n","/* global __filename, Promise */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport JitsiTrack from './JitsiTrack';\r\nimport JitsiTrackError from '../../JitsiTrackError';\r\nimport {\r\n    TRACK_IS_DISPOSED,\r\n    TRACK_NO_STREAM_FOUND\r\n} from '../../JitsiTrackErrors';\r\nimport {\r\n    LOCAL_TRACK_STOPPED,\r\n    NO_DATA_FROM_SOURCE,\r\n    TRACK_MUTE_CHANGED\r\n} from '../../JitsiTrackEvents';\r\nimport browser from '../browser';\r\nimport RTCUtils from './RTCUtils';\r\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport RTCEvents from '../../service/RTC/RTCEvents';\r\nimport VideoType from '../../service/RTC/VideoType';\r\nimport {\r\n    NO_BYTES_SENT,\r\n    TRACK_UNMUTED,\r\n    createNoDataFromSourceEvent\r\n} from '../../service/statistics/AnalyticsEvents';\r\nimport Statistics from '../statistics/statistics';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Represents a single media track(either audio or video).\r\n * One <tt>JitsiLocalTrack</tt> corresponds to one WebRTC MediaStreamTrack.\r\n */\r\nexport default class JitsiLocalTrack extends JitsiTrack {\r\n    /**\r\n     * Constructs new JitsiLocalTrack instance.\r\n     *\r\n     * @constructor\r\n     * @param {Object} trackInfo\r\n     * @param {number} trackInfo.rtcId the ID assigned by the RTC module\r\n     * @param trackInfo.stream WebRTC MediaStream, parent of the track\r\n     * @param trackInfo.track underlying WebRTC MediaStreamTrack for new\r\n     * JitsiRemoteTrack\r\n     * @param trackInfo.mediaType the MediaType of the JitsiRemoteTrack\r\n     * @param trackInfo.videoType the VideoType of the JitsiRemoteTrack\r\n     * @param trackInfo.effects the effects array contains the effect instance to use\r\n     * @param trackInfo.resolution the video resolution if it's a video track\r\n     * @param trackInfo.deviceId the ID of the local device for this track\r\n     * @param trackInfo.facingMode the camera facing mode used in getUserMedia\r\n     * call\r\n     * @param {sourceId} trackInfo.sourceId - The id of the desktop sharing\r\n     * source. NOTE: defined for desktop sharing tracks only.\r\n     */\r\n    constructor({\r\n        deviceId,\r\n        facingMode,\r\n        mediaType,\r\n        resolution,\r\n        rtcId,\r\n        sourceId,\r\n        sourceType,\r\n        stream,\r\n        track,\r\n        videoType,\r\n        effects = []\r\n    }) {\r\n        super(\r\n            /* conference */ null,\r\n            stream,\r\n            track,\r\n            /* streamInactiveHandler */ () => this.emit(LOCAL_TRACK_STOPPED),\r\n            mediaType,\r\n            videoType);\r\n\r\n        this._setEffectInProgress = false;\r\n        const effect = effects.find(e => e.isEnabled(this));\r\n\r\n        if (effect) {\r\n            this._startStreamEffect(effect);\r\n        }\r\n\r\n        /**\r\n         * The ID assigned by the RTC module on instance creation.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.rtcId = rtcId;\r\n        this.sourceId = sourceId;\r\n        this.sourceType = sourceType;\r\n\r\n        if (browser.usesNewGumFlow()) {\r\n            // Get the resolution from the track itself because it cannot be\r\n            // certain which resolution webrtc has fallen back to using.\r\n            this.resolution = track.getSettings().height;\r\n\r\n            // Cache the constraints of the track in case of any this track\r\n            // model needs to call getUserMedia again, such as when unmuting.\r\n            this._constraints = track.getConstraints();\r\n\r\n            // Safari returns an empty constraints object, construct the constraints using getSettings.\r\n            if (!Object.keys(this._constraints).length && videoType === VideoType.CAMERA) {\r\n                this._constraints = {\r\n                    height: track.getSettings().height,\r\n                    width: track.getSettings().width\r\n                };\r\n            }\r\n        } else {\r\n            // FIXME Currently, Firefox is ignoring our constraints about\r\n            // resolutions so we do not store it, to avoid wrong reporting of\r\n            // local track resolution.\r\n            this.resolution = browser.isFirefox() ? null : resolution;\r\n        }\r\n\r\n        this.deviceId = deviceId;\r\n\r\n        /**\r\n         * The <tt>Promise</tt> which represents the progress of a previously\r\n         * queued/scheduled {@link _setMuted} (from the point of view of\r\n         * {@link _queueSetMuted}).\r\n         *\r\n         * @private\r\n         * @type {Promise}\r\n         */\r\n        this._prevSetMuted = Promise.resolve();\r\n\r\n        /**\r\n         * The facing mode of the camera from which this JitsiLocalTrack\r\n         * instance was obtained.\r\n         *\r\n         * @private\r\n         * @type {CameraFacingMode|undefined}\r\n         */\r\n        this._facingMode = facingMode;\r\n\r\n        // Currently there is no way to know the MediaStreamTrack ended due to\r\n        // to device disconnect in Firefox through e.g. \"readyState\" property.\r\n        // Instead we will compare current track's label with device labels from\r\n        // enumerateDevices() list.\r\n        this._trackEnded = false;\r\n\r\n        /**\r\n         * Indicates whether data has been sent or not.\r\n         */\r\n        this._hasSentData = false;\r\n\r\n        /**\r\n         * Used only for detection of audio problems. We want to check only once\r\n         * whether the track is sending data ot not. This flag is set to false\r\n         * after the check.\r\n         */\r\n        this._testDataSent = true;\r\n\r\n        // Currently there is no way to determine with what device track was\r\n        // created (until getConstraints() support), however we can associate\r\n        // tracks with real devices obtained from enumerateDevices() call as\r\n        // soon as it's called.\r\n        // NOTE: this.deviceId corresponds to the device id specified in GUM constraints and this._realDeviceId seems to\r\n        // correspond to the id of a matching device from the available device list.\r\n        this._realDeviceId = this.deviceId === '' ? undefined : this.deviceId;\r\n\r\n        this._trackMutedTS = 0;\r\n\r\n        this._onDeviceListWillChange = devices => {\r\n            const oldRealDeviceId = this._realDeviceId;\r\n\r\n            this._setRealDeviceIdFromDeviceList(devices);\r\n\r\n            if (\r\n                // Mark track as ended for those browsers that do not support\r\n                // \"readyState\" property. We do not touch tracks created with\r\n                // default device ID \"\".\r\n                (typeof this.getTrack().readyState === 'undefined'\r\n                    && typeof this._realDeviceId !== 'undefined'\r\n                    && !devices.find(d => d.deviceId === this._realDeviceId))\r\n\r\n                // If there was an associated realDeviceID and after the device change the realDeviceId is undefined\r\n                // then the associated device has been disconnected and the _trackEnded flag needs to be set. In\r\n                // addition on some Chrome versions the readyState property is set after the device change event is\r\n                // triggered which causes issues in jitsi-meet with the selection of a new device because we don't\r\n                // detect that the old one was removed.\r\n                || (typeof oldRealDeviceId !== 'undefined' && typeof this._realDeviceId === 'undefined')\r\n            ) {\r\n                this._trackEnded = true;\r\n            }\r\n        };\r\n\r\n        // Subscribe each created local audio track to\r\n        // RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED event. This is different from\r\n        // handling this event for remote tracks (which are handled in RTC.js),\r\n        // because there might be local tracks not attached to a conference.\r\n        if (this.isAudioTrack() && RTCUtils.isDeviceChangeAvailable('output')) {\r\n            this._onAudioOutputDeviceChanged = this.setAudioOutput.bind(this);\r\n            RTCUtils.addListener(\r\n                RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\r\n                this._onAudioOutputDeviceChanged);\r\n        }\r\n\r\n        RTCUtils.addListener(RTCEvents.DEVICE_LIST_WILL_CHANGE, this._onDeviceListWillChange);\r\n\r\n        this._initNoDataFromSourceHandlers();\r\n    }\r\n\r\n    /**\r\n     * Returns if associated MediaStreamTrack is in the 'ended' state\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isEnded() {\r\n        if (this.isVideoTrack() && this.isMuted()) {\r\n            // If a video track is muted the readyState will be ended, that's why we need to rely only on the\r\n            // _trackEnded flag.\r\n            return this._trackEnded;\r\n        }\r\n\r\n        return this.getTrack().readyState === 'ended' || this._trackEnded;\r\n    }\r\n\r\n    /**\r\n     * Sets handlers to the MediaStreamTrack object that will detect camera\r\n     * issues.\r\n     */\r\n    _initNoDataFromSourceHandlers() {\r\n        if (!this._isNoDataFromSourceEventsEnabled()) {\r\n            return;\r\n        }\r\n\r\n        this._setHandler('track_mute', () => {\r\n            this._trackMutedTS = window.performance.now();\r\n            this._fireNoDataFromSourceEvent();\r\n        });\r\n\r\n        this._setHandler('track_unmute', () => {\r\n            this._fireNoDataFromSourceEvent();\r\n            Statistics.sendAnalyticsAndLog(\r\n                TRACK_UNMUTED,\r\n                {\r\n                    'media_type': this.getType(),\r\n                    'track_type': 'local',\r\n                    value: window.performance.now() - this._trackMutedTS\r\n                });\r\n        });\r\n\r\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\r\n            this._setHandler('track_ended', () => {\r\n                if (!this.isReceivingData()) {\r\n                    this._fireNoDataFromSourceEvent();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns true if no data from source events are enabled for this JitsiLocalTrack and false otherwise.\r\n     *\r\n     * @returns {boolean} - True if no data from source events are enabled for this JitsiLocalTrack and false otherwise.\r\n     */\r\n    _isNoDataFromSourceEventsEnabled() {\r\n        // Disable the events for screen sharing.\r\n        return !this.isVideoTrack() || this.videoType !== VideoType.DESKTOP;\r\n    }\r\n\r\n    /**\r\n     * Fires NO_DATA_FROM_SOURCE event and logs it to analytics and callstats.\r\n     */\r\n    _fireNoDataFromSourceEvent() {\r\n        const value = !this.isReceivingData();\r\n\r\n        this.emit(NO_DATA_FROM_SOURCE, value);\r\n\r\n        // FIXME: Should we report all of those events\r\n        Statistics.sendAnalytics(createNoDataFromSourceEvent(this.getType(), value));\r\n        Statistics.sendLog(JSON.stringify({\r\n            name: NO_DATA_FROM_SOURCE,\r\n            log: value\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Sets real device ID by comparing track information with device\r\n     * information. This is temporary solution until getConstraints() method\r\n     * will be implemented in browsers.\r\n     *\r\n     * @param {MediaDeviceInfo[]} devices - list of devices obtained from\r\n     * enumerateDevices() call\r\n     */\r\n    _setRealDeviceIdFromDeviceList(devices) {\r\n        const track = this.getTrack();\r\n        const kind = `${track.kind}input`;\r\n        let device = devices.find(d => d.kind === kind && d.label === track.label);\r\n\r\n        if (!device && this._realDeviceId === 'default') { // the default device has been changed.\r\n            // If the default device was 'A' and the default device is changed to 'B' the label for the track will\r\n            // remain 'Default - A' but the label for the device in the device list will be updated to 'A'. That's\r\n            // why in order to match it we need to remove the 'Default - ' part.\r\n            const label = (track.label || '').replace('Default - ', '');\r\n\r\n            device = devices.find(d => d.kind === kind && d.label === label);\r\n        }\r\n\r\n        if (device) {\r\n            this._realDeviceId = device.deviceId;\r\n        } else {\r\n            this._realDeviceId = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the stream property of JitsiLocalTrack object and sets all stored\r\n     * handlers to it.\r\n     *\r\n     * @param {MediaStream} stream the new stream.\r\n     * @protected\r\n     */\r\n    _setStream(stream) {\r\n        super._setStream(stream);\r\n\r\n        if (stream) {\r\n            // Store the MSID for video mute/unmute purposes.\r\n            this.storedMSID = this.getMSID();\r\n            logger.debug(`Setting new MSID: ${this.storedMSID} on ${this}`);\r\n        } else {\r\n            logger.debug(`Setting 'null' stream on ${this}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts the effect process and returns the modified stream.\r\n     *\r\n     * @private\r\n     * @param {*} effect - Represents effect instance\r\n     * @returns {void}\r\n     */\r\n    _startStreamEffect(effect) {\r\n        this._streamEffect = effect;\r\n        this._originalStream = this.stream;\r\n        this._setStream(this._streamEffect.startEffect(this._originalStream));\r\n    }\r\n\r\n    /**\r\n     * Stops the effect process and returns the original stream.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _stopStreamEffect() {\r\n        if (this._streamEffect) {\r\n            this._streamEffect.stopEffect();\r\n            this._setStream(this._originalStream);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops the currently used effect (if there is one) and starts the passed effect (if there is one).\r\n     *\r\n     * @param {Object|undefined} effect - The new effect to be set.\r\n     */\r\n    _switchStreamEffect(effect) {\r\n        if (this._streamEffect) {\r\n            this._stopStreamEffect();\r\n            this._streamEffect = undefined;\r\n        }\r\n        if (effect) {\r\n            this._startStreamEffect(effect);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the effect and switches between the modified stream and original one.\r\n     *\r\n     * @param {Object} effect - Represents the effect instance to be used.\r\n     * @returns {Promise}\r\n     */\r\n    setEffect(effect) {\r\n        if (typeof this._streamEffect === 'undefined' && typeof effect === 'undefined') {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (typeof effect !== 'undefined' && !effect.isEnabled(this)) {\r\n            return Promise.reject(new Error('Incompatible effect instance!'));\r\n        }\r\n\r\n        if (this._setEffectInProgress === true) {\r\n            return Promise.reject(new Error('setEffect already in progress!'));\r\n        }\r\n\r\n        // In case we have an audio track that is being enhanced with an effect, we still want it to be applied,\r\n        // even if the track is muted. Where as for video the actual track doesn't exists if it's muted.\r\n        if (this.isMuted() && !this.isAudioTrack()) {\r\n            this._streamEffect = effect;\r\n\r\n            return Promise.resolve();\r\n        }\r\n\r\n        const conference = this.conference;\r\n\r\n        if (!conference) {\r\n            this._switchStreamEffect(effect);\r\n\r\n            return Promise.resolve();\r\n        }\r\n\r\n        this._setEffectInProgress = true;\r\n\r\n        if (browser.usesUnifiedPlan()) {\r\n            this._switchStreamEffect(effect);\r\n            if (this.isVideoTrack()) {\r\n                this.containers.forEach(cont => RTCUtils.attachMediaStream(cont, this.stream));\r\n            }\r\n\r\n            return conference.replaceTrack(this, this)\r\n                .then(() => {\r\n                    this._setEffectInProgress = false;\r\n                })\r\n                .catch(error => {\r\n                    this._setEffectInProgress = false;\r\n                    this._switchStreamEffect();\r\n                    logger.error('Failed to switch to the new stream!', error);\r\n                    throw error;\r\n                });\r\n        }\r\n\r\n        // TODO: Create new JingleSessionPC method for replacing a stream in JitsiLocalTrack without offer answer.\r\n        return conference.removeTrack(this)\r\n            .then(() => {\r\n                this._switchStreamEffect(effect);\r\n                if (this.isVideoTrack()) {\r\n                    this.containers.forEach(cont => RTCUtils.attachMediaStream(cont, this.stream));\r\n                }\r\n\r\n                return conference.addTrack(this);\r\n            })\r\n            .then(() => {\r\n                this._setEffectInProgress = false;\r\n            })\r\n            .catch(error => {\r\n                // Any error will be not recovarable and will trigger CONFERENCE_FAILED event. But let's try to cleanup\r\n                // everyhting related to the effect functionality.\r\n                this._setEffectInProgress = false;\r\n                this._switchStreamEffect();\r\n                logger.error('Failed to switch to the new stream!', error);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Asynchronously mutes this track.\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    mute() {\r\n        return this._queueSetMuted(true);\r\n    }\r\n\r\n    /**\r\n     * Asynchronously unmutes this track.\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    unmute() {\r\n        return this._queueSetMuted(false);\r\n    }\r\n\r\n    /**\r\n     * Initializes a new Promise to execute {@link #_setMuted}. May be called\r\n     * multiple times in a row and the invocations of {@link #_setMuted} and,\r\n     * consequently, {@link #mute} and/or {@link #unmute} will be resolved in a\r\n     * serialized fashion.\r\n     *\r\n     * @param {boolean} muted - The value to invoke <tt>_setMuted</tt> with.\r\n     * @returns {Promise}\r\n     */\r\n    _queueSetMuted(muted) {\r\n        const setMuted = this._setMuted.bind(this, muted);\r\n\r\n        this._prevSetMuted = this._prevSetMuted.then(setMuted, setMuted);\r\n\r\n        return this._prevSetMuted;\r\n    }\r\n\r\n    /**\r\n     * Mutes / unmutes this track.\r\n     *\r\n     * @param {boolean} muted - If <tt>true</tt>, this track will be muted;\r\n     * otherwise, this track will be unmuted.\r\n     * @private\r\n     * @returns {Promise}\r\n     */\r\n    _setMuted(muted) {\r\n        if (this.isMuted() === muted) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.disposed) {\r\n            return Promise.reject(new JitsiTrackError(TRACK_IS_DISPOSED));\r\n        }\r\n\r\n        let promise = Promise.resolve();\r\n\r\n        // A function that will print info about muted status transition\r\n        const logMuteInfo = () => logger.info(`Mute ${this}: ${muted}`);\r\n\r\n        if (this.isAudioTrack()\r\n                || this.videoType === VideoType.DESKTOP\r\n                || !browser.doesVideoMuteByStreamRemove()) {\r\n            logMuteInfo();\r\n            if (this.track) {\r\n                this.track.enabled = !muted;\r\n            }\r\n        } else if (muted) {\r\n            promise = new Promise((resolve, reject) => {\r\n                logMuteInfo();\r\n                this._removeStreamFromConferenceAsMute(\r\n                    () => {\r\n                        if (this._streamEffect) {\r\n                            this._stopStreamEffect();\r\n                        }\r\n\r\n                        // FIXME: Maybe here we should set the SRC for the\r\n                        // containers to something\r\n                        // We don't want any events to be fired on this stream\r\n                        this._unregisterHandlers();\r\n                        this.stopStream();\r\n                        this._setStream(null);\r\n                        resolve();\r\n                    },\r\n                    reject);\r\n            });\r\n        } else {\r\n            logMuteInfo();\r\n\r\n            // This path is only for camera.\r\n            const streamOptions = {\r\n                cameraDeviceId: this.getDeviceId(),\r\n                devices: [ MediaType.VIDEO ],\r\n                effects: this._streamEffect ? [ this._streamEffect ] : [],\r\n                facingMode: this.getCameraFacingMode()\r\n            };\r\n\r\n            if (browser.usesNewGumFlow()) {\r\n                promise\r\n                    = RTCUtils.newObtainAudioAndVideoPermissions(Object.assign(\r\n                        {},\r\n                        streamOptions,\r\n                        { constraints: { video: this._constraints } }));\r\n            } else {\r\n                if (this.resolution) {\r\n                    streamOptions.resolution = this.resolution;\r\n                }\r\n\r\n                promise\r\n                    = RTCUtils.obtainAudioAndVideoPermissions(streamOptions);\r\n            }\r\n\r\n            promise.then(streamsInfo => {\r\n                // The track kind for presenter track is video as well.\r\n                const mediaType = this.getType() === MediaType.PRESENTER ? MediaType.VIDEO : this.getType();\r\n                const streamInfo\r\n                    = browser.usesNewGumFlow()\r\n                        ? streamsInfo.find(\r\n                            info => info.track.kind === mediaType)\r\n                        : streamsInfo.find(\r\n                            info => info.mediaType === mediaType);\r\n\r\n                if (streamInfo) {\r\n                    this._setStream(streamInfo.stream);\r\n                    this.track = streamInfo.track;\r\n\r\n                    // This is not good when video type changes after\r\n                    // unmute, but let's not crash here\r\n                    if (this.videoType !== streamInfo.videoType) {\r\n                        logger.warn(\r\n                            `${this}: video type has changed after unmute!`,\r\n                            this.videoType, streamInfo.videoType);\r\n                        this.videoType = streamInfo.videoType;\r\n                    }\r\n                } else {\r\n                    throw new JitsiTrackError(TRACK_NO_STREAM_FOUND);\r\n                }\r\n\r\n                if (this._streamEffect) {\r\n                    this._startStreamEffect(this._streamEffect);\r\n                }\r\n\r\n                this.containers.map(\r\n                    cont => RTCUtils.attachMediaStream(cont, this.stream));\r\n\r\n                return this._addStreamToConferenceAsUnmute();\r\n            });\r\n        }\r\n\r\n        return promise\r\n            .then(() => this._sendMuteStatus(muted))\r\n            .then(() => this.emit(TRACK_MUTE_CHANGED, this));\r\n    }\r\n\r\n    /**\r\n     * Adds stream to conference and marks it as \"unmute\" operation.\r\n     *\r\n     * @private\r\n     * @returns {Promise}\r\n     */\r\n    _addStreamToConferenceAsUnmute() {\r\n        if (!this.conference) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        // FIXME it would be good to not included conference as part of this\r\n        // process. Only TraceablePeerConnections to which the track is attached\r\n        // should care about this action. The TPCs to which the track is not\r\n        // attached can sync up when track is re-attached.\r\n        // A problem with that is that the \"modify sources\" queue is part of\r\n        // the JingleSessionPC and it would be excluded from the process. One\r\n        // solution would be to extract class between TPC and JingleSessionPC\r\n        // which would contain the queue and would notify the signaling layer\r\n        // when local SSRCs are changed. This would help to separate XMPP from\r\n        // the RTC module.\r\n        return new Promise((resolve, reject) => {\r\n            this.conference._addLocalTrackAsUnmute(this)\r\n                .then(resolve, error => reject(new Error(error)));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Removes stream from conference and marks it as \"mute\" operation.\r\n     *\r\n     * @param {Function} successCallback will be called on success\r\n     * @param {Function} errorCallback will be called on error\r\n     * @private\r\n     */\r\n    _removeStreamFromConferenceAsMute(successCallback, errorCallback) {\r\n        if (!this.conference) {\r\n            successCallback();\r\n\r\n            return;\r\n        }\r\n        this.conference._removeLocalTrackAsMute(this).then(\r\n            successCallback,\r\n            error => errorCallback(new Error(error)));\r\n    }\r\n\r\n    /**\r\n     * Sends mute status for a track to conference if any.\r\n     *\r\n     * @param {boolean} mute - If track is muted.\r\n     * @private\r\n     * @returns {Promise}\r\n     */\r\n    _sendMuteStatus(mute) {\r\n        if (!this.conference || !this.conference.room) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return new Promise(resolve => {\r\n            this.conference.room[\r\n                this.isAudioTrack()\r\n                    ? 'setAudioMute'\r\n                    : 'setVideoMute'](mute, resolve);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     *\r\n     * Stops sending the media track. And removes it from the HTML.\r\n     * NOTE: Works for local tracks only.\r\n     *\r\n     * @extends JitsiTrack#dispose\r\n     * @returns {Promise}\r\n     */\r\n    dispose() {\r\n        this._switchStreamEffect();\r\n\r\n        let promise = Promise.resolve();\r\n\r\n        if (this.conference) {\r\n            promise = this.conference.removeTrack(this);\r\n        }\r\n\r\n        if (this.stream) {\r\n            this.stopStream();\r\n            this.detach();\r\n        }\r\n\r\n        RTCUtils.removeListener(RTCEvents.DEVICE_LIST_WILL_CHANGE, this._onDeviceListWillChange);\r\n\r\n        if (this._onAudioOutputDeviceChanged) {\r\n            RTCUtils.removeListener(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\r\n                this._onAudioOutputDeviceChanged);\r\n        }\r\n\r\n        return promise.then(() => super.dispose());\r\n    }\r\n\r\n    /**\r\n     * Returns <tt>true</tt> - if the stream is muted and <tt>false</tt>\r\n     * otherwise.\r\n     *\r\n     * @returns {boolean} <tt>true</tt> - if the stream is muted and\r\n     * <tt>false</tt> otherwise.\r\n     */\r\n    isMuted() {\r\n        // this.stream will be null when we mute local video on Chrome\r\n        if (!this.stream) {\r\n            return true;\r\n        }\r\n        if (this.isVideoTrack() && !this.isActive()) {\r\n            return true;\r\n        }\r\n\r\n        return !this.track || !this.track.enabled;\r\n    }\r\n\r\n    /**\r\n     * Sets the JitsiConference object associated with the track. This is temp\r\n     * solution.\r\n     *\r\n     * @param conference the JitsiConference object\r\n     */\r\n    _setConference(conference) {\r\n        this.conference = conference;\r\n\r\n        // We want to keep up with postponed events which should have been fired\r\n        // on \"attach\" call, but for local track we not always have the\r\n        // conference before attaching. However this may result in duplicated\r\n        // events if they have been triggered on \"attach\" already.\r\n        for (let i = 0; i < this.containers.length; i++) {\r\n            this._maybeFireTrackAttached(this.containers[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns <tt>true</tt>.\r\n     *\r\n     * @returns {boolean} <tt>true</tt>\r\n     */\r\n    isLocal() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Returns device id associated with track.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getDeviceId() {\r\n        return this._realDeviceId || this.deviceId;\r\n    }\r\n\r\n    /**\r\n     * Returns the participant id which owns the track.\r\n     *\r\n     * @returns {string} the id of the participants. It corresponds to the\r\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\r\n     */\r\n    getParticipantId() {\r\n        return this.conference && this.conference.myUserId();\r\n    }\r\n\r\n    /**\r\n     * Handles bytes sent statistics.\r\n     *\r\n     * @param {TraceablePeerConnection} tpc the source of the \"bytes sent\" stat\r\n     * @param {number} bytesSent the new value\r\n     * NOTE: used only for audio tracks to detect audio issues.\r\n     */\r\n    _onByteSentStatsReceived(tpc, bytesSent) {\r\n        if (bytesSent > 0) {\r\n            this._hasSentData = true;\r\n        }\r\n        const iceConnectionState = tpc.getConnectionState();\r\n\r\n        if (this._testDataSent && iceConnectionState === 'connected') {\r\n            setTimeout(() => {\r\n                if (!this._hasSentData) {\r\n                    logger.warn(`${this} 'bytes sent' <= 0: \\\r\n                        ${bytesSent}`);\r\n\r\n                    Statistics.analytics.sendEvent(NO_BYTES_SENT, { 'media_type': this.getType() });\r\n                }\r\n            }, 3000);\r\n            this._testDataSent = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns facing mode for video track from camera. For other cases (e.g.\r\n     * audio track or 'desktop' video track) returns undefined.\r\n     *\r\n     * @returns {CameraFacingMode|undefined}\r\n     */\r\n    getCameraFacingMode() {\r\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\r\n            // MediaStreamTrack#getSettings() is not implemented in many\r\n            // browsers, so we need feature checking here. Progress on the\r\n            // respective browser's implementation can be tracked at\r\n            // https://bugs.chromium.org/p/webrtc/issues/detail?id=2481 for\r\n            // Chromium and https://bugzilla.mozilla.org/show_bug.cgi?id=1213517\r\n            // for Firefox. Even if a browser implements getSettings() already,\r\n            // it might still not return anything for 'facingMode'.\r\n            let trackSettings;\r\n\r\n            try {\r\n                trackSettings = this.track.getSettings();\r\n            } catch (e) {\r\n                // XXX React-native-webrtc, for example, defines\r\n                // MediaStreamTrack#getSettings() but the implementation throws\r\n                // a \"Not implemented\" Error.\r\n            }\r\n            if (trackSettings && 'facingMode' in trackSettings) {\r\n                return trackSettings.facingMode;\r\n            }\r\n\r\n            if (typeof this._facingMode !== 'undefined') {\r\n                return this._facingMode;\r\n            }\r\n\r\n            // In most cases we are showing a webcam. So if we've gotten here,\r\n            // it should be relatively safe to assume that we are probably\r\n            // showing the user-facing camera.\r\n            return CameraFacingMode.USER;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * Stops the associated MediaStream.\r\n     */\r\n    stopStream() {\r\n        /**\r\n         * Indicates that we are executing {@link #stopStream} i.e.\r\n         * {@link RTCUtils#stopMediaStream} for the <tt>MediaStream</tt>\r\n         * associated with this <tt>JitsiTrack</tt> instance.\r\n         *\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        this._stopStreamInProgress = true;\r\n\r\n        try {\r\n            RTCUtils.stopMediaStream(this.stream);\r\n        } finally {\r\n            this._stopStreamInProgress = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Switches the camera facing mode if the WebRTC implementation supports the\r\n     * custom MediaStreamTrack._switchCamera method. Currently, the method in\r\n     * question is implemented in react-native-webrtc only. When such a WebRTC\r\n     * implementation is executing, the method is the preferred way to switch\r\n     * between the front/user-facing and the back/environment-facing cameras\r\n     * because it will likely be (as is the case of react-native-webrtc)\r\n     * noticeably faster that creating a new MediaStreamTrack via a new\r\n     * getUserMedia call with the switched facingMode constraint value.\r\n     * Moreover, the approach with a new getUserMedia call may not even work:\r\n     * WebRTC on Android and iOS is either very slow to open the camera a second\r\n     * time or plainly freezes attempting to do that.\r\n     */\r\n    _switchCamera() {\r\n        if (this.isVideoTrack()\r\n                && this.videoType === VideoType.CAMERA\r\n                && typeof this.track._switchCamera === 'function') {\r\n            this.track._switchCamera();\r\n\r\n            this._facingMode\r\n                = this._facingMode === CameraFacingMode.ENVIRONMENT\r\n                    ? CameraFacingMode.USER\r\n                    : CameraFacingMode.ENVIRONMENT;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks whether the attached MediaStream is receiving data from source or\r\n     * not. If the stream property is null(because of mute or another reason)\r\n     * this method will return false.\r\n     * NOTE: This method doesn't indicate problem with the streams directly.\r\n     * For example in case of video mute the method will return false or if the\r\n     * user has disposed the track.\r\n     *\r\n     * @returns {boolean} true if the stream is receiving data and false\r\n     * this otherwise.\r\n     */\r\n    isReceivingData() {\r\n        if (this.isVideoTrack()\r\n            && (this.isMuted() || this._stopStreamInProgress || this.videoType === VideoType.DESKTOP)) {\r\n            return true;\r\n        }\r\n\r\n        if (!this.stream) {\r\n            return false;\r\n        }\r\n\r\n        // In older version of the spec there is no muted property and\r\n        // readyState can have value muted. In the latest versions\r\n        // readyState can have values \"live\" and \"ended\" and there is\r\n        // muted boolean property. If the stream is muted that means that\r\n        // we aren't receiving any data from the source. We want to notify\r\n        // the users for error if the stream is muted or ended on it's\r\n        // creation.\r\n\r\n        // For video blur enabled use the original video stream\r\n        const stream = this._effectEnabled ? this._originalStream : this.stream;\r\n\r\n        return stream.getTracks().some(track =>\r\n            (!('readyState' in track) || track.readyState === 'live')\r\n                && (!('muted' in track) || track.muted !== true));\r\n    }\r\n\r\n    /**\r\n     * Creates a text representation of this local track instance.\r\n     *\r\n     * @return {string}\r\n     */\r\n    toString() {\r\n        return `LocalTrack[${this.rtcId},${this.getType()}]`;\r\n    }\r\n}\r\n","import { createTtfmEvent } from '../../service/statistics/AnalyticsEvents';\r\nimport JitsiTrack from './JitsiTrack';\r\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\r\nimport Statistics from '../statistics/statistics';\r\n\r\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\r\nconst RTCEvents = require('../../service/RTC/RTCEvents');\r\n\r\nlet ttfmTrackerAudioAttached = false;\r\nlet ttfmTrackerVideoAttached = false;\r\n\r\n/**\r\n * List of container events that we are going to process. _onContainerEventHandler will be added as listener to the\r\n * container for every event in the list.\r\n */\r\nconst containerEvents = [\r\n    'abort', 'canplay', 'canplaythrough', 'emptied', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart',\r\n    'pause', 'play', 'playing', 'ratechange', 'stalled', 'suspend', 'waiting'\r\n];\r\n\r\n/* eslint-disable max-params */\r\n\r\n/**\r\n * Represents a single media track (either audio or video).\r\n */\r\nexport default class JitsiRemoteTrack extends JitsiTrack {\r\n    /**\r\n     * Creates new JitsiRemoteTrack instance.\r\n     * @param {RTC} rtc the RTC service instance.\r\n     * @param {JitsiConference} conference the conference to which this track\r\n     *        belongs to\r\n     * @param {string} ownerEndpointId the endpoint ID of the track owner\r\n     * @param {MediaStream} stream WebRTC MediaStream, parent of the track\r\n     * @param {MediaStreamTrack} track underlying WebRTC MediaStreamTrack for\r\n     *        the new JitsiRemoteTrack\r\n     * @param {MediaType} mediaType the type of the media\r\n     * @param {VideoType} videoType the type of the video if applicable\r\n     * @param {number} ssrc the SSRC number of the Media Stream\r\n     * @param {boolean} muted the initial muted state\r\n     * @param {boolean} isP2P indicates whether or not this track belongs to a\r\n     * P2P session\r\n     * @throws {TypeError} if <tt>ssrc</tt> is not a number.\r\n     * @constructor\r\n     */\r\n    constructor(\r\n            rtc,\r\n            conference,\r\n            ownerEndpointId,\r\n            stream,\r\n            track,\r\n            mediaType,\r\n            videoType,\r\n            ssrc,\r\n            muted,\r\n            isP2P) {\r\n        super(\r\n            conference,\r\n            stream,\r\n            track,\r\n            () => {\r\n                // Nothing to do if the track is inactive.\r\n            },\r\n            mediaType,\r\n            videoType);\r\n        this.rtc = rtc;\r\n\r\n        // Prevent from mixing up type of SSRC which should be a number\r\n        if (typeof ssrc !== 'number') {\r\n            throw new TypeError(`SSRC ${ssrc} is not a number`);\r\n        }\r\n        this.ssrc = ssrc;\r\n        this.ownerEndpointId = ownerEndpointId;\r\n        this.muted = muted;\r\n        this.isP2P = isP2P;\r\n\r\n        logger.debug(`New remote track added: ${this}`);\r\n\r\n        // we want to mark whether the track has been ever muted\r\n        // to detect ttfm events for startmuted conferences, as it can\r\n        // significantly increase ttfm values\r\n        this.hasBeenMuted = muted;\r\n\r\n        // Bind 'onmute' and 'onunmute' event handlers\r\n        if (this.rtc && this.track) {\r\n            this._bindTrackHandlers();\r\n        }\r\n        this._containerHandlers = {};\r\n        containerEvents.forEach(event => {\r\n            this._containerHandlers[event] = this._containerEventHandler.bind(this, event);\r\n        });\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n    /**\r\n     * Attaches the track handlers.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    _bindTrackHandlers() {\r\n        this.track.addEventListener('mute', () => this._onTrackMute());\r\n        this.track.addEventListener('unmute', () => this._onTrackUnmute());\r\n        this.track.addEventListener('ended', () => {\r\n            logger.debug(`\"onended\" event(${Date.now()}): ${this}`);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Callback invoked when the track is muted. Emits an event notifying\r\n     * listeners of the mute event.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onTrackMute() {\r\n        logger.debug(`\"onmute\" event(${Date.now()}): ${this}`);\r\n\r\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_MUTE, this);\r\n    }\r\n\r\n    /**\r\n     * Callback invoked when the track is unmuted. Emits an event notifying\r\n     * listeners of the mute event.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onTrackUnmute() {\r\n        logger.debug(`\"onunmute\" event(${Date.now()}): ${this}`);\r\n\r\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_UNMUTE, this);\r\n    }\r\n\r\n    /**\r\n     * Sets current muted status and fires an events for the change.\r\n     * @param value the muted status.\r\n     */\r\n    setMute(value) {\r\n        if (this.muted === value) {\r\n            return;\r\n        }\r\n\r\n        if (value) {\r\n            this.hasBeenMuted = true;\r\n        }\r\n\r\n        // we can have a fake video stream\r\n        if (this.stream) {\r\n            this.stream.muted = value;\r\n        }\r\n\r\n        this.muted = value;\r\n        this.emit(JitsiTrackEvents.TRACK_MUTE_CHANGED, this);\r\n    }\r\n\r\n    /**\r\n     * Returns the current muted status of the track.\r\n     * @returns {boolean|*|JitsiRemoteTrack.muted} <tt>true</tt> if the track is\r\n     * muted and <tt>false</tt> otherwise.\r\n     */\r\n    isMuted() {\r\n        return this.muted;\r\n    }\r\n\r\n    /**\r\n     * Returns the participant id which owns the track.\r\n     *\r\n     * @returns {string} the id of the participants. It corresponds to the\r\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\r\n     */\r\n    getParticipantId() {\r\n        return this.ownerEndpointId;\r\n    }\r\n\r\n    /**\r\n     * Return false;\r\n     */\r\n    isLocal() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns the synchronization source identifier (SSRC) of this remote\r\n     * track.\r\n     *\r\n     * @returns {number} the SSRC of this remote track.\r\n     */\r\n    getSSRC() {\r\n        return this.ssrc;\r\n    }\r\n\r\n    /**\r\n     * Changes the video type of the track.\r\n     *\r\n     * @param {string} type - The new video type(\"camera\", \"desktop\").\r\n     */\r\n    _setVideoType(type) {\r\n        if (this.videoType === type) {\r\n            return;\r\n        }\r\n        this.videoType = type;\r\n        this.emit(JitsiTrackEvents.TRACK_VIDEOTYPE_CHANGED, type);\r\n    }\r\n\r\n    /**\r\n     * Handles track play events.\r\n     */\r\n    _playCallback() {\r\n        const type = this.isVideoTrack() ? 'video' : 'audio';\r\n\r\n        const now = window.performance.now();\r\n\r\n        console.log(`(TIME) Render ${type}:\\t`, now);\r\n        this.conference.getConnectionTimes()[`${type}.render`] = now;\r\n\r\n        // The conference can be started without calling GUM\r\n        // FIXME if there would be a module for connection times this kind\r\n        // of logic (gumDuration or ttfm) should end up there\r\n        const gumStart = window.connectionTimes['obtainPermissions.start'];\r\n        const gumEnd = window.connectionTimes['obtainPermissions.end'];\r\n        const gumDuration\r\n            = !isNaN(gumEnd) && !isNaN(gumStart) ? gumEnd - gumStart : 0;\r\n\r\n        // Subtract the muc.joined-to-session-initiate duration because jicofo\r\n        // waits until there are 2 participants to start Jingle sessions.\r\n        const ttfm = now\r\n            - (this.conference.getConnectionTimes()['session.initiate']\r\n                - this.conference.getConnectionTimes()['muc.joined'])\r\n            - gumDuration;\r\n\r\n        this.conference.getConnectionTimes()[`${type}.ttfm`] = ttfm;\r\n        console.log(`(TIME) TTFM ${type}:\\t`, ttfm);\r\n\r\n        Statistics.sendAnalytics(createTtfmEvent(\r\n            {\r\n                'media_type': type,\r\n                muted: this.hasBeenMuted,\r\n                value: ttfm\r\n            }));\r\n\r\n    }\r\n\r\n    /**\r\n     * Attach time to first media tracker only if there is conference and only\r\n     * for the first element.\r\n     * @param container the HTML container which can be 'video' or 'audio'\r\n     * element.\r\n     * @private\r\n     */\r\n    _attachTTFMTracker(container) {\r\n        if ((ttfmTrackerAudioAttached && this.isAudioTrack())\r\n            || (ttfmTrackerVideoAttached && this.isVideoTrack())) {\r\n            return;\r\n        }\r\n\r\n        if (this.isAudioTrack()) {\r\n            ttfmTrackerAudioAttached = true;\r\n        }\r\n        if (this.isVideoTrack()) {\r\n            ttfmTrackerVideoAttached = true;\r\n        }\r\n\r\n        container.addEventListener('canplay', this._playCallback.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Called when the track has been attached to a new container.\r\n     *\r\n     * @param {HTMLElement} container the HTML container which can be 'video' or\r\n     * 'audio' element.\r\n     * @private\r\n     */\r\n    _onTrackAttach(container) {\r\n        logger.debug(`Track has been attached to a container: ${this}`);\r\n\r\n        containerEvents.forEach(event => {\r\n            container.addEventListener(event, this._containerHandlers[event]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Called when the track has been detached from a container.\r\n     *\r\n     * @param {HTMLElement} container the HTML container which can be 'video' or\r\n     * 'audio' element.\r\n     * @private\r\n     */\r\n    _onTrackDetach(container) {\r\n        logger.debug(`Track has been detached from a container: ${this}`);\r\n\r\n        containerEvents.forEach(event => {\r\n            container.removeEventListener(event, this._containerHandlers[event]);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * An event handler for events triggered by the attached container.\r\n     *\r\n     * @param {string} type - The type of the event.\r\n     */\r\n    _containerEventHandler(type) {\r\n        logger.debug(`${type} handler was called for a container with attached ${this}`);\r\n    }\r\n\r\n    /**\r\n     * Returns a string with a description of the current status of the track.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    _getStatus() {\r\n        const { enabled, muted, readyState } = this.track;\r\n\r\n        return `readyState: ${readyState}, muted: ${muted}, enabled: ${enabled}`;\r\n    }\r\n\r\n    /**\r\n     * Creates a text representation of this remote track instance.\r\n     * @return {string}\r\n     */\r\n    toString() {\r\n        return `RemoteTrack[userID: ${this.getParticipantId()}, type: ${this.getType()}, ssrc: ${\r\n            this.getSSRC()}, p2p: ${this.isP2P}, status: ${this._getStatus()}]`;\r\n    }\r\n}\r\n","/* global __filename, module */\r\nimport EventEmitter from 'events';\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport RTCUtils from './RTCUtils';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Maps our handler types to MediaStreamTrack properties.\r\n */\r\nconst trackHandler2Prop = {\r\n    'track_mute': 'onmute', // Not supported on FF\r\n    'track_unmute': 'onunmute',\r\n    'track_ended': 'onended'\r\n};\r\n\r\n/**\r\n * Adds onended/oninactive handler to a MediaStream.\r\n * @param mediaStream a MediaStream to attach onended/oninactive handler\r\n * @param handler the handler\r\n */\r\nfunction addMediaStreamInactiveHandler(mediaStream, handler) {\r\n    mediaStream.oninactive = handler;\r\n}\r\n\r\n/**\r\n * Represents a single media track (either audio or video).\r\n */\r\nexport default class JitsiTrack extends EventEmitter {\r\n    /* eslint-disable max-params */\r\n    /**\r\n     * Represents a single media track (either audio or video).\r\n     * @constructor\r\n     * @param conference the rtc instance\r\n     * @param stream the WebRTC MediaStream instance\r\n     * @param track the WebRTC MediaStreamTrack instance, must be part of\r\n     * the given <tt>stream</tt>.\r\n     * @param streamInactiveHandler the function that will handle\r\n     *        onended/oninactive events of the stream.\r\n     * @param trackMediaType the media type of the JitsiTrack\r\n     * @param videoType the VideoType for this track if any\r\n     */\r\n    constructor(\r\n            conference,\r\n            stream,\r\n            track,\r\n            streamInactiveHandler,\r\n            trackMediaType,\r\n            videoType) {\r\n        super();\r\n\r\n        // aliases for addListener/removeListener\r\n        this.addEventListener = this.addListener;\r\n        this.removeEventListener = this.off = this.removeListener;\r\n\r\n        /**\r\n         * Array with the HTML elements that are displaying the streams.\r\n         * @type {Array}\r\n         */\r\n        this.containers = [];\r\n        this.conference = conference;\r\n        this.audioLevel = -1;\r\n        this.type = trackMediaType;\r\n        this.track = track;\r\n        this.videoType = videoType;\r\n        this.handlers = new Map();\r\n\r\n        /**\r\n         * Indicates whether this JitsiTrack has been disposed. If true, this\r\n         * JitsiTrack is to be considered unusable and operations involving it\r\n         * are to fail (e.g. {@link JitsiConference#addTrack(JitsiTrack)},\r\n         * {@link JitsiConference#removeTrack(JitsiTrack)}).\r\n         * @type {boolean}\r\n         */\r\n        this.disposed = false;\r\n\r\n        /**\r\n         * The inactive handler which will be triggered when the underlying\r\n         * <tt>MediaStream</tt> ends.\r\n         *\r\n         * @private\r\n         * @type {Function}\r\n         */\r\n        this._streamInactiveHandler = streamInactiveHandler;\r\n\r\n        this._setStream(stream);\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Sets handler to the WebRTC MediaStream or MediaStreamTrack object\r\n     * depending on the passed type.\r\n     * @param {string} type the type of the handler that is going to be set\r\n     * @param {Function} handler the handler.\r\n     */\r\n    _setHandler(type, handler) {\r\n        if (!trackHandler2Prop.hasOwnProperty(type)) {\r\n            logger.error(`Invalid handler type ${type}`);\r\n\r\n            return;\r\n        }\r\n        if (handler) {\r\n            this.handlers.set(type, handler);\r\n        } else {\r\n            this.handlers.delete(type);\r\n        }\r\n\r\n        if (this.stream) {\r\n            for (const track of this.stream.getTracks()) {\r\n                track[trackHandler2Prop[type]] = handler;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unregisters all event handlers bound to the underlying media stream/track\r\n     * @private\r\n     */\r\n    _unregisterHandlers() {\r\n        if (!this.stream) {\r\n            logger.warn(\r\n                `${this}: unable to unregister handlers - no stream object`);\r\n\r\n            return;\r\n        }\r\n\r\n        for (const type of this.handlers.keys()) {\r\n            // FIXME Why only video tracks?\r\n            for (const videoTrack of this.stream.getVideoTracks()) {\r\n                videoTrack[trackHandler2Prop[type]] = undefined;\r\n            }\r\n        }\r\n        if (this._streamInactiveHandler) {\r\n            addMediaStreamInactiveHandler(this.stream, undefined);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the stream property of JitsiTrack object and sets all stored\r\n     * handlers to it.\r\n     *\r\n     * @param {MediaStream} stream the new stream.\r\n     * @protected\r\n     */\r\n    _setStream(stream) {\r\n        if (this.stream === stream) {\r\n            return;\r\n        }\r\n\r\n        this.stream = stream;\r\n\r\n        // TODO Practically, that's like the opposite of _unregisterHandlers\r\n        // i.e. may be abstracted into a function/method called\r\n        // _registerHandlers for clarity and easing the maintenance of the two\r\n        // pieces of source code.\r\n        if (this.stream) {\r\n            for (const type of this.handlers.keys()) {\r\n                this._setHandler(type, this.handlers.get(type));\r\n            }\r\n            if (this._streamInactiveHandler) {\r\n                addMediaStreamInactiveHandler(\r\n                    this.stream, this._streamInactiveHandler);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the type (audio or video) of this track.\r\n     */\r\n    getType() {\r\n        return this.type;\r\n    }\r\n\r\n    /**\r\n     * Check if this is an audio track.\r\n     */\r\n    isAudioTrack() {\r\n        return this.getType() === MediaType.AUDIO;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the underlying WebRTC <tt>MediaStreamTrack</tt> is muted\r\n     * according to it's 'muted' field status.\r\n     * @return {boolean} <tt>true</tt> if the underlying\r\n     * <tt>MediaStreamTrack</tt> is muted or <tt>false</tt> otherwise.\r\n     */\r\n    isWebRTCTrackMuted() {\r\n        return this.track && this.track.muted;\r\n    }\r\n\r\n    /**\r\n     * Check if this is a video track.\r\n     */\r\n    isVideoTrack() {\r\n        return this.getType() === MediaType.VIDEO;\r\n    }\r\n\r\n    /**\r\n     * Checks whether this is a local track.\r\n     * @abstract\r\n     * @return {boolean} 'true' if it's a local track or 'false' otherwise.\r\n     */\r\n    isLocal() {\r\n        throw new Error('Not implemented by subclass');\r\n    }\r\n\r\n    /**\r\n     * Check whether this is a local audio track.\r\n     *\r\n     * @return {boolean} -  true if track represents a local audio track, false otherwise.\r\n     */\r\n    isLocalAudioTrack() {\r\n        return this.isAudioTrack() && this.isLocal();\r\n    }\r\n\r\n    /**\r\n     * Returns the WebRTC MediaStream instance.\r\n     */\r\n    getOriginalStream() {\r\n        return this.stream;\r\n    }\r\n\r\n    /**\r\n     * Returns the ID of the underlying WebRTC Media Stream(if any)\r\n     * @returns {String|null}\r\n     */\r\n    getStreamId() {\r\n        return this.stream ? this.stream.id : null;\r\n    }\r\n\r\n    /**\r\n     * Return the underlying WebRTC MediaStreamTrack\r\n     * @returns {MediaStreamTrack}\r\n     */\r\n    getTrack() {\r\n        return this.track;\r\n    }\r\n\r\n    /**\r\n     * Return the underlying WebRTC MediaStreamTrack label\r\n     * @returns {string}\r\n     */\r\n    getTrackLabel() {\r\n        return this.track.label;\r\n    }\r\n\r\n    /**\r\n     * Returns the ID of the underlying WebRTC MediaStreamTrack(if any)\r\n     * @returns {String|null}\r\n     */\r\n    getTrackId() {\r\n        return this.track ? this.track.id : null;\r\n    }\r\n\r\n    /**\r\n     * Return meaningful usage label for this track depending on it's media and\r\n     * eventual video type.\r\n     * @returns {string}\r\n     */\r\n    getUsageLabel() {\r\n        if (this.isAudioTrack()) {\r\n            return 'mic';\r\n        }\r\n\r\n        return this.videoType ? this.videoType : 'default';\r\n    }\r\n\r\n    /**\r\n     * Eventually will trigger RTCEvents.TRACK_ATTACHED event.\r\n     * @param container the video/audio container to which this stream is\r\n     *        attached and for which event will be fired.\r\n     * @private\r\n     */\r\n    _maybeFireTrackAttached(container) {\r\n        if (this.conference && container) {\r\n            this.conference._onTrackAttach(this, container);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attaches the MediaStream of this track to an HTML container.\r\n     * Adds the container to the list of containers that are displaying the\r\n     * track.\r\n     *\r\n     * @param container the HTML container which can be 'video' or 'audio'\r\n     * element.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    attach(container) {\r\n        if (this.stream) {\r\n            this._onTrackAttach(container);\r\n            RTCUtils.attachMediaStream(container, this.stream);\r\n        }\r\n        this.containers.push(container);\r\n        this._maybeFireTrackAttached(container);\r\n        this._attachTTFMTracker(container);\r\n    }\r\n\r\n    /**\r\n     * Removes this JitsiTrack from the passed HTML container.\r\n     *\r\n     * @param container the HTML container to detach from this JitsiTrack. If\r\n     * <tt>null</tt> or <tt>undefined</tt>, all containers are removed. A\r\n     * container can be a 'video', 'audio' or 'object' HTML element instance to\r\n     * which this JitsiTrack is currently attached.\r\n     */\r\n    detach(container) {\r\n        for (let cs = this.containers, i = cs.length - 1; i >= 0; --i) {\r\n            const c = cs[i];\r\n\r\n            if (!container) {\r\n                this._onTrackDetach(c);\r\n                RTCUtils.attachMediaStream(c, null);\r\n            }\r\n            if (!container || c === container) {\r\n                cs.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        if (container) {\r\n            this._onTrackDetach(container);\r\n            RTCUtils.attachMediaStream(container, null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Called when the track has been attached to a new container.\r\n     *\r\n     * @param {HTMLElement} container the HTML container which can be 'video' or\r\n     * 'audio' element.\r\n     * @private\r\n     */\r\n    _onTrackAttach(container) { // eslint-disable-line no-unused-vars\r\n        // Should be defined by the classes that are extending JitsiTrack\r\n    }\r\n\r\n    /**\r\n     * Called when the track has been detached from a container.\r\n     *\r\n     * @param {HTMLElement} container the HTML container which can be 'video' or\r\n     * 'audio' element.\r\n     * @private\r\n     */\r\n    _onTrackDetach(container) { // eslint-disable-line no-unused-vars\r\n        // Should be defined by the classes that are extending JitsiTrack\r\n    }\r\n\r\n    /**\r\n     * Attach time to first media tracker only if there is conference and only\r\n     * for the first element.\r\n     *\r\n     * @param {HTMLElement} container the HTML container which can be 'video' or\r\n     * 'audio' element.\r\n     * @private\r\n     */\r\n    _attachTTFMTracker(container) { // eslint-disable-line no-unused-vars\r\n        // Should be defined by the classes that are extending JitsiTrack\r\n    }\r\n\r\n    /**\r\n     * Removes attached event listeners.\r\n     *\r\n     * @returns {Promise}\r\n     */\r\n    dispose() {\r\n        this.removeAllListeners();\r\n\r\n        this.disposed = true;\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    /**\r\n     * Returns true if this is a video track and the source of the video is a\r\n     * screen capture as opposed to a camera.\r\n     */\r\n    isScreenSharing() {\r\n        // FIXME: Should be fixed or removed.\r\n    }\r\n\r\n    /**\r\n     * Returns id of the track.\r\n     * @returns {string|null} id of the track or null if this is fake track.\r\n     */\r\n    getId() {\r\n        if (this.stream) {\r\n            return RTCUtils.getStreamID(this.stream);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the MediaStream is active/not ended.\r\n     * When there is no check for active we don't have information and so\r\n     * will return that stream is active (in case of FF).\r\n     * @returns {boolean} whether MediaStream is active.\r\n     */\r\n    isActive() {\r\n        if (typeof this.stream.active !== 'undefined') {\r\n            return this.stream.active;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Sets the audio level for the stream\r\n     * @param {number} audioLevel value between 0 and 1\r\n     * @param {TraceablePeerConnection} [tpc] the peerconnection instance which\r\n     * is source for the audio level. It can be <tt>undefined</tt> for\r\n     * a local track if the audio level was measured outside of the\r\n     * peerconnection (see /modules/statistics/LocalStatsCollector.js).\r\n     */\r\n    setAudioLevel(audioLevel, tpc) {\r\n        if (this.audioLevel !== audioLevel) {\r\n            this.audioLevel = audioLevel;\r\n            this.emit(\r\n                JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\r\n                audioLevel,\r\n                tpc);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the msid of the stream attached to the JitsiTrack object or null\r\n     * if no stream is attached.\r\n     */\r\n    getMSID() {\r\n        const streamId = this.getStreamId();\r\n        const trackId = this.getTrackId();\r\n\r\n        return streamId && trackId ? `${streamId} ${trackId}` : null;\r\n    }\r\n\r\n    /**\r\n     * Sets new audio output device for track's DOM elements. Video tracks are\r\n     * ignored.\r\n     * @param {string} audioOutputDeviceId - id of 'audiooutput' device from\r\n     *      navigator.mediaDevices.enumerateDevices(), '' for default device\r\n     * @emits JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED\r\n     * @returns {Promise}\r\n     */\r\n    setAudioOutput(audioOutputDeviceId) {\r\n        if (!RTCUtils.isDeviceChangeAvailable('output')) {\r\n            return Promise.reject(\r\n                new Error('Audio output device change is not supported'));\r\n        }\r\n\r\n        // All audio communication is done through audio tracks, so ignore\r\n        // changing audio output for video tracks at all.\r\n        if (this.isVideoTrack()) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return (\r\n            Promise.all(\r\n                this.containers.map(\r\n                    element =>\r\n                        element.setSinkId(audioOutputDeviceId)\r\n                            .catch(error => {\r\n                                logger.warn(\r\n                                    'Failed to change audio output device on'\r\n                                        + ' element. Default or previously set'\r\n                                        + ' audio output device will be used.',\r\n                                    element,\r\n                                    error);\r\n                                throw error;\r\n                            }))\r\n            )\r\n                .then(() => {\r\n                    this.emit(\r\n                        JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED,\r\n                        audioOutputDeviceId);\r\n                }));\r\n    }\r\n}\r\n","/* global __filename */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport { SdpTransformWrap } from '../xmpp/SdpTransformUtil';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Fakes local SDP exposed to {@link JingleSessionPC} through the local\r\n * description getter. Modifies the SDP, so that it will contain muted local\r\n * video tracks description, even though their underlying {MediaStreamTrack}s\r\n * are no longer in the WebRTC peerconnection. That prevents from SSRC updates\r\n * being sent to Jicofo/remote peer and prevents sRD/sLD cycle on the remote\r\n * side.\r\n */\r\nexport default class LocalSdpMunger {\r\n\r\n    /**\r\n     * Creates new <tt>LocalSdpMunger</tt> instance.\r\n     *\r\n     * @param {TraceablePeerConnection} tpc\r\n     */\r\n    constructor(tpc) {\r\n        this.tpc = tpc;\r\n    }\r\n\r\n    /**\r\n     * Makes sure that muted local video tracks associated with the parent\r\n     * {@link TraceablePeerConnection} are described in the local SDP. It's done\r\n     * in order to prevent from sending 'source-remove'/'source-add' Jingle\r\n     * notifications when local video track is muted (<tt>MediaStream</tt> is\r\n     * removed from the peerconnection).\r\n     *\r\n     * NOTE 1 video track is assumed\r\n     *\r\n     * @param {SdpTransformWrap} transformer the transformer instance which will\r\n     * be used to process the SDP.\r\n     * @return {boolean} <tt>true</tt> if there were any modifications to\r\n     * the SDP wrapped by <tt>transformer</tt>.\r\n     * @private\r\n     */\r\n    _addMutedLocalVideoTracksToSDP(transformer) {\r\n        // Go over each video tracks and check if the SDP has to be changed\r\n        const localVideos = this.tpc.getLocalTracks(MediaType.VIDEO);\r\n\r\n        if (!localVideos.length) {\r\n            return false;\r\n        } else if (localVideos.length !== 1) {\r\n            logger.error(\r\n                `${this.tpc} there is more than 1 video track ! `\r\n                    + 'Strange things may happen !', localVideos);\r\n        }\r\n\r\n        const videoMLine = transformer.selectMedia('video');\r\n\r\n        if (!videoMLine) {\r\n            logger.debug(\r\n                `${this.tpc} unable to hack local video track SDP`\r\n                    + '- no \"video\" media');\r\n\r\n            return false;\r\n        }\r\n\r\n        let modified = false;\r\n\r\n        for (const videoTrack of localVideos) {\r\n            const muted = videoTrack.isMuted();\r\n            const mediaStream = videoTrack.getOriginalStream();\r\n\r\n            // During the mute/unmute operation there are periods of time when\r\n            // the track's underlying MediaStream is not added yet to\r\n            // the PeerConnection. The SDP needs to be munged in such case.\r\n            const isInPeerConnection\r\n                = mediaStream && this.tpc.isMediaStreamInPc(mediaStream);\r\n            const shouldFakeSdp = muted || !isInPeerConnection;\r\n\r\n            logger.debug(\r\n                `${this.tpc} ${videoTrack} muted: ${\r\n                    muted}, is in PeerConnection: ${\r\n                    isInPeerConnection} => should fake sdp ? : ${\r\n                    shouldFakeSdp}`);\r\n\r\n            if (!shouldFakeSdp) {\r\n                continue; // eslint-disable-line no-continue\r\n            }\r\n\r\n            // Inject removed SSRCs\r\n            const requiredSSRCs\r\n                = this.tpc.isSimulcastOn()\r\n                    ? this.tpc.simulcast.ssrcCache\r\n                    : [ this.tpc.sdpConsistency.cachedPrimarySsrc ];\r\n\r\n            if (!requiredSSRCs.length) {\r\n                logger.error(\r\n                    `No SSRCs stored for: ${videoTrack} in ${this.tpc}`);\r\n\r\n                continue; // eslint-disable-line no-continue\r\n            }\r\n\r\n            modified = true;\r\n\r\n            // We need to fake sendrecv.\r\n            // NOTE the SDP produced here goes only to Jicofo and is never set\r\n            // as localDescription. That's why\r\n            // TraceablePeerConnection.mediaTransferActive is ignored here.\r\n            videoMLine.direction = 'sendrecv';\r\n\r\n            // Check if the recvonly has MSID\r\n            const primarySSRC = requiredSSRCs[0];\r\n\r\n            // FIXME The cname could come from the stream, but may turn out to\r\n            // be too complex. It is fine to come up with any value, as long as\r\n            // we only care about the actual SSRC values when deciding whether\r\n            // or not an update should be sent.\r\n            const primaryCname = `injected-${primarySSRC}`;\r\n\r\n            for (const ssrcNum of requiredSSRCs) {\r\n                // Remove old attributes\r\n                videoMLine.removeSSRC(ssrcNum);\r\n\r\n                // Inject\r\n                logger.debug(\r\n                    `${this.tpc} injecting video SSRC: ${ssrcNum} for ${\r\n                        videoTrack}`);\r\n                videoMLine.addSSRCAttribute({\r\n                    id: ssrcNum,\r\n                    attribute: 'cname',\r\n                    value: primaryCname\r\n                });\r\n                videoMLine.addSSRCAttribute({\r\n                    id: ssrcNum,\r\n                    attribute: 'msid',\r\n                    value: videoTrack.storedMSID\r\n                });\r\n            }\r\n            if (requiredSSRCs.length > 1) {\r\n                const group = {\r\n                    ssrcs: requiredSSRCs.join(' '),\r\n                    semantics: 'SIM'\r\n                };\r\n\r\n                if (!videoMLine.findGroup(group.semantics, group.ssrcs)) {\r\n                    // Inject the group\r\n                    logger.debug(\r\n                        `${this.tpc} injecting SIM group for ${videoTrack}`,\r\n                        group);\r\n                    videoMLine.addSSRCGroup(group);\r\n                }\r\n            }\r\n\r\n            // Insert RTX\r\n            // FIXME in P2P RTX is used by Chrome regardless of config option\r\n            // status. Because of that 'source-remove'/'source-add'\r\n            // notifications are still sent to remove/add RTX SSRC and FID group\r\n            if (!this.tpc.options.disableRtx) {\r\n                this.tpc.rtxModifier.modifyRtxSsrcs2(videoMLine);\r\n            }\r\n        }\r\n\r\n        return modified;\r\n    }\r\n\r\n    /**\r\n     * Modifies 'cname', 'msid', 'label' and 'mslabel' by appending\r\n     * the id of {@link LocalSdpMunger#tpc} at the end, preceding by a dash\r\n     * sign.\r\n     *\r\n     * @param {MLineWrap} mediaSection - The media part (audio or video) of the\r\n     * session description which will be modified in place.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    _transformMediaIdentifiers(mediaSection) {\r\n        const pcId = this.tpc.id;\r\n\r\n        for (const ssrcLine of mediaSection.ssrcs) {\r\n            switch (ssrcLine.attribute) {\r\n            case 'cname':\r\n            case 'label':\r\n            case 'mslabel':\r\n                ssrcLine.value = ssrcLine.value && `${ssrcLine.value}-${pcId}`;\r\n                break;\r\n            case 'msid': {\r\n                if (ssrcLine.value) {\r\n                    const streamAndTrackIDs = ssrcLine.value.split(' ');\r\n\r\n                    if (streamAndTrackIDs.length === 2) {\r\n                        const streamId = streamAndTrackIDs[0];\r\n                        const trackId = streamAndTrackIDs[1];\r\n\r\n                        ssrcLine.value\r\n                            = `${streamId}-${pcId} ${trackId}-${pcId}`;\r\n                    } else {\r\n                        logger.warn(\r\n                            'Unable to munge local MSID'\r\n                                + `- weird format detected: ${ssrcLine.value}`);\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Maybe modifies local description to fake local video tracks SDP when\r\n     * those are muted.\r\n     *\r\n     * @param {object} desc the WebRTC SDP object instance for the local\r\n     * description.\r\n     * @returns {RTCSessionDescription}\r\n     */\r\n    maybeAddMutedLocalVideoTracksToSDP(desc) {\r\n        if (!desc) {\r\n            throw new Error('No local description passed in.');\r\n        }\r\n\r\n        const transformer = new SdpTransformWrap(desc.sdp);\r\n\r\n        if (this._addMutedLocalVideoTracksToSDP(transformer)) {\r\n            return new RTCSessionDescription({\r\n                type: desc.type,\r\n                sdp: transformer.toRawSDP()\r\n            });\r\n        }\r\n\r\n        return desc;\r\n    }\r\n\r\n    /**\r\n     * This transformation will make sure that stream identifiers are unique\r\n     * across all of the local PeerConnections even if the same stream is used\r\n     * by multiple instances at the same time.\r\n     * Each PeerConnection assigns different SSRCs to the same local\r\n     * MediaStream, but the MSID remains the same as it's used to identify\r\n     * the stream by the WebRTC backend. The transformation will append\r\n     * {@link TraceablePeerConnection#id} at the end of each stream's identifier\r\n     * (\"cname\", \"msid\", \"label\" and \"mslabel\").\r\n     *\r\n     * @param {RTCSessionDescription} sessionDesc - The local session\r\n     * description (this instance remains unchanged).\r\n     * @return {RTCSessionDescription} - Transformed local session description\r\n     * (a modified copy of the one given as the input).\r\n     */\r\n    transformStreamIdentifiers(sessionDesc) {\r\n        // FIXME similar check is probably duplicated in all other transformers\r\n        if (!sessionDesc || !sessionDesc.sdp || !sessionDesc.type) {\r\n            return sessionDesc;\r\n        }\r\n\r\n        const transformer = new SdpTransformWrap(sessionDesc.sdp);\r\n        const audioMLine = transformer.selectMedia('audio');\r\n\r\n        if (audioMLine) {\r\n            this._transformMediaIdentifiers(audioMLine);\r\n        }\r\n\r\n        const videoMLine = transformer.selectMedia('video');\r\n\r\n        if (videoMLine) {\r\n            this._transformMediaIdentifiers(videoMLine);\r\n        }\r\n\r\n        return new RTCSessionDescription({\r\n            type: sessionDesc.type,\r\n            sdp: transformer.toRawSDP()\r\n        });\r\n    }\r\n}\r\n","/* global __filename */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\n\r\nimport BridgeChannel from './BridgeChannel';\r\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\r\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\r\nimport JitsiLocalTrack from './JitsiLocalTrack';\r\nimport Listenable from '../util/Listenable';\r\nimport { safeCounterIncrement } from '../util/MathUtil';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport browser from '../browser';\r\nimport RTCEvents from '../../service/RTC/RTCEvents';\r\nimport RTCUtils from './RTCUtils';\r\nimport Statistics from '../statistics/statistics';\r\nimport TraceablePeerConnection from './TraceablePeerConnection';\r\nimport VideoType from '../../service/RTC/VideoType';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * The counter used to generated id numbers assigned to peer connections\r\n * @type {number}\r\n */\r\nlet peerConnectionIdCounter = 0;\r\n\r\n/**\r\n * The counter used to generate id number for the local\r\n * <code>MediaStreamTrack</code>s.\r\n * @type {number}\r\n */\r\nlet rtcTrackIdCounter = 0;\r\n\r\n/**\r\n *\r\n * @param tracksInfo\r\n * @param options\r\n */\r\nfunction createLocalTracks(tracksInfo, options) {\r\n    const newTracks = [];\r\n    let deviceId = null;\r\n\r\n    tracksInfo.forEach(trackInfo => {\r\n        if (trackInfo.mediaType === MediaType.AUDIO) {\r\n            deviceId = options.micDeviceId;\r\n        } else if (trackInfo.videoType === VideoType.CAMERA) {\r\n            deviceId = options.cameraDeviceId;\r\n        }\r\n        rtcTrackIdCounter = safeCounterIncrement(rtcTrackIdCounter);\r\n        const localTrack = new JitsiLocalTrack({\r\n            ...trackInfo,\r\n            deviceId,\r\n            facingMode: options.facingMode,\r\n            rtcId: rtcTrackIdCounter,\r\n            effects: options.effects\r\n        });\r\n\r\n        newTracks.push(localTrack);\r\n    });\r\n\r\n    return newTracks;\r\n}\r\n\r\n/**\r\n * Creates {@code JitsiLocalTrack} instances from the passed in meta information\r\n * about MedieaTracks.\r\n *\r\n * @param {Object[]} mediaStreamMetaData - An array of meta information with\r\n * MediaTrack instances. Each can look like:\r\n * {{\r\n *     stream: MediaStream instance that holds a track with audio or video,\r\n *     track: MediaTrack within the MediaStream,\r\n *     videoType: \"camera\" or \"desktop\" or falsy,\r\n *     sourceId: ID of the desktopsharing source,\r\n *     sourceType: The desktopsharing source type,\r\n *     effects: Array of effect types\r\n * }}\r\n */\r\nfunction _newCreateLocalTracks(mediaStreamMetaData = []) {\r\n    return mediaStreamMetaData.map(metaData => {\r\n        const {\r\n            sourceId,\r\n            sourceType,\r\n            stream,\r\n            track,\r\n            videoType,\r\n            effects\r\n        } = metaData;\r\n\r\n        const { deviceId, facingMode } = track.getSettings();\r\n\r\n        // FIXME Move rtcTrackIdCounter to a static method in JitsiLocalTrack\r\n        // so RTC does not need to handle ID management. This move would be\r\n        // safer to do once the old createLocalTracks is removed.\r\n        rtcTrackIdCounter = safeCounterIncrement(rtcTrackIdCounter);\r\n\r\n        return new JitsiLocalTrack({\r\n            deviceId,\r\n            facingMode,\r\n            mediaType: track.kind,\r\n            rtcId: rtcTrackIdCounter,\r\n            sourceId,\r\n            sourceType,\r\n            stream,\r\n            track,\r\n            videoType: videoType || null,\r\n            effects\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport default class RTC extends Listenable {\r\n    /**\r\n     *\r\n     * @param conference\r\n     * @param options\r\n     */\r\n    constructor(conference, options = {}) {\r\n        super();\r\n        this.conference = conference;\r\n\r\n        /**\r\n         * A map of active <tt>TraceablePeerConnection</tt>.\r\n         * @type {Map.<number, TraceablePeerConnection>}\r\n         */\r\n        this.peerConnections = new Map();\r\n\r\n        this.localTracks = [];\r\n\r\n        this.options = options;\r\n\r\n        // BridgeChannel instance.\r\n        // @private\r\n        // @type {BridgeChannel}\r\n        this._channel = null;\r\n\r\n        // A flag whether we had received that the channel had opened we can\r\n        // get this flag out of sync if for some reason channel got closed\r\n        // from server, a desired behaviour so we can see errors when this\r\n        // happen.\r\n        // @private\r\n        // @type {boolean}\r\n        this._channelOpen = false;\r\n\r\n        /**\r\n         * The value specified to the last invocation of setLastN before the\r\n         * channel completed opening. If non-null, the value will be sent\r\n         * through a channel (once) as soon as it opens and will then be\r\n         * discarded.\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this._lastN = -1;\r\n\r\n        /**\r\n         * Defines the last N endpoints list. It can be null or an array once\r\n         * initialised with a channel last N event.\r\n         * @type {Array<string>|null}\r\n         * @private\r\n         */\r\n        this._lastNEndpoints = null;\r\n\r\n        /**\r\n         * The number representing the maximum video height the local client\r\n         * should receive from the bridge.\r\n         *\r\n         * @type {number|undefined}\r\n         * @private\r\n         */\r\n        this._maxFrameHeight = undefined;\r\n\r\n        /**\r\n         * The endpoint ID of currently pinned participant or <tt>null</tt> if\r\n         * no user is pinned.\r\n         * @type {string|null}\r\n         * @private\r\n         */\r\n        this._pinnedEndpoint = null;\r\n\r\n        /**\r\n         * The endpoint IDs of currently selected participants.\r\n         *\r\n         * @type {Array}\r\n         * @private\r\n         */\r\n        this._selectedEndpoints = [];\r\n\r\n        // The last N change listener.\r\n        this._lastNChangeListener = this._onLastNChanged.bind(this);\r\n\r\n        this._onDeviceListChanged = this._onDeviceListChanged.bind(this);\r\n        this._updateAudioOutputForAudioTracks\r\n            = this._updateAudioOutputForAudioTracks.bind(this);\r\n\r\n        // Switch audio output device on all remote audio tracks. Local audio\r\n        // tracks handle this event by themselves.\r\n        if (RTCUtils.isDeviceChangeAvailable('output')) {\r\n            RTCUtils.addListener(\r\n                RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\r\n                this._updateAudioOutputForAudioTracks\r\n            );\r\n\r\n            RTCUtils.addListener(\r\n                RTCEvents.DEVICE_LIST_CHANGED,\r\n                this._onDeviceListChanged\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes any listeners and stored state from this {@code RTC} instance.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    destroy() {\r\n        RTCUtils.removeListener(\r\n            RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\r\n            this._updateAudioOutputForAudioTracks\r\n        );\r\n\r\n        RTCUtils.removeListener(\r\n            RTCEvents.DEVICE_LIST_CHANGED,\r\n            this._onDeviceListChanged\r\n        );\r\n\r\n        this.removeListener(\r\n            RTCEvents.LASTN_ENDPOINT_CHANGED,\r\n            this._lastNChangeListener\r\n        );\r\n\r\n        if (this._channelOpenListener) {\r\n            this.removeListener(\r\n                RTCEvents.DATA_CHANNEL_OPEN,\r\n                this._channelOpenListener\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Exposes the private helper for converting a WebRTC MediaStream to a\r\n     * JitsiLocalTrack.\r\n     *\r\n     * @param {Array<Object>} tracksInfo\r\n     * @returns {Array<JitsiLocalTrack>}\r\n     */\r\n    static newCreateLocalTracks(tracksInfo) {\r\n        return _newCreateLocalTracks(tracksInfo);\r\n    }\r\n\r\n    /**\r\n     * Creates the local MediaStreams.\r\n     * @param {object} [options] Optional parameters.\r\n     * @param {array} options.devices The devices that will be requested.\r\n     * @param {string} options.resolution Resolution constraints.\r\n     * @param {string} options.cameraDeviceId\r\n     * @param {string} options.micDeviceId\r\n     * @returns {*} Promise object that will receive the new JitsiTracks\r\n     */\r\n    static obtainAudioAndVideoPermissions(options) {\r\n        const usesNewGumFlow = browser.usesNewGumFlow();\r\n        const obtainMediaPromise = usesNewGumFlow\r\n            ? RTCUtils.newObtainAudioAndVideoPermissions(options)\r\n            : RTCUtils.obtainAudioAndVideoPermissions(options);\r\n\r\n        return obtainMediaPromise.then(tracksInfo => {\r\n            if (usesNewGumFlow) {\r\n                return _newCreateLocalTracks(tracksInfo);\r\n            }\r\n\r\n            return createLocalTracks(tracksInfo, options);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initializes the bridge channel of this instance.\r\n     * At least one of both, peerconnection or wsUrl parameters, must be\r\n     * given.\r\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\r\n     * instance.\r\n     * @param {string} [wsUrl] WebSocket URL.\r\n     */\r\n    initializeBridgeChannel(peerconnection, wsUrl) {\r\n        this._channel = new BridgeChannel(\r\n            peerconnection, wsUrl, this.eventEmitter);\r\n\r\n        this._channelOpenListener = () => {\r\n            // Mark that channel as opened.\r\n            this._channelOpen = true;\r\n\r\n            // When the channel becomes available, tell the bridge about\r\n            // video selections so that it can do adaptive simulcast,\r\n            // we want the notification to trigger even if userJid\r\n            // is undefined, or null.\r\n            try {\r\n                this._channel.sendPinnedEndpointMessage(\r\n                    this._pinnedEndpoint);\r\n                this._channel.sendSelectedEndpointsMessage(\r\n                    this._selectedEndpoints);\r\n\r\n                if (typeof this._maxFrameHeight !== 'undefined') {\r\n                    this._channel.sendReceiverVideoConstraintMessage(\r\n                        this._maxFrameHeight);\r\n                }\r\n            } catch (error) {\r\n                GlobalOnErrorHandler.callErrorHandler(error);\r\n                logger.error(\r\n                    `Cannot send selected(${this._selectedEndpoint})`\r\n                    + `pinned(${this._pinnedEndpoint})`\r\n                    + `frameHeight(${this._maxFrameHeight}) endpoint message`,\r\n                    error);\r\n            }\r\n\r\n            this.removeListener(RTCEvents.DATA_CHANNEL_OPEN,\r\n                this._channelOpenListener);\r\n            this._channelOpenListener = null;\r\n\r\n            // If setLastN was invoked before the bridge channel completed\r\n            // opening, apply the specified value now that the channel\r\n            // is open. NOTE that -1 is the default value assumed by both\r\n            // RTC module and the JVB.\r\n            if (this._lastN !== -1) {\r\n                this._channel.sendSetLastNMessage(this._lastN);\r\n            }\r\n        };\r\n\r\n        this.addListener(RTCEvents.DATA_CHANNEL_OPEN,\r\n            this._channelOpenListener);\r\n\r\n        // Add Last N change listener.\r\n        this.addListener(RTCEvents.LASTN_ENDPOINT_CHANGED,\r\n            this._lastNChangeListener);\r\n    }\r\n\r\n    /**\r\n     * Callback invoked when the list of known audio and video devices has\r\n     * been updated. Attempts to update the known available audio output\r\n     * devices.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onDeviceListChanged() {\r\n        this._updateAudioOutputForAudioTracks(RTCUtils.getAudioOutputDevice());\r\n    }\r\n\r\n    /**\r\n     * Receives events when Last N had changed.\r\n     * @param {array} lastNEndpoints The new Last N endpoints.\r\n     * @private\r\n     */\r\n    _onLastNChanged(lastNEndpoints = []) {\r\n        const oldLastNEndpoints = this._lastNEndpoints || [];\r\n        let leavingLastNEndpoints = [];\r\n        let enteringLastNEndpoints = [];\r\n\r\n        this._lastNEndpoints = lastNEndpoints;\r\n\r\n        leavingLastNEndpoints = oldLastNEndpoints.filter(\r\n            id => !this.isInLastN(id));\r\n\r\n        enteringLastNEndpoints = lastNEndpoints.filter(\r\n            id => oldLastNEndpoints.indexOf(id) === -1);\r\n\r\n        this.conference.eventEmitter.emit(\r\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\r\n            leavingLastNEndpoints,\r\n            enteringLastNEndpoints);\r\n    }\r\n\r\n    /**\r\n     * Should be called when current media session ends and after the\r\n     * PeerConnection has been closed using PeerConnection.close() method.\r\n     */\r\n    onCallEnded() {\r\n        if (this._channel) {\r\n            // The BridgeChannel is not explicitly closed as the PeerConnection\r\n            // is closed on call ended which triggers datachannel onclose\r\n            // events. If using a WebSocket, the channel must be closed since\r\n            // it is not managed by the PeerConnection.\r\n            // The reference is cleared to disable any logic related to the\r\n            // channel.\r\n            if (this._channel && this._channel.mode === 'websocket') {\r\n                this._channel.close();\r\n            }\r\n\r\n            this._channel = null;\r\n            this._channelOpen = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the maximum video size the local participant should receive from\r\n     * remote participants. Will cache the value and send it through the channel\r\n     * once it is created.\r\n     *\r\n     * @param {number} maxFrameHeightPixels the maximum frame height, in pixels,\r\n     * this receiver is willing to receive.\r\n     * @returns {void}\r\n     */\r\n    setReceiverVideoConstraint(maxFrameHeight) {\r\n        this._maxFrameHeight = maxFrameHeight;\r\n\r\n        if (this._channel && this._channelOpen) {\r\n            this._channel.sendReceiverVideoConstraintMessage(maxFrameHeight);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Elects the participants with the given ids to be the selected\r\n     * participants in order to always receive video for this participant (even\r\n     * when last n is enabled). If there is no channel we store it and send it\r\n     * through the channel once it is created.\r\n     *\r\n     * @param {Array<string>} ids - The user ids.\r\n     * @throws NetworkError or InvalidStateError or Error if the operation\r\n     * fails.\r\n     * @returns {void}\r\n     */\r\n    selectEndpoints(ids) {\r\n        this._selectedEndpoints = ids;\r\n\r\n        if (this._channel && this._channelOpen) {\r\n            this._channel.sendSelectedEndpointsMessage(ids);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Elects the participant with the given id to be the pinned participant in\r\n     * order to always receive video for this participant (even when last n is\r\n     * enabled).\r\n     * @param {stirng} id The user id.\r\n     * @throws NetworkError or InvalidStateError or Error if the operation\r\n     * fails.\r\n     */\r\n    pinEndpoint(id) {\r\n        // Cache the value if channel is missing, till we open it.\r\n        this._pinnedEndpoint = id;\r\n        if (this._channel && this._channelOpen) {\r\n            this._channel.sendPinnedEndpointMessage(id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param eventType\r\n     * @param listener\r\n     */\r\n    static addListener(eventType, listener) {\r\n        RTCUtils.addListener(eventType, listener);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param eventType\r\n     * @param listener\r\n     */\r\n    static removeListener(eventType, listener) {\r\n        RTCUtils.removeListener(eventType, listener);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param options\r\n     */\r\n    static init(options = {}) {\r\n        this.options = options;\r\n\r\n        return RTCUtils.init(this.options);\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    /**\r\n     * Creates new <tt>TraceablePeerConnection</tt>\r\n     * @param {SignalingLayer} signaling The signaling layer that will\r\n     *      provide information about the media or participants which is not\r\n     *      carried over SDP.\r\n     * @param {object} iceConfig An object describing the ICE config like\r\n     *      defined in the WebRTC specification.\r\n     * @param {boolean} isP2P Indicates whether or not the new TPC will be used\r\n     *      in a peer to peer type of session.\r\n     * @param {object} options The config options.\r\n     * @param {boolean} options.disableSimulcast If set to 'true' will disable\r\n     *      the simulcast.\r\n     * @param {boolean} options.disableRtx If set to 'true' will disable the\r\n     *      RTX.\r\n     * @param {boolean} options.disableH264 If set to 'true' H264 will be\r\n     *      disabled by removing it from the SDP.\r\n     * @param {boolean} options.preferH264 If set to 'true' H264 will be\r\n     *      preferred over other video codecs.\r\n     * @param {boolean} options.startSilent If set to 'true' no audio will be sent or received.\r\n     * @return {TraceablePeerConnection}\r\n     */\r\n    createPeerConnection(signaling, iceConfig, isP2P, options) {\r\n        const pcConstraints = RTC.getPCConstraints(isP2P);\r\n\r\n        if (typeof options.abtestSuspendVideo !== 'undefined') {\r\n            RTCUtils.setSuspendVideo(pcConstraints, options.abtestSuspendVideo);\r\n\r\n            Statistics.analytics.addPermanentProperties(\r\n                { abtestSuspendVideo: options.abtestSuspendVideo });\r\n        }\r\n\r\n        // FIXME: We should rename iceConfig to pcConfig.\r\n\r\n        if (browser.supportsInsertableStreams()) {\r\n            logger.debug('E2EE - setting insertable streams constraints');\r\n            iceConfig.forceEncodedAudioInsertableStreams = true;\r\n            iceConfig.forceEncodedVideoInsertableStreams = true;\r\n        }\r\n\r\n        if (browser.supportsSdpSemantics()) {\r\n            iceConfig.sdpSemantics = 'plan-b';\r\n        }\r\n\r\n        // Set the RTCBundlePolicy to max-bundle so that only one set of ice candidates is generated.\r\n        // The default policy generates separate ice candidates for audio and video connections.\r\n        // This change is necessary for Unified plan to work properly on Chrome and Safari.\r\n        iceConfig.bundlePolicy = 'max-bundle';\r\n\r\n        peerConnectionIdCounter = safeCounterIncrement(peerConnectionIdCounter);\r\n\r\n        const newConnection\r\n            = new TraceablePeerConnection(\r\n                this,\r\n                peerConnectionIdCounter,\r\n                signaling,\r\n                iceConfig, pcConstraints,\r\n                isP2P, options);\r\n\r\n        this.peerConnections.set(newConnection.id, newConnection);\r\n\r\n        return newConnection;\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Removed given peer connection from this RTC module instance.\r\n     * @param {TraceablePeerConnection} traceablePeerConnection\r\n     * @return {boolean} <tt>true</tt> if the given peer connection was removed\r\n     * successfully or <tt>false</tt> if there was no peer connection mapped in\r\n     * this RTC instance.\r\n     */\r\n    _removePeerConnection(traceablePeerConnection) {\r\n        const id = traceablePeerConnection.id;\r\n\r\n        if (this.peerConnections.has(id)) {\r\n            // NOTE Remote tracks are not removed here.\r\n            this.peerConnections.delete(id);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param track\r\n     */\r\n    addLocalTrack(track) {\r\n        if (!track) {\r\n            throw new Error('track must not be null nor undefined');\r\n        }\r\n\r\n        this.localTracks.push(track);\r\n\r\n        track.conference = this.conference;\r\n    }\r\n\r\n    /**\r\n     * Returns the current value for \"lastN\" - the amount of videos are going\r\n     * to be delivered. When set to -1 for unlimited or all available videos.\r\n     * @return {number}\r\n     */\r\n    getLastN() {\r\n        return this._lastN;\r\n    }\r\n\r\n    /**\r\n     * Get local video track.\r\n     * @returns {JitsiLocalTrack|undefined}\r\n     */\r\n    getLocalVideoTrack() {\r\n        const localVideo = this.getLocalTracks(MediaType.VIDEO);\r\n\r\n\r\n        return localVideo.length ? localVideo[0] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Get local audio track.\r\n     * @returns {JitsiLocalTrack|undefined}\r\n     */\r\n    getLocalAudioTrack() {\r\n        const localAudio = this.getLocalTracks(MediaType.AUDIO);\r\n\r\n\r\n        return localAudio.length ? localAudio[0] : undefined;\r\n    }\r\n\r\n    /**\r\n     * Returns the local tracks of the given media type, or all local tracks if\r\n     * no specific type is given.\r\n     * @param {MediaType} [mediaType] Optional media type filter.\r\n     * (audio or video).\r\n     */\r\n    getLocalTracks(mediaType) {\r\n        let tracks = this.localTracks.slice();\r\n\r\n        if (mediaType !== undefined) {\r\n            tracks = tracks.filter(\r\n                track => track.getType() === mediaType);\r\n        }\r\n\r\n        return tracks;\r\n    }\r\n\r\n    /**\r\n     * Obtains all remote tracks currently known to this RTC module instance.\r\n     * @param {MediaType} [mediaType] The remote tracks will be filtered\r\n     *      by their media type if this argument is specified.\r\n     * @return {Array<JitsiRemoteTrack>}\r\n     */\r\n    getRemoteTracks(mediaType) {\r\n        let remoteTracks = [];\r\n\r\n        for (const tpc of this.peerConnections.values()) {\r\n            const pcRemoteTracks = tpc.getRemoteTracks(undefined, mediaType);\r\n\r\n            if (pcRemoteTracks) {\r\n                remoteTracks = remoteTracks.concat(pcRemoteTracks);\r\n            }\r\n        }\r\n\r\n        return remoteTracks;\r\n    }\r\n\r\n    /**\r\n     * Set mute for all local audio streams attached to the conference.\r\n     * @param value The mute value.\r\n     * @returns {Promise}\r\n     */\r\n    setAudioMute(value) {\r\n        const mutePromises = [];\r\n\r\n        this.getLocalTracks(MediaType.AUDIO).forEach(audioTrack => {\r\n            // this is a Promise\r\n            mutePromises.push(value ? audioTrack.mute() : audioTrack.unmute());\r\n        });\r\n\r\n        // We return a Promise from all Promises so we can wait for their\r\n        // execution.\r\n        return Promise.all(mutePromises);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param track\r\n     */\r\n    removeLocalTrack(track) {\r\n        const pos = this.localTracks.indexOf(track);\r\n\r\n        if (pos === -1) {\r\n            return;\r\n        }\r\n\r\n        this.localTracks.splice(pos, 1);\r\n    }\r\n\r\n    /**\r\n     * Removes all JitsiRemoteTracks associated with given MUC nickname\r\n     * (resource part of the JID). Returns array of removed tracks.\r\n     *\r\n     * @param {string} Owner The resource part of the MUC JID.\r\n     * @returns {JitsiRemoteTrack[]}\r\n     */\r\n    removeRemoteTracks(owner) {\r\n        let removedTracks = [];\r\n\r\n        for (const tpc of this.peerConnections.values()) {\r\n            const pcRemovedTracks = tpc.removeRemoteTracks(owner);\r\n\r\n            removedTracks = removedTracks.concat(pcRemovedTracks);\r\n        }\r\n\r\n        logger.debug(\r\n            `Removed remote tracks for ${owner}`\r\n                + ` count: ${removedTracks.length}`);\r\n\r\n        return removedTracks;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    static getPCConstraints(isP2P) {\r\n        const pcConstraints\r\n            = isP2P ? RTCUtils.p2pPcConstraints : RTCUtils.pcConstraints;\r\n\r\n        if (!pcConstraints) {\r\n            return {};\r\n        }\r\n\r\n        return JSON.parse(JSON.stringify(pcConstraints));\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param elSelector\r\n     * @param stream\r\n     */\r\n    static attachMediaStream(elSelector, stream) {\r\n        return RTCUtils.attachMediaStream(elSelector, stream);\r\n    }\r\n\r\n    /**\r\n     * Returns the id of the given stream.\r\n     * @param {MediaStream} stream\r\n     */\r\n    static getStreamID(stream) {\r\n        return RTCUtils.getStreamID(stream);\r\n    }\r\n\r\n    /**\r\n     * Returns the id of the given track.\r\n     * @param {MediaStreamTrack} track\r\n     */\r\n    static getTrackID(track) {\r\n        return RTCUtils.getTrackID(track);\r\n    }\r\n\r\n    /**\r\n     * Returns true if retrieving the the list of input devices is supported\r\n     * and false if not.\r\n     */\r\n    static isDeviceListAvailable() {\r\n        return RTCUtils.isDeviceListAvailable();\r\n    }\r\n\r\n    /**\r\n     * Returns true if changing the input (camera / microphone) or output\r\n     * (audio) device is supported and false if not.\r\n     * @param {string} [deviceType] Type of device to change. Default is\r\n     *      undefined or 'input', 'output' - for audio output device change.\r\n     * @returns {boolean} true if available, false otherwise.\r\n     */\r\n    static isDeviceChangeAvailable(deviceType) {\r\n        return RTCUtils.isDeviceChangeAvailable(deviceType);\r\n    }\r\n\r\n    /**\r\n     * Returns whether the current execution environment supports WebRTC (for\r\n     * use within this library).\r\n     *\r\n     * @returns {boolean} {@code true} if WebRTC is supported in the current\r\n     * execution environment (for use within this library); {@code false},\r\n     * otherwise.\r\n     */\r\n    static isWebRtcSupported() {\r\n        return browser.isSupported();\r\n    }\r\n\r\n    /**\r\n     * Returns currently used audio output device id, '' stands for default\r\n     * device\r\n     * @returns {string}\r\n     */\r\n    static getAudioOutputDevice() {\r\n        return RTCUtils.getAudioOutputDevice();\r\n    }\r\n\r\n    /**\r\n     * Returns list of available media devices if its obtained, otherwise an\r\n     * empty array is returned/\r\n     * @returns {array} list of available media devices.\r\n     */\r\n    static getCurrentlyAvailableMediaDevices() {\r\n        return RTCUtils.getCurrentlyAvailableMediaDevices();\r\n    }\r\n\r\n    /**\r\n     * Returns event data for device to be reported to stats.\r\n     * @returns {MediaDeviceInfo} device.\r\n     */\r\n    static getEventDataForActiveDevice(device) {\r\n        return RTCUtils.getEventDataForActiveDevice(device);\r\n    }\r\n\r\n    /**\r\n     * Sets current audio output device.\r\n     * @param {string} deviceId Id of 'audiooutput' device from\r\n     *      navigator.mediaDevices.enumerateDevices().\r\n     * @returns {Promise} resolves when audio output is changed, is rejected\r\n     *      otherwise\r\n     */\r\n    static setAudioOutputDevice(deviceId) {\r\n        return RTCUtils.setAudioOutputDevice(deviceId);\r\n    }\r\n\r\n    /**\r\n     * Returns <tt>true<tt/> if given WebRTC MediaStream is considered a valid\r\n     * \"user\" stream which means that it's not a \"receive only\" stream nor a\r\n     * \"mixed\" JVB stream.\r\n     *\r\n     * Clients that implement Unified Plan, such as Firefox use recvonly\r\n     * \"streams/channels/tracks\" for receiving remote stream/tracks, as opposed\r\n     * to Plan B where there are only 3 channels: audio, video and data.\r\n     *\r\n     * @param {MediaStream} stream The WebRTC MediaStream instance.\r\n     * @returns {boolean}\r\n     */\r\n    static isUserStream(stream) {\r\n        return RTC.isUserStreamById(RTCUtils.getStreamID(stream));\r\n    }\r\n\r\n    /**\r\n     * Returns <tt>true<tt/> if a WebRTC MediaStream identified by given stream\r\n     * ID is considered a valid \"user\" stream which means that it's not a\r\n     * \"receive only\" stream nor a \"mixed\" JVB stream.\r\n     *\r\n     * Clients that implement Unified Plan, such as Firefox use recvonly\r\n     * \"streams/channels/tracks\" for receiving remote stream/tracks, as opposed\r\n     * to Plan B where there are only 3 channels: audio, video and data.\r\n     *\r\n     * @param {string} streamId The id of WebRTC MediaStream.\r\n     * @returns {boolean}\r\n     */\r\n    static isUserStreamById(streamId) {\r\n        return streamId && streamId !== 'mixedmslabel'\r\n            && streamId !== 'default';\r\n    }\r\n\r\n    /**\r\n     * Allows to receive list of available cameras/microphones.\r\n     * @param {function} callback Would receive array of devices as an\r\n     *      argument.\r\n     */\r\n    static enumerateDevices(callback) {\r\n        RTCUtils.enumerateDevices(callback);\r\n    }\r\n\r\n    /**\r\n     * A method to handle stopping of the stream.\r\n     * One point to handle the differences in various implementations.\r\n     * @param {MediaStream} mediaStream MediaStream object to stop.\r\n     */\r\n    static stopMediaStream(mediaStream) {\r\n        RTCUtils.stopMediaStream(mediaStream);\r\n    }\r\n\r\n    /**\r\n     * Returns whether the desktop sharing is enabled or not.\r\n     * @returns {boolean}\r\n     */\r\n    static isDesktopSharingEnabled() {\r\n        return RTCUtils.isDesktopSharingEnabled();\r\n    }\r\n\r\n    /**\r\n     * Closes the currently opened bridge channel.\r\n     */\r\n    closeBridgeChannel() {\r\n        if (this._channel) {\r\n            this._channel.close();\r\n            this._channelOpen = false;\r\n\r\n            this.removeListener(RTCEvents.LASTN_ENDPOINT_CHANGED,\r\n                this._lastNChangeListener);\r\n        }\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n    /**\r\n     *\r\n     * @param {TraceablePeerConnection} tpc\r\n     * @param {number} ssrc\r\n     * @param {number} audioLevel\r\n     * @param {boolean} isLocal\r\n     */\r\n    setAudioLevel(tpc, ssrc, audioLevel, isLocal) {\r\n        const track = tpc.getTrackBySSRC(ssrc);\r\n\r\n        if (!track) {\r\n            return;\r\n        } else if (!track.isAudioTrack()) {\r\n            logger.warn(`Received audio level for non-audio track: ${ssrc}`);\r\n\r\n            return;\r\n        } else if (track.isLocal() !== isLocal) {\r\n            logger.error(\r\n                `${track} was expected to ${isLocal ? 'be' : 'not be'} local`);\r\n        }\r\n\r\n        track.setAudioLevel(audioLevel, tpc);\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Sends message via the bridge channel.\r\n     * @param {string} to The id of the endpoint that should receive the\r\n     *      message. If \"\" the message will be sent to all participants.\r\n     * @param {object} payload The payload of the message.\r\n     * @throws NetworkError or InvalidStateError or Error if the operation\r\n     * fails or there is no data channel created.\r\n     */\r\n    sendChannelMessage(to, payload) {\r\n        if (this._channel) {\r\n            this._channel.sendMessage(to, payload);\r\n        } else {\r\n            throw new Error('Channel support is disabled!');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Selects a new value for \"lastN\". The requested amount of videos are going\r\n     * to be delivered after the value is in effect. Set to -1 for unlimited or\r\n     * all available videos.\r\n     * @param {number} value the new value for lastN.\r\n     */\r\n    setLastN(value) {\r\n        if (this._lastN !== value) {\r\n            this._lastN = value;\r\n            if (this._channel && this._channelOpen) {\r\n                this._channel.sendSetLastNMessage(value);\r\n            }\r\n            this.eventEmitter.emit(RTCEvents.LASTN_VALUE_CHANGED, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Indicates if the endpoint id is currently included in the last N.\r\n     * @param {string} id The endpoint id that we check for last N.\r\n     * @returns {boolean} true if the endpoint id is in the last N or if we\r\n     * don't have bridge channel support, otherwise we return false.\r\n     */\r\n    isInLastN(id) {\r\n        return !this._lastNEndpoints // lastNEndpoints not initialised yet.\r\n            || this._lastNEndpoints.indexOf(id) > -1;\r\n    }\r\n\r\n    /**\r\n     * Updates the target audio output device for all remote audio tracks.\r\n     *\r\n     * @param {string} deviceId - The device id of the audio ouput device to\r\n     * use for all remote tracks.\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _updateAudioOutputForAudioTracks(deviceId) {\r\n        const remoteAudioTracks = this.getRemoteTracks(MediaType.AUDIO);\r\n\r\n        for (const track of remoteAudioTracks) {\r\n            track.setAudioOutput(deviceId);\r\n        }\r\n    }\r\n}\r\n","/* global\r\n          __filename,\r\n          MediaStreamTrack,\r\n          RTCIceCandidate: true,\r\n          RTCPeerConnection,\r\n          RTCSessionDescription: true\r\n*/\r\n\r\nimport { AVAILABLE_DEVICE } from '../../service/statistics/AnalyticsEvents';\r\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\r\nimport EventEmitter from 'events';\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\r\nimport JitsiTrackError from '../../JitsiTrackError';\r\nimport Listenable from '../util/Listenable';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport Resolutions from '../../service/RTC/Resolutions';\r\nimport browser from '../browser';\r\nimport RTCEvents from '../../service/RTC/RTCEvents';\r\nimport screenObtainer from './ScreenObtainer';\r\nimport SDPUtil from '../xmpp/SDPUtil';\r\nimport Statistics from '../statistics/statistics';\r\nimport VideoType from '../../service/RTC/VideoType';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n// Require adapter only for certain browsers. This is being done for\r\n// react-native, which has its own shims, and while browsers are being migrated\r\n// over to use adapter's shims.\r\nif (browser.usesAdapter()) {\r\n    require('webrtc-adapter');\r\n}\r\n\r\nconst eventEmitter = new EventEmitter();\r\n\r\nconst AVAILABLE_DEVICES_POLL_INTERVAL_TIME = 3000; // ms\r\n\r\n/**\r\n * Default resolution to obtain for video tracks if no resolution is specified.\r\n * This default is used for old gum flow only, as new gum flow uses\r\n * {@link DEFAULT_CONSTRAINTS}.\r\n */\r\nconst OLD_GUM_DEFAULT_RESOLUTION = 720;\r\n\r\n/**\r\n * Default devices to obtain when no specific devices are specified. This\r\n * default is used for old gum flow only.\r\n */\r\nconst OLD_GUM_DEFAULT_DEVICES = [ 'audio', 'video' ];\r\n\r\n/**\r\n * Default MediaStreamConstraints to use for calls to getUserMedia.\r\n *\r\n * @private\r\n */\r\nconst DEFAULT_CONSTRAINTS = {\r\n    video: {\r\n        height: {\r\n            ideal: 720,\r\n            max: 720,\r\n            min: 240\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * The default frame rate for Screen Sharing.\r\n */\r\nconst SS_DEFAULT_FRAME_RATE = 5;\r\n\r\n// Currently audio output device change is supported only in Chrome and\r\n// default output always has 'default' device ID\r\nlet audioOutputDeviceId = 'default'; // default device\r\n// whether user has explicitly set a device to use\r\nlet audioOutputChanged = false;\r\n\r\n// Disables all audio processing\r\nlet disableAP = false;\r\n\r\n// Disables Acoustic Echo Cancellation\r\nlet disableAEC = false;\r\n\r\n// Disables Noise Suppression\r\nlet disableNS = false;\r\n\r\n// Disables Automatic Gain Control\r\nlet disableAGC = false;\r\n\r\n// Disables Highpass Filter\r\nlet disableHPF = false;\r\n\r\nconst featureDetectionAudioEl = document.createElement('audio');\r\nconst isAudioOutputDeviceChangeAvailable\r\n    = typeof featureDetectionAudioEl.setSinkId !== 'undefined';\r\n\r\nlet availableDevices;\r\nlet availableDevicesPollTimer;\r\n\r\n/**\r\n * Initialize wrapper function for enumerating devices.\r\n * TODO: remove this, it should no longer be needed.\r\n *\r\n * @returns {?Function}\r\n */\r\nfunction initEnumerateDevicesWithCallback() {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\r\n        return callback => {\r\n            navigator.mediaDevices.enumerateDevices()\r\n                .then(callback, () => callback([]));\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param constraints\r\n * @param isNewStyleConstraintsSupported\r\n * @param resolution\r\n */\r\nfunction setResolutionConstraints(\r\n        constraints,\r\n        isNewStyleConstraintsSupported,\r\n        resolution) {\r\n    if (Resolutions[resolution]) {\r\n        if (isNewStyleConstraintsSupported) {\r\n            constraints.video.width = {\r\n                ideal: Resolutions[resolution].width\r\n            };\r\n            constraints.video.height = {\r\n                ideal: Resolutions[resolution].height\r\n            };\r\n        }\r\n\r\n        constraints.video.mandatory.minWidth = Resolutions[resolution].width;\r\n        constraints.video.mandatory.minHeight = Resolutions[resolution].height;\r\n    }\r\n\r\n    if (constraints.video.mandatory.minWidth) {\r\n        constraints.video.mandatory.maxWidth\r\n            = constraints.video.mandatory.minWidth;\r\n    }\r\n\r\n    if (constraints.video.mandatory.minHeight) {\r\n        constraints.video.mandatory.maxHeight\r\n            = constraints.video.mandatory.minHeight;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {string[]} um required user media types\r\n *\r\n * @param {Object} [options={}] optional parameters\r\n * @param {string} options.resolution\r\n * @param {number} options.bandwidth\r\n * @param {number} options.fps\r\n * @param {string} options.desktopStream\r\n * @param {string} options.cameraDeviceId\r\n * @param {string} options.micDeviceId\r\n * @param {CameraFacingMode} options.facingMode\r\n * @param {bool} firefox_fake_device\r\n * @param {Object} options.frameRate - used only for dekstop sharing.\r\n * @param {Object} options.frameRate.min - Minimum fps\r\n * @param {Object} options.frameRate.max - Maximum fps\r\n * @param {bool}   options.screenShareAudio - Used by electron clients to\r\n * enable system audio screen sharing.\r\n */\r\nfunction getConstraints(um, options = {}) {\r\n    const constraints = {\r\n        audio: false,\r\n        video: false\r\n    };\r\n\r\n    // Don't mix new and old style settings for Chromium as this leads\r\n    // to TypeError in new Chromium versions. @see\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=614716\r\n    // This is a temporary solution, in future we will fully split old and\r\n    // new style constraints when new versions of Chromium and Firefox will\r\n    // have stable support of new constraints format. For more information\r\n    // @see https://github.com/jitsi/lib-jitsi-meet/pull/136\r\n    const isNewStyleConstraintsSupported\r\n        = browser.isFirefox()\r\n            || browser.isSafari()\r\n            || browser.isReactNative();\r\n\r\n    if (um.indexOf('video') >= 0) {\r\n        // same behaviour as true\r\n        constraints.video = { mandatory: {},\r\n            optional: [] };\r\n\r\n        if (options.cameraDeviceId) {\r\n            if (isNewStyleConstraintsSupported) {\r\n                // New style of setting device id.\r\n                constraints.video.deviceId = options.cameraDeviceId;\r\n            }\r\n\r\n            // Old style.\r\n            constraints.video.mandatory.sourceId = options.cameraDeviceId;\r\n        } else {\r\n            // Prefer the front i.e. user-facing camera (to the back i.e.\r\n            // environment-facing camera, for example).\r\n            // TODO: Maybe use \"exact\" syntax if options.facingMode is defined,\r\n            // but this probably needs to be decided when updating other\r\n            // constraints, as we currently don't use \"exact\" syntax anywhere.\r\n            const facingMode = options.facingMode || CameraFacingMode.USER;\r\n\r\n            if (isNewStyleConstraintsSupported) {\r\n                constraints.video.facingMode = facingMode;\r\n            }\r\n            constraints.video.optional.push({\r\n                facingMode\r\n            });\r\n        }\r\n\r\n        if (options.minFps || options.maxFps || options.fps) {\r\n            // for some cameras it might be necessary to request 30fps\r\n            // so they choose 30fps mjpg over 10fps yuy2\r\n            if (options.minFps || options.fps) {\r\n                // Fall back to options.fps for backwards compatibility\r\n                options.minFps = options.minFps || options.fps;\r\n                constraints.video.mandatory.minFrameRate = options.minFps;\r\n            }\r\n            if (options.maxFps) {\r\n                constraints.video.mandatory.maxFrameRate = options.maxFps;\r\n            }\r\n        }\r\n\r\n        setResolutionConstraints(\r\n            constraints, isNewStyleConstraintsSupported, options.resolution);\r\n    }\r\n    if (um.indexOf('audio') >= 0) {\r\n        if (browser.isReactNative()) {\r\n            // The react-native-webrtc project that we're currently using\r\n            // expects the audio constraint to be a boolean.\r\n            constraints.audio = true;\r\n        } else if (browser.isFirefox()) {\r\n            if (options.micDeviceId) {\r\n                constraints.audio = {\r\n                    mandatory: {},\r\n                    deviceId: options.micDeviceId, // new style\r\n                    optional: [ {\r\n                        sourceId: options.micDeviceId // old style\r\n                    } ] };\r\n            } else {\r\n                constraints.audio = true;\r\n            }\r\n        } else {\r\n            // same behaviour as true\r\n            constraints.audio = { mandatory: {},\r\n                optional: [] };\r\n            if (options.micDeviceId) {\r\n                if (isNewStyleConstraintsSupported) {\r\n                    // New style of setting device id.\r\n                    constraints.audio.deviceId = options.micDeviceId;\r\n                }\r\n\r\n                // Old style.\r\n                constraints.audio.optional.push({\r\n                    sourceId: options.micDeviceId\r\n                });\r\n            }\r\n\r\n            // if it is good enough for hangouts...\r\n            constraints.audio.optional.push(\r\n                { echoCancellation: !disableAEC && !disableAP },\r\n                { googEchoCancellation: !disableAEC && !disableAP },\r\n                { googAutoGainControl: !disableAGC && !disableAP },\r\n                { googNoiseSuppression: !disableNS && !disableAP },\r\n                { googHighpassFilter: !disableHPF && !disableAP },\r\n                { googNoiseSuppression2: !disableNS && !disableAP },\r\n                { googEchoCancellation2: !disableAEC && !disableAP },\r\n                { googAutoGainControl2: !disableAGC && !disableAP }\r\n            );\r\n        }\r\n    }\r\n    if (um.indexOf('screen') >= 0) {\r\n        if (browser.isChrome()) {\r\n            constraints.video = {\r\n                mandatory: getSSConstraints({\r\n                    ...options,\r\n                    source: 'screen'\r\n                }),\r\n                optional: []\r\n            };\r\n\r\n        } else if (browser.isFirefox()) {\r\n            constraints.video = {\r\n                mozMediaSource: 'window',\r\n                mediaSource: 'window',\r\n                frameRate: options.frameRate || {\r\n                    min: SS_DEFAULT_FRAME_RATE,\r\n                    max: SS_DEFAULT_FRAME_RATE\r\n                }\r\n            };\r\n\r\n        } else {\r\n            const errmsg\r\n                = '\\'screen\\' WebRTC media source is supported only in Chrome'\r\n                    + ' and Firefox';\r\n\r\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\r\n            logger.error(errmsg);\r\n        }\r\n    }\r\n    if (um.indexOf('desktop') >= 0) {\r\n        constraints.video = {\r\n            mandatory: getSSConstraints({\r\n                ...options,\r\n                source: 'desktop'\r\n            }),\r\n            optional: []\r\n        };\r\n\r\n        // Audio screen sharing for electron only works for screen type devices.\r\n        // i.e. when the user shares the whole desktop.\r\n        if (browser.isElectron() && options.screenShareAudio\r\n            && (options.desktopStream.indexOf('screen') >= 0)) {\r\n\r\n            // Provide constraints as described by the electron desktop capturer\r\n            // documentation here:\r\n            // https://www.electronjs.org/docs/api/desktop-capturer\r\n            constraints.audio = { mandatory: {\r\n                chromeMediaSource: constraints.video.mandatory.chromeMediaSource\r\n            } };\r\n\r\n            delete constraints.video.mandatory.chromeMediaSourceId;\r\n        }\r\n    }\r\n\r\n    if (options.bandwidth) {\r\n        if (!constraints.video) {\r\n            // same behaviour as true\r\n            constraints.video = { mandatory: {},\r\n                optional: [] };\r\n        }\r\n        constraints.video.optional.push({ bandwidth: options.bandwidth });\r\n    }\r\n\r\n    // we turn audio for both audio and video tracks, the fake audio & video\r\n    // seems to work only when enabled in one getUserMedia call, we cannot get\r\n    // fake audio separate by fake video this later can be a problem with some\r\n    // of the tests\r\n    if (browser.isFirefox() && options.firefox_fake_device) {\r\n        // seems to be fixed now, removing this experimental fix, as having\r\n        // multiple audio tracks brake the tests\r\n        // constraints.audio = true;\r\n        constraints.fake = true;\r\n    }\r\n\r\n    return constraints;\r\n}\r\n\r\n/**\r\n * Creates a constraints object to be passed into a call to getUserMedia.\r\n *\r\n * @param {Array} um - An array of user media types to get. The accepted\r\n * types are \"video\", \"audio\", and \"desktop.\"\r\n * @param {Object} options - Various values to be added to the constraints.\r\n * @param {string} options.cameraDeviceId - The device id for the video\r\n * capture device to get video from.\r\n * @param {Object} options.constraints - Default constraints object to use\r\n * as a base for the returned constraints.\r\n * @param {Object} options.desktopStream - The desktop source id from which\r\n * to capture a desktop sharing video.\r\n * @param {string} options.facingMode - Which direction the camera is\r\n * pointing to.\r\n * @param {string} options.micDeviceId - The device id for the audio capture\r\n * device to get audio from.\r\n * @param {Object} options.frameRate - used only for dekstop sharing.\r\n * @param {Object} options.frameRate.min - Minimum fps\r\n * @param {Object} options.frameRate.max - Maximum fps\r\n * @private\r\n * @returns {Object}\r\n */\r\nfunction newGetConstraints(um = [], options = {}) {\r\n    // Create a deep copy of the constraints to avoid any modification of\r\n    // the passed in constraints object.\r\n    const constraints = JSON.parse(JSON.stringify(\r\n        options.constraints || DEFAULT_CONSTRAINTS));\r\n\r\n    if (um.indexOf('video') >= 0) {\r\n        if (!constraints.video) {\r\n            constraints.video = {};\r\n        }\r\n\r\n        if (options.cameraDeviceId) {\r\n            constraints.video.deviceId = options.cameraDeviceId;\r\n        } else {\r\n            const facingMode = options.facingMode || CameraFacingMode.USER;\r\n\r\n            constraints.video.facingMode = facingMode;\r\n        }\r\n    } else {\r\n        constraints.video = false;\r\n    }\r\n\r\n    if (um.indexOf('audio') >= 0) {\r\n        if (!constraints.audio || typeof constraints.audio === 'boolean') {\r\n            constraints.audio = {};\r\n        }\r\n\r\n        // NOTE(brian): the new-style ('advanced' instead of 'optional')\r\n        // doesn't seem to carry through the googXXX constraints\r\n        // Changing back to 'optional' here (even with video using\r\n        // the 'advanced' style) allows them to be passed through\r\n        // but also requires the device id to capture to be set in optional\r\n        // as sourceId otherwise the constraints are considered malformed.\r\n        if (!constraints.audio.optional) {\r\n            constraints.audio.optional = [];\r\n        }\r\n\r\n        constraints.audio.optional.push(\r\n            { sourceId: options.micDeviceId },\r\n            { echoCancellation: !disableAEC && !disableAP },\r\n            { googEchoCancellation: !disableAEC && !disableAP },\r\n            { googAutoGainControl: !disableAGC && !disableAP },\r\n            { googNoiseSuppression: !disableNS && !disableAP },\r\n            { googHighpassFilter: !disableHPF && !disableAP },\r\n            { googNoiseSuppression2: !disableNS && !disableAP },\r\n            { googEchoCancellation2: !disableAEC && !disableAP },\r\n            { googAutoGainControl2: !disableAGC && !disableAP }\r\n        );\r\n    } else {\r\n        constraints.audio = false;\r\n    }\r\n\r\n    if (um.indexOf('desktop') >= 0) {\r\n        if (!constraints.video || typeof constraints.video === 'boolean') {\r\n            constraints.video = {};\r\n        }\r\n\r\n        constraints.video = {\r\n            mandatory: getSSConstraints({\r\n                ...options,\r\n                source: 'desktop'\r\n            })\r\n        };\r\n    }\r\n\r\n    return constraints;\r\n}\r\n\r\n/**\r\n * Generates GUM constraints for screen sharing.\r\n *\r\n * @param {Object} options - The options passed to\r\n * <tt>obtainAudioAndVideoPermissions</tt>.\r\n * @returns {Object} - GUM constraints.\r\n *\r\n * TODO: Currently only the new GUM flow and Chrome is using the method. We\r\n * should make it work for all use cases.\r\n */\r\nfunction getSSConstraints(options = {}) {\r\n    const {\r\n        desktopStream,\r\n        frameRate = {\r\n            min: SS_DEFAULT_FRAME_RATE,\r\n            max: SS_DEFAULT_FRAME_RATE\r\n        }\r\n    } = options;\r\n    const { max, min } = frameRate;\r\n\r\n    const constraints = {\r\n        chromeMediaSource: options.source,\r\n        maxWidth: window.screen.width,\r\n        maxHeight: window.screen.height\r\n    };\r\n\r\n    if (typeof min === 'number') {\r\n        constraints.minFrameRate = min;\r\n    }\r\n\r\n    if (typeof max === 'number') {\r\n        constraints.maxFrameRate = max;\r\n    }\r\n\r\n    if (typeof desktopStream !== 'undefined') {\r\n        constraints.chromeMediaSourceId = desktopStream;\r\n    }\r\n\r\n    return constraints;\r\n}\r\n\r\n/**\r\n * Generates constraints for screen sharing when using getDisplayMedia.\r\n * The constraints(MediaTrackConstraints) are applied to the resulting track.\r\n *\r\n * @returns {Object} - MediaTrackConstraints constraints.\r\n */\r\nfunction getTrackSSConstraints(options = {}) {\r\n    // we used to set height and width in the constraints, but this can lead\r\n    // to inconsistencies if the browser is on a lower resolution screen\r\n    // and we share a screen with bigger resolution, so they are now not set\r\n    const constraints = {\r\n        frameRate: SS_DEFAULT_FRAME_RATE\r\n    };\r\n    const { desktopSharingFrameRate } = options;\r\n\r\n    if (desktopSharingFrameRate && desktopSharingFrameRate.max) {\r\n        constraints.frameRate = desktopSharingFrameRate.max;\r\n    }\r\n\r\n    return constraints;\r\n}\r\n\r\n/**\r\n * Updates the granted permissions based on the options we requested and the\r\n * streams we received.\r\n * @param um the options we requested to getUserMedia.\r\n * @param stream the stream we received from calling getUserMedia.\r\n */\r\nfunction updateGrantedPermissions(um, stream) {\r\n    const audioTracksReceived\r\n        = Boolean(stream) && stream.getAudioTracks().length > 0;\r\n    const videoTracksReceived\r\n        = Boolean(stream) && stream.getVideoTracks().length > 0;\r\n    const grantedPermissions = {};\r\n\r\n    if (um.indexOf('video') !== -1) {\r\n        grantedPermissions.video = videoTracksReceived;\r\n    }\r\n    if (um.indexOf('audio') !== -1) {\r\n        grantedPermissions.audio = audioTracksReceived;\r\n    }\r\n\r\n    eventEmitter.emit(RTCEvents.GRANTED_PERMISSIONS, grantedPermissions);\r\n}\r\n\r\n/**\r\n * Checks if new list of available media devices differs from previous one.\r\n * @param {MediaDeviceInfo[]} newDevices - list of new devices.\r\n * @returns {boolean} - true if list is different, false otherwise.\r\n */\r\nfunction compareAvailableMediaDevices(newDevices) {\r\n    if (newDevices.length !== availableDevices.length) {\r\n        return true;\r\n    }\r\n\r\n    /* eslint-disable newline-per-chained-call */\r\n\r\n    return (\r\n        newDevices.map(mediaDeviceInfoToJSON).sort().join('')\r\n            !== availableDevices\r\n                .map(mediaDeviceInfoToJSON).sort().join(''));\r\n\r\n    /* eslint-enable newline-per-chained-call */\r\n\r\n    /**\r\n     *\r\n     * @param info\r\n     */\r\n    function mediaDeviceInfoToJSON(info) {\r\n        return JSON.stringify({\r\n            kind: info.kind,\r\n            deviceId: info.deviceId,\r\n            groupId: info.groupId,\r\n            label: info.label,\r\n            facing: info.facing\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Sends analytics event with the passed device list.\r\n *\r\n * @param {Array<MediaDeviceInfo>} deviceList - List with info about the\r\n * available devices.\r\n * @returns {void}\r\n */\r\nfunction sendDeviceListToAnalytics(deviceList) {\r\n    const audioInputDeviceCount\r\n        = deviceList.filter(d => d.kind === 'audioinput').length;\r\n    const audioOutputDeviceCount\r\n        = deviceList.filter(d => d.kind === 'audiooutput').length;\r\n    const videoInputDeviceCount\r\n        = deviceList.filter(d => d.kind === 'videoinput').length;\r\n    const videoOutputDeviceCount\r\n        = deviceList.filter(d => d.kind === 'videooutput').length;\r\n\r\n    deviceList.forEach(device => {\r\n        const attributes = {\r\n            'audio_input_device_count': audioInputDeviceCount,\r\n            'audio_output_device_count': audioOutputDeviceCount,\r\n            'video_input_device_count': videoInputDeviceCount,\r\n            'video_output_device_count': videoOutputDeviceCount,\r\n            'device_id': device.deviceId,\r\n            'device_group_id': device.groupId,\r\n            'device_kind': device.kind,\r\n            'device_label': device.label\r\n        };\r\n\r\n        Statistics.sendAnalytics(AVAILABLE_DEVICE, attributes);\r\n    });\r\n}\r\n\r\n/**\r\n * Event handler for the 'devicechange' event.\r\n *\r\n * @param {MediaDeviceInfo[]} devices - list of media devices.\r\n * @emits RTCEvents.DEVICE_LIST_CHANGED\r\n */\r\nfunction onMediaDevicesListChanged(devicesReceived) {\r\n    availableDevices = devicesReceived.slice(0);\r\n    logger.info(\r\n        'list of media devices has changed:',\r\n        availableDevices);\r\n\r\n    sendDeviceListToAnalytics(availableDevices);\r\n\r\n    // Used by tracks to update the real device id before the consumer of lib-jitsi-meet receives the new device list.\r\n    eventEmitter.emit(RTCEvents.DEVICE_LIST_WILL_CHANGE, devicesReceived);\r\n\r\n    eventEmitter.emit(RTCEvents.DEVICE_LIST_CHANGED, devicesReceived);\r\n}\r\n\r\n/**\r\n * Handles the newly created Media Streams.\r\n * @param streams the new Media Streams\r\n * @param resolution the resolution of the video streams\r\n * @returns {*[]} object that describes the new streams\r\n */\r\nfunction handleLocalStream(streams, resolution) {\r\n    let audioStream, desktopStream, videoStream;\r\n    const res = [];\r\n\r\n    // XXX The function obtainAudioAndVideoPermissions has examined the type of\r\n    // the browser, its capabilities, etc. and has taken the decision whether to\r\n    // invoke getUserMedia per device (e.g. Firefox) or once for both audio and\r\n    // video (e.g. Chrome). In order to not duplicate the logic here, examine\r\n    // the specified streams and figure out what we've received based on\r\n    // obtainAudioAndVideoPermissions' decision.\r\n    if (streams) {\r\n        // As mentioned above, certian types of browser (e.g. Chrome) support\r\n        // (with a result which meets our requirements expressed bellow) calling\r\n        // getUserMedia once for both audio and video.\r\n        const audioVideo = streams.audioVideo;\r\n\r\n        if (audioVideo) {\r\n            const audioTracks = audioVideo.getAudioTracks();\r\n\r\n            if (audioTracks.length) {\r\n                audioStream = new MediaStream();\r\n                for (let i = 0; i < audioTracks.length; i++) {\r\n                    audioStream.addTrack(audioTracks[i]);\r\n                }\r\n            }\r\n\r\n            const videoTracks = audioVideo.getVideoTracks();\r\n\r\n            if (videoTracks.length) {\r\n                videoStream = new MediaStream();\r\n                for (let j = 0; j < videoTracks.length; j++) {\r\n                    videoStream.addTrack(videoTracks[j]);\r\n                }\r\n            }\r\n        } else {\r\n            // On other types of browser (e.g. Firefox) we choose (namely,\r\n            // obtainAudioAndVideoPermissions) to call getUserMedia per device\r\n            // (type).\r\n            audioStream = streams.audio;\r\n            videoStream = streams.video;\r\n        }\r\n\r\n        desktopStream = streams.desktop;\r\n    }\r\n\r\n    if (desktopStream) {\r\n        const { stream, sourceId, sourceType } = desktopStream;\r\n\r\n        res.push({\r\n            stream,\r\n            sourceId,\r\n            sourceType,\r\n            track: stream.getVideoTracks()[0],\r\n            mediaType: MediaType.VIDEO,\r\n            videoType: VideoType.DESKTOP\r\n        });\r\n    }\r\n    if (audioStream) {\r\n        res.push({\r\n            stream: audioStream,\r\n            track: audioStream.getAudioTracks()[0],\r\n            mediaType: MediaType.AUDIO,\r\n            videoType: null\r\n        });\r\n    }\r\n    if (videoStream) {\r\n        res.push({\r\n            stream: videoStream,\r\n            track: videoStream.getVideoTracks()[0],\r\n            mediaType: MediaType.VIDEO,\r\n            videoType: VideoType.CAMERA,\r\n            resolution\r\n        });\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n/**\r\n * Represents a default implementation of setting a <tt>MediaStream</tt> as the\r\n * source of a video element that tries to be browser-agnostic through feature\r\n * checking. Note though that it was not completely clear from the predating\r\n * browser-specific implementations what &quot;videoSrc&quot; was because one\r\n * implementation of {@link RTCUtils#getVideoSrc} would return\r\n * <tt>MediaStream</tt> (e.g. Firefox), another a <tt>string</tt> representation\r\n * of the <tt>URL</tt> of the <tt>MediaStream</tt> (e.g. Chrome) and the return\r\n * value was only used by {@link RTCUIHelper#getVideoId} which itself did not\r\n * appear to be used anywhere. Generally, the implementation will try to follow\r\n * the related standards i.e. work with the <tt>srcObject</tt> and <tt>src</tt>\r\n * properties of the specified <tt>element</tt> taking into account vender\r\n * prefixes.\r\n *\r\n * @param element the element whose video source/src is to be set to the\r\n * specified <tt>stream</tt>\r\n * @param {MediaStream} stream the <tt>MediaStream</tt> to set as the video\r\n * source/src of <tt>element</tt>\r\n */\r\nfunction defaultSetVideoSrc(element, stream) {\r\n    // srcObject\r\n    let srcObjectPropertyName = 'srcObject';\r\n\r\n    if (!(srcObjectPropertyName in element)) {\r\n        srcObjectPropertyName = 'mozSrcObject';\r\n        if (!(srcObjectPropertyName in element)) {\r\n            srcObjectPropertyName = null;\r\n        }\r\n    }\r\n    if (srcObjectPropertyName) {\r\n        element[srcObjectPropertyName] = stream;\r\n\r\n        return;\r\n    }\r\n\r\n    // src\r\n    let src;\r\n\r\n    if (stream) {\r\n        src = stream.jitsiObjectURL;\r\n\r\n        // Save the created URL for stream so we can reuse it and not keep\r\n        // creating URLs.\r\n        if (!src) {\r\n            stream.jitsiObjectURL = src = URL.createObjectURL(stream);\r\n        }\r\n    }\r\n    element.src = src || '';\r\n}\r\n\r\n/**\r\n *\r\n */\r\nclass RTCUtils extends Listenable {\r\n    /**\r\n     *\r\n     */\r\n    constructor() {\r\n        super(eventEmitter);\r\n    }\r\n\r\n    /**\r\n     * Depending on the browser, sets difference instance methods for\r\n     * interacting with user media and adds methods to native WebRTC-related\r\n     * objects. Also creates an instance variable for peer connection\r\n     * constraints.\r\n     *\r\n     * @param {Object} options\r\n     * @returns {void}\r\n     */\r\n    init(options = {}) {\r\n        if (typeof options.disableAEC === 'boolean') {\r\n            disableAEC = options.disableAEC;\r\n            logger.info(`Disable AEC: ${disableAEC}`);\r\n        }\r\n        if (typeof options.disableNS === 'boolean') {\r\n            disableNS = options.disableNS;\r\n            logger.info(`Disable NS: ${disableNS}`);\r\n        }\r\n        if (typeof options.disableAP === 'boolean') {\r\n            disableAP = options.disableAP;\r\n            logger.info(`Disable AP: ${disableAP}`);\r\n        }\r\n        if (typeof options.disableAGC === 'boolean') {\r\n            disableAGC = options.disableAGC;\r\n            logger.info(`Disable AGC: ${disableAGC}`);\r\n        }\r\n        if (typeof options.disableHPF === 'boolean') {\r\n            disableHPF = options.disableHPF;\r\n            logger.info(`Disable HPF: ${disableHPF}`);\r\n        }\r\n\r\n        availableDevices = undefined;\r\n        window.clearInterval(availableDevicesPollTimer);\r\n        availableDevicesPollTimer = undefined;\r\n\r\n        this.enumerateDevices = initEnumerateDevicesWithCallback();\r\n\r\n        if (browser.usesNewGumFlow()) {\r\n            this.RTCPeerConnectionType = RTCPeerConnection;\r\n\r\n            this.attachMediaStream\r\n                = wrapAttachMediaStream((element, stream) => {\r\n                    if (element) {\r\n                        element.srcObject = stream;\r\n                    }\r\n                });\r\n\r\n            this.getStreamID = ({ id }) => id;\r\n            this.getTrackID = ({ id }) => id;\r\n        } else if (browser.isChromiumBased() // this is chrome < 61\r\n                || browser.isReactNative()) {\r\n\r\n            this.RTCPeerConnectionType = RTCPeerConnection;\r\n\r\n            this.attachMediaStream\r\n                = wrapAttachMediaStream((element, stream) => {\r\n                    defaultSetVideoSrc(element, stream);\r\n\r\n                    return element;\r\n                });\r\n\r\n            this.getStreamID = function({ id }) {\r\n                // A. MediaStreams from FF endpoints have the characters '{' and\r\n                // '}' that make jQuery choke.\r\n                // B. The react-native-webrtc implementation that we use at the\r\n                // time of this writing returns a number for the id of\r\n                // MediaStream. Let's just say that a number contains no special\r\n                // characters.\r\n                return (\r\n                    typeof id === 'number'\r\n                        ? id\r\n                        : SDPUtil.filterSpecialChars(id));\r\n            };\r\n            this.getTrackID = ({ id }) => id;\r\n\r\n            if (!MediaStream.prototype.getVideoTracks) {\r\n                MediaStream.prototype.getVideoTracks = function() {\r\n                    return this.videoTracks;\r\n                };\r\n            }\r\n            if (!MediaStream.prototype.getAudioTracks) {\r\n                MediaStream.prototype.getAudioTracks = function() {\r\n                    return this.audioTracks;\r\n                };\r\n            }\r\n        } else {\r\n            const message = 'Endpoint does not appear to be WebRTC-capable';\r\n\r\n            logger.error(message);\r\n            throw new Error(message);\r\n        }\r\n\r\n        this._initPCConstraints(options);\r\n\r\n        screenObtainer.init(\r\n            options,\r\n            this.getUserMediaWithConstraints.bind(this));\r\n\r\n        if (this.isDeviceListAvailable()) {\r\n            this.enumerateDevices(ds => {\r\n                availableDevices = ds.splice(0);\r\n\r\n                logger.debug('Available devices: ', availableDevices);\r\n                sendDeviceListToAnalytics(availableDevices);\r\n\r\n                eventEmitter.emit(\r\n                    RTCEvents.DEVICE_LIST_AVAILABLE,\r\n                    availableDevices);\r\n\r\n\r\n                // Use a shared callback to handle both the devicechange event\r\n                // and the polling implementations. This prevents duplication\r\n                // and works around a chrome bug (verified to occur on 68) where\r\n                // devicechange fires twice in a row, which can cause async post\r\n                // devicechange processing to collide.\r\n                const updateKnownDevices = () => this.enumerateDevices(pds => {\r\n                    if (compareAvailableMediaDevices(pds)) {\r\n                        onMediaDevicesListChanged(pds);\r\n                    }\r\n                });\r\n\r\n                if (browser.supportsDeviceChangeEvent()) {\r\n                    navigator.mediaDevices.addEventListener(\r\n                        'devicechange',\r\n                        updateKnownDevices);\r\n                } else {\r\n                    // Periodically poll enumerateDevices() method to check if\r\n                    // list of media devices has changed.\r\n                    availableDevicesPollTimer = window.setInterval(\r\n                        updateKnownDevices,\r\n                        AVAILABLE_DEVICES_POLL_INTERVAL_TIME);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates instance objects for peer connection constraints both for p2p\r\n     * and outside of p2p.\r\n     *\r\n     * @params {Object} options - Configuration for setting RTCUtil's instance\r\n     * objects for peer connection constraints.\r\n     * @params {boolean} options.useIPv6 - Set to true if IPv6 should be used.\r\n     * @params {Object} options.testing - Additional configuration for work in\r\n     * development.\r\n     * @params {Object} options.testing.forceP2PSuspendVideoRatio - True if\r\n     * video should become suspended if bandwidth estimation becomes low while\r\n     * in peer to peer connection mode.\r\n     */\r\n    _initPCConstraints(options) {\r\n        if (browser.isFirefox()) {\r\n            this.pcConstraints = {};\r\n        } else if (browser.isChromiumBased() || browser.isReactNative()) {\r\n            this.pcConstraints = { optional: [\r\n                { googHighStartBitrate: 0 },\r\n                { googPayloadPadding: true },\r\n                { googScreencastMinBitrate: 100 },\r\n                { googCpuOveruseDetection: true },\r\n                { googCpuOveruseEncodeUsage: true },\r\n                { googCpuUnderuseThreshold: 55 },\r\n                { googCpuOveruseThreshold: 85 }\r\n            ] };\r\n\r\n            if (options.useIPv6) {\r\n                // https://code.google.com/p/webrtc/issues/detail?id=2828\r\n                this.pcConstraints.optional.push({ googIPv6: true });\r\n            }\r\n\r\n            this.p2pPcConstraints\r\n                = JSON.parse(JSON.stringify(this.pcConstraints));\r\n        }\r\n\r\n        this.p2pPcConstraints = this.p2pPcConstraints || this.pcConstraints;\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    /**\r\n    * @param {string[]} um required user media types\r\n    * @param {Object} [options] optional parameters\r\n    * @param {string} options.resolution\r\n    * @param {number} options.bandwidth\r\n    * @param {number} options.fps\r\n    * @param {string} options.desktopStream\r\n    * @param {string} options.cameraDeviceId\r\n    * @param {string} options.micDeviceId\r\n    * @param {Object} options.frameRate - used only for dekstop sharing.\r\n    * @param {Object} options.frameRate.min - Minimum fps\r\n    * @param {Object} options.frameRate.max - Maximum fps\r\n    * @param {bool}   options.screenShareAudio - Used by electron clients to\r\n    * enable system audio screen sharing.\r\n    * @returns {Promise} Returns a media stream on success or a JitsiTrackError\r\n    * on failure.\r\n    **/\r\n    getUserMediaWithConstraints(um, options = {}) {\r\n        const constraints = getConstraints(um, options);\r\n\r\n        logger.info('Get media constraints', constraints);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            navigator.mediaDevices.getUserMedia(constraints)\r\n            .then(stream => {\r\n                logger.log('onUserMediaSuccess');\r\n                updateGrantedPermissions(um, stream);\r\n                resolve(stream);\r\n            })\r\n            .catch(error => {\r\n                logger.warn('Failed to get access to local media. '\r\n                    + ` ${error} ${constraints} `);\r\n                updateGrantedPermissions(um, undefined);\r\n                reject(new JitsiTrackError(error, constraints, um));\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Acquires a media stream via getUserMedia that\r\n     * matches the given constraints\r\n     *\r\n     * @param {array} umDevices which devices to acquire (e.g. audio, video)\r\n     * @param {Object} constraints - Stream specifications to use.\r\n     * @returns {Promise}\r\n     */\r\n    _newGetUserMediaWithConstraints(umDevices, constraints = {}) {\r\n        return new Promise((resolve, reject) => {\r\n            navigator.mediaDevices.getUserMedia(constraints)\r\n                .then(stream => {\r\n                    logger.log('onUserMediaSuccess');\r\n                    updateGrantedPermissions(umDevices, stream);\r\n                    resolve(stream);\r\n                })\r\n                .catch(error => {\r\n                    logger.warn('Failed to get access to local media. '\r\n                        + ` ${error} ${constraints} `);\r\n                    updateGrantedPermissions(umDevices, undefined);\r\n                    reject(new JitsiTrackError(error, constraints, umDevices));\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Acquire a display stream via the screenObtainer. This requires extra\r\n     * logic compared to use screenObtainer versus normal device capture logic\r\n     * in RTCUtils#_newGetUserMediaWithConstraints.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Object} options.desktopSharingExtensionExternalInstallation\r\n     * @param {string[]} options.desktopSharingSources\r\n     * @param {Object} options.desktopSharingFrameRate\r\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\r\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\r\n     * @returns {Promise} A promise which will be resolved with an object which\r\n     * contains the acquired display stream. If desktop sharing is not supported\r\n     * then a rejected promise will be returned.\r\n     */\r\n    _newGetDesktopMedia(options) {\r\n        if (!screenObtainer.isSupported() || !browser.supportsVideo()) {\r\n            return Promise.reject(\r\n                new Error('Desktop sharing is not supported!'));\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            screenObtainer.obtainStream(\r\n                this._parseDesktopSharingOptions(options),\r\n                stream => {\r\n                    resolve(stream);\r\n                },\r\n                error => {\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Creates the local MediaStreams.\r\n     * @param {Object} [options] optional parameters\r\n     * @param {Array} options.devices the devices that will be requested\r\n     * @param {string} options.resolution resolution constraints\r\n     * @param {string} options.cameraDeviceId\r\n     * @param {string} options.micDeviceId\r\n     * @param {Object} options.desktopSharingFrameRate\r\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\r\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\r\n     * @returns {*} Promise object that will receive the new JitsiTracks\r\n     */\r\n    obtainAudioAndVideoPermissions(options = {}) {\r\n        options.devices = options.devices || [ ...OLD_GUM_DEFAULT_DEVICES ];\r\n        options.resolution = options.resolution || OLD_GUM_DEFAULT_RESOLUTION;\r\n\r\n        const requestingDesktop = options.devices.includes('desktop');\r\n\r\n        if (requestingDesktop && !screenObtainer.isSupported()) {\r\n            return Promise.reject(\r\n                new Error('Desktop sharing is not supported!'));\r\n        }\r\n\r\n        return this._getAudioAndVideoStreams(options).then(streams =>\r\n            handleLocalStream(streams, options.resolution));\r\n    }\r\n\r\n    /**\r\n     * Performs one call to getUserMedia for audio and/or video and another call\r\n     * for desktop.\r\n     *\r\n     * @param {Object} options - An object describing how the gUM request should\r\n     * be executed. See {@link obtainAudioAndVideoPermissions} for full options.\r\n     * @returns {*} Promise object that will receive the new JitsiTracks on\r\n     * success or a JitsiTrackError on failure.\r\n     */\r\n    _getAudioAndVideoStreams(options) {\r\n        const requestingDesktop = options.devices.includes('desktop');\r\n\r\n        options.devices = options.devices.filter(device =>\r\n            device !== 'desktop');\r\n\r\n        const gumPromise = options.devices.length\r\n            ? this.getUserMediaWithConstraints(options.devices, options)\r\n            : Promise.resolve(null);\r\n\r\n        return gumPromise\r\n            .then(avStream => {\r\n                // If any requested devices are missing, call gum again in\r\n                // an attempt to obtain the actual error. For example, the\r\n                // requested video device is missing or permission was\r\n                // denied.\r\n                const missingTracks\r\n                    = this._getMissingTracks(options.devices, avStream);\r\n\r\n                if (missingTracks.length) {\r\n                    this.stopMediaStream(avStream);\r\n\r\n                    return this.getUserMediaWithConstraints(\r\n                        missingTracks, options)\r\n\r\n                        // GUM has already failed earlier and this success\r\n                        // handling should not be reached.\r\n                        .then(() => Promise.reject(new JitsiTrackError(\r\n                            { name: 'UnknownError' },\r\n                            getConstraints(options.devices, options),\r\n                            missingTracks)));\r\n                }\r\n\r\n                return avStream;\r\n            })\r\n            .then(audioVideo => {\r\n                if (!requestingDesktop) {\r\n                    return { audioVideo };\r\n                }\r\n\r\n                if (options.desktopSharingSourceDevice) {\r\n                    this.stopMediaStream(audioVideo);\r\n\r\n                    throw new Error('Using a camera as screenshare source is'\r\n                        + 'not supported on this browser.');\r\n                }\r\n\r\n                return new Promise((resolve, reject) => {\r\n                    screenObtainer.obtainStream(\r\n                        this._parseDesktopSharingOptions(options),\r\n                        desktop => resolve({\r\n                            audioVideo,\r\n                            desktop\r\n                        }),\r\n                        error => {\r\n                            if (audioVideo) {\r\n                                this.stopMediaStream(audioVideo);\r\n                            }\r\n                            reject(error);\r\n                        });\r\n                });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Private utility for determining if the passed in MediaStream contains\r\n     * tracks of the type(s) specified in the requested devices.\r\n     *\r\n     * @param {string[]} requestedDevices - The track types that are expected to\r\n     * be includes in the stream.\r\n     * @param {MediaStream} stream - The MediaStream to check if it has the\r\n     * expected track types.\r\n     * @returns {string[]} An array of string with the missing track types. The\r\n     * array will be empty if all requestedDevices are found in the stream.\r\n     */\r\n    _getMissingTracks(requestedDevices = [], stream) {\r\n        const missingDevices = [];\r\n\r\n        const audioDeviceRequested = requestedDevices.includes('audio');\r\n        const audioTracksReceived\r\n            = stream && stream.getAudioTracks().length > 0;\r\n\r\n        if (audioDeviceRequested && !audioTracksReceived) {\r\n            missingDevices.push('audio');\r\n        }\r\n\r\n        const videoDeviceRequested = requestedDevices.includes('video');\r\n        const videoTracksReceived\r\n            = stream && stream.getVideoTracks().length > 0;\r\n\r\n        if (videoDeviceRequested && !videoTracksReceived) {\r\n            missingDevices.push('video');\r\n        }\r\n\r\n        return missingDevices;\r\n    }\r\n\r\n    /**\r\n     * Returns an object formatted for specifying desktop sharing parameters.\r\n     *\r\n     * @param {Object} options - Takes in the same options object as\r\n     * {@link obtainAudioAndVideoPermissions}.\r\n     * @returns {Object}\r\n     */\r\n    _parseDesktopSharingOptions(options) {\r\n        return {\r\n            ...options.desktopSharingExtensionExternalInstallation,\r\n            desktopSharingSources: options.desktopSharingSources,\r\n            gumOptions: {\r\n                frameRate: options.desktopSharingFrameRate\r\n            },\r\n            trackOptions: getTrackSSConstraints(options)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets streams from specified device types. This function intentionally\r\n     * ignores errors for upstream to catch and handle instead.\r\n     *\r\n     * @param {Object} options - A hash describing what devices to get and\r\n     * relevant constraints.\r\n     * @param {string[]} options.devices - The types of media to capture. Valid\r\n     * values are \"desktop\", \"audio\", and \"video\".\r\n     * @param {Object} options.desktopSharingFrameRate\r\n     * @param {Object} options.desktopSharingFrameRate.min - Minimum fps\r\n     * @param {Object} options.desktopSharingFrameRate.max - Maximum fps\r\n     * @param {String} options.desktopSharingSourceDevice - The device id or\r\n     * label for a video input source that should be used for screensharing.\r\n     * @returns {Promise} The promise, when successful, will return an array of\r\n     * meta data for the requested device type, which includes the stream and\r\n     * track. If an error occurs, it will be deferred to the caller for\r\n     * handling.\r\n     */\r\n    newObtainAudioAndVideoPermissions(options) {\r\n        logger.info('Using the new gUM flow');\r\n\r\n        const mediaStreamsMetaData = [];\r\n\r\n        // Declare private functions to be used in the promise chain below.\r\n        // These functions are declared in the scope of this function because\r\n        // they are not being used anywhere else, so only this function needs to\r\n        // know about them.\r\n\r\n        /**\r\n         * Executes a request for desktop media if specified in options.\r\n         *\r\n         * @returns {Promise}\r\n         */\r\n        const maybeRequestDesktopDevice = function() {\r\n            const umDevices = options.devices || [];\r\n            const isDesktopDeviceRequested\r\n                = umDevices.indexOf('desktop') !== -1;\r\n\r\n            if (!isDesktopDeviceRequested) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            const {\r\n                desktopSharingExtensionExternalInstallation,\r\n                desktopSharingSourceDevice,\r\n                desktopSharingSources,\r\n                desktopSharingFrameRate\r\n            } = options;\r\n\r\n            // Attempt to use a video input device as a screenshare source if\r\n            // the option is defined.\r\n            if (desktopSharingSourceDevice) {\r\n                const matchingDevice\r\n                    = availableDevices && availableDevices.find(device =>\r\n                        device.kind === 'videoinput'\r\n                            && (device.deviceId === desktopSharingSourceDevice\r\n                            || device.label === desktopSharingSourceDevice));\r\n\r\n                if (!matchingDevice) {\r\n                    return Promise.reject(new JitsiTrackError(\r\n                        { name: 'ConstraintNotSatisfiedError' },\r\n                        {},\r\n                        [ desktopSharingSourceDevice ]\r\n                    ));\r\n                }\r\n\r\n                const requestedDevices = [ 'video' ];\r\n\r\n                // Leverage the helper used by {@link _newGetDesktopMedia} to\r\n                // get constraints for the desktop stream.\r\n                const { gumOptions, trackOptions }\r\n                    = this._parseDesktopSharingOptions(options);\r\n\r\n                const constraints = {\r\n                    video: {\r\n                        ...gumOptions,\r\n                        deviceId: matchingDevice.deviceId\r\n                    }\r\n                };\r\n\r\n                return this._newGetUserMediaWithConstraints(\r\n                    requestedDevices, constraints)\r\n                    .then(stream => {\r\n                        const track = stream && stream.getTracks()[0];\r\n                        const applyConstrainsPromise\r\n                            = track && track.applyConstraints\r\n                                ? track.applyConstraints(trackOptions)\r\n                                : Promise.resolve();\r\n\r\n                        return applyConstrainsPromise\r\n                            .then(() => {\r\n                                return {\r\n                                    sourceType: 'device',\r\n                                    stream\r\n                                };\r\n                            });\r\n                    });\r\n            }\r\n\r\n            return this._newGetDesktopMedia({\r\n                desktopSharingExtensionExternalInstallation,\r\n                desktopSharingSources,\r\n                desktopSharingFrameRate\r\n            });\r\n        }.bind(this);\r\n\r\n        /**\r\n         * Creates a meta data object about the passed in desktopStream and\r\n         * pushes the meta data to the internal array mediaStreamsMetaData to be\r\n         * returned later.\r\n         *\r\n         * @param {MediaStreamTrack} desktopStream - A track for a desktop\r\n         * capture.\r\n         * @returns {void}\r\n         */\r\n        const maybeCreateAndAddDesktopTrack = function(desktopStream) {\r\n            if (!desktopStream) {\r\n                return;\r\n            }\r\n\r\n            const { stream, sourceId, sourceType } = desktopStream;\r\n\r\n            const desktopAudioTracks = stream.getAudioTracks();\r\n\r\n            if (desktopAudioTracks.length) {\r\n                const desktopAudioStream = new MediaStream(desktopAudioTracks);\r\n\r\n                mediaStreamsMetaData.push({\r\n                    stream: desktopAudioStream,\r\n                    sourceId,\r\n                    sourceType,\r\n                    track: desktopAudioStream.getAudioTracks()[0]\r\n                });\r\n            }\r\n\r\n            const desktopVideoTracks = stream.getVideoTracks();\r\n\r\n            if (desktopVideoTracks.length) {\r\n                const desktopVideoStream = new MediaStream(desktopVideoTracks);\r\n\r\n                mediaStreamsMetaData.push({\r\n                    stream: desktopVideoStream,\r\n                    sourceId,\r\n                    sourceType,\r\n                    track: desktopVideoStream.getVideoTracks()[0],\r\n                    videoType: VideoType.DESKTOP\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Executes a request for audio and/or video, as specified in options.\r\n         * By default both audio and video will be captured if options.devices\r\n         * is not defined.\r\n         *\r\n         * @returns {Promise}\r\n         */\r\n        const maybeRequestCaptureDevices = function() {\r\n            const umDevices = options.devices || [ 'audio', 'video' ];\r\n            const requestedCaptureDevices = umDevices.filter(device =>\r\n                device === 'audio'\r\n                || (device === 'video' && browser.supportsVideo()));\r\n\r\n            if (!requestedCaptureDevices.length) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            const constraints = newGetConstraints(\r\n                requestedCaptureDevices, options);\r\n\r\n            logger.info('Got media constraints: ', constraints);\r\n\r\n            return this._newGetUserMediaWithConstraints(\r\n                requestedCaptureDevices, constraints);\r\n        }.bind(this);\r\n\r\n        /**\r\n         * Splits the passed in media stream into separate audio and video\r\n         * streams and creates meta data objects for each and pushes them to the\r\n         * internal array mediaStreamsMetaData to be returned later.\r\n         *\r\n         * @param {MediaStreamTrack} avStream - A track for with audio and/or\r\n         * video track.\r\n         * @returns {void}\r\n         */\r\n        const maybeCreateAndAddAVTracks = function(avStream) {\r\n            if (!avStream) {\r\n                return;\r\n            }\r\n\r\n            const audioTracks = avStream.getAudioTracks();\r\n\r\n            if (audioTracks.length) {\r\n                const audioStream = new MediaStream(audioTracks);\r\n\r\n                mediaStreamsMetaData.push({\r\n                    stream: audioStream,\r\n                    track: audioStream.getAudioTracks()[0],\r\n                    effects: options.effects\r\n                });\r\n            }\r\n\r\n            const videoTracks = avStream.getVideoTracks();\r\n\r\n            if (videoTracks.length) {\r\n                const videoStream = new MediaStream(videoTracks);\r\n\r\n                mediaStreamsMetaData.push({\r\n                    stream: videoStream,\r\n                    track: videoStream.getVideoTracks()[0],\r\n                    videoType: VideoType.CAMERA,\r\n                    effects: options.effects\r\n                });\r\n            }\r\n        };\r\n\r\n        return maybeRequestDesktopDevice()\r\n            .then(maybeCreateAndAddDesktopTrack)\r\n            .then(maybeRequestCaptureDevices)\r\n            .then(maybeCreateAndAddAVTracks)\r\n            .then(() => mediaStreamsMetaData)\r\n            .catch(error => {\r\n                mediaStreamsMetaData.forEach(({ stream }) => {\r\n                    this.stopMediaStream(stream);\r\n                });\r\n\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Checks whether it is possible to enumerate available cameras/microphones.\r\n     *\r\n     * @returns {boolean} {@code true} if the device listing is available;\r\n     * {@code false}, otherwise.\r\n     */\r\n    isDeviceListAvailable() {\r\n        return Boolean(\r\n            navigator.mediaDevices\r\n                && navigator.mediaDevices.enumerateDevices);\r\n    }\r\n\r\n    /**\r\n     * Returns true if changing the input (camera / microphone) or output\r\n     * (audio) device is supported and false if not.\r\n     * @params {string} [deviceType] - type of device to change. Default is\r\n     *      undefined or 'input', 'output' - for audio output device change.\r\n     * @returns {boolean} true if available, false otherwise.\r\n     */\r\n    isDeviceChangeAvailable(deviceType) {\r\n        return deviceType === 'output' || deviceType === 'audiooutput'\r\n            ? isAudioOutputDeviceChangeAvailable\r\n            : true;\r\n    }\r\n\r\n    /**\r\n     * A method to handle stopping of the stream.\r\n     * One point to handle the differences in various implementations.\r\n     * @param mediaStream MediaStream object to stop.\r\n     */\r\n    stopMediaStream(mediaStream) {\r\n        if (!mediaStream) {\r\n            return;\r\n        }\r\n\r\n        mediaStream.getTracks().forEach(track => {\r\n            if (track.stop) {\r\n                track.stop();\r\n            }\r\n        });\r\n\r\n        // leave stop for implementation still using it\r\n        if (mediaStream.stop) {\r\n            mediaStream.stop();\r\n        }\r\n\r\n        // The MediaStream implementation of the react-native-webrtc project has\r\n        // an explicit release method that is to be invoked in order to release\r\n        // used resources such as memory.\r\n        if (mediaStream.release) {\r\n            mediaStream.release();\r\n        }\r\n\r\n        // if we have done createObjectURL, lets clean it\r\n        const url = mediaStream.jitsiObjectURL;\r\n\r\n        if (url) {\r\n            delete mediaStream.jitsiObjectURL;\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns whether the desktop sharing is enabled or not.\r\n     * @returns {boolean}\r\n     */\r\n    isDesktopSharingEnabled() {\r\n        return screenObtainer.isSupported();\r\n    }\r\n\r\n    /**\r\n     * Sets current audio output device.\r\n     * @param {string} deviceId - id of 'audiooutput' device from\r\n     *      navigator.mediaDevices.enumerateDevices(), 'default' for default\r\n     *      device\r\n     * @returns {Promise} - resolves when audio output is changed, is rejected\r\n     *      otherwise\r\n     */\r\n    setAudioOutputDevice(deviceId) {\r\n        if (!this.isDeviceChangeAvailable('output')) {\r\n            return Promise.reject(\r\n                new Error('Audio output device change is not supported'));\r\n        }\r\n\r\n        return featureDetectionAudioEl.setSinkId(deviceId)\r\n            .then(() => {\r\n                audioOutputDeviceId = deviceId;\r\n                audioOutputChanged = true;\r\n\r\n                logger.log(`Audio output device set to ${deviceId}`);\r\n\r\n                eventEmitter.emit(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\r\n                    deviceId);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Returns currently used audio output device id, '' stands for default\r\n     * device\r\n     * @returns {string}\r\n     */\r\n    getAudioOutputDevice() {\r\n        return audioOutputDeviceId;\r\n    }\r\n\r\n    /**\r\n     * Returns list of available media devices if its obtained, otherwise an\r\n     * empty array is returned/\r\n     * @returns {Array} list of available media devices.\r\n     */\r\n    getCurrentlyAvailableMediaDevices() {\r\n        return availableDevices;\r\n    }\r\n\r\n    /**\r\n     * Returns event data for device to be reported to stats.\r\n     * @returns {MediaDeviceInfo} device.\r\n     */\r\n    getEventDataForActiveDevice(device) {\r\n        const deviceList = [];\r\n        const deviceData = {\r\n            'deviceId': device.deviceId,\r\n            'kind': device.kind,\r\n            'label': device.label,\r\n            'groupId': device.groupId\r\n        };\r\n\r\n        deviceList.push(deviceData);\r\n\r\n        return { deviceList };\r\n    }\r\n\r\n    /**\r\n     * Configures the given PeerConnection constraints to either enable or\r\n     * disable (according to the value of the 'enable' parameter) the\r\n     * 'googSuspendBelowMinBitrate' option.\r\n     * @param constraints the constraints on which to operate.\r\n     * @param enable {boolean} whether to enable or disable the suspend video\r\n     * option.\r\n     */\r\n    setSuspendVideo(constraints, enable) {\r\n        if (!constraints.optional) {\r\n            constraints.optional = [];\r\n        }\r\n\r\n        // Get rid of all \"googSuspendBelowMinBitrate\" constraints (we assume\r\n        // that the elements of constraints.optional contain a single property).\r\n        constraints.optional\r\n            = constraints.optional.filter(\r\n                c => !c.hasOwnProperty('googSuspendBelowMinBitrate'));\r\n\r\n        if (enable) {\r\n            constraints.optional.push({ googSuspendBelowMinBitrate: 'true' });\r\n        }\r\n    }\r\n}\r\n\r\nconst rtcUtils = new RTCUtils();\r\n\r\n/**\r\n * Wraps original attachMediaStream function to set current audio output device\r\n * if this is supported.\r\n * @param {Function} origAttachMediaStream\r\n * @returns {Function}\r\n */\r\nfunction wrapAttachMediaStream(origAttachMediaStream) {\r\n    return function(element, stream) {\r\n        // eslint-disable-next-line prefer-rest-params\r\n        const res = origAttachMediaStream.apply(rtcUtils, arguments);\r\n\r\n        if (stream\r\n                && rtcUtils.isDeviceChangeAvailable('output')\r\n                && stream.getAudioTracks\r\n                && stream.getAudioTracks().length\r\n\r\n                // we skip setting audio output if there was no explicit change\r\n                && audioOutputChanged) {\r\n            element.setSinkId(rtcUtils.getAudioOutputDevice())\r\n                .catch(function(ex) {\r\n                    const err\r\n                        = new JitsiTrackError(ex, null, [ 'audiooutput' ]);\r\n\r\n                    GlobalOnErrorHandler.callUnhandledRejectionHandler({\r\n                        promise: this, // eslint-disable-line no-invalid-this\r\n                        reason: err\r\n                    });\r\n\r\n                    logger.warn(\r\n                        'Failed to set audio output device for the element.'\r\n                            + ' Default audio output device will be used'\r\n                            + ' instead',\r\n                        element,\r\n                        err);\r\n                });\r\n        }\r\n\r\n        return res;\r\n    };\r\n}\r\n\r\nexport default rtcUtils;\r\n","/* global chrome, $, alert */\r\n\r\nimport JitsiTrackError from '../../JitsiTrackError';\r\nimport * as JitsiTrackErrors from '../../JitsiTrackErrors';\r\nimport browser from '../browser';\r\n\r\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\r\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\r\n\r\n/**\r\n * Indicates whether the Chrome desktop sharing extension is installed.\r\n * @type {boolean}\r\n */\r\nlet chromeExtInstalled = false;\r\n\r\n/**\r\n * Indicates whether an update of the Chrome desktop sharing extension is\r\n * required.\r\n * @type {boolean}\r\n */\r\nlet chromeExtUpdateRequired = false;\r\n\r\nlet gumFunction = null;\r\n\r\n/**\r\n * The error message returned by chrome when the extension is installed.\r\n */\r\nconst CHROME_NO_EXTENSION_ERROR_MSG // eslint-disable-line no-unused-vars\r\n    = 'Could not establish connection. Receiving end does not exist.';\r\n\r\n/**\r\n * Handles obtaining a stream from a screen capture on different browsers.\r\n */\r\nconst ScreenObtainer = {\r\n    /**\r\n     * If not <tt>null</tt> it means that the initialization process is still in\r\n     * progress. It is used to make desktop stream request wait and continue\r\n     * after it's done.\r\n     * {@type Promise|null}\r\n     */\r\n    intChromeExtPromise: null,\r\n\r\n    obtainStream: null,\r\n\r\n    /**\r\n     * Initializes the function used to obtain a screen capture\r\n     * (this.obtainStream).\r\n     *\r\n     * @param {object} options\r\n     * @param {boolean} [options.desktopSharingChromeDisabled]\r\n     * @param {boolean} [options.desktopSharingChromeExtId]\r\n     * @param {boolean} [options.desktopSharingFirefoxDisabled]\r\n     * @param {Function} gum GUM method\r\n     */\r\n    init(options = {\r\n        desktopSharingChromeDisabled: false,\r\n        desktopSharingChromeExtId: null,\r\n        desktopSharingFirefoxDisabled: false\r\n    }, gum) {\r\n        this.options = options;\r\n        gumFunction = gum;\r\n\r\n        this.obtainStream = this._createObtainStreamMethod(options);\r\n\r\n        if (!this.obtainStream) {\r\n            logger.info('Desktop sharing disabled');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Returns a method which will be used to obtain the screen sharing stream\r\n     * (based on the browser type).\r\n     *\r\n     * @param {object} options passed from {@link init} - check description\r\n     * there\r\n     * @returns {Function}\r\n     * @private\r\n     */\r\n    _createObtainStreamMethod(options) {\r\n        if (browser.isNWJS()) {\r\n            return (_, onSuccess, onFailure) => {\r\n                window.JitsiMeetNW.obtainDesktopStream(\r\n                    onSuccess,\r\n                    (error, constraints) => {\r\n                        let jitsiError;\r\n\r\n                        // FIXME:\r\n                        // This is very very dirty fix for recognising that the\r\n                        // user have clicked the cancel button from the Desktop\r\n                        // sharing pick window. The proper solution would be to\r\n                        // detect this in the NWJS application by checking the\r\n                        // streamId === \"\". Even better solution would be to\r\n                        // stop calling GUM from the NWJS app and just pass the\r\n                        // streamId to lib-jitsi-meet. This way the desktop\r\n                        // sharing implementation for NWJS and chrome extension\r\n                        // will be the same and lib-jitsi-meet will be able to\r\n                        // control the constraints, check the streamId, etc.\r\n                        //\r\n                        // I cannot find documentation about \"InvalidStateError\"\r\n                        // but this is what we are receiving from GUM when the\r\n                        // streamId for the desktop sharing is \"\".\r\n\r\n                        if (error && error.name === 'InvalidStateError') {\r\n                            jitsiError = new JitsiTrackError(\r\n                                JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED\r\n                            );\r\n                        } else {\r\n                            jitsiError = new JitsiTrackError(\r\n                                error, constraints, [ 'desktop' ]);\r\n                        }\r\n                        (typeof onFailure === 'function')\r\n                            && onFailure(jitsiError);\r\n                    });\r\n            };\r\n        } else if (browser.isElectron()) {\r\n            return this.obtainScreenOnElectron;\r\n        } else if (browser.isChrome() || browser.isOpera()) {\r\n            if (browser.supportsGetDisplayMedia()\r\n                    && !options.desktopSharingChromeDisabled) {\r\n\r\n                return this.obtainScreenFromGetDisplayMedia;\r\n            } else if (options.desktopSharingChromeDisabled\r\n                || !options.desktopSharingChromeExtId) {\r\n\r\n                return null;\r\n            }\r\n\r\n            logger.info('Using Chrome extension for desktop sharing');\r\n            this.intChromeExtPromise\r\n                = initChromeExtension(options).then(() => {\r\n                    this.intChromeExtPromise = null;\r\n                });\r\n\r\n            return this.obtainScreenFromExtension;\r\n        } else if (browser.isFirefox()) {\r\n            if (options.desktopSharingFirefoxDisabled) {\r\n                return null;\r\n            } else if (browser.supportsGetDisplayMedia()) {\r\n                // Firefox 66 support getDisplayMedia\r\n                return this.obtainScreenFromGetDisplayMedia;\r\n            }\r\n\r\n            // Legacy Firefox\r\n            return this.obtainScreenOnFirefox;\r\n        } else if (browser.isSafari() && browser.supportsGetDisplayMedia()) {\r\n            return this.obtainScreenFromGetDisplayMedia;\r\n        }\r\n\r\n        logger.log(\r\n            'Screen sharing not supported by the current browser: ',\r\n            browser.getName());\r\n\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * Checks whether obtaining a screen capture is supported in the current\r\n     * environment.\r\n     * @returns {boolean}\r\n     */\r\n    isSupported() {\r\n        return this.obtainStream !== null;\r\n    },\r\n\r\n    /**\r\n     * Obtains a screen capture stream on Firefox.\r\n     * @param callback\r\n     * @param errorCallback\r\n     */\r\n    obtainScreenOnFirefox(options, callback, errorCallback) {\r\n        obtainWebRTCScreen(options.gumOptions, callback, errorCallback);\r\n    },\r\n\r\n    /**\r\n     * Obtains a screen capture stream on Electron.\r\n     *\r\n     * @param {Object} [options] - Screen sharing options.\r\n     * @param {Array<string>} [options.desktopSharingSources] - Array with the\r\n     * sources that have to be displayed in the desktop picker window ('screen',\r\n     * 'window', etc.).\r\n     * @param onSuccess - Success callback.\r\n     * @param onFailure - Failure callback.\r\n     */\r\n    obtainScreenOnElectron(options = {}, onSuccess, onFailure) {\r\n        if (window.JitsiMeetScreenObtainer\r\n            && window.JitsiMeetScreenObtainer.openDesktopPicker) {\r\n            const { desktopSharingSources, gumOptions } = options;\r\n\r\n            window.JitsiMeetScreenObtainer.openDesktopPicker(\r\n                {\r\n                    desktopSharingSources: desktopSharingSources\r\n                        || this.options.desktopSharingChromeSources\r\n                },\r\n                (streamId, streamType, screenShareAudio = false) =>\r\n                    onGetStreamResponse(\r\n                        {\r\n                            response: {\r\n                                streamId,\r\n                                streamType,\r\n                                screenShareAudio\r\n                            },\r\n                            gumOptions\r\n                        },\r\n                        onSuccess,\r\n                        onFailure\r\n                    ),\r\n                err => onFailure(new JitsiTrackError(\r\n                    JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR,\r\n                    err\r\n                ))\r\n            );\r\n        } else {\r\n            onFailure(new JitsiTrackError(\r\n                JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Asks Chrome extension to call chooseDesktopMedia and gets chrome\r\n     * 'desktop' stream for returned stream token.\r\n     */\r\n    obtainScreenFromExtension(options, streamCallback, failCallback) {\r\n        if (this.intChromeExtPromise !== null) {\r\n            this.intChromeExtPromise.then(() => {\r\n                this.obtainScreenFromExtension(\r\n                    options, streamCallback, failCallback);\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const {\r\n            desktopSharingChromeExtId,\r\n            desktopSharingChromeSources\r\n        } = this.options;\r\n\r\n        const {\r\n            gumOptions\r\n        } = options;\r\n\r\n        const doGetStreamFromExtensionOptions = {\r\n            desktopSharingChromeExtId,\r\n            desktopSharingChromeSources:\r\n                options.desktopSharingSources || desktopSharingChromeSources,\r\n            gumOptions\r\n        };\r\n\r\n        if (chromeExtInstalled) {\r\n            doGetStreamFromExtension(\r\n                doGetStreamFromExtensionOptions,\r\n                streamCallback,\r\n                failCallback);\r\n        } else {\r\n            if (chromeExtUpdateRequired) {\r\n                /* eslint-disable no-alert */\r\n                alert(\r\n                    'Jitsi Desktop Streamer requires update. '\r\n                    + 'Changes will take effect after next Chrome restart.');\r\n\r\n                /* eslint-enable no-alert */\r\n            }\r\n\r\n            this.handleExternalInstall(options, streamCallback,\r\n                failCallback);\r\n        }\r\n    },\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    handleExternalInstall(options, streamCallback, failCallback, e) {\r\n        const webStoreInstallUrl = getWebStoreInstallUrl(this.options);\r\n\r\n        options.listener('waitingForExtension', webStoreInstallUrl);\r\n        this.checkForChromeExtensionOnInterval(options, streamCallback,\r\n            failCallback, e);\r\n    },\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    checkForChromeExtensionOnInterval(options, streamCallback, failCallback) {\r\n        if (options.checkAgain() === false) {\r\n            failCallback(new JitsiTrackError(\r\n                JitsiTrackErrors.CHROME_EXTENSION_INSTALLATION_ERROR));\r\n\r\n            return;\r\n        }\r\n        waitForExtensionAfterInstall(this.options, options.interval, 1)\r\n            .then(() => {\r\n                chromeExtInstalled = true;\r\n                options.listener('extensionFound');\r\n                this.obtainScreenFromExtension(options,\r\n                    streamCallback, failCallback);\r\n            })\r\n            .catch(() => {\r\n                this.checkForChromeExtensionOnInterval(options,\r\n                    streamCallback, failCallback);\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Obtains a screen capture stream using getDisplayMedia.\r\n     *\r\n     * @param callback - The success callback.\r\n     * @param errorCallback - The error callback.\r\n     */\r\n    obtainScreenFromGetDisplayMedia(options, callback, errorCallback) {\r\n        logger.info('Using getDisplayMedia for screen sharing');\r\n\r\n        let getDisplayMedia;\r\n\r\n        if (navigator.getDisplayMedia) {\r\n            getDisplayMedia = navigator.getDisplayMedia.bind(navigator);\r\n        } else {\r\n            // eslint-disable-next-line max-len\r\n            getDisplayMedia = navigator.mediaDevices.getDisplayMedia.bind(navigator.mediaDevices);\r\n        }\r\n\r\n        getDisplayMedia({ video: true,\r\n            audio: true })\r\n            .then(stream => {\r\n                let applyConstraintsPromise;\r\n\r\n                if (stream\r\n                    && stream.getTracks()\r\n                    && stream.getTracks().length > 0) {\r\n                    const videoTrack = stream.getVideoTracks()[0];\r\n\r\n                    // Apply video track constraint.\r\n                    if (videoTrack) {\r\n                        applyConstraintsPromise = videoTrack.applyConstraints(options.trackOptions);\r\n                    }\r\n                } else {\r\n                    applyConstraintsPromise = Promise.resolve();\r\n                }\r\n\r\n                applyConstraintsPromise.then(() =>\r\n                    callback({\r\n                        stream,\r\n                        sourceId: stream.id\r\n                    }));\r\n            })\r\n            .catch(() =>\r\n                errorCallback(new JitsiTrackError(JitsiTrackErrors\r\n                    .CHROME_EXTENSION_USER_CANCELED)));\r\n    }\r\n};\r\n\r\n/**\r\n * Obtains a desktop stream using getUserMedia.\r\n * For this to work on Chrome, the\r\n * 'chrome://flags/#enable-usermedia-screen-capture' flag must be enabled.\r\n *\r\n * On firefox, the document's domain must be white-listed in the\r\n * 'media.getusermedia.screensharing.allowed_domains' preference in\r\n * 'about:config'.\r\n */\r\nfunction obtainWebRTCScreen(options, streamCallback, failCallback) {\r\n    gumFunction([ 'screen' ], options)\r\n        .then(stream => streamCallback({ stream }), failCallback);\r\n}\r\n\r\n/**\r\n * Constructs inline install URL for Chrome desktop streaming extension.\r\n * The 'chromeExtensionId' must be defined in options parameter.\r\n * @param options supports \"desktopSharingChromeExtId\"\r\n * @returns {string}\r\n */\r\nfunction getWebStoreInstallUrl(options) {\r\n    return (\r\n        `https://chrome.google.com/webstore/detail/${\r\n            options.desktopSharingChromeExtId}`);\r\n}\r\n\r\n/**\r\n * Checks whether an update of the Chrome extension is required.\r\n * @param minVersion minimal required version\r\n * @param extVersion current extension version\r\n * @returns {boolean}\r\n */\r\nfunction isUpdateRequired(minVersion, extVersion) {\r\n    try {\r\n        const s1 = minVersion.split('.');\r\n        const s2 = extVersion.split('.');\r\n\r\n        const len = Math.max(s1.length, s2.length);\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            let n1 = 0,\r\n                n2 = 0;\r\n\r\n            if (i < s1.length) {\r\n                n1 = parseInt(s1[i], 10);\r\n            }\r\n            if (i < s2.length) {\r\n                n2 = parseInt(s2[i], 10);\r\n            }\r\n\r\n            if (isNaN(n1) || isNaN(n2)) {\r\n                return true;\r\n            } else if (n1 !== n2) {\r\n                return n1 > n2;\r\n            }\r\n        }\r\n\r\n        // will happen if both versions have identical numbers in\r\n        // their components (even if one of them is longer, has more components)\r\n        return false;\r\n    } catch (e) {\r\n        GlobalOnErrorHandler.callErrorHandler(e);\r\n        logger.error('Failed to parse extension version', e);\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param callback\r\n * @param options\r\n */\r\nfunction checkChromeExtInstalled(callback, options) {\r\n    if (typeof chrome === 'undefined' || !chrome || !chrome.runtime) {\r\n        // No API, so no extension for sure\r\n        callback(false, false);\r\n\r\n        return;\r\n    }\r\n    chrome.runtime.sendMessage(\r\n        options.desktopSharingChromeExtId,\r\n        { getVersion: true },\r\n        response => {\r\n            if (!response || !response.version) {\r\n                // Communication failure - assume that no endpoint exists\r\n                logger.warn(\r\n                    'Extension not installed?: ', chrome.runtime.lastError);\r\n                callback(false, false);\r\n\r\n                return;\r\n            }\r\n\r\n            // Check installed extension version\r\n            const extVersion = response.version;\r\n\r\n            logger.log(`Extension version is: ${extVersion}`);\r\n            const updateRequired\r\n                = isUpdateRequired(\r\n                    options.desktopSharingChromeMinExtVersion,\r\n                    extVersion);\r\n\r\n            callback(!updateRequired, updateRequired);\r\n        }\r\n    );\r\n}\r\n\r\n/**\r\n *\r\n * @param options\r\n * @param streamCallback\r\n * @param failCallback\r\n */\r\nfunction doGetStreamFromExtension(options, streamCallback, failCallback) {\r\n    const {\r\n        desktopSharingChromeSources,\r\n        desktopSharingChromeExtId,\r\n        gumOptions\r\n    } = options;\r\n\r\n    // Sends 'getStream' msg to the extension.\r\n    // Extension id must be defined in the config.\r\n    chrome.runtime.sendMessage(\r\n        desktopSharingChromeExtId,\r\n        {\r\n            getStream: true,\r\n            sources: desktopSharingChromeSources\r\n        },\r\n        response => {\r\n            if (!response) {\r\n                // possibly re-wraping error message to make code consistent\r\n                const lastError = chrome.runtime.lastError;\r\n\r\n                failCallback(lastError instanceof Error\r\n                    ? lastError\r\n                    : new JitsiTrackError(\r\n                        JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR,\r\n                        lastError));\r\n\r\n                return;\r\n            }\r\n            logger.log('Response from extension: ', response);\r\n            onGetStreamResponse(\r\n                {\r\n                    response,\r\n                    gumOptions\r\n                },\r\n                streamCallback,\r\n                failCallback\r\n            );\r\n        }\r\n    );\r\n}\r\n\r\n/**\r\n * Initializes <link rel=chrome-webstore-item /> with extension id set in\r\n * config.js to support inline installs. Host site must be selected as main\r\n * website of published extension.\r\n * @param options supports \"desktopSharingChromeExtId\"\r\n */\r\nfunction initInlineInstalls(options) {\r\n    if ($('link[rel=chrome-webstore-item]').length === 0) {\r\n        $('head').append('<link rel=\"chrome-webstore-item\">');\r\n    }\r\n    $('link[rel=chrome-webstore-item]').attr('href',\r\n        getWebStoreInstallUrl(options));\r\n}\r\n\r\n/**\r\n *\r\n * @param options\r\n *\r\n * @return {Promise} - a Promise resolved once the initialization process is\r\n * finished.\r\n */\r\nfunction initChromeExtension(options) {\r\n    // Initialize Chrome extension inline installs\r\n    initInlineInstalls(options);\r\n\r\n    return new Promise(resolve => {\r\n        // Check if extension is installed\r\n        checkChromeExtInstalled((installed, updateRequired) => {\r\n            chromeExtInstalled = installed;\r\n            chromeExtUpdateRequired = updateRequired;\r\n            logger.info(\r\n                `Chrome extension installed: ${\r\n                    chromeExtInstalled} updateRequired: ${\r\n                    chromeExtUpdateRequired}`);\r\n            resolve();\r\n        }, options);\r\n    });\r\n}\r\n\r\n/**\r\n * Checks \"retries\" times on every \"waitInterval\"ms whether the ext is alive.\r\n * @param {Object} options the options passed to ScreanObtainer.obtainStream\r\n * @param {int} waitInterval the number of ms between retries\r\n * @param {int} retries the number of retries\r\n * @returns {Promise} returns promise that will be resolved when the extension\r\n * is alive and rejected if the extension is not alive even after \"retries\"\r\n * checks\r\n */\r\nfunction waitForExtensionAfterInstall(options, waitInterval, retries) {\r\n    if (retries === 0) {\r\n        return Promise.reject();\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        let currentRetries = retries;\r\n        const interval = window.setInterval(() => {\r\n            checkChromeExtInstalled(installed => {\r\n                if (installed) {\r\n                    window.clearInterval(interval);\r\n                    resolve();\r\n                } else {\r\n                    currentRetries--;\r\n                    if (currentRetries === 0) {\r\n                        reject();\r\n                        window.clearInterval(interval);\r\n                    }\r\n                }\r\n            }, options);\r\n        }, waitInterval);\r\n    });\r\n}\r\n\r\n/**\r\n * Handles response from external application / extension and calls GUM to\r\n * receive the desktop streams or reports error.\r\n * @param {object} options\r\n * @param {object} options.response\r\n * @param {string} options.response.streamId - the streamId for the desktop\r\n * stream.\r\n * @param {bool}   options.response.screenShareAudio - Used by electron clients to\r\n * enable system audio screen sharing.\r\n * @param {string} options.response.error - error to be reported.\r\n * @param {object} options.gumOptions - options passed to GUM.\r\n * @param {Function} onSuccess - callback for success.\r\n * @param {Function} onFailure - callback for failure.\r\n * @param {object} gumOptions - options passed to GUM.\r\n */\r\nfunction onGetStreamResponse(\r\n        options = {\r\n            response: {},\r\n            gumOptions: {}\r\n        },\r\n        onSuccess,\r\n        onFailure) {\r\n    const { streamId, streamType, screenShareAudio, error } = options.response || {};\r\n\r\n    if (streamId) {\r\n        const gumOptions = {\r\n            desktopStream: streamId,\r\n            screenShareAudio,\r\n            ...options.gumOptions\r\n        };\r\n\r\n        gumFunction([ 'desktop' ], gumOptions)\r\n            .then(stream => onSuccess({\r\n                stream,\r\n                sourceId: streamId,\r\n                sourceType: streamType\r\n            }), onFailure);\r\n    } else {\r\n        // As noted in Chrome Desktop Capture API:\r\n        // If user didn't select any source (i.e. canceled the prompt)\r\n        // then the callback is called with an empty streamId.\r\n        if (streamId === '') {\r\n            onFailure(new JitsiTrackError(\r\n                JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED));\r\n\r\n            return;\r\n        }\r\n\r\n        onFailure(new JitsiTrackError(\r\n            JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR,\r\n            error));\r\n    }\r\n}\r\n\r\nexport default ScreenObtainer;\r\n","import { getLogger } from 'jitsi-meet-logger';\r\nimport transform from 'sdp-transform';\r\n\r\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\r\nimport browser from '../browser';\r\nimport RTCEvents from '../../service/RTC/RTCEvents';\r\n\r\nconst logger = getLogger(__filename);\r\nconst SIM_LAYER_1_RID = '1';\r\nconst SIM_LAYER_2_RID = '2';\r\nconst SIM_LAYER_3_RID = '3';\r\n\r\nexport const SIM_LAYER_RIDS = [ SIM_LAYER_1_RID, SIM_LAYER_2_RID, SIM_LAYER_3_RID ];\r\n\r\n/**\r\n * Handles track related operations on TraceablePeerConnection when browser is\r\n * running in unified plan mode.\r\n */\r\nexport class TPCUtils {\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor(peerconnection) {\r\n        this.pc = peerconnection;\r\n\r\n        /**\r\n         * The simulcast encodings that will be configured on the RTCRtpSender\r\n         * for the video tracks in the unified plan mode.\r\n         */\r\n        this.simulcastEncodings = [\r\n            {\r\n                active: true,\r\n                maxBitrate: browser.isFirefox() ? 2500000 : 200000,\r\n                rid: SIM_LAYER_1_RID,\r\n                scaleResolutionDownBy: browser.isFirefox() ? 1.0 : 4.0\r\n            },\r\n            {\r\n                active: true,\r\n                maxBitrate: 700000,\r\n                rid: SIM_LAYER_2_RID,\r\n                scaleResolutionDownBy: 2.0\r\n            },\r\n            {\r\n                active: true,\r\n                maxBitrate: browser.isFirefox() ? 200000 : 2500000,\r\n                rid: SIM_LAYER_3_RID,\r\n                scaleResolutionDownBy: browser.isFirefox() ? 4.0 : 1.0\r\n            }\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Ensures that the ssrcs associated with a FID ssrc-group appear in the correct order, i.e.,\r\n     * the primary ssrc first and the secondary rtx ssrc later. This is important for unified\r\n     * plan since we have only one FID group per media description.\r\n     * @param {Object} description the webRTC session description instance for the remote\r\n     * description.\r\n     * @private\r\n     */\r\n    _ensureCorrectOrderOfSsrcs(description) {\r\n        const parsedSdp = transform.parse(description.sdp);\r\n\r\n        parsedSdp.media.forEach(mLine => {\r\n            if (mLine.type === 'audio') {\r\n                return;\r\n            }\r\n            if (!mLine.ssrcGroups || !mLine.ssrcGroups.length) {\r\n                return;\r\n            }\r\n            let reorderedSsrcs = [];\r\n\r\n            mLine.ssrcGroups[0].ssrcs.split(' ').forEach(ssrc => {\r\n                const sources = mLine.ssrcs.filter(source => source.id.toString() === ssrc);\r\n\r\n                reorderedSsrcs = reorderedSsrcs.concat(sources);\r\n            });\r\n            mLine.ssrcs = reorderedSsrcs;\r\n        });\r\n\r\n        return new RTCSessionDescription({\r\n            type: description.type,\r\n            sdp: transform.write(parsedSdp)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Obtains stream encodings that need to be configured on the given track.\r\n     * @param {JitsiLocalTrack} localTrack\r\n     */\r\n    _getStreamEncodings(localTrack) {\r\n        if (this.pc.isSimulcastOn() && localTrack.isVideoTrack()) {\r\n            return this.simulcastEncodings;\r\n        }\r\n\r\n        return [ { active: true } ];\r\n    }\r\n\r\n    /**\r\n     * Takes in a *unified plan* offer and inserts the appropriate\r\n     * parameters for adding simulcast receive support.\r\n     * @param {Object} desc - A session description object\r\n     * @param {String} desc.type - the type (offer/answer)\r\n     * @param {String} desc.sdp - the sdp content\r\n     *\r\n     * @return {Object} A session description (same format as above) object\r\n     * with its sdp field modified to advertise simulcast receive support\r\n     */\r\n    _insertUnifiedPlanSimulcastReceive(desc) {\r\n        // a=simulcast line is not needed on browsers where\r\n        // we munge SDP for turning on simulcast. Remove this check\r\n        // when we move to RID/MID based simulcast on all browsers.\r\n        if (browser.usesSdpMungingForSimulcast()) {\r\n            return desc;\r\n        }\r\n        const sdp = transform.parse(desc.sdp);\r\n        const idx = sdp.media.findIndex(mline => mline.type === 'video');\r\n\r\n        if (sdp.media[idx].rids && (sdp.media[idx].simulcast_03 || sdp.media[idx].simulcast)) {\r\n            // Make sure we don't have the simulcast recv line on video descriptions other than the\r\n            // the first video description.\r\n            sdp.media.forEach((mline, i) => {\r\n                if (mline.type === 'video' && i !== idx) {\r\n                    sdp.media[i].rids = undefined;\r\n                    sdp.media[i].simulcast = undefined;\r\n\r\n                    // eslint-disable-next-line camelcase\r\n                    sdp.media[i].simulcast_03 = undefined;\r\n                }\r\n            });\r\n\r\n            return new RTCSessionDescription({\r\n                type: desc.type,\r\n                sdp: transform.write(sdp)\r\n            });\r\n        }\r\n\r\n        // In order of highest to lowest spatial quality\r\n        sdp.media[idx].rids = [\r\n            {\r\n                id: SIM_LAYER_1_RID,\r\n                direction: 'recv'\r\n            },\r\n            {\r\n                id: SIM_LAYER_2_RID,\r\n                direction: 'recv'\r\n            },\r\n            {\r\n                id: SIM_LAYER_3_RID,\r\n                direction: 'recv'\r\n            }\r\n        ];\r\n\r\n        // Firefox 72 has stopped parsing the legacy rid= parameters in simulcast attributes.\r\n        // eslint-disable-next-line max-len\r\n        // https://www.fxsitecompat.dev/en-CA/docs/2019/pt-and-rid-in-webrtc-simulcast-attributes-are-no-longer-supported/\r\n        const simulcastLine = browser.isFirefox() && browser.isVersionGreaterThan(71)\r\n            ? `recv ${SIM_LAYER_RIDS.join(';')}`\r\n            : `recv rid=${SIM_LAYER_RIDS.join(';')}`;\r\n\r\n        // eslint-disable-next-line camelcase\r\n        sdp.media[idx].simulcast_03 = {\r\n            value: simulcastLine\r\n        };\r\n\r\n        return new RTCSessionDescription({\r\n            type: desc.type,\r\n            sdp: transform.write(sdp)\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Adds {@link JitsiLocalTrack} to the WebRTC peerconnection for the first time.\r\n    * @param {JitsiLocalTrack} track - track to be added to the peerconnection.\r\n    * @returns {boolean} Returns true if the operation is successful,\r\n    * false otherwise.\r\n    */\r\n    addTrack(localTrack, isInitiator = true) {\r\n        const track = localTrack.getTrack();\r\n\r\n        if (isInitiator) {\r\n            // Use pc.addTransceiver() for the initiator case when local tracks are getting added\r\n            // to the peerconnection before a session-initiate is sent over to the peer.\r\n            const transceiverInit = {\r\n                direction: 'sendrecv',\r\n                streams: [ localTrack.getOriginalStream() ],\r\n                sendEncodings: []\r\n            };\r\n\r\n            if (!browser.isFirefox()) {\r\n                transceiverInit.sendEncodings = this._getStreamEncodings(localTrack);\r\n            }\r\n            this.pc.peerconnection.addTransceiver(track, transceiverInit);\r\n        } else {\r\n            // Use pc.addTrack() for responder case so that we can re-use the m-lines that were created\r\n            // when setRemoteDescription was called. pc.addTrack() automatically  attaches to any existing\r\n            // unused \"recv-only\" transceiver.\r\n            this.pc.peerconnection.addTrack(track);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds a track on the RTCRtpSender as part of the unmute operation.\r\n     * @param {JitsiLocalTrack} localTrack - track to be unmuted.\r\n     * @returns {Promise<boolean>} - Promise that resolves to false if unmute\r\n     * operation is successful, a reject otherwise.\r\n     */\r\n    addTrackUnmute(localTrack) {\r\n        const mediaType = localTrack.getType();\r\n        const track = localTrack.getTrack();\r\n\r\n        // The assumption here is that the first transceiver of the specified\r\n        // media type is that of the local track.\r\n        const transceiver = this.pc.peerconnection.getTransceivers()\r\n            .find(t => t.receiver && t.receiver.track && t.receiver.track.kind === mediaType);\r\n\r\n        if (!transceiver) {\r\n            return Promise.reject(new Error(`RTCRtpTransceiver for ${mediaType} not found`));\r\n        }\r\n        logger.debug(`Adding ${localTrack} on ${this.pc}`);\r\n\r\n        // If the client starts with audio/video muted setting, the transceiver direction\r\n        // will be set to 'recvonly'. Use addStream here so that a MSID is generated for the stream.\r\n        if (transceiver.direction === 'recvonly') {\r\n            this.pc.peerconnection.addStream(localTrack.getOriginalStream());\r\n            this.setEncodings(localTrack);\r\n            this.pc.localTracks.set(localTrack.rtcId, localTrack);\r\n            transceiver.direction = 'sendrecv';\r\n\r\n            return Promise.resolve(false);\r\n        }\r\n\r\n        return transceiver.sender.replaceTrack(track)\r\n            .then(() => {\r\n                this.pc.localTracks.set(localTrack.rtcId, localTrack);\r\n\r\n                return Promise.resolve(false);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Removes the track from the RTCRtpSender as part of the mute operation.\r\n     * @param {JitsiLocalTrack} localTrack - track to be removed.\r\n     * @returns {Promise<boolean>} - Promise that resolves to false if unmute\r\n     * operation is successful, a reject otherwise.\r\n     */\r\n    removeTrackMute(localTrack) {\r\n        const mediaType = localTrack.getType();\r\n        const transceiver = this.pc.peerconnection.getTransceivers()\r\n            .find(t => t.sender && t.sender.track && t.sender.track.id === localTrack.getTrackId());\r\n\r\n        if (!transceiver) {\r\n            return Promise.reject(new Error(`RTCRtpTransceiver for ${mediaType} not found`));\r\n        }\r\n\r\n        logger.debug(`Removing ${localTrack} on ${this.pc}`);\r\n\r\n        return transceiver.sender.replaceTrack(null)\r\n            .then(() => {\r\n                this.pc.localTracks.delete(localTrack.rtcId);\r\n\r\n                return Promise.resolve(false);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Replaces the existing track on a RTCRtpSender with the given track.\r\n     * @param {JitsiLocalTrack} oldTrack - existing track on the sender that needs to be removed.\r\n     * @param {JitsiLocalTrack} newTrack - new track that needs to be added to the sender.\r\n     * @returns {Promise<false>} Promise that resolves with false as we don't want\r\n     * renegotiation to be triggered automatically after this operation. Renegotiation is\r\n     * done when the browser fires the negotiationeeded event.\r\n     */\r\n    replaceTrack(oldTrack, newTrack) {\r\n        if (oldTrack && newTrack) {\r\n            const mediaType = newTrack.getType();\r\n            const stream = newTrack.getOriginalStream();\r\n            const track = stream.getVideoTracks()[0];\r\n            const transceiver = this.pc.peerconnection.getTransceivers()\r\n                .find(t => t.receiver.track.kind === mediaType && !t.stopped);\r\n\r\n            if (!transceiver) {\r\n                return Promise.reject(new Error('replace track failed'));\r\n            }\r\n            logger.debug(`Replacing ${oldTrack} with ${newTrack} on ${this.pc}`);\r\n\r\n            return transceiver.sender.replaceTrack(track)\r\n                .then(() => {\r\n                    const ssrc = this.pc.localSSRCs.get(oldTrack.rtcId);\r\n\r\n                    this.pc.localTracks.delete(oldTrack.rtcId);\r\n                    this.pc.localSSRCs.delete(oldTrack.rtcId);\r\n                    this.pc._addedStreams = this.pc._addedStreams.filter(s => s !== stream);\r\n                    this.pc.localTracks.set(newTrack.rtcId, newTrack);\r\n\r\n                    this.pc._addedStreams.push(stream);\r\n                    this.pc.localSSRCs.set(newTrack.rtcId, ssrc);\r\n                    this.pc.eventEmitter.emit(RTCEvents.LOCAL_TRACK_SSRC_UPDATED,\r\n                        newTrack,\r\n                        this.pc._extractPrimarySSRC(ssrc));\r\n                });\r\n        } else if (oldTrack && !newTrack) {\r\n            if (!this.removeTrackMute(oldTrack)) {\r\n                return Promise.reject(new Error('replace track failed'));\r\n            }\r\n            this.pc.localTracks.delete(oldTrack.rtcId);\r\n            this.pc.localSSRCs.delete(oldTrack.rtcId);\r\n        } else if (newTrack && !oldTrack) {\r\n            const ssrc = this.pc.localSSRCs.get(newTrack.rtcId);\r\n\r\n            if (!this.addTrackUnmute(newTrack)) {\r\n                return Promise.reject(new Error('replace track failed'));\r\n            }\r\n            newTrack.emit(JitsiTrackEvents.TRACK_MUTE_CHANGED, newTrack);\r\n            this.pc.localTracks.set(newTrack.rtcId, newTrack);\r\n            this.pc.localSSRCs.set(newTrack.rtcId, ssrc);\r\n        }\r\n\r\n        return Promise.resolve(false);\r\n    }\r\n\r\n    /**\r\n    * Enables/disables audio transmission on the peer connection. When\r\n    * disabled the audio transceiver direction will be set to 'inactive'\r\n    * which means that no data will be sent nor accepted, but\r\n    * the connection should be kept alive.\r\n    * @param {boolean} active - true to enable audio media transmission or\r\n    * false to disable.\r\n    * @returns {false} - returns false always so that renegotiation is not automatically\r\n    * triggered after this operation.\r\n    */\r\n    setAudioTransferActive(active) {\r\n        return this.setMediaTransferActive('audio', active);\r\n    }\r\n\r\n    /**\r\n     * Set the simulcast stream encoding properties on the RTCRtpSender.\r\n     * @param {JitsiLocalTrack} track - the current track in use for which\r\n     * the encodings are to be set.\r\n     */\r\n    setEncodings(track) {\r\n        const transceiver = this.pc.peerconnection.getTransceivers()\r\n            .find(t => t.sender && t.sender.track && t.sender.track.kind === track.getType());\r\n        const parameters = transceiver.sender.getParameters();\r\n\r\n        parameters.encodings = this._getStreamEncodings(track);\r\n        transceiver.sender.setParameters(parameters);\r\n    }\r\n\r\n    /**\r\n     * Enables/disables media transmission on the peerconnection by changing the direction\r\n     * on the transceiver for the specified media type.\r\n     * @param {String} mediaType - 'audio' or 'video'\r\n     * @param {boolean} active - true to enable media transmission or false\r\n     * to disable.\r\n     * @returns {false} - returns false always so that renegotiation is not automatically\r\n     * triggered after this operation\r\n     */\r\n    setMediaTransferActive(mediaType, active) {\r\n        const transceivers = this.pc.peerconnection.getTransceivers()\r\n            .filter(t => t.receiver && t.receiver.track && t.receiver.track.kind === mediaType);\r\n        const localTracks = Array.from(this.pc.localTracks.values())\r\n            .filter(track => track.getType() === mediaType);\r\n\r\n        if (active) {\r\n            transceivers.forEach(transceiver => {\r\n                if (localTracks.length) {\r\n                    transceiver.direction = 'sendrecv';\r\n                    const parameters = transceiver.sender.getParameters();\r\n\r\n                    if (parameters && parameters.encodings && parameters.encodings.length) {\r\n                        parameters.encodings.forEach(encoding => {\r\n                            encoding.active = true;\r\n                        });\r\n                        transceiver.sender.setParameters(parameters);\r\n                    }\r\n                } else {\r\n                    transceiver.direction = 'recvonly';\r\n                }\r\n            });\r\n        } else {\r\n            transceivers.forEach(transceiver => {\r\n                transceiver.direction = 'inactive';\r\n            });\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n    * Enables/disables video media transmission on the peer connection. When\r\n    * disabled the SDP video media direction in the local SDP will be adjusted to\r\n    * 'inactive' which means that no data will be sent nor accepted, but\r\n    * the connection should be kept alive.\r\n    * @param {boolean} active - true to enable video media transmission or\r\n    * false to disable.\r\n    * @returns {false} - returns false always so that renegotiation is not automatically\r\n    * triggered after this operation.\r\n    */\r\n    setVideoTransferActive(active) {\r\n        return this.setMediaTransferActive('video', active);\r\n    }\r\n}\r\n","/* global __filename, RTCSessionDescription */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { Interop } from '@jitsi/sdp-interop';\r\nimport transform from 'sdp-transform';\r\n\r\nimport * as GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\r\nimport JitsiRemoteTrack from './JitsiRemoteTrack';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport LocalSdpMunger from './LocalSdpMunger';\r\nimport RTC from './RTC';\r\nimport RTCUtils from './RTCUtils';\r\nimport browser from '../browser';\r\nimport RTCEvents from '../../service/RTC/RTCEvents';\r\nimport RtxModifier from '../xmpp/RtxModifier';\r\nimport { SIM_LAYER_RIDS, TPCUtils } from './TPCUtils';\r\n\r\n// FIXME SDP tools should end up in some kind of util module\r\nimport SDP from '../xmpp/SDP';\r\nimport SdpConsistency from '../xmpp/SdpConsistency';\r\nimport { SdpTransformWrap } from '../xmpp/SdpTransformUtil';\r\nimport SDPUtil from '../xmpp/SDPUtil';\r\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\r\n\r\nconst logger = getLogger(__filename);\r\nconst MAX_BITRATE = 2500000;\r\nconst DESKSTOP_SHARE_RATE = 500000;\r\n\r\n/* eslint-disable max-params */\r\n\r\n/**\r\n * Creates new instance of 'TraceablePeerConnection'.\r\n *\r\n * @param {RTC} rtc the instance of <tt>RTC</tt> service\r\n * @param {number} id the peer connection id assigned by the parent RTC module.\r\n * @param {SignalingLayer} signalingLayer the signaling layer instance\r\n * @param {object} iceConfig WebRTC 'PeerConnection' ICE config\r\n * @param {object} constraints WebRTC 'PeerConnection' constraints\r\n * @param {boolean} isP2P indicates whether or not the new instance will be used\r\n * in a peer to peer connection\r\n * @param {object} options <tt>TracablePeerConnection</tt> config options.\r\n * @param {boolean} options.disableSimulcast if set to 'true' will disable\r\n * the simulcast.\r\n * @param {boolean} options.disableRtx if set to 'true' will disable the RTX\r\n * @param {boolean} options.capScreenshareBitrate if set to 'true' simulcast will\r\n * be disabled for screenshare and a max bitrate of 500Kbps will applied on the\r\n * stream.\r\n * @param {boolean} options.disableH264 If set to 'true' H264 will be\r\n *      disabled by removing it from the SDP.\r\n * @param {boolean} options.preferH264 if set to 'true' H264 will be preferred\r\n * over other video codecs.\r\n * @param {boolean} options.enableLayerSuspension if set to 'true', we will\r\n * cap the video send bitrate when we are told we have not been selected by\r\n * any endpoints (and therefore the non-thumbnail streams are not in use).\r\n * @param {boolean} options.startSilent If set to 'true' no audio will be sent or received.\r\n *\r\n * FIXME: initially the purpose of TraceablePeerConnection was to be able to\r\n * debug the peer connection. Since many other responsibilities have been added\r\n * it would make sense to extract a separate class from it and come up with\r\n * a more suitable name.\r\n *\r\n * @constructor\r\n */\r\nexport default function TraceablePeerConnection(\r\n        rtc,\r\n        id,\r\n        signalingLayer,\r\n        iceConfig,\r\n        constraints,\r\n        isP2P,\r\n        options) {\r\n\r\n    /**\r\n     * Indicates whether or not this peer connection instance is actively\r\n     * sending/receiving audio media. When set to <tt>false</tt> the SDP audio\r\n     * media direction will be adjusted to 'inactive' in order to suspend\r\n     * the transmission.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.audioTransferActive = !(options.startSilent === true);\r\n\r\n    /**\r\n     * The DTMF sender instance used to send DTMF tones.\r\n     *\r\n     * @type {RTCDTMFSender|undefined}\r\n     * @private\r\n     */\r\n    this._dtmfSender = undefined;\r\n\r\n    /**\r\n     * @typedef {Object} TouchToneRequest\r\n     * @property {string} tones - The DTMF tones string as defined by\r\n     * {@code RTCDTMFSender.insertDTMF}, 'tones' argument.\r\n     * @property {number} duration - The amount of time in milliseconds that\r\n     * each DTMF should last.\r\n     * @property {string} interToneGap - The length of time in miliseconds to\r\n     * wait between tones.\r\n     */\r\n    /**\r\n     * TouchToneRequests which are waiting to be played. This queue is filled\r\n     * if there are touch tones currently being played.\r\n     *\r\n     * @type {Array<TouchToneRequest>}\r\n     * @private\r\n     */\r\n    this._dtmfTonesQueue = [];\r\n\r\n    /**\r\n     * Indicates whether or not this peer connection instance is actively\r\n     * sending/receiving video media. When set to <tt>false</tt> the SDP video\r\n     * media direction will be adjusted to 'inactive' in order to suspend\r\n     * the transmission.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.videoTransferActive = true;\r\n\r\n    /**\r\n     * The parent instance of RTC service which created this\r\n     * <tt>TracablePeerConnection</tt>.\r\n     * @type {RTC}\r\n     */\r\n    this.rtc = rtc;\r\n\r\n    /**\r\n     * The peer connection identifier assigned by the RTC module.\r\n     * @type {number}\r\n     */\r\n    this.id = id;\r\n\r\n    /**\r\n     * Indicates whether or not this instance is used in a peer to peer\r\n     * connection.\r\n     * @type {boolean}\r\n     */\r\n    this.isP2P = isP2P;\r\n\r\n    // FIXME: We should support multiple streams per jid.\r\n    /**\r\n     * The map holds remote tracks associated with this peer connection.\r\n     * It maps user's JID to media type and remote track\r\n     * (one track per media type per user's JID).\r\n     * @type {Map<string, Map<MediaType, JitsiRemoteTrack>>}\r\n     */\r\n    this.remoteTracks = new Map();\r\n\r\n    /**\r\n     * A map which stores local tracks mapped by {@link JitsiLocalTrack.rtcId}\r\n     * @type {Map<number, JitsiLocalTrack>}\r\n     */\r\n    this.localTracks = new Map();\r\n\r\n    /**\r\n     * Keeps tracks of the WebRTC <tt>MediaStream</tt>s that have been added to\r\n     * the underlying WebRTC PeerConnection.\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    this._addedStreams = [];\r\n\r\n    /**\r\n     * @typedef {Object} TPCGroupInfo\r\n     * @property {string} semantics the SSRC groups semantics\r\n     * @property {Array<number>} ssrcs group's SSRCs in order where the first\r\n     * one is group's primary SSRC, the second one is secondary (RTX) and so\r\n     * on...\r\n     */\r\n    /**\r\n     * @typedef {Object} TPCSSRCInfo\r\n     * @property {Array<number>} ssrcs an array which holds all track's SSRCs\r\n     * @property {Array<TPCGroupInfo>} groups an array stores all track's SSRC\r\n     * groups\r\n     */\r\n    /**\r\n     * Holds the info about local track's SSRCs mapped per their\r\n     * {@link JitsiLocalTrack.rtcId}\r\n     * @type {Map<number, TPCSSRCInfo>}\r\n     */\r\n    this.localSSRCs = new Map();\r\n\r\n    /**\r\n     * The local ICE username fragment for this session.\r\n     */\r\n    this.localUfrag = null;\r\n\r\n    /**\r\n     * The remote ICE username fragment for this session.\r\n     */\r\n    this.remoteUfrag = null;\r\n\r\n    /**\r\n     * The signaling layer which operates this peer connection.\r\n     * @type {SignalingLayer}\r\n     */\r\n    this.signalingLayer = signalingLayer;\r\n\r\n    // SignalingLayer listeners\r\n    this._peerVideoTypeChanged = this._peerVideoTypeChanged.bind(this);\r\n    this.signalingLayer.on(\r\n        SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\r\n        this._peerVideoTypeChanged);\r\n\r\n    this._peerMutedChanged = this._peerMutedChanged.bind(this);\r\n    this.signalingLayer.on(\r\n        SignalingEvents.PEER_MUTED_CHANGED,\r\n        this._peerMutedChanged);\r\n    this.options = options;\r\n\r\n    this.peerconnection\r\n        = new RTCUtils.RTCPeerConnectionType(iceConfig, constraints);\r\n    this.tpcUtils = new TPCUtils(this);\r\n    this.updateLog = [];\r\n    this.stats = {};\r\n    this.statsinterval = null;\r\n\r\n    /**\r\n     * @type {number} The max number of stats to keep in this.stats. Limit to\r\n     * 300 values, i.e. 5 minutes; set to 0 to disable\r\n     */\r\n    this.maxstats = options.maxstats;\r\n\r\n    this.interop = new Interop();\r\n    const Simulcast = require('@jitsi/sdp-simulcast');\r\n\r\n    this.simulcast = new Simulcast(\r\n        {\r\n            numOfLayers: SIM_LAYER_RIDS.length,\r\n            explodeRemoteSimulcast: false,\r\n            usesUnifiedPlan: browser.usesUnifiedPlan()\r\n        });\r\n    this.sdpConsistency = new SdpConsistency(this.toString());\r\n\r\n    /**\r\n     * Munges local SDP provided to the Jingle Session in order to prevent from\r\n     * sending SSRC updates on attach/detach and mute/unmute (for video).\r\n     * @type {LocalSdpMunger}\r\n     */\r\n    this.localSdpMunger = new LocalSdpMunger(this);\r\n\r\n    /**\r\n     * TracablePeerConnection uses RTC's eventEmitter\r\n     * @type {EventEmitter}\r\n     */\r\n    this.eventEmitter = rtc.eventEmitter;\r\n    this.rtxModifier = new RtxModifier();\r\n\r\n    // override as desired\r\n    this.trace = (what, info) => {\r\n        logger.debug(what, info);\r\n\r\n        this.updateLog.push({\r\n            time: new Date(),\r\n            type: what,\r\n            value: info || ''\r\n        });\r\n    };\r\n    this.onicecandidate = null;\r\n    this.peerconnection.onicecandidate = event => {\r\n        this.trace(\r\n            'onicecandidate',\r\n            JSON.stringify(event.candidate, null, ' '));\r\n\r\n        if (this.onicecandidate !== null) {\r\n            this.onicecandidate(event);\r\n        }\r\n    };\r\n\r\n    // Use stream events in plan-b and track events in unified plan.\r\n    if (browser.usesPlanB()) {\r\n        this.peerconnection.onaddstream\r\n            = event => this._remoteStreamAdded(event.stream);\r\n        this.peerconnection.onremovestream\r\n            = event => this._remoteStreamRemoved(event.stream);\r\n    } else {\r\n        this.peerconnection.ontrack = event => {\r\n            const stream = event.streams[0];\r\n\r\n            this._remoteTrackAdded(stream, event.track, event.transceiver);\r\n            stream.onremovetrack = evt => {\r\n                this._remoteTrackRemoved(stream, evt.track);\r\n            };\r\n        };\r\n    }\r\n    this.onsignalingstatechange = null;\r\n    this.peerconnection.onsignalingstatechange = event => {\r\n        this.trace('onsignalingstatechange', this.signalingState);\r\n        if (this.onsignalingstatechange !== null) {\r\n            this.onsignalingstatechange(event);\r\n        }\r\n    };\r\n    this.oniceconnectionstatechange = null;\r\n    this.peerconnection.oniceconnectionstatechange = event => {\r\n        this.trace('oniceconnectionstatechange', this.iceConnectionState);\r\n        if (this.oniceconnectionstatechange !== null) {\r\n            this.oniceconnectionstatechange(event);\r\n        }\r\n    };\r\n    this.onnegotiationneeded = null;\r\n    this.peerconnection.onnegotiationneeded = event => {\r\n        this.trace('onnegotiationneeded');\r\n        if (this.onnegotiationneeded !== null) {\r\n            this.onnegotiationneeded(event);\r\n        }\r\n    };\r\n    this.ondatachannel = null;\r\n    this.peerconnection.ondatachannel = event => {\r\n        this.trace('ondatachannel');\r\n        if (this.ondatachannel !== null) {\r\n            this.ondatachannel(event);\r\n        }\r\n    };\r\n\r\n    if (this.maxstats) {\r\n        this.statsinterval = window.setInterval(() => {\r\n            this.getStats(stats => {\r\n                if (stats.result\r\n                    && typeof stats.result === 'function') {\r\n                    const results = stats.result();\r\n\r\n                    for (let i = 0; i < results.length; ++i) {\r\n                        const res = results[i];\r\n\r\n                        res.names().forEach(name => {\r\n                            this._processStat(res, name, res.stat(name));\r\n                        });\r\n                    }\r\n                } else {\r\n                    stats.forEach(r => this._processStat(r, '', r));\r\n                }\r\n            }, () => {\r\n\r\n                // empty error callback\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    logger.info(`Create new ${this}`);\r\n}\r\n\r\n/* eslint-enable max-params */\r\n\r\n/**\r\n * Process stat and adds it to the array of stats we store.\r\n * @param report the current stats report.\r\n * @param name the name of the report, if available\r\n * @param statValue the value to add.\r\n * @private\r\n */\r\nTraceablePeerConnection.prototype._processStat\r\n    = function(report, name, statValue) {\r\n        const id = `${report.id}-${name}`;\r\n        let s = this.stats[id];\r\n        const now = new Date();\r\n\r\n        if (!s) {\r\n            this.stats[id] = s = {\r\n                startTime: now,\r\n                endTime: now,\r\n                values: [],\r\n                times: []\r\n            };\r\n        }\r\n        s.values.push(statValue);\r\n        s.times.push(now.getTime());\r\n        if (s.values.length > this.maxstats) {\r\n            s.values.shift();\r\n            s.times.shift();\r\n        }\r\n        s.endTime = now;\r\n    };\r\n\r\n/**\r\n * Returns a string representation of a SessionDescription object.\r\n */\r\nconst dumpSDP = function(description) {\r\n    if (typeof description === 'undefined' || description === null) {\r\n        return '';\r\n    }\r\n\r\n    return `type: ${description.type}\\r\\n${description.sdp}`;\r\n};\r\n\r\n\r\n/**\r\n * Forwards the {@link peerconnection.iceConnectionState} state except that it\r\n * will convert \"completed\" into \"connected\" where both mean that the ICE has\r\n * succeeded and is up and running. We never see \"completed\" state for\r\n * the JVB connection, but it started appearing for the P2P one. This method\r\n * allows to adapt old logic to this new situation.\r\n * @return {string}\r\n */\r\nTraceablePeerConnection.prototype.getConnectionState = function() {\r\n    const state = this.peerconnection.iceConnectionState;\r\n\r\n    if (state === 'completed') {\r\n        return 'connected';\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n/**\r\n * Obtains the media direction for given {@link MediaType}. The method takes\r\n * into account whether or not there are any local tracks for media and\r\n * the {@link audioTransferActive} and {@link videoTransferActive} flags.\r\n * @param {MediaType} mediaType\r\n * @return {string} one of the SDP direction constants ('sendrecv, 'recvonly'\r\n * etc.) which should be used when setting local description on the peer\r\n * connection.\r\n * @private\r\n */\r\nTraceablePeerConnection.prototype._getDesiredMediaDirection = function(\r\n        mediaType) {\r\n    let mediaTransferActive = true;\r\n\r\n    if (mediaType === MediaType.AUDIO) {\r\n        mediaTransferActive = this.audioTransferActive;\r\n    } else if (mediaType === MediaType.VIDEO) {\r\n        mediaTransferActive = this.videoTransferActive;\r\n    }\r\n    if (mediaTransferActive) {\r\n        return this.hasAnyTracksOfType(mediaType) ? 'sendrecv' : 'recvonly';\r\n    }\r\n\r\n    return 'inactive';\r\n};\r\n\r\n/**\r\n * Tells whether or not this TPC instance is using Simulcast.\r\n * @return {boolean} <tt>true</tt> if simulcast is enabled and active or\r\n * <tt>false</tt> if it's turned off.\r\n */\r\nTraceablePeerConnection.prototype.isSimulcastOn = function() {\r\n    return !this.options.disableSimulcast;\r\n};\r\n\r\n/**\r\n * Handles {@link SignalingEvents.PEER_VIDEO_TYPE_CHANGED}\r\n * @param {string} endpointId the video owner's ID (MUC nickname)\r\n * @param {VideoType} videoType the new value\r\n * @private\r\n */\r\nTraceablePeerConnection.prototype._peerVideoTypeChanged = function(\r\n        endpointId,\r\n        videoType) {\r\n    // Check if endpointId has a value to avoid action on random track\r\n    if (!endpointId) {\r\n        logger.error(`No endpointID on peerVideoTypeChanged ${this}`);\r\n\r\n        return;\r\n    }\r\n    const videoTrack = this.getRemoteTracks(endpointId, MediaType.VIDEO);\r\n\r\n    if (videoTrack.length) {\r\n        // NOTE 1 track per media type is assumed\r\n        videoTrack[0]._setVideoType(videoType);\r\n    }\r\n};\r\n\r\n/**\r\n * Handles remote track mute / unmute events.\r\n * @param {string} endpointId the track owner's identifier (MUC nickname)\r\n * @param {MediaType} mediaType \"audio\" or \"video\"\r\n * @param {boolean} isMuted the new mute state\r\n * @private\r\n */\r\nTraceablePeerConnection.prototype._peerMutedChanged = function(\r\n        endpointId,\r\n        mediaType,\r\n        isMuted) {\r\n    // Check if endpointId is a value to avoid doing action on all remote tracks\r\n    if (!endpointId) {\r\n        logger.error('On peerMuteChanged - no endpoint ID');\r\n\r\n        return;\r\n    }\r\n    const track = this.getRemoteTracks(endpointId, mediaType);\r\n\r\n    if (track.length) {\r\n        // NOTE 1 track per media type is assumed\r\n        track[0].setMute(isMuted);\r\n    }\r\n};\r\n\r\n/**\r\n * Obtains local tracks for given {@link MediaType}. If the <tt>mediaType</tt>\r\n * argument is omitted the list of all local tracks will be returned.\r\n * @param {MediaType} [mediaType]\r\n * @return {Array<JitsiLocalTrack>}\r\n */\r\nTraceablePeerConnection.prototype.getLocalTracks = function(mediaType) {\r\n    let tracks = Array.from(this.localTracks.values());\r\n\r\n    if (mediaType !== undefined) {\r\n        tracks = tracks.filter(track => track.getType() === mediaType);\r\n    }\r\n\r\n    return tracks;\r\n};\r\n\r\n/**\r\n * Checks whether or not this {@link TraceablePeerConnection} instance contains\r\n * any local tracks for given <tt>mediaType</tt>.\r\n * @param {MediaType} mediaType\r\n * @return {boolean}\r\n */\r\nTraceablePeerConnection.prototype.hasAnyTracksOfType = function(mediaType) {\r\n    if (!mediaType) {\r\n        throw new Error('\"mediaType\" is required');\r\n    }\r\n\r\n    return this.getLocalTracks(mediaType).length > 0;\r\n};\r\n\r\n/**\r\n * Obtains all remote tracks currently known to this PeerConnection instance.\r\n * @param {string} [endpointId] the track owner's identifier (MUC nickname)\r\n * @param {MediaType} [mediaType] the remote tracks will be filtered\r\n * by their media type if this argument is specified.\r\n * @return {Array<JitsiRemoteTrack>}\r\n */\r\nTraceablePeerConnection.prototype.getRemoteTracks = function(\r\n        endpointId,\r\n        mediaType) {\r\n    const remoteTracks = [];\r\n    const endpoints\r\n        = endpointId ? [ endpointId ] : this.remoteTracks.keys();\r\n\r\n    for (const endpoint of endpoints) {\r\n        const endpointTrackMap = this.remoteTracks.get(endpoint);\r\n\r\n        if (!endpointTrackMap) {\r\n\r\n            // Otherwise an empty Map() would have to be allocated above\r\n            // eslint-disable-next-line no-continue\r\n            continue;\r\n        }\r\n\r\n        for (const trackMediaType of endpointTrackMap.keys()) {\r\n            // per media type filtering\r\n            if (!mediaType || mediaType === trackMediaType) {\r\n                const mediaTrack = endpointTrackMap.get(trackMediaType);\r\n\r\n                if (mediaTrack) {\r\n                    remoteTracks.push(mediaTrack);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return remoteTracks;\r\n};\r\n\r\n/**\r\n * Tries to find {@link JitsiTrack} for given SSRC number. It will search both\r\n * local and remote tracks bound to this instance.\r\n * @param {number} ssrc\r\n * @return {JitsiTrack|null}\r\n */\r\nTraceablePeerConnection.prototype.getTrackBySSRC = function(ssrc) {\r\n    if (typeof ssrc !== 'number') {\r\n        throw new Error(`SSRC ${ssrc} is not a number`);\r\n    }\r\n    for (const localTrack of this.localTracks.values()) {\r\n        if (this.getLocalSSRC(localTrack) === ssrc) {\r\n            return localTrack;\r\n        }\r\n    }\r\n    for (const remoteTrack of this.getRemoteTracks()) {\r\n        if (remoteTrack.getSSRC() === ssrc) {\r\n            return remoteTrack;\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * Tries to find SSRC number for given {@link JitsiTrack} id. It will search\r\n * both local and remote tracks bound to this instance.\r\n * @param {string} id\r\n * @return {number|null}\r\n */\r\nTraceablePeerConnection.prototype.getSsrcByTrackId = function(id) {\r\n\r\n    const findTrackById = track => track.getTrack().id === id;\r\n    const localTrack = this.getLocalTracks().find(findTrackById);\r\n\r\n    if (localTrack) {\r\n        return this.getLocalSSRC(localTrack);\r\n    }\r\n\r\n    const remoteTrack = this.getRemoteTracks().find(findTrackById);\r\n\r\n    if (remoteTrack) {\r\n        return remoteTrack.getSSRC();\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * Called when new remote MediaStream is added to the PeerConnection.\r\n * @param {MediaStream} stream the WebRTC MediaStream for remote participant\r\n */\r\nTraceablePeerConnection.prototype._remoteStreamAdded = function(stream) {\r\n    const streamId = RTC.getStreamID(stream);\r\n\r\n    if (!RTC.isUserStreamById(streamId)) {\r\n        logger.info(\r\n            `${this} ignored remote 'stream added' event for non-user stream`\r\n             + `id: ${streamId}`);\r\n\r\n        return;\r\n    }\r\n\r\n    // Bind 'addtrack'/'removetrack' event handlers\r\n    if (browser.isChromiumBased()) {\r\n        stream.onaddtrack = event => {\r\n            this._remoteTrackAdded(stream, event.track);\r\n        };\r\n        stream.onremovetrack = event => {\r\n            this._remoteTrackRemoved(stream, event.track);\r\n        };\r\n    }\r\n\r\n    // Call remoteTrackAdded for each track in the stream\r\n    const streamAudioTracks = stream.getAudioTracks();\r\n\r\n    for (const audioTrack of streamAudioTracks) {\r\n        this._remoteTrackAdded(stream, audioTrack);\r\n    }\r\n    const streamVideoTracks = stream.getVideoTracks();\r\n\r\n    for (const videoTrack of streamVideoTracks) {\r\n        this._remoteTrackAdded(stream, videoTrack);\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Called on \"track added\" and \"stream added\" PeerConnection events (because we\r\n * handle streams on per track basis). Finds the owner and the SSRC for\r\n * the track and passes that to ChatRoom for further processing.\r\n * @param {MediaStream} stream the WebRTC MediaStream instance which is\r\n * the parent of the track\r\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack added for remote\r\n * participant.\r\n * @param {RTCRtpTransceiver} transceiver the WebRTC transceiver that is created\r\n * for the remote participant in unified plan.\r\n */\r\nTraceablePeerConnection.prototype._remoteTrackAdded = function(stream, track, transceiver = null) {\r\n    const streamId = RTC.getStreamID(stream);\r\n    const mediaType = track.kind;\r\n\r\n    if (!this.isP2P && !RTC.isUserStreamById(streamId)) {\r\n        logger.info(\r\n            `${this} ignored remote 'stream added' event for non-user stream`\r\n             + `id: ${streamId}`);\r\n\r\n        return;\r\n    }\r\n    logger.info(`${this} remote track added:`, streamId, mediaType);\r\n\r\n    // look up an associated JID for a stream id\r\n    if (!mediaType) {\r\n        GlobalOnErrorHandler.callErrorHandler(\r\n            new Error(\r\n                `MediaType undefined for remote track, stream id: ${streamId}`\r\n            ));\r\n\r\n        // Abort\r\n        return;\r\n    }\r\n\r\n    const remoteSDP = browser.usesPlanB()\r\n        ? new SDP(this.remoteDescription.sdp)\r\n        : new SDP(this.peerconnection.remoteDescription.sdp);\r\n    let mediaLines;\r\n\r\n    if (browser.usesUnifiedPlan()) {\r\n        if (transceiver && transceiver.mid) {\r\n            const mid = transceiver.mid;\r\n\r\n            mediaLines = remoteSDP.media.filter(mls => SDPUtil.findLine(mls, `a=mid:${mid}`));\r\n        } else {\r\n            mediaLines = remoteSDP.media.filter(mls => {\r\n                const msid = SDPUtil.findLine(mls, 'a=msid');\r\n\r\n                return typeof msid !== 'undefined' && streamId === msid.substring(7).split(' ')[0];\r\n            });\r\n        }\r\n    } else {\r\n        mediaLines = remoteSDP.media.filter(mls => mls.startsWith(`m=${mediaType}`));\r\n    }\r\n\r\n    if (!mediaLines.length) {\r\n        GlobalOnErrorHandler.callErrorHandler(\r\n            new Error(\r\n                `No media lines for type ${\r\n                    mediaType} found in remote SDP for remote track: ${\r\n                    streamId}`));\r\n\r\n        // Abort\r\n        return;\r\n    }\r\n\r\n    let ssrcLines = SDPUtil.findLines(mediaLines[0], 'a=ssrc:');\r\n\r\n    ssrcLines\r\n        = ssrcLines.filter(line => line.indexOf(`msid:${streamId}`) !== -1);\r\n    if (!ssrcLines.length) {\r\n        GlobalOnErrorHandler.callErrorHandler(\r\n            new Error(\r\n                `No SSRC lines for streamId ${\r\n                    streamId} for remote track, media type: ${mediaType}`));\r\n\r\n        // Abort\r\n        return;\r\n    }\r\n\r\n    // FIXME the length of ssrcLines[0] not verified, but it will fail\r\n    // with global error handler anyway\r\n    const ssrcStr = ssrcLines[0].substring(7).split(' ')[0];\r\n    const trackSsrc = Number(ssrcStr);\r\n    const ownerEndpointId = this.signalingLayer.getSSRCOwner(trackSsrc);\r\n\r\n    if (isNaN(trackSsrc) || trackSsrc < 0) {\r\n        GlobalOnErrorHandler.callErrorHandler(\r\n            new Error(\r\n                `Invalid SSRC: ${ssrcStr} for remote track, msid: ${\r\n                    streamId} media type: ${mediaType}`));\r\n\r\n        // Abort\r\n        return;\r\n    } else if (!ownerEndpointId) {\r\n        GlobalOnErrorHandler.callErrorHandler(\r\n            new Error(\r\n                `No SSRC owner known for: ${\r\n                    trackSsrc} for remote track, msid: ${\r\n                    streamId} media type: ${mediaType}`));\r\n\r\n        // Abort\r\n        return;\r\n    }\r\n\r\n    logger.log(`${this} associated ssrc`, ownerEndpointId, trackSsrc);\r\n\r\n    const peerMediaInfo\r\n        = this.signalingLayer.getPeerMediaInfo(ownerEndpointId, mediaType);\r\n\r\n    if (!peerMediaInfo) {\r\n        GlobalOnErrorHandler.callErrorHandler(\r\n            new Error(\r\n                `${this}: no peer media info available for ${\r\n                    ownerEndpointId}`));\r\n\r\n        return;\r\n    }\r\n\r\n    const muted = peerMediaInfo.muted;\r\n    const videoType = peerMediaInfo.videoType; // can be undefined\r\n\r\n    this._createRemoteTrack(\r\n        ownerEndpointId, stream, track, mediaType, videoType, trackSsrc, muted);\r\n};\r\n\r\n// FIXME cleanup params\r\n/* eslint-disable max-params */\r\n\r\n/**\r\n * Initializes a new JitsiRemoteTrack instance with the data provided by\r\n * the signaling layer and SDP.\r\n *\r\n * @param {string} ownerEndpointId the owner's endpoint ID (MUC nickname)\r\n * @param {MediaStream} stream the WebRTC stream instance\r\n * @param {MediaStreamTrack} track the WebRTC track instance\r\n * @param {MediaType} mediaType the track's type of the media\r\n * @param {VideoType} [videoType] the track's type of the video (if applicable)\r\n * @param {number} ssrc the track's main SSRC number\r\n * @param {boolean} muted the initial muted status\r\n */\r\nTraceablePeerConnection.prototype._createRemoteTrack = function(\r\n        ownerEndpointId,\r\n        stream,\r\n        track,\r\n        mediaType,\r\n        videoType,\r\n        ssrc,\r\n        muted) {\r\n    let remoteTracksMap = this.remoteTracks.get(ownerEndpointId);\r\n\r\n    if (!remoteTracksMap) {\r\n        remoteTracksMap = new Map();\r\n        this.remoteTracks.set(ownerEndpointId, remoteTracksMap);\r\n    }\r\n\r\n    const existingTrack = remoteTracksMap.get(mediaType);\r\n\r\n    if (existingTrack && existingTrack.getTrack() === track) {\r\n        // Ignore duplicated event which can originate either from\r\n        // 'onStreamAdded' or 'onTrackAdded'.\r\n        logger.info(\r\n            `${this} ignored duplicated remote track added event for: `\r\n                + `${ownerEndpointId}, ${mediaType}`);\r\n\r\n        return;\r\n    } else if (existingTrack) {\r\n        logger.error(\r\n            `${this} overwriting remote track for`\r\n                + `${ownerEndpointId} ${mediaType}`);\r\n    }\r\n\r\n    const remoteTrack\r\n        = new JitsiRemoteTrack(\r\n                this.rtc,\r\n                this.rtc.conference,\r\n                ownerEndpointId,\r\n                stream,\r\n                track,\r\n                mediaType,\r\n                videoType,\r\n                ssrc,\r\n                muted,\r\n                this.isP2P);\r\n\r\n    remoteTracksMap.set(mediaType, remoteTrack);\r\n\r\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_ADDED, remoteTrack);\r\n};\r\n\r\n/* eslint-enable max-params */\r\n\r\n/**\r\n * Handles remote stream removal.\r\n * @param stream the WebRTC MediaStream object which is being removed from the\r\n * PeerConnection\r\n */\r\nTraceablePeerConnection.prototype._remoteStreamRemoved = function(stream) {\r\n    if (!RTC.isUserStream(stream)) {\r\n        const id = RTC.getStreamID(stream);\r\n\r\n        logger.info(\r\n            `Ignored remote 'stream removed' event for non-user stream ${id}`);\r\n\r\n        return;\r\n    }\r\n\r\n    // Call remoteTrackRemoved for each track in the stream\r\n    const streamVideoTracks = stream.getVideoTracks();\r\n\r\n    for (const videoTrack of streamVideoTracks) {\r\n        this._remoteTrackRemoved(stream, videoTrack);\r\n    }\r\n    const streamAudioTracks = stream.getAudioTracks();\r\n\r\n    for (const audioTrack of streamAudioTracks) {\r\n        this._remoteTrackRemoved(stream, audioTrack);\r\n    }\r\n};\r\n\r\n/**\r\n * Handles remote media track removal.\r\n * @param {MediaStream} stream WebRTC MediaStream instance which is the parent\r\n * of the track.\r\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack which has been\r\n * removed from the PeerConnection.\r\n */\r\nTraceablePeerConnection.prototype._remoteTrackRemoved = function(\r\n        stream,\r\n        track) {\r\n    const streamId = RTC.getStreamID(stream);\r\n    const trackId = track && RTC.getTrackID(track);\r\n\r\n    logger.info(`${this} - remote track removed: ${streamId}, ${trackId}`);\r\n\r\n    if (!streamId) {\r\n        GlobalOnErrorHandler.callErrorHandler(\r\n            new Error(`${this} remote track removal failed - no stream ID`));\r\n\r\n        return;\r\n    }\r\n\r\n    if (!trackId) {\r\n        GlobalOnErrorHandler.callErrorHandler(\r\n            new Error(`${this} remote track removal failed - no track ID`));\r\n\r\n        return;\r\n    }\r\n\r\n    if (!this._removeRemoteTrackById(streamId, trackId)) {\r\n        // NOTE this warning is always printed when user leaves the room,\r\n        // because we remove remote tracks manually on MUC member left event,\r\n        // before the SSRCs are removed by Jicofo. In most cases it is fine to\r\n        // ignore this warning, but still it's better to keep it printed for\r\n        // debugging purposes.\r\n        //\r\n        // We could change the behaviour to emit track removed only from here,\r\n        // but the order of the events will change and consuming apps could\r\n        // behave unexpectedly (the \"user left\" event would come before \"track\r\n        // removed\" events).\r\n        logger.warn(\r\n            `${this} Removed track not found for msid: ${streamId},\r\n             track id: ${trackId}`);\r\n    }\r\n};\r\n\r\n/**\r\n * Finds remote track by it's stream and track ids.\r\n * @param {string} streamId the media stream id as defined by the WebRTC\r\n * @param {string} trackId the media track id as defined by the WebRTC\r\n * @return {JitsiRemoteTrack|undefined} the track's instance or\r\n * <tt>undefined</tt> if not found.\r\n * @private\r\n */\r\nTraceablePeerConnection.prototype._getRemoteTrackById = function(\r\n        streamId,\r\n        trackId) {\r\n    // .find will break the loop once the first match is found\r\n    for (const endpointTrackMap of this.remoteTracks.values()) {\r\n        for (const mediaTrack of endpointTrackMap.values()) {\r\n            // FIXME verify and try to use ===\r\n            /* eslint-disable eqeqeq */\r\n            if (mediaTrack.getStreamId() == streamId\r\n                && mediaTrack.getTrackId() == trackId) {\r\n                return mediaTrack;\r\n            }\r\n\r\n            /* eslint-enable eqeqeq */\r\n        }\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Removes all JitsiRemoteTracks associated with given MUC nickname\r\n * (resource part of the JID). Returns array of removed tracks.\r\n *\r\n * @param {string} owner - The resource part of the MUC JID.\r\n * @returns {JitsiRemoteTrack[]}\r\n */\r\nTraceablePeerConnection.prototype.removeRemoteTracks = function(owner) {\r\n    const removedTracks = [];\r\n    const remoteTracksMap = this.remoteTracks.get(owner);\r\n\r\n    if (remoteTracksMap) {\r\n        const removedAudioTrack = remoteTracksMap.get(MediaType.AUDIO);\r\n        const removedVideoTrack = remoteTracksMap.get(MediaType.VIDEO);\r\n\r\n        removedAudioTrack && removedTracks.push(removedAudioTrack);\r\n        removedVideoTrack && removedTracks.push(removedVideoTrack);\r\n\r\n        this.remoteTracks.delete(owner);\r\n    }\r\n\r\n    logger.debug(\r\n        `${this} removed remote tracks for ${owner} count: ${\r\n            removedTracks.length}`);\r\n\r\n    return removedTracks;\r\n};\r\n\r\n/**\r\n * Removes and disposes given <tt>JitsiRemoteTrack</tt> instance. Emits\r\n * {@link RTCEvents.REMOTE_TRACK_REMOVED}.\r\n * @param {JitsiRemoteTrack} toBeRemoved\r\n */\r\nTraceablePeerConnection.prototype._removeRemoteTrack = function(toBeRemoved) {\r\n    toBeRemoved.dispose();\r\n    const participantId = toBeRemoved.getParticipantId();\r\n    const remoteTracksMap = this.remoteTracks.get(participantId);\r\n\r\n    if (!remoteTracksMap) {\r\n        logger.error(\r\n            `removeRemoteTrack: no remote tracks map for ${participantId}`);\r\n    } else if (!remoteTracksMap.delete(toBeRemoved.getType())) {\r\n        logger.error(\r\n            `Failed to remove ${toBeRemoved} - type mapping messed up ?`);\r\n    }\r\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_REMOVED, toBeRemoved);\r\n};\r\n\r\n/**\r\n * Removes and disposes <tt>JitsiRemoteTrack</tt> identified by given stream and\r\n * track ids.\r\n *\r\n * @param {string} streamId the media stream id as defined by the WebRTC\r\n * @param {string} trackId the media track id as defined by the WebRTC\r\n * @returns {JitsiRemoteTrack|undefined} the track which has been removed or\r\n * <tt>undefined</tt> if no track matching given stream and track ids was\r\n * found.\r\n */\r\nTraceablePeerConnection.prototype._removeRemoteTrackById = function(\r\n        streamId,\r\n        trackId) {\r\n    const toBeRemoved = this._getRemoteTrackById(streamId, trackId);\r\n\r\n    if (toBeRemoved) {\r\n        this._removeRemoteTrack(toBeRemoved);\r\n    }\r\n\r\n    return toBeRemoved;\r\n};\r\n\r\n/**\r\n * @typedef {Object} SSRCGroupInfo\r\n * @property {Array<number>} ssrcs group's SSRCs\r\n * @property {string} semantics\r\n */\r\n/**\r\n * @typedef {Object} TrackSSRCInfo\r\n * @property {Array<number>} ssrcs track's SSRCs\r\n * @property {Array<SSRCGroupInfo>} groups track's SSRC groups\r\n */\r\n/**\r\n * Returns map with keys msid and <tt>TrackSSRCInfo</tt> values.\r\n * @param {Object} desc the WebRTC SDP instance.\r\n * @return {Map<string,TrackSSRCInfo>}\r\n */\r\nfunction extractSSRCMap(desc) {\r\n    /**\r\n     * Track SSRC infos mapped by stream ID (msid)\r\n     * @type {Map<string,TrackSSRCInfo>}\r\n     */\r\n    const ssrcMap = new Map();\r\n\r\n    /**\r\n     * Groups mapped by primary SSRC number\r\n     * @type {Map<number,Array<SSRCGroupInfo>>}\r\n     */\r\n    const groupsMap = new Map();\r\n\r\n    if (typeof desc !== 'object' || desc === null\r\n        || typeof desc.sdp !== 'string') {\r\n        logger.warn('An empty description was passed as an argument.');\r\n\r\n        return ssrcMap;\r\n    }\r\n\r\n    const session = transform.parse(desc.sdp);\r\n\r\n    if (!Array.isArray(session.media)) {\r\n        return ssrcMap;\r\n    }\r\n\r\n    for (const mLine of session.media) {\r\n        if (!Array.isArray(mLine.ssrcs)) {\r\n            continue; // eslint-disable-line no-continue\r\n        }\r\n\r\n        if (Array.isArray(mLine.ssrcGroups)) {\r\n            for (const group of mLine.ssrcGroups) {\r\n                if (typeof group.semantics !== 'undefined'\r\n                    && typeof group.ssrcs !== 'undefined') {\r\n                    // Parse SSRCs and store as numbers\r\n                    const groupSSRCs\r\n                        = group.ssrcs.split(' ').map(\r\n                            ssrcStr => parseInt(ssrcStr, 10));\r\n                    const primarySSRC = groupSSRCs[0];\r\n\r\n                    // Note that group.semantics is already present\r\n\r\n                    group.ssrcs = groupSSRCs;\r\n\r\n                    // eslint-disable-next-line max-depth\r\n                    if (!groupsMap.has(primarySSRC)) {\r\n                        groupsMap.set(primarySSRC, []);\r\n                    }\r\n                    groupsMap.get(primarySSRC).push(group);\r\n                }\r\n            }\r\n        }\r\n        for (const ssrc of mLine.ssrcs) {\r\n            if (ssrc.attribute !== 'msid') {\r\n                continue; // eslint-disable-line no-continue\r\n            }\r\n\r\n            const msid = ssrc.value;\r\n            let ssrcInfo = ssrcMap.get(msid);\r\n\r\n            if (!ssrcInfo) {\r\n                ssrcInfo = {\r\n                    ssrcs: [],\r\n                    groups: [],\r\n                    msid\r\n                };\r\n                ssrcMap.set(msid, ssrcInfo);\r\n            }\r\n\r\n            const ssrcNumber = ssrc.id;\r\n\r\n            ssrcInfo.ssrcs.push(ssrcNumber);\r\n\r\n            if (groupsMap.has(ssrcNumber)) {\r\n                const ssrcGroups = groupsMap.get(ssrcNumber);\r\n\r\n                for (const group of ssrcGroups) {\r\n                    ssrcInfo.groups.push(group);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return ssrcMap;\r\n}\r\n\r\n/**\r\n * Takes a SessionDescription object and returns a \"normalized\" version.\r\n * Currently it takes care of ordering the a=ssrc lines and denoting receive\r\n * only SSRCs.\r\n */\r\nconst normalizePlanB = function(desc) {\r\n    if (typeof desc !== 'object' || desc === null\r\n        || typeof desc.sdp !== 'string') {\r\n        logger.warn('An empty description was passed as an argument.');\r\n\r\n        return desc;\r\n    }\r\n\r\n    // eslint-disable-next-line no-shadow\r\n    const transform = require('sdp-transform');\r\n    const session = transform.parse(desc.sdp);\r\n\r\n    if (typeof session !== 'undefined'\r\n            && typeof session.media !== 'undefined'\r\n            && Array.isArray(session.media)) {\r\n        session.media.forEach(mLine => {\r\n\r\n            // Chrome appears to be picky about the order in which a=ssrc lines\r\n            // are listed in an m-line when rtx is enabled (and thus there are\r\n            // a=ssrc-group lines with FID semantics). Specifically if we have\r\n            // \"a=ssrc-group:FID S1 S2\" and the \"a=ssrc:S2\" lines appear before\r\n            // the \"a=ssrc:S1\" lines, SRD fails.\r\n            // So, put SSRC which appear as the first SSRC in an FID ssrc-group\r\n            // first.\r\n            const firstSsrcs = [];\r\n            const newSsrcLines = [];\r\n\r\n            if (typeof mLine.ssrcGroups !== 'undefined'\r\n                && Array.isArray(mLine.ssrcGroups)) {\r\n                mLine.ssrcGroups.forEach(group => {\r\n                    if (typeof group.semantics !== 'undefined'\r\n                        && group.semantics === 'FID') {\r\n                        if (typeof group.ssrcs !== 'undefined') {\r\n                            firstSsrcs.push(Number(group.ssrcs.split(' ')[0]));\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (Array.isArray(mLine.ssrcs)) {\r\n                let i;\r\n\r\n                for (i = 0; i < mLine.ssrcs.length; i++) {\r\n                    if (typeof mLine.ssrcs[i] === 'object'\r\n                        && typeof mLine.ssrcs[i].id !== 'undefined'\r\n                        && firstSsrcs.indexOf(mLine.ssrcs[i].id) >= 0) {\r\n                        newSsrcLines.push(mLine.ssrcs[i]);\r\n                        delete mLine.ssrcs[i];\r\n                    }\r\n                }\r\n\r\n                for (i = 0; i < mLine.ssrcs.length; i++) {\r\n                    if (typeof mLine.ssrcs[i] !== 'undefined') {\r\n                        newSsrcLines.push(mLine.ssrcs[i]);\r\n                    }\r\n                }\r\n\r\n                mLine.ssrcs = replaceDefaultUnifiedPlanMsid(newSsrcLines);\r\n            }\r\n        });\r\n    }\r\n\r\n    const resStr = transform.write(session);\r\n\r\n\r\n    return new RTCSessionDescription({\r\n        type: desc.type,\r\n        sdp: resStr\r\n    });\r\n};\r\n\r\n/**\r\n * Unified plan differentiates a remote track not associated with a stream using\r\n * the msid \"-\", which can incorrectly trigger an onaddstream event in plan-b.\r\n * For jitsi, these tracks are actually receive-only ssrcs. To prevent\r\n * onaddstream from firing, remove the ssrcs with msid \"-\" except the cname\r\n * line. Normally the ssrcs are not used by the client, as the bridge controls\r\n * media flow, but keep one reference to the ssrc for the p2p case.\r\n *\r\n * @param {Array<Object>} ssrcLines - The ssrc lines from a remote description.\r\n * @private\r\n * @returns {Array<Object>} ssrcLines with removed lines referencing msid \"-\".\r\n */\r\nfunction replaceDefaultUnifiedPlanMsid(ssrcLines = []) {\r\n    if (!browser.isChrome() || !browser.isVersionGreaterThan(70)) {\r\n        return ssrcLines;\r\n    }\r\n\r\n    let filteredLines = [ ...ssrcLines ];\r\n\r\n    const problematicSsrcIds = ssrcLines.filter(ssrcLine =>\r\n        ssrcLine.attribute === 'mslabel' && ssrcLine.value === '-')\r\n        .map(ssrcLine => ssrcLine.id);\r\n\r\n    problematicSsrcIds.forEach(ssrcId => {\r\n        // Find the cname which is to be modified and left in.\r\n        const cnameLine = filteredLines.find(line =>\r\n            line.id === ssrcId && line.attribute === 'cname');\r\n\r\n        cnameLine.value = `recvonly-${ssrcId}`;\r\n\r\n        // Remove all of lines for the ssrc.\r\n        filteredLines\r\n            = filteredLines.filter(line => line.id !== ssrcId);\r\n\r\n        // But re-add the cname line so there is a reference kept to the ssrc\r\n        // in the SDP.\r\n        filteredLines.push(cnameLine);\r\n    });\r\n\r\n    return filteredLines;\r\n}\r\n\r\n/**\r\n * Makes sure that both audio and video directions are configured as 'sendrecv'.\r\n * @param {Object} localDescription the SDP object as defined by WebRTC.\r\n * @param {object} options <tt>TracablePeerConnection</tt> config options.\r\n */\r\nconst enforceSendRecv = function(localDescription, options) {\r\n    if (!localDescription) {\r\n        throw new Error('No local description passed in.');\r\n    }\r\n\r\n    const transformer = new SdpTransformWrap(localDescription.sdp);\r\n    const audioMedia = transformer.selectMedia('audio');\r\n    let changed = false;\r\n\r\n    if (audioMedia && audioMedia.direction !== 'sendrecv') {\r\n        if (options.startSilent) {\r\n            audioMedia.direction = 'inactive';\r\n        } else {\r\n            audioMedia.direction = 'sendrecv';\r\n        }\r\n\r\n        changed = true;\r\n    }\r\n\r\n    const videoMedia = transformer.selectMedia('video');\r\n\r\n    if (videoMedia && videoMedia.direction !== 'sendrecv') {\r\n        videoMedia.direction = 'sendrecv';\r\n        changed = true;\r\n    }\r\n\r\n    if (changed) {\r\n        return new RTCSessionDescription({\r\n            type: localDescription.type,\r\n            sdp: transformer.toRawSDP()\r\n        });\r\n    }\r\n\r\n    return localDescription;\r\n};\r\n\r\n/**\r\n *\r\n * @param {JitsiLocalTrack} localTrack\r\n */\r\nTraceablePeerConnection.prototype.getLocalSSRC = function(localTrack) {\r\n    const ssrcInfo = this._getSSRC(localTrack.rtcId);\r\n\r\n    return ssrcInfo && ssrcInfo.ssrcs[0];\r\n};\r\n\r\n/**\r\n * When doing unified plan simulcast, we'll have a set of ssrcs with the\r\n * same msid but no ssrc-group, since unified plan signals the simulcast\r\n * group via the a=simulcast line.  Unfortunately, Jicofo will complain\r\n * if it sees ssrcs with matching msids but no ssrc-group, so we'll inject\r\n * an ssrc-group line to make Jicofo happy.\r\n * NOTE: unlike plan B simulcast, the ssrcs in this inject ssrc-group will\r\n * NOT necessarily be in order of quality (low to high) because:\r\n * a) when translating between unified plan and plan b the order of the ssrcs\r\n * is not preserved and\r\n * b) it isn't guaranteed that firefox will give them to us in order to begin\r\n * with\r\n * @param desc A session description object (with 'type' and 'sdp' fields)\r\n * @return A session description object with its sdp field modified to\r\n * contain an inject ssrc-group for simulcast\r\n */\r\nTraceablePeerConnection.prototype._injectSsrcGroupForUnifiedSimulcast\r\n    = function(desc) {\r\n        const sdp = transform.parse(desc.sdp);\r\n        const video = sdp.media.find(mline => mline.type === 'video');\r\n\r\n        if (video.simulcast || video.simulcast_03) {\r\n            const ssrcs = [];\r\n\r\n            video.ssrcs.forEach(ssrc => {\r\n                if (ssrc.attribute === 'msid') {\r\n                    ssrcs.push(ssrc.id);\r\n                }\r\n            });\r\n            video.ssrcGroups = video.ssrcGroups || [];\r\n            if (video.ssrcGroups.find(group => group.semantics === 'SIM')) {\r\n                // Group already exists, no need to do anything\r\n                return desc;\r\n            }\r\n            video.ssrcGroups.push({\r\n                semantics: 'SIM',\r\n                ssrcs: ssrcs.join(' ')\r\n            });\r\n        }\r\n\r\n        return new RTCSessionDescription({\r\n            type: desc.type,\r\n            sdp: transform.write(sdp)\r\n        });\r\n    };\r\n\r\n/* eslint-disable-next-line vars-on-top */\r\nconst getters = {\r\n    signalingState() {\r\n        return this.peerconnection.signalingState;\r\n    },\r\n    iceConnectionState() {\r\n        return this.peerconnection.iceConnectionState;\r\n    },\r\n    localDescription() {\r\n        let desc = this.peerconnection.localDescription;\r\n\r\n        if (!desc) {\r\n            logger.debug('getLocalDescription no localDescription found');\r\n\r\n            return {};\r\n        }\r\n\r\n        this.trace('getLocalDescription::preTransform', dumpSDP(desc));\r\n\r\n        // if we're running on FF, transform to Plan B first.\r\n        if (browser.usesUnifiedPlan()) {\r\n            desc = this.interop.toPlanB(desc);\r\n            this.trace('getLocalDescription::postTransform (Plan B)',\r\n                dumpSDP(desc));\r\n\r\n            desc = this._injectSsrcGroupForUnifiedSimulcast(desc);\r\n            this.trace('getLocalDescription::postTransform (inject ssrc group)',\r\n                dumpSDP(desc));\r\n        } else {\r\n            if (browser.doesVideoMuteByStreamRemove()) {\r\n                desc = this.localSdpMunger.maybeAddMutedLocalVideoTracksToSDP(desc);\r\n                logger.debug(\r\n                    'getLocalDescription::postTransform (munge local SDP)', desc);\r\n            }\r\n\r\n            // What comes out of this getter will be signalled over Jingle to\r\n            // the other peer, so we need to make sure the media direction is\r\n            // 'sendrecv' because we won't change the direction later and don't want\r\n            // the other peer to think we can't send or receive.\r\n            //\r\n            // Note that the description we set in chrome does have the accurate\r\n            // direction (e.g. 'recvonly'), since that is technically what is\r\n            // happening (check setLocalDescription impl).\r\n            desc = enforceSendRecv(desc, this.options);\r\n        }\r\n\r\n        // See the method's doc for more info about this transformation.\r\n        desc = this.localSdpMunger.transformStreamIdentifiers(desc);\r\n\r\n        return desc;\r\n    },\r\n    remoteDescription() {\r\n        let desc = this.peerconnection.remoteDescription;\r\n\r\n        if (!desc) {\r\n            logger.debug('getRemoteDescription no remoteDescription found');\r\n\r\n            return {};\r\n        }\r\n        this.trace('getRemoteDescription::preTransform', dumpSDP(desc));\r\n\r\n        // if we're running on FF, transform to Plan B first.\r\n        if (browser.usesUnifiedPlan()) {\r\n            desc = this.interop.toPlanB(desc);\r\n            this.trace(\r\n                'getRemoteDescription::postTransform (Plan B)', dumpSDP(desc));\r\n        }\r\n\r\n        return desc;\r\n    }\r\n};\r\n\r\nObject.keys(getters).forEach(prop => {\r\n    Object.defineProperty(\r\n        TraceablePeerConnection.prototype,\r\n        prop, {\r\n            get: getters[prop]\r\n        }\r\n    );\r\n});\r\n\r\nTraceablePeerConnection.prototype._getSSRC = function(rtcId) {\r\n    return this.localSSRCs.get(rtcId);\r\n};\r\n\r\n/**\r\n * Add {@link JitsiLocalTrack} to this TPC.\r\n * @param {JitsiLocalTrack} track\r\n */\r\nTraceablePeerConnection.prototype.addTrack = function(track, isInitiator = false) {\r\n    const rtcId = track.rtcId;\r\n\r\n    logger.info(`add ${track} to: ${this}`);\r\n\r\n    if (this.localTracks.has(rtcId)) {\r\n        logger.error(`${track} is already in ${this}`);\r\n\r\n        return;\r\n    }\r\n\r\n    this.localTracks.set(rtcId, track);\r\n    if (browser.usesUnifiedPlan() && isInitiator) {\r\n        return this.tpcUtils.addTrack(track, isInitiator);\r\n    }\r\n\r\n    const webrtcStream = track.getOriginalStream();\r\n\r\n    if (webrtcStream) {\r\n        this._addStream(webrtcStream);\r\n\r\n    // It's not ok for a track to not have a WebRTC stream if:\r\n    } else if (!browser.doesVideoMuteByStreamRemove()\r\n                || track.isAudioTrack()\r\n                || (track.isVideoTrack() && !track.isMuted())) {\r\n        logger.error(`${this} no WebRTC stream for: ${track}`);\r\n    }\r\n\r\n    // Muted video tracks do not have WebRTC stream\r\n    if (browser.usesPlanB() && browser.doesVideoMuteByStreamRemove()\r\n            && track.isVideoTrack() && track.isMuted()) {\r\n        const ssrcInfo = this.generateNewStreamSSRCInfo(track);\r\n\r\n        this.sdpConsistency.setPrimarySsrc(ssrcInfo.ssrcs[0]);\r\n        const simGroup\r\n            = ssrcInfo.groups.find(groupInfo => groupInfo.semantics === 'SIM');\r\n\r\n        if (simGroup) {\r\n            this.simulcast.setSsrcCache(simGroup.ssrcs);\r\n        }\r\n        const fidGroups\r\n            = ssrcInfo.groups.filter(\r\n                groupInfo => groupInfo.semantics === 'FID');\r\n\r\n        if (fidGroups) {\r\n            const rtxSsrcMapping = new Map();\r\n\r\n            fidGroups.forEach(fidGroup => {\r\n                const primarySsrc = fidGroup.ssrcs[0];\r\n                const rtxSsrc = fidGroup.ssrcs[1];\r\n\r\n                rtxSsrcMapping.set(primarySsrc, rtxSsrc);\r\n            });\r\n            this.rtxModifier.setSsrcCache(rtxSsrcMapping);\r\n        }\r\n    }\r\n    if (browser.usesUnifiedPlan() && !browser.usesSdpMungingForSimulcast()) {\r\n        this.tpcUtils.setEncodings(track);\r\n    }\r\n};\r\n\r\n/**\r\n * Adds local track as part of the unmute operation.\r\n * @param {JitsiLocalTrack} track the track to be added as part of the unmute\r\n * operation\r\n * @return {Promise<boolean>} Promise that resolves to true if the underlying PeerConnection's\r\n * state has changed and renegotiation is required, false if no renegotiation is needed or\r\n * Promise is rejected when something goes wrong.\r\n */\r\nTraceablePeerConnection.prototype.addTrackUnmute = function(track) {\r\n    if (browser.usesUnifiedPlan()) {\r\n        return this.tpcUtils.addTrackUnmute(track);\r\n    }\r\n    if (!this._assertTrackBelongs('addTrackUnmute', track)) {\r\n        // Abort\r\n        return Promise.reject('Track not found on the peerconnection');\r\n    }\r\n\r\n    logger.info(`Adding ${track} as unmute to ${this}`);\r\n    const webRtcStream = track.getOriginalStream();\r\n\r\n    if (!webRtcStream) {\r\n        logger.error(\r\n            `Unable to add ${track} as unmute to ${this} - no WebRTC stream`);\r\n\r\n        return Promise.reject('Stream not found');\r\n    }\r\n    this._addStream(webRtcStream);\r\n\r\n    return Promise.resolve(true);\r\n};\r\n\r\n/**\r\n * Adds WebRTC media stream to the underlying PeerConnection\r\n * @param {MediaStream} mediaStream\r\n * @private\r\n */\r\nTraceablePeerConnection.prototype._addStream = function(mediaStream) {\r\n    this.peerconnection.addStream(mediaStream);\r\n    this._addedStreams.push(mediaStream);\r\n};\r\n\r\n/**\r\n * Removes WebRTC media stream from the underlying PeerConection\r\n * @param {MediaStream} mediaStream\r\n */\r\nTraceablePeerConnection.prototype._removeStream = function(mediaStream) {\r\n    if (browser.supportsRtpSender()) {\r\n        this._handleSenderRemoveStream(mediaStream);\r\n    } else {\r\n        this.peerconnection.removeStream(mediaStream);\r\n    }\r\n    this._addedStreams\r\n        = this._addedStreams.filter(stream => stream !== mediaStream);\r\n};\r\n\r\n/**\r\n * This method when called will check if given <tt>localTrack</tt> belongs to\r\n * this TPC (that it has been previously added using {@link addTrack}). If the\r\n * track does not belong an error message will be logged.\r\n * @param {string} methodName the method name that will be logged in an error\r\n * message\r\n * @param {JitsiLocalTrack} localTrack\r\n * @return {boolean} <tt>true</tt> if given local track belongs to this TPC or\r\n * <tt>false</tt> otherwise.\r\n * @private\r\n */\r\nTraceablePeerConnection.prototype._assertTrackBelongs = function(\r\n        methodName,\r\n        localTrack) {\r\n    const doesBelong = this.localTracks.has(localTrack.rtcId);\r\n\r\n    if (!doesBelong) {\r\n        logger.error(\r\n            `${methodName}: ${localTrack} does not belong to ${this}`);\r\n    }\r\n\r\n    return doesBelong;\r\n};\r\n\r\n/**\r\n * Tells if the given WebRTC <tt>MediaStream</tt> has been added to\r\n * the underlying WebRTC PeerConnection.\r\n * @param {MediaStream} mediaStream\r\n * @returns {boolean}\r\n */\r\nTraceablePeerConnection.prototype.isMediaStreamInPc = function(mediaStream) {\r\n    return this._addedStreams.indexOf(mediaStream) > -1;\r\n};\r\n\r\n/**\r\n * Remove local track from this TPC.\r\n * @param {JitsiLocalTrack} localTrack the track to be removed from this TPC.\r\n *\r\n * FIXME It should probably remove a boolean just like {@link removeTrackMute}\r\n *       The same applies to addTrack.\r\n */\r\nTraceablePeerConnection.prototype.removeTrack = function(localTrack) {\r\n    if (browser.usesUnifiedPlan()) {\r\n        return this.tpcUtils.removeTrack(localTrack);\r\n    }\r\n    const webRtcStream = localTrack.getOriginalStream();\r\n\r\n    this.trace(\r\n        'removeStream',\r\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : undefined);\r\n\r\n    if (!this._assertTrackBelongs('removeStream', localTrack)) {\r\n        // Abort - nothing to be done here\r\n        return;\r\n    }\r\n    this.localTracks.delete(localTrack.rtcId);\r\n    this.localSSRCs.delete(localTrack.rtcId);\r\n\r\n    if (webRtcStream) {\r\n        if (browser.supportsRtpSender()) {\r\n            this._handleSenderRemoveStream(webRtcStream);\r\n        } else {\r\n            this.peerconnection.removeStream(webRtcStream);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the sender corresponding to the given media type.\r\n * @param {MEDIA_TYPE} mediaType - The media type 'audio' or 'video' to be used for the search.\r\n * @returns {RTPSender|undefined} - The found sender or undefined if no sender\r\n * was found.\r\n */\r\nTraceablePeerConnection.prototype.findSenderByKind = function(mediaType) {\r\n    return this.peerconnection.getSenders().find(s => s.track && s.track.kind === mediaType);\r\n};\r\n\r\n/**\r\n * Returns the sender corresponding to the given MediaStream.\r\n *\r\n * @param {MediaStream} stream - The media stream used for the search.\r\n * @returns {RTPSender|undefined} - The found sender or undefined if no sender\r\n * was found.\r\n */\r\nTraceablePeerConnection.prototype.findSenderByStream = function(stream) {\r\n    const track = stream.getTracks()[0];\r\n\r\n    if (!track) {\r\n        logger.error('Cannot find sender: no tracks.');\r\n\r\n        return;\r\n    }\r\n\r\n    // Find the right sender (for audio or video)\r\n    return this.peerconnection.getSenders().find(s => s.track === track);\r\n};\r\n\r\n/**\r\n * Returns the receiver corresponding to the given MediaStreamTrack.\r\n *\r\n * @param {MediaSreamTrack} track - The media stream track used for the search.\r\n * @returns {RTCRtpReceiver|undefined} - The found receiver or undefined if no receiver\r\n * was found.\r\n */\r\nTraceablePeerConnection.prototype.findReceiverForTrack = function(track) {\r\n    return this.peerconnection.getReceivers().find(r => r.track === track);\r\n};\r\n\r\n/**\r\n * Returns the sender corresponding to the given MediaStreamTrack.\r\n *\r\n * @param {MediaSreamTrack} track - The media stream track used for the search.\r\n * @returns {RTCRtpSender|undefined} - The found sender or undefined if no sender\r\n * was found.\r\n */\r\nTraceablePeerConnection.prototype.findSenderForTrack = function(track) {\r\n    return this.peerconnection.getSenders().find(s => s.track === track);\r\n};\r\n\r\n/**\r\n * Replaces <tt>oldTrack</tt> with <tt>newTrack</tt> from the peer connection.\r\n * Either <tt>oldTrack</tt> or <tt>newTrack</tt> can be null; replacing a valid\r\n * <tt>oldTrack</tt> with a null <tt>newTrack</tt> effectively just removes\r\n * <tt>oldTrack</tt>\r\n *\r\n * @param {JitsiLocalTrack|null} oldTrack - The current track in use to be\r\n * replaced\r\n * @param {JitsiLocalTrack|null} newTrack - The new track to use\r\n * @returns {Promise<boolean>} - If the promise resolves with true,\r\n * renegotiation will be needed. Otherwise no renegotiation is needed.\r\n */\r\nTraceablePeerConnection.prototype.replaceTrack = function(oldTrack, newTrack) {\r\n    if (browser.usesUnifiedPlan()) {\r\n        return this.tpcUtils.replaceTrack(oldTrack, newTrack);\r\n    }\r\n    if (oldTrack) {\r\n        this.removeTrack(oldTrack);\r\n    }\r\n    if (newTrack) {\r\n        this.addTrack(newTrack);\r\n    }\r\n\r\n    return Promise.resolve(true);\r\n};\r\n\r\n/**\r\n * Removes local track as part of the mute operation.\r\n * @param {JitsiLocalTrack} localTrack the local track to be remove as part of\r\n * the mute operation.\r\n * @return {Promise<boolean>} Promise that resolves to true if the underlying PeerConnection's\r\n * state has changed and renegotiation is required, false if no renegotiation is needed or\r\n * Promise is rejected when something goes wrong.\r\n */\r\nTraceablePeerConnection.prototype.removeTrackMute = function(localTrack) {\r\n    if (browser.usesUnifiedPlan()) {\r\n        return this.tpcUtils.removeTrackMute(localTrack);\r\n    }\r\n    const webRtcStream = localTrack.getOriginalStream();\r\n\r\n    this.trace(\r\n        'removeStreamMute',\r\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : null);\r\n\r\n    if (!this._assertTrackBelongs('removeStreamMute', localTrack)) {\r\n        // Abort - nothing to be done here\r\n        return Promise.reject('Track not found in the peerconnection');\r\n    }\r\n    if (webRtcStream) {\r\n        logger.info(\r\n            `Removing ${localTrack} as mute from ${this}`);\r\n        this._removeStream(webRtcStream);\r\n\r\n        return Promise.resolve(true);\r\n    }\r\n\r\n    logger.error(`removeStreamMute - no WebRTC stream for ${localTrack}`);\r\n\r\n    return Promise.reject('Stream not found');\r\n};\r\n\r\n/**\r\n * Remove stream handling for browsers supporting RTPSender\r\n * @param stream: webrtc media stream\r\n */\r\nTraceablePeerConnection.prototype._handleSenderRemoveStream = function(\r\n        stream) {\r\n    if (!stream) {\r\n        // There is nothing to be changed\r\n        return;\r\n    }\r\n\r\n    const sender = this.findSenderByStream(stream);\r\n\r\n    if (sender) {\r\n        this.peerconnection.removeTrack(sender);\r\n    } else {\r\n        logger.log('Cannot remove tracks: no RTPSender.');\r\n    }\r\n};\r\n\r\nTraceablePeerConnection.prototype.createDataChannel = function(label, opts) {\r\n    this.trace('createDataChannel', label, opts);\r\n\r\n    return this.peerconnection.createDataChannel(label, opts);\r\n};\r\n\r\n/**\r\n * Ensures that the simulcast ssrc-group appears after any other ssrc-groups\r\n * in the SDP so that simulcast is properly activated.\r\n *\r\n * @param {Object} localSdp the WebRTC session description instance for\r\n * the local description.\r\n * @private\r\n */\r\nTraceablePeerConnection.prototype._ensureSimulcastGroupIsLast = function(\r\n        localSdp) {\r\n    let sdpStr = localSdp.sdp;\r\n\r\n    const videoStartIndex = sdpStr.indexOf('m=video');\r\n    const simStartIndex = sdpStr.indexOf('a=ssrc-group:SIM', videoStartIndex);\r\n    let otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\r\n\r\n    if (simStartIndex === -1\r\n        || otherStartIndex === -1\r\n        || otherStartIndex === simStartIndex) {\r\n        return localSdp;\r\n    }\r\n\r\n    const simEndIndex = sdpStr.indexOf('\\r\\n', simStartIndex);\r\n    const simStr = sdpStr.substring(simStartIndex, simEndIndex + 2);\r\n\r\n    sdpStr = sdpStr.replace(simStr, '');\r\n    otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\r\n    const otherEndIndex = sdpStr.indexOf('\\r\\n', otherStartIndex);\r\n    const sdpHead = sdpStr.slice(0, otherEndIndex);\r\n    const simStrTrimmed = simStr.trim();\r\n    const sdpTail = sdpStr.slice(otherEndIndex);\r\n\r\n    sdpStr = `${sdpHead}\\r\\n${simStrTrimmed}${sdpTail}`;\r\n\r\n    return new RTCSessionDescription({\r\n        type: localSdp.type,\r\n        sdp: sdpStr\r\n    });\r\n};\r\n\r\n/**\r\n * Will adjust audio and video media direction in the given SDP object to\r\n * reflect the current status of the {@link audioTransferActive} and\r\n * {@link videoTransferActive} flags.\r\n * @param {Object} localDescription the WebRTC session description instance for\r\n * the local description.\r\n * @private\r\n */\r\nTraceablePeerConnection.prototype._adjustLocalMediaDirection = function(\r\n        localDescription) {\r\n    const transformer = new SdpTransformWrap(localDescription.sdp);\r\n    let modifiedDirection = false;\r\n    const audioMedia = transformer.selectMedia('audio');\r\n\r\n    if (audioMedia) {\r\n        const desiredAudioDirection\r\n            = this._getDesiredMediaDirection(MediaType.AUDIO);\r\n\r\n        if (audioMedia.direction !== desiredAudioDirection) {\r\n            audioMedia.direction = desiredAudioDirection;\r\n            logger.info(\r\n                `Adjusted local audio direction to ${desiredAudioDirection}`);\r\n            modifiedDirection = true;\r\n        }\r\n    } else {\r\n        logger.warn('No \"audio\" media found int the local description');\r\n    }\r\n\r\n    const videoMedia = transformer.selectMedia('video');\r\n\r\n    if (videoMedia) {\r\n        const desiredVideoDirection\r\n            = this._getDesiredMediaDirection(MediaType.VIDEO);\r\n\r\n        if (videoMedia.direction !== desiredVideoDirection) {\r\n            videoMedia.direction = desiredVideoDirection;\r\n            logger.info(\r\n                `Adjusted local video direction to ${desiredVideoDirection}`);\r\n            modifiedDirection = true;\r\n        }\r\n    } else {\r\n        logger.warn('No \"video\" media found in the local description');\r\n    }\r\n\r\n    if (modifiedDirection) {\r\n        return new RTCSessionDescription({\r\n            type: localDescription.type,\r\n            sdp: transformer.toRawSDP()\r\n        });\r\n    }\r\n\r\n    return localDescription;\r\n};\r\n\r\nTraceablePeerConnection.prototype.setLocalDescription = function(description) {\r\n    let localSdp = description;\r\n\r\n    this.trace('setLocalDescription::preTransform', dumpSDP(localSdp));\r\n\r\n    if (this.options.disableH264 || this.options.preferH264) {\r\n        const parsedSdp = transform.parse(localSdp.sdp);\r\n        const videoMLine = parsedSdp.media.find(m => m.type === 'video');\r\n\r\n        if (this.options.disableH264) {\r\n            SDPUtil.stripVideoCodec(videoMLine, 'h264');\r\n        } else {\r\n            SDPUtil.preferVideoCodec(videoMLine, 'h264');\r\n        }\r\n\r\n        localSdp = new RTCSessionDescription({\r\n            type: localSdp.type,\r\n            sdp: transform.write(parsedSdp)\r\n        });\r\n\r\n        this.trace('setLocalDescription::postTransform (H264)',\r\n            dumpSDP(localSdp));\r\n    }\r\n\r\n    if (browser.usesPlanB()) {\r\n        localSdp = this._adjustLocalMediaDirection(localSdp);\r\n        localSdp = this._ensureSimulcastGroupIsLast(localSdp);\r\n    } else {\r\n\r\n        // if we're using unified plan, transform to it first.\r\n        localSdp = this.interop.toUnifiedPlan(localSdp);\r\n        this.trace(\r\n            'setLocalDescription::postTransform (Unified Plan)',\r\n            dumpSDP(localSdp));\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        this.peerconnection.setLocalDescription(localSdp)\r\n            .then(() => {\r\n                this.trace('setLocalDescriptionOnSuccess');\r\n                const localUfrag = SDPUtil.getUfrag(localSdp.sdp);\r\n\r\n                if (localUfrag !== this.localUfrag) {\r\n                    this.localUfrag = localUfrag;\r\n                    this.eventEmitter.emit(\r\n                        RTCEvents.LOCAL_UFRAG_CHANGED, this, localUfrag);\r\n                }\r\n                resolve();\r\n            }, err => {\r\n                this.trace('setLocalDescriptionOnFailure', err);\r\n                this.eventEmitter.emit(\r\n                    RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\r\n                    err, this);\r\n                reject(err);\r\n            });\r\n    });\r\n};\r\n\r\n/**\r\n * Enables/disables audio media transmission on this peer connection. When\r\n * disabled the SDP audio media direction in the local SDP will be adjusted to\r\n * 'inactive' which means that no data will be sent nor accepted, but\r\n * the connection should be kept alive.\r\n * @param {boolean} active <tt>true</tt> to enable audio media transmission or\r\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\r\n * no effect.\r\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\r\n * needs to be executed in order for the changes to take effect or\r\n * <tt>false</tt> if the given value was the same as the previous one.\r\n * @public\r\n */\r\nTraceablePeerConnection.prototype.setAudioTransferActive = function(active) {\r\n    logger.debug(`${this} audio transfer active: ${active}`);\r\n    if (browser.usesUnifiedPlan()) {\r\n        return this.tpcUtils.setAudioTransferActive(active);\r\n    }\r\n    const changed = this.audioTransferActive !== active;\r\n\r\n    this.audioTransferActive = active;\r\n\r\n    return changed;\r\n};\r\n\r\n/**\r\n * Sets the max bitrate on the RTCRtpSender so that the\r\n * bitrate of the enocder doesn't exceed the configured value.\r\n * This is needed for the desktop share until spec-complaint\r\n * simulcast is implemented.\r\n * @param {JitsiLocalTrack} localTrack - the local track whose\r\n * max bitrate is to be configured.\r\n */\r\nTraceablePeerConnection.prototype.setMaxBitRate = function(localTrack) {\r\n    const mediaType = localTrack.type;\r\n\r\n    // No need to set max bitrates on the streams in the following cases.\r\n    // 1. When an audio track has been replaced.\r\n    // 2. When a 'camera' track is replaced in plan-b mode, since its a new sender.\r\n    // 3. When the config.js option for capping the SS bitrate is not enabled.\r\n    if ((mediaType === MediaType.AUDIO)\r\n        || (browser.usesPlanB() && !this.options.capScreenshareBitrate)\r\n        || (browser.usesPlanB() && localTrack.videoType === 'camera')) {\r\n        return;\r\n    }\r\n    if (!this.peerconnection.getSenders) {\r\n        logger.debug('Browser doesn\\'t support RTCRtpSender');\r\n\r\n        return;\r\n    }\r\n    const videoType = localTrack.videoType;\r\n    const trackId = localTrack.track.id;\r\n\r\n    this.peerconnection.getSenders()\r\n        .filter(s => s.track && s.track.id === trackId)\r\n        .forEach(sender => {\r\n            try {\r\n                const parameters = sender.getParameters();\r\n\r\n                if (!parameters.encodings || !parameters.encodings.length) {\r\n                    return;\r\n                }\r\n                logger.debug('Setting max bitrate on video stream');\r\n                for (const encoding in parameters.encodings) {\r\n                    if (parameters.encodings.hasOwnProperty(encoding)) {\r\n                        parameters.encodings[encoding].maxBitrate\r\n                            = videoType === 'desktop' && browser.usesPlanB()\r\n                                ? DESKSTOP_SHARE_RATE\r\n\r\n                                // In unified plan, simulcast for SS is on by default.\r\n                                // When simulcast is disabled through a config.js option,\r\n                                // we cap the bitrate on desktop and camera tracks to 2500 Kbps.\r\n                                : this.isSimulcastOn()\r\n                                    ? this.tpcUtils.simulcastEncodings[encoding].maxBitrate\r\n                                    : MAX_BITRATE;\r\n                    }\r\n                }\r\n                sender.setParameters(parameters);\r\n            } catch (err) {\r\n                logger.error('Browser does not support getParameters/setParamters '\r\n                    + 'or setting max bitrate on the encodings: ', err);\r\n            }\r\n        });\r\n};\r\n\r\nTraceablePeerConnection.prototype.setRemoteDescription = function(description) {\r\n    this.trace('setRemoteDescription::preTransform', dumpSDP(description));\r\n\r\n    if (browser.usesPlanB()) {\r\n        // TODO the focus should squeze or explode the remote simulcast\r\n        // eslint-disable-next-line no-param-reassign\r\n        description = this.simulcast.mungeRemoteDescription(description);\r\n        this.trace(\r\n            'setRemoteDescription::postTransform (simulcast)',\r\n            dumpSDP(description));\r\n\r\n        if (this.options.preferH264) {\r\n            const parsedSdp = transform.parse(description.sdp);\r\n            const videoMLine = parsedSdp.media.find(m => m.type === 'video');\r\n\r\n            SDPUtil.preferVideoCodec(videoMLine, 'h264');\r\n\r\n            // eslint-disable-next-line no-param-reassign\r\n            description = new RTCSessionDescription({\r\n                type: description.type,\r\n                sdp: transform.write(parsedSdp)\r\n            });\r\n        }\r\n\r\n        // eslint-disable-next-line no-param-reassign\r\n        description = normalizePlanB(description);\r\n    } else {\r\n        const currentDescription = this.peerconnection.remoteDescription;\r\n\r\n        // eslint-disable-next-line no-param-reassign\r\n        description = this.interop.toUnifiedPlan(description, currentDescription);\r\n        this.trace(\r\n            'setRemoteDescription::postTransform (Unified)',\r\n            dumpSDP(description));\r\n\r\n        if (this.isSimulcastOn()) {\r\n            // eslint-disable-next-line no-param-reassign\r\n            description = this.simulcast.mungeRemoteDescription(description);\r\n\r\n            // eslint-disable-next-line no-param-reassign\r\n            description = this.tpcUtils._insertUnifiedPlanSimulcastReceive(description);\r\n            this.trace(\r\n                'setRemoteDescription::postTransform (sim receive)',\r\n                dumpSDP(description));\r\n\r\n            // eslint-disable-next-line no-param-reassign\r\n            description = this.tpcUtils._ensureCorrectOrderOfSsrcs(description);\r\n        }\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        this.peerconnection.setRemoteDescription(description)\r\n            .then(() => {\r\n                this.trace('setRemoteDescriptionOnSuccess');\r\n                const remoteUfrag = SDPUtil.getUfrag(description.sdp);\r\n\r\n                if (remoteUfrag !== this.remoteUfrag) {\r\n                    this.remoteUfrag = remoteUfrag;\r\n                    this.eventEmitter.emit(\r\n                        RTCEvents.REMOTE_UFRAG_CHANGED, this, remoteUfrag);\r\n                }\r\n                resolve();\r\n            }, err => {\r\n                this.trace('setRemoteDescriptionOnFailure', err);\r\n                this.eventEmitter.emit(\r\n                    RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\r\n                    err,\r\n                    this);\r\n                reject(err);\r\n            });\r\n    });\r\n};\r\n\r\n/**\r\n * Enables/disables video media transmission on this peer connection. When\r\n * disabled the SDP video media direction in the local SDP will be adjusted to\r\n * 'inactive' which means that no data will be sent nor accepted, but\r\n * the connection should be kept alive.\r\n * @param {boolean} active <tt>true</tt> to enable video media transmission or\r\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\r\n * no effect.\r\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\r\n * needs to be executed in order for the changes to take effect or\r\n * <tt>false</tt> if the given value was the same as the previous one.\r\n * @public\r\n */\r\nTraceablePeerConnection.prototype.setVideoTransferActive = function(active) {\r\n    logger.debug(`${this} video transfer active: ${active}`);\r\n    if (browser.usesUnifiedPlan()) {\r\n        return this.tpcUtils.setVideoTransferActive(active);\r\n    }\r\n    const changed = this.videoTransferActive !== active;\r\n\r\n    this.videoTransferActive = active;\r\n\r\n    return changed;\r\n};\r\n\r\n/**\r\n * Sends DTMF tones if possible.\r\n *\r\n * @param {string} tones - The DTMF tones string as defined by {@code RTCDTMFSender.insertDTMF}, 'tones' argument.\r\n * @param {number} duration - The amount of time in milliseconds that each DTMF should last. It's 200ms by default.\r\n * @param {number} interToneGap - The length of time in miliseconds to wait between tones. It's 200ms by default.\r\n *\r\n * @returns {void}\r\n */\r\nTraceablePeerConnection.prototype.sendTones = function(tones, duration = 200, interToneGap = 200) {\r\n    if (!this._dtmfSender) {\r\n        if (this.peerconnection.getSenders) {\r\n            const rtpSender = this.peerconnection.getSenders().find(s => s.dtmf);\r\n\r\n            this._dtmfSender = rtpSender && rtpSender.dtmf;\r\n            this._dtmfSender && logger.info(`${this} initialized DTMFSender using getSenders`);\r\n        }\r\n\r\n        if (!this._dtmfSender) {\r\n            const localAudioTrack = Array.from(this.localTracks.values()).find(t => t.isAudioTrack());\r\n\r\n            if (this.peerconnection.createDTMFSender && localAudioTrack) {\r\n                this._dtmfSender = this.peerconnection.createDTMFSender(localAudioTrack.getTrack());\r\n            }\r\n            this._dtmfSender && logger.info(`${this} initialized DTMFSender using deprecated createDTMFSender`);\r\n        }\r\n\r\n        if (this._dtmfSender) {\r\n            this._dtmfSender.ontonechange = this._onToneChange.bind(this);\r\n        }\r\n    }\r\n\r\n    if (this._dtmfSender) {\r\n        if (this._dtmfSender.toneBuffer) {\r\n            this._dtmfTonesQueue.push({\r\n                tones,\r\n                duration,\r\n                interToneGap\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this._dtmfSender.insertDTMF(tones, duration, interToneGap);\r\n    } else {\r\n        logger.warn(`${this} sendTones - failed to select DTMFSender`);\r\n    }\r\n};\r\n\r\n/**\r\n * Callback ivoked by {@code this._dtmfSender} when it has finished playing\r\n * a single tone.\r\n *\r\n * @param {Object} event - The tonechange event which indicates what characters\r\n * are left to be played for the current tone.\r\n * @private\r\n * @returns {void}\r\n */\r\nTraceablePeerConnection.prototype._onToneChange = function(event) {\r\n    // An empty event.tone indicates the current tones have finished playing.\r\n    // Automatically start playing any queued tones on finish.\r\n    if (this._dtmfSender && event.tone === '' && this._dtmfTonesQueue.length) {\r\n        const { tones, duration, interToneGap } = this._dtmfTonesQueue.shift();\r\n\r\n        this._dtmfSender.insertDTMF(tones, duration, interToneGap);\r\n    }\r\n};\r\n\r\n/**\r\n * Makes the underlying TraceablePeerConnection generate new SSRC for\r\n * the recvonly video stream.\r\n */\r\nTraceablePeerConnection.prototype.generateRecvonlySsrc = function() {\r\n    const newSSRC = SDPUtil.generateSsrc();\r\n\r\n    logger.info(`${this} generated new recvonly SSRC: ${newSSRC}`);\r\n    this.sdpConsistency.setPrimarySsrc(newSSRC);\r\n};\r\n\r\n/**\r\n * Makes the underlying TraceablePeerConnection forget the current primary video\r\n * SSRC.\r\n */\r\nTraceablePeerConnection.prototype.clearRecvonlySsrc = function() {\r\n    logger.info('Clearing primary video SSRC!');\r\n    this.sdpConsistency.clearVideoSsrcCache();\r\n};\r\n\r\n/**\r\n * Closes underlying WebRTC PeerConnection instance and removes all remote\r\n * tracks by emitting {@link RTCEvents.REMOTE_TRACK_REMOVED} for each one of\r\n * them.\r\n */\r\nTraceablePeerConnection.prototype.close = function() {\r\n    this.trace('stop');\r\n\r\n    // Off SignalingEvents\r\n    this.signalingLayer.off(\r\n        SignalingEvents.PEER_MUTED_CHANGED, this._peerMutedChanged);\r\n    this.signalingLayer.off(\r\n        SignalingEvents.PEER_VIDEO_TYPE_CHANGED, this._peerVideoTypeChanged);\r\n\r\n    for (const peerTracks of this.remoteTracks.values()) {\r\n        for (const remoteTrack of peerTracks.values()) {\r\n            this._removeRemoteTrack(remoteTrack);\r\n        }\r\n    }\r\n    this.remoteTracks.clear();\r\n\r\n    this._addedStreams = [];\r\n\r\n    this._dtmfSender = null;\r\n    this._dtmfTonesQueue = [];\r\n\r\n    if (!this.rtc._removePeerConnection(this)) {\r\n        logger.error('RTC._removePeerConnection returned false');\r\n    }\r\n    if (this.statsinterval !== null) {\r\n        window.clearInterval(this.statsinterval);\r\n        this.statsinterval = null;\r\n    }\r\n    logger.info(`Closing ${this}...`);\r\n    this.peerconnection.close();\r\n};\r\n\r\n/**\r\n * Modifies the values of the setup attributes (defined by\r\n * {@link http://tools.ietf.org/html/rfc4145#section-4}) of a specific SDP\r\n * answer in order to overcome a delay of 1 second in the connection\r\n * establishment between some devices and Videobridge.\r\n *\r\n * @param {SDP} offer - the SDP offer to which the specified SDP answer is\r\n * being prepared to respond\r\n * @param {SDP} answer - the SDP to modify\r\n * @private\r\n */\r\nconst _fixAnswerRFC4145Setup = function(offer, answer) {\r\n    if (!(browser.isChromiumBased() || browser.isReactNative())) {\r\n        // It looks like Firefox doesn't agree with the fix (at least in its\r\n        // current implementation) because it effectively remains active even\r\n        // after we tell it to become passive. Apart from Firefox which I tested\r\n        // after the fix was deployed, I tested Chrome only. In order to prevent\r\n        // issues with other browsers, limit the fix to known devices for the\r\n        // time being.\r\n        return;\r\n    }\r\n\r\n    // XXX Videobridge is the (SDP) offerer and WebRTC (e.g. Chrome) is the\r\n    // answerer (as orchestrated by Jicofo). In accord with\r\n    // http://tools.ietf.org/html/rfc5245#section-5.2 and because both peers\r\n    // are ICE FULL agents, Videobridge will take on the controlling role and\r\n    // WebRTC will take on the controlled role. In accord with\r\n    // https://tools.ietf.org/html/rfc5763#section-5, Videobridge will use the\r\n    // setup attribute value of setup:actpass and WebRTC will be allowed to\r\n    // choose either the setup attribute value of setup:active or\r\n    // setup:passive. Chrome will by default choose setup:active because it is\r\n    // RECOMMENDED by the respective RFC since setup:passive adds additional\r\n    // latency. The case of setup:active allows WebRTC to send a DTLS\r\n    // ClientHello as soon as an ICE connectivity check of its succeeds.\r\n    // Unfortunately, Videobridge will be unable to respond immediately because\r\n    // may not have WebRTC's answer or may have not completed the ICE\r\n    // connectivity establishment. Even more unfortunate is that in the\r\n    // described scenario Chrome's DTLS implementation will insist on\r\n    // retransmitting its ClientHello after a second (the time is in accord\r\n    // with the respective RFC) and will thus cause the whole connection\r\n    // establishment to exceed at least 1 second. To work around Chrome's\r\n    // idiosyncracy, don't allow it to send a ClientHello i.e. change its\r\n    // default choice of setup:active to setup:passive.\r\n    if (offer && answer\r\n            && offer.media && answer.media\r\n            && offer.media.length === answer.media.length) {\r\n        answer.media.forEach((a, i) => {\r\n            if (SDPUtil.findLine(\r\n                    offer.media[i],\r\n                    'a=setup:actpass',\r\n                    offer.session)) {\r\n                answer.media[i]\r\n                    = a.replace(/a=setup:active/g, 'a=setup:passive');\r\n            }\r\n        });\r\n        answer.raw = answer.session + answer.media.join('');\r\n    }\r\n};\r\n\r\nTraceablePeerConnection.prototype.createAnswer = function(constraints) {\r\n    return this._createOfferOrAnswer(false /* answer */, constraints);\r\n};\r\n\r\nTraceablePeerConnection.prototype.createOffer = function(constraints) {\r\n    return this._createOfferOrAnswer(true /* offer */, constraints);\r\n};\r\n\r\n/**\r\n * Checks if a camera track has been added to the peerconnection\r\n * @param {TraceablePeerConnection} peerConnection\r\n * @return {boolean} <tt>true</tt> if the peerconnection has\r\n * a camera track for its video source <tt>false</tt> otherwise.\r\n */\r\nfunction hasCameraTrack(peerConnection) {\r\n    return peerConnection.getLocalTracks()\r\n        .some(t => t.videoType === 'camera');\r\n}\r\n\r\nTraceablePeerConnection.prototype._createOfferOrAnswer = function(\r\n        isOffer,\r\n        constraints) {\r\n    const logName = isOffer ? 'Offer' : 'Answer';\r\n\r\n    this.trace(`create${logName}`, JSON.stringify(constraints, null, ' '));\r\n\r\n    const handleSuccess = (resultSdp, resolveFn, rejectFn) => {\r\n        try {\r\n            this.trace(\r\n                `create${logName}OnSuccess::preTransform`, dumpSDP(resultSdp));\r\n\r\n            if (browser.usesPlanB()) {\r\n                // If there are no local video tracks, then a \"recvonly\"\r\n                // SSRC needs to be generated\r\n                if (!this.hasAnyTracksOfType(MediaType.VIDEO)\r\n                    && !this.sdpConsistency.hasPrimarySsrcCached()) {\r\n                    this.generateRecvonlySsrc();\r\n                }\r\n\r\n                // eslint-disable-next-line no-param-reassign\r\n                resultSdp = new RTCSessionDescription({\r\n                    type: resultSdp.type,\r\n                    sdp: this.sdpConsistency.makeVideoPrimarySsrcsConsistent(\r\n                        resultSdp.sdp)\r\n                });\r\n\r\n                this.trace(\r\n                    `create${logName}OnSuccess::postTransform `\r\n                         + '(make primary audio/video ssrcs consistent)',\r\n                    dumpSDP(resultSdp));\r\n            }\r\n\r\n            // configure simulcast for camera tracks always and for\r\n            // desktop tracks only when the testing flag for maxbitrates\r\n            // in config.js is disabled.\r\n            if (this.isSimulcastOn() && browser.usesSdpMungingForSimulcast()\r\n                && (!this.options.capScreenshareBitrate\r\n                || (this.options.capScreenshareBitrate && hasCameraTrack(this)))) {\r\n                // eslint-disable-next-line no-param-reassign\r\n                resultSdp = this.simulcast.mungeLocalDescription(resultSdp);\r\n                this.trace(\r\n                    `create${logName}`\r\n                        + 'OnSuccess::postTransform (simulcast)',\r\n                    dumpSDP(resultSdp));\r\n            }\r\n\r\n            if (!this.options.disableRtx && browser.supportsRtx()) {\r\n                // eslint-disable-next-line no-param-reassign\r\n                resultSdp = new RTCSessionDescription({\r\n                    type: resultSdp.type,\r\n                    sdp: this.rtxModifier.modifyRtxSsrcs(resultSdp.sdp)\r\n                });\r\n\r\n                this.trace(\r\n                    `create${logName}`\r\n                         + 'OnSuccess::postTransform (rtx modifier)',\r\n                    dumpSDP(resultSdp));\r\n            }\r\n\r\n            // Fix the setup attribute (see _fixAnswerRFC4145Setup for\r\n            //  details)\r\n            if (!isOffer) {\r\n                const remoteDescription\r\n                    = new SDP(this.remoteDescription.sdp);\r\n                const localDescription = new SDP(resultSdp.sdp);\r\n\r\n                _fixAnswerRFC4145Setup(remoteDescription, localDescription);\r\n\r\n                // eslint-disable-next-line no-param-reassign\r\n                resultSdp = new RTCSessionDescription({\r\n                    type: resultSdp.type,\r\n                    sdp: localDescription.raw\r\n                });\r\n            }\r\n\r\n            const ssrcMap = extractSSRCMap(resultSdp);\r\n\r\n            logger.debug('Got local SSRCs MAP: ', ssrcMap);\r\n            this._processLocalSSRCsMap(ssrcMap);\r\n\r\n            resolveFn(resultSdp);\r\n        } catch (e) {\r\n            this.trace(`create${logName}OnError`, e);\r\n            this.trace(`create${logName}OnError`, dumpSDP(resultSdp));\r\n            logger.error(`create${logName}OnError`, e, dumpSDP(resultSdp));\r\n\r\n            rejectFn(e);\r\n        }\r\n    };\r\n\r\n    const handleFailure = (err, rejectFn) => {\r\n        this.trace(`create${logName}OnFailure`, err);\r\n        const eventType\r\n            = isOffer\r\n                ? RTCEvents.CREATE_OFFER_FAILED\r\n                : RTCEvents.CREATE_ANSWER_FAILED;\r\n\r\n        this.eventEmitter.emit(eventType, err, this);\r\n\r\n        rejectFn(err);\r\n    };\r\n\r\n    return new Promise((resolve, reject) => {\r\n        let oaPromise;\r\n\r\n        if (isOffer) {\r\n            oaPromise = this.peerconnection.createOffer(constraints);\r\n        } else {\r\n            oaPromise = this.peerconnection.createAnswer(constraints);\r\n        }\r\n\r\n        oaPromise\r\n            .then(\r\n                sdp => handleSuccess(sdp, resolve, reject),\r\n                error => handleFailure(error, reject));\r\n    });\r\n};\r\n\r\n/**\r\n * Extract primary SSRC from given {@link TrackSSRCInfo} object.\r\n * @param {TrackSSRCInfo} ssrcObj\r\n * @return {number|null} the primary SSRC or <tt>null</tt>\r\n */\r\nTraceablePeerConnection.prototype._extractPrimarySSRC = function(ssrcObj) {\r\n    if (ssrcObj && ssrcObj.groups && ssrcObj.groups.length) {\r\n        return ssrcObj.groups[0].ssrcs[0];\r\n    } else if (ssrcObj && ssrcObj.ssrcs && ssrcObj.ssrcs.length) {\r\n        return ssrcObj.ssrcs[0];\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * Goes over the SSRC map extracted from the latest local description and tries\r\n * to match them with the local tracks (by MSID). Will update the values\r\n * currently stored in the {@link TraceablePeerConnection.localSSRCs} map.\r\n * @param {Map<string,TrackSSRCInfo>} ssrcMap\r\n * @private\r\n */\r\nTraceablePeerConnection.prototype._processLocalSSRCsMap = function(ssrcMap) {\r\n    for (const track of this.localTracks.values()) {\r\n        const trackMSID = track.storedMSID;\r\n\r\n        if (ssrcMap.has(trackMSID)) {\r\n            const newSSRC = ssrcMap.get(trackMSID);\r\n\r\n            if (!newSSRC) {\r\n                logger.error(`No SSRC found for: ${trackMSID} in ${this}`);\r\n\r\n                return;\r\n            }\r\n            const oldSSRC = this.localSSRCs.get(track.rtcId);\r\n            const newSSRCNum = this._extractPrimarySSRC(newSSRC);\r\n            const oldSSRCNum = this._extractPrimarySSRC(oldSSRC);\r\n\r\n            // eslint-disable-next-line no-negated-condition\r\n            if (newSSRCNum !== oldSSRCNum) {\r\n                if (oldSSRCNum === null) {\r\n                    logger.info(\r\n                        `Storing new local SSRC for ${track} in ${this}`,\r\n                        newSSRC);\r\n                } else {\r\n                    logger.error(\r\n                        `Overwriting SSRC for ${track} ${trackMSID} in ${this\r\n                        } with: `, newSSRC);\r\n                }\r\n                this.localSSRCs.set(track.rtcId, newSSRC);\r\n\r\n                this.eventEmitter.emit(\r\n                    RTCEvents.LOCAL_TRACK_SSRC_UPDATED, track, newSSRCNum);\r\n            } else {\r\n                logger.debug(\r\n                    `The local SSRC(${newSSRCNum}) for ${track} ${trackMSID}`\r\n                     + `is still up to date in ${this}`);\r\n            }\r\n        } else if (!track.isVideoTrack() && !track.isMuted()) {\r\n            // It is normal to find no SSRCs for a muted video track in\r\n            // the local SDP as the recv-only SSRC is no longer munged in.\r\n            // So log the warning only if it's not a muted video track.\r\n            logger.warn(`No SSRCs found in the local SDP for ${track} MSID: ${trackMSID} in ${this}`);\r\n        }\r\n    }\r\n};\r\n\r\nTraceablePeerConnection.prototype.addIceCandidate = function(candidate) {\r\n    this.trace('addIceCandidate', JSON.stringify({\r\n        candidate: candidate.candidate,\r\n        sdpMid: candidate.sdpMid,\r\n        sdpMLineIndex: candidate.sdpMLineIndex,\r\n        usernameFragment: candidate.usernameFragment\r\n    }, null, ' '));\r\n\r\n    return this.peerconnection.addIceCandidate(candidate);\r\n};\r\n\r\n/**\r\n * Obtains call-related stats from the peer connection.\r\n *\r\n * @param {Function} callback - The function to invoke after successfully\r\n * obtaining stats.\r\n * @param {Function} errback - The function to invoke after failing to obtain\r\n * stats.\r\n * @returns {void}\r\n */\r\nTraceablePeerConnection.prototype.getStats = function(callback, errback) {\r\n    // TODO (brian): After moving all browsers to adapter, check if adapter is\r\n    // accounting for different getStats apis, making the browser-checking-if\r\n    // unnecessary.\r\n    if (browser.isSafari() || browser.isFirefox() || browser.isReactNative()) {\r\n        // uses the new Promise based getStats\r\n        this.peerconnection.getStats()\r\n            .then(callback)\r\n            .catch(errback || (() => {\r\n\r\n                // Making sure that getStats won't fail if error callback is\r\n                // not passed.\r\n            }));\r\n    } else {\r\n        this.peerconnection.getStats(callback);\r\n    }\r\n};\r\n\r\n/**\r\n * Generates and stores new SSRC info object for given local track.\r\n * The method should be called only for a video track being added to this TPC\r\n * in the muted state (given that the current browser uses this strategy).\r\n * @param {JitsiLocalTrack} track\r\n * @return {TPCSSRCInfo}\r\n */\r\nTraceablePeerConnection.prototype.generateNewStreamSSRCInfo = function(track) {\r\n    const rtcId = track.rtcId;\r\n    let ssrcInfo = this._getSSRC(rtcId);\r\n\r\n    if (ssrcInfo) {\r\n        logger.error(`Will overwrite local SSRCs for track ID: ${rtcId}`);\r\n    }\r\n\r\n    // configure simulcast for camera tracks always and for\r\n    // desktop tracks only when the testing flag for maxbitrates\r\n    // in config.js is disabled.\r\n    if (this.isSimulcastOn()\r\n        && (!this.options.capScreenshareBitrate\r\n        || (this.options.capScreenshareBitrate && hasCameraTrack(this)))) {\r\n        ssrcInfo = {\r\n            ssrcs: [],\r\n            groups: []\r\n        };\r\n        for (let i = 0; i < SIM_LAYER_RIDS.length; i++) {\r\n            ssrcInfo.ssrcs.push(SDPUtil.generateSsrc());\r\n        }\r\n        ssrcInfo.groups.push({\r\n            ssrcs: ssrcInfo.ssrcs.slice(),\r\n            semantics: 'SIM'\r\n        });\r\n    } else {\r\n        ssrcInfo = {\r\n            ssrcs: [ SDPUtil.generateSsrc() ],\r\n            groups: []\r\n        };\r\n    }\r\n    if (!this.options.disableRtx && browser.supportsRtx()) {\r\n        // Specifically use a for loop here because we'll\r\n        //  be adding to the list we're iterating over, so we\r\n        //  only want to iterate through the items originally\r\n        //  on the list\r\n        const currNumSsrcs = ssrcInfo.ssrcs.length;\r\n\r\n        for (let i = 0; i < currNumSsrcs; ++i) {\r\n            const primarySsrc = ssrcInfo.ssrcs[i];\r\n            const rtxSsrc = SDPUtil.generateSsrc();\r\n\r\n            ssrcInfo.ssrcs.push(rtxSsrc);\r\n            ssrcInfo.groups.push({\r\n                ssrcs: [ primarySsrc, rtxSsrc ],\r\n                semantics: 'FID'\r\n            });\r\n        }\r\n    }\r\n    ssrcInfo.msid = track.storedMSID;\r\n    this.localSSRCs.set(rtcId, ssrcInfo);\r\n\r\n    return ssrcInfo;\r\n};\r\n\r\nconst handleLayerSuspension = function(peerConnection, isSelected) {\r\n    if (!peerConnection.getSenders) {\r\n        logger.debug('Browser doesn\\'t support RTPSender');\r\n\r\n        return;\r\n    }\r\n\r\n    const videoSender = peerConnection.getSenders()\r\n        .find(sender => sender.track.kind === 'video');\r\n\r\n    if (!videoSender) {\r\n        logger.warn('handleLayerSuspension unable to find video sender');\r\n\r\n        return;\r\n    }\r\n    if (!videoSender.getParameters) {\r\n        logger.debug('Browser doesn\\'t support RTPSender parameters');\r\n\r\n        return;\r\n    }\r\n    const parameters = videoSender.getParameters();\r\n\r\n    if (isSelected) {\r\n        logger.debug('Currently selected, enabling all sim layers');\r\n\r\n        // Make sure all encodings are enabled\r\n        parameters.encodings.forEach(e => {\r\n            e.active = true;\r\n        });\r\n    } else {\r\n        logger.debug('Not currently selected, disabling upper layers');\r\n\r\n        // Turn off the upper simulcast layers\r\n        [ 1, 2 ].forEach(simIndex => {\r\n            if (parameters.encodings[simIndex]) {\r\n                parameters.encodings[simIndex].active = false;\r\n            }\r\n        });\r\n    }\r\n    videoSender.setParameters(parameters);\r\n};\r\n\r\n/**\r\n * Set whether or not the endpoint is 'selected' by other endpoints, meaning\r\n * it appears on their main stage\r\n */\r\nTraceablePeerConnection.prototype.setIsSelected = function(isSelected) {\r\n    if (this.options.enableLayerSuspension) {\r\n        logger.debug('Layer suspension enabled,'\r\n            + `currently selected? ${isSelected}`);\r\n        handleLayerSuspension(this.peerconnection, isSelected);\r\n    }\r\n};\r\n\r\n/**\r\n * Creates a text representation of this <tt>TraceablePeerConnection</tt>\r\n * instance.\r\n * @return {string}\r\n */\r\nTraceablePeerConnection.prototype.toString = function() {\r\n    return `TPC[${this.id},p2p:${this.isP2P}]`;\r\n};\r\n","import { getLogger } from 'jitsi-meet-logger';\r\nimport { BrowserDetection } from 'js-utils';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n// TODO: Move this code to js-utils.\r\n\r\n// NOTE: Now we are extending BrowserDetection in order to preserve\r\n// RTCBrowserType interface but maybe it worth exporting BrowserCapabilities\r\n// and BrowserDetection as separate objects in future.\r\n\r\n/**\r\n * Implements browser capabilities for lib-jitsi-meet.\r\n */\r\nexport default class BrowserCapabilities extends BrowserDetection {\r\n    /**\r\n     * Creates new BrowserCapabilities instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n        logger.info(\r\n            `This appears to be ${this.getName()}, ver: ${this.getVersion()}`);\r\n    }\r\n\r\n    /**\r\n     * Tells whether or not the <tt>MediaStream/tt> is removed from\r\n     * the <tt>PeerConnection</tt> and disposed on video mute (in order to turn\r\n     * off the camera device).\r\n     * @return {boolean} <tt>true</tt> if the current browser supports this\r\n     * strategy or <tt>false</tt> otherwise.\r\n     */\r\n    doesVideoMuteByStreamRemove() {\r\n        return this.isChromiumBased() || this.isSafari();\r\n    }\r\n\r\n    /**\r\n     * Check whether or not the current browser support peer to peer connections\r\n     * @return {boolean} <tt>true</tt> if p2p is supported or <tt>false</tt>\r\n     * otherwise.\r\n     */\r\n    supportsP2P() {\r\n        return !this.usesUnifiedPlan();\r\n    }\r\n\r\n    /**\r\n     * Checks if the current browser is Chromium based, that is, it's either\r\n     * Chrome / Chromium or uses it as its engine, but doesn't identify as\r\n     * Chrome.\r\n     *\r\n     * This includes the following browsers:\r\n     * - Chrome and Chromium\r\n     * - Other browsers which use the Chrome engine, but are detected as Chrome,\r\n     *   such as Brave and Vivaldi\r\n     * - Browsers which are NOT Chrome but use it as their engine, and have\r\n     *   custom detection code: Opera, Electron and NW.JS\r\n     */\r\n    isChromiumBased() {\r\n        return this.isChrome()\r\n            || this.isElectron()\r\n            || this.isNWJS()\r\n            || this.isOpera();\r\n    }\r\n\r\n    /**\r\n     * Checks if the current browser is supported.\r\n     *\r\n     * @returns {boolean} true if the browser is supported, false otherwise.\r\n     */\r\n    isSupported() {\r\n        return this.isChromiumBased()\r\n            || this.isFirefox()\r\n            || this.isReactNative()\r\n            || (this.isSafari() && !this.isVersionLessThan('12.1'));\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the current environment needs a user interaction\r\n     * with the page before any unmute can occur.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isUserInteractionRequiredForUnmute() {\r\n        return (this.isFirefox() && this.isVersionLessThan('68')) || this.isSafari();\r\n    }\r\n\r\n    /**\r\n     * Checks if the current browser triggers 'onmute'/'onunmute' events when\r\n     * user's connection is interrupted and the video stops playback.\r\n     * @returns {*|boolean} 'true' if the event is supported or 'false'\r\n     * otherwise.\r\n     */\r\n    supportsVideoMuteOnConnInterrupted() {\r\n        return this.isChromiumBased() || this.isReactNative() || this.isSafari();\r\n    }\r\n\r\n    /**\r\n     * Checks if the current browser reports upload and download bandwidth\r\n     * statistics.\r\n     * @return {boolean}\r\n     */\r\n    supportsBandwidthStatistics() {\r\n        // FIXME bandwidth stats are currently not implemented for FF on our\r\n        // side, but not sure if not possible ?\r\n        return !this.isFirefox() && !this.isSafari();\r\n    }\r\n\r\n    /**\r\n     * Checks if the current browser support the device change event.\r\n     * @return {boolean}\r\n     */\r\n    supportsDeviceChangeEvent() {\r\n        return navigator.mediaDevices\r\n            && typeof navigator.mediaDevices.ondevicechange !== 'undefined'\r\n            && typeof navigator.mediaDevices.addEventListener !== 'undefined';\r\n    }\r\n\r\n    /**\r\n     * Checks if the current browser supports RTT statistics for srflx local\r\n     * candidates through the legacy getStats() API.\r\n     */\r\n    supportsLocalCandidateRttStatistics() {\r\n        return this.isChromiumBased() || this.isReactNative() || this.isSafari();\r\n    }\r\n\r\n    /**\r\n     * Checks if the current browser reports round trip time statistics for\r\n     * the ICE candidate pair.\r\n     * @return {boolean}\r\n     */\r\n    supportsRTTStatistics() {\r\n        // Firefox does not seem to report RTT for ICE candidate pair:\r\n        // eslint-disable-next-line max-len\r\n        // https://www.w3.org/TR/webrtc-stats/#dom-rtcicecandidatepairstats-currentroundtriptime\r\n        // It does report mozRTT for RTP streams, but at the time of this\r\n        // writing it's value does not make sense most of the time\r\n        // (is reported as 1):\r\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1241066\r\n        // For Chrome and others we rely on 'googRtt'.\r\n        return !this.isFirefox();\r\n    }\r\n\r\n    /**\r\n     * Checks whether the browser supports RTPSender.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    supportsRtpSender() {\r\n        return this.isFirefox() || this.isSafari();\r\n    }\r\n\r\n    /**\r\n     * Checks whether the browser supports RTX.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    supportsRtx() {\r\n        return !this.isFirefox();\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the current browser can support capturing video,\r\n     * be it camera or desktop, and displaying received video.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    supportsVideo() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Checks if the browser uses plan B.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    usesPlanB() {\r\n        return !this.usesUnifiedPlan();\r\n    }\r\n\r\n    /**\r\n     * Checks if the browser uses SDP munging for turning on simulcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    usesSdpMungingForSimulcast() {\r\n        return this.isChromiumBased() || this.isSafari();\r\n    }\r\n\r\n    /**\r\n     * Checks if the browser uses unified plan.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    usesUnifiedPlan() {\r\n        if (this.isFirefox()) {\r\n            return true;\r\n        }\r\n\r\n        if (this.isSafari() && typeof window.RTCRtpTransceiver !== 'undefined') {\r\n            // eslint-disable-next-line max-len\r\n            // https://trac.webkit.org/changeset/236144/webkit/trunk/LayoutTests/webrtc/video-addLegacyTransceiver.html\r\n            // eslint-disable-next-line no-undef\r\n            return Object.keys(RTCRtpTransceiver.prototype)\r\n                   .indexOf('currentDirection') > -1;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the current browser should be using the new\r\n     * getUserMedia flow, which utilizes the adapter shim. This method should\r\n     * be temporary and used while migrating all browsers to use adapter and\r\n     * the new getUserMedia.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    usesNewGumFlow() {\r\n        const REQUIRED_CHROME_VERSION = 61;\r\n\r\n        if (this.isChrome()) {\r\n            return !this.isVersionLessThan(REQUIRED_CHROME_VERSION);\r\n        }\r\n\r\n        if (this.isFirefox() || this.isSafari()) {\r\n            return true;\r\n        }\r\n\r\n        if (this.isChromiumBased()) {\r\n            return this._getChromiumBasedVersion() >= REQUIRED_CHROME_VERSION;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the browser uses webrtc-adapter. All browsers using the new\r\n     * getUserMedia flow and Edge.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    usesAdapter() {\r\n        return this.usesNewGumFlow();\r\n    }\r\n\r\n    /**\r\n     * Checks if the browser uses RIDs/MIDs for siganling the simulcast streams\r\n     * to the bridge instead of the ssrcs.\r\n     */\r\n    usesRidsForSimulcast() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the browser supports getDisplayMedia.\r\n     * @returns {boolean} {@code true} if the browser supports getDisplayMedia.\r\n     */\r\n    supportsGetDisplayMedia() {\r\n        return typeof navigator.getDisplayMedia !== 'undefined'\r\n            || (typeof navigator.mediaDevices !== 'undefined'\r\n                && typeof navigator.mediaDevices.getDisplayMedia\r\n                    !== 'undefined');\r\n    }\r\n\r\n    /**\r\n     * Checks if the browser supports insertable streams, needed for E2EE.\r\n     * @returns {boolean} {@code true} if the browser supports insertable streams.\r\n     */\r\n    supportsInsertableStreams() {\r\n        return Boolean(typeof window.RTCRtpSender !== 'undefined'\r\n            && window.RTCRtpSender.prototype.createEncodedVideoStreams);\r\n    }\r\n\r\n    /**\r\n     * Checks if the browser supports the \"sdpSemantics\" configuration option.\r\n     * https://webrtc.org/web-apis/chrome/unified-plan/\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    supportsSdpSemantics() {\r\n        return this.isChromiumBased() && this._getChromiumBasedVersion() >= 65;\r\n    }\r\n\r\n    /**\r\n     * Returns the version of a Chromium based browser.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    _getChromiumBasedVersion() {\r\n        if (this.isChromiumBased()) {\r\n            // NW.JS doesn't expose the Chrome version in the UA string.\r\n            if (this.isNWJS()) {\r\n                // eslint-disable-next-line no-undef\r\n                return Number.parseInt(process.versions.chromium, 10);\r\n            }\r\n\r\n            // Here we process all browsers which use the Chrome engine but\r\n            // don't necessarily identify as Chrome. We cannot use the version\r\n            // comparing functions because the Electron, Opera and NW.JS\r\n            // versions are inconsequential here, as we need to know the actual\r\n            // Chrome engine version.\r\n            const ua = navigator.userAgent;\r\n\r\n            if (ua.match(/Chrome/)) {\r\n                const version\r\n                    = Number.parseInt(ua.match(/Chrome\\/([\\d.]+)/)[1], 10);\r\n\r\n                return version;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n}\r\n","import BrowserCapabilities from './BrowserCapabilities';\r\n\r\nexport default new BrowserCapabilities();\r\n","import * as ConnectionQualityEvents\r\n    from '../../service/connectivity/ConnectionQualityEvents';\r\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\r\nimport { getLogger } from 'jitsi-meet-logger';\r\n\r\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\r\nconst VideoType = require('../../service/RTC/VideoType');\r\nconst Resolutions = require('../../service/RTC/Resolutions');\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * The value to use for the \"type\" field for messages sent by ConnectionQuality\r\n * over the data channel.\r\n */\r\nconst STATS_MESSAGE_TYPE = 'stats';\r\n\r\n/**\r\n * See media/engine/simulcast.ss from webrtc.org\r\n */\r\nconst kSimulcastFormats = [\r\n    { width: 1920,\r\n        height: 1080,\r\n        layers: 3,\r\n        max: 5000,\r\n        target: 4000,\r\n        min: 800 },\r\n    { width: 1280,\r\n        height: 720,\r\n        layers: 3,\r\n        max: 2500,\r\n        target: 2500,\r\n        min: 600 },\r\n    { width: 960,\r\n        height: 540,\r\n        layers: 3,\r\n        max: 900,\r\n        target: 900,\r\n        min: 450 },\r\n    { width: 640,\r\n        height: 360,\r\n        layers: 2,\r\n        max: 700,\r\n        target: 500,\r\n        min: 150 },\r\n    { width: 480,\r\n        height: 270,\r\n        layers: 2,\r\n        max: 450,\r\n        target: 350,\r\n        min: 150 },\r\n    { width: 320,\r\n        height: 180,\r\n        layers: 1,\r\n        max: 200,\r\n        target: 150,\r\n        min: 30 }\r\n];\r\n\r\n/**\r\n * The maximum bitrate to use as a measurement against the participant's current\r\n * bitrate. This cap helps in the cases where the participant's bitrate is high\r\n * but not enough to fulfill high targets, such as with 1080p.\r\n */\r\nconst MAX_TARGET_BITRATE = 2500;\r\n\r\n/**\r\n * The initial bitrate for video in kbps.\r\n */\r\nlet startBitrate = 800;\r\n\r\n\r\n/**\r\n * The current cap (in kbps) put on the video stream (or null if there isn't\r\n * a cap).  If there is a cap, we'll take it into account when calculating\r\n * the current quality.\r\n */\r\nlet videoBitrateCap = null;\r\n\r\n/**\r\n * Gets the expected bitrate (in kbps) in perfect network conditions.\r\n * @param simulcast {boolean} whether simulcast is enabled or not.\r\n * @param resolution {Resolution} the resolution.\r\n * @param millisSinceStart {number} the number of milliseconds since sending\r\n * video started.\r\n */\r\nfunction getTarget(simulcast, resolution, millisSinceStart) {\r\n    // Completely ignore the bitrate in the first 5 seconds, as the first\r\n    // event seems to fire very early and the value is suspicious and causes\r\n    // false positives.\r\n    if (millisSinceStart < 15000) {\r\n        return 1;\r\n    }\r\n\r\n    let target = 0;\r\n    let height = Math.min(resolution.height, resolution.width);\r\n\r\n    if (simulcast) {\r\n        // Find the first format with height no bigger than ours.\r\n        let simulcastFormat = kSimulcastFormats.find(f => f.height <= height);\r\n\r\n        if (simulcastFormat) {\r\n            // Sum the target fields from all simulcast layers for the given\r\n            // resolution (e.g. 720p + 360p + 180p).\r\n            for (height = simulcastFormat.height; height >= 180; height /= 2) {\r\n                const targetHeight = height;\r\n\r\n                simulcastFormat\r\n                    = kSimulcastFormats.find(f => f.height === targetHeight);\r\n                if (simulcastFormat) {\r\n                    target += simulcastFormat.target;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        // See GetMaxDefaultVideoBitrateKbps in\r\n        // media/engine/webrtcvideoengine2.cc from webrtc.org\r\n        const pixels = resolution.width * resolution.height;\r\n\r\n        if (pixels <= 320 * 240) {\r\n            target = 600;\r\n        } else if (pixels <= 640 * 480) {\r\n            target = 1700;\r\n        } else if (pixels <= 960 * 540) {\r\n            target = 2000;\r\n        } else {\r\n            target = 2500;\r\n        }\r\n    }\r\n\r\n    // Allow for an additional 1 second for ramp up -- delay any initial drop\r\n    // of connection quality by 1 second.\r\n    return Math.min(target, rampUp(Math.max(0, millisSinceStart - 1000)));\r\n}\r\n\r\n/**\r\n * Gets the bitrate to which GCC would have ramped up in perfect network\r\n * conditions after millisSinceStart milliseconds.\r\n * @param millisSinceStart {number} the number of milliseconds since sending\r\n * video was enabled.\r\n */\r\nfunction rampUp(millisSinceStart) {\r\n    if (millisSinceStart > 60000) {\r\n        return Number.MAX_SAFE_INTEGER;\r\n    }\r\n\r\n    // According to GCC the send side bandwidth estimation grows with at most\r\n    // 8% per second.\r\n    // https://tools.ietf.org/html/draft-ietf-rmcat-gcc-02#section-5.5\r\n    return startBitrate * Math.pow(1.08, millisSinceStart / 1000);\r\n}\r\n\r\n/**\r\n * A class which monitors the local statistics coming from the RTC modules, and\r\n * calculates a \"connection quality\" value, in percent, for the media\r\n * connection. A value of 100% indicates a very good network connection, and a\r\n * value of 0% indicates a poor connection.\r\n */\r\nexport default class ConnectionQuality {\r\n    /**\r\n     *\r\n     * @param conference\r\n     * @param eventEmitter\r\n     * @param options\r\n     */\r\n    constructor(conference, eventEmitter, options) {\r\n        this.eventEmitter = eventEmitter;\r\n\r\n        /**\r\n         * The owning JitsiConference.\r\n         */\r\n        this._conference = conference;\r\n\r\n        /**\r\n         * Holds statistics about the local connection quality.\r\n         */\r\n        this._localStats = {\r\n            connectionQuality: 100,\r\n            jvbRTT: undefined\r\n        };\r\n\r\n        /**\r\n         * The time this._localStats.connectionQuality was last updated.\r\n         */\r\n        this._lastConnectionQualityUpdate = -1;\r\n\r\n        /**\r\n         * Maps a participant ID to an object holding connection quality\r\n         * statistics received from this participant.\r\n         */\r\n        this._remoteStats = {};\r\n\r\n        /**\r\n         * The time that the ICE state last changed to CONNECTED. We use this\r\n         * to calculate how much time we as a sender have had to ramp-up.\r\n         */\r\n        this._timeIceConnected = -1;\r\n\r\n        /**\r\n         * The time that local video was unmuted. We use this to calculate how\r\n         * much time we as a sender have had to ramp-up.\r\n         */\r\n        this._timeVideoUnmuted = -1;\r\n\r\n        /**\r\n         * The time at which a video bitrate cap was last removed.  We use\r\n         * this to calculate how much time we, as a sender, have had to\r\n         * ramp-up\r\n         */\r\n        this._timeLastBwCapRemoved = -1;\r\n\r\n        // We assume a global startBitrate value for the sake of simplicity.\r\n        if (options.config.startBitrate && options.config.startBitrate > 0) {\r\n            startBitrate = options.config.startBitrate;\r\n        }\r\n\r\n        // TODO: consider ignoring these events and letting the user of\r\n        // lib-jitsi-meet handle these separately.\r\n        conference.on(\r\n            ConferenceEvents.CONNECTION_INTERRUPTED,\r\n            () => {\r\n                this._updateLocalConnectionQuality(0);\r\n                this.eventEmitter.emit(\r\n                    ConnectionQualityEvents.LOCAL_STATS_UPDATED,\r\n                    this._localStats);\r\n                this._broadcastLocalStats();\r\n            });\r\n\r\n        conference.room.addListener(\r\n            XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\r\n            (jingleSession, newState) => {\r\n                if (!jingleSession.isP2P && newState === 'connected') {\r\n                    this._timeIceConnected = window.performance.now();\r\n                }\r\n            });\r\n\r\n        // Listen to DataChannel message from other participants in the\r\n        // conference, and update the _remoteStats field accordingly.\r\n        conference.on(\r\n            ConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\r\n            (participant, payload) => {\r\n                if (payload.type === STATS_MESSAGE_TYPE) {\r\n                    this._updateRemoteStats(\r\n                        participant.getId(), payload.values);\r\n                }\r\n            });\r\n\r\n        // Listen to local statistics events originating from the RTC module\r\n        // and update the _localStats field.\r\n        // Oh, and by the way, the resolutions of all remote participants are\r\n        // also piggy-backed in these \"local\" statistics. It's obvious, really,\r\n        // if one carefully reads the *code* (but not the docs) in\r\n        // UI/VideoLayout/VideoLayout.js#updateLocalConnectionStats in\r\n        // jitsi-meet\r\n        // TODO: We should keep track of the remote resolution in _remoteStats,\r\n        // and notify about changes via separate events.\r\n        conference.statistics.addConnectionStatsListener(\r\n            this._updateLocalStats.bind(this));\r\n\r\n        // Save the last time we were unmuted.\r\n        conference.on(\r\n            ConferenceEvents.TRACK_MUTE_CHANGED,\r\n            track => {\r\n                if (track.isVideoTrack()) {\r\n                    if (track.isMuted()) {\r\n                        this._timeVideoUnmuted = -1;\r\n                    } else {\r\n                        this._maybeUpdateUnmuteTime();\r\n                    }\r\n                }\r\n            });\r\n        conference.on(\r\n            ConferenceEvents.TRACK_ADDED,\r\n            track => {\r\n                if (track.isVideoTrack() && !track.isMuted()) {\r\n                    this._maybeUpdateUnmuteTime();\r\n                }\r\n            });\r\n\r\n        conference.on(\r\n            ConferenceEvents.SERVER_REGION_CHANGED,\r\n            serverRegion => {\r\n                this._localStats.serverRegion = serverRegion;\r\n            });\r\n\r\n        conference.on(\r\n            ConferenceEvents.PROPERTIES_CHANGED,\r\n            properties => {\r\n                this._localStats.bridgeCount\r\n                    = Number((properties || {})['bridge-count']);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Sets _timeVideoUnmuted if it was previously unset. If it was already set,\r\n     * doesn't change it.\r\n     */\r\n    _maybeUpdateUnmuteTime() {\r\n        if (this._timeVideoUnmuted < 0) {\r\n            this._timeVideoUnmuted = window.performance.now();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates a new \"connection quality\" value.\r\n     * @param videoType {VideoType} the type of the video source (camera or\r\n     * a screen capture).\r\n     * @param isMuted {boolean} whether the local video is muted.\r\n     * @param resolutionName {Resolution} the input resolution used by the\r\n     * camera.\r\n     * @returns {*} the newly calculated connection quality.\r\n     */\r\n    _calculateConnectionQuality(videoType, isMuted, resolutionName) {\r\n\r\n        // resolutionName is an index into Resolutions (where \"720\" is\r\n        // \"1280x720\" and \"960\" is \"960x720\" ...).\r\n        const resolution = Resolutions[resolutionName];\r\n\r\n        let quality = 100;\r\n        let packetLoss;\r\n\r\n        // TODO: take into account packet loss for received streams\r\n\r\n        if (this._localStats.packetLoss) {\r\n            packetLoss = this._localStats.packetLoss.upload;\r\n\r\n            // Ugly Hack Alert (UHA):\r\n            // The packet loss for the upload direction is calculated based on\r\n            // incoming RTCP Receiver Reports. Since we don't have RTCP\r\n            // termination for audio, these reports come from the actual\r\n            // receivers in the conference and therefore the reported packet\r\n            // loss includes loss from the bridge to the receiver.\r\n            // When we are sending video this effect is small, because the\r\n            // number of video packets is much larger than the number of audio\r\n            // packets (and our calculation is based on the total number of\r\n            // received and lost packets).\r\n            // When video is muted, however, the effect might be significant,\r\n            // but we don't know what it is. We do know that it is positive, so\r\n            // as a temporary solution, until RTCP termination is implemented\r\n            // for the audio streams, we relax the packet loss checks here.\r\n            if (isMuted) {\r\n                packetLoss *= 0.5;\r\n            }\r\n        }\r\n\r\n        if (isMuted || !resolution || videoType === VideoType.DESKTOP\r\n            || this._timeIceConnected < 0\r\n            || this._timeVideoUnmuted < 0) {\r\n\r\n            // Calculate a value based on packet loss only.\r\n            if (packetLoss === undefined) {\r\n                logger.error('Cannot calculate connection quality, unknown '\r\n                    + 'packet loss.');\r\n                quality = 100;\r\n            } else if (packetLoss <= 2) {\r\n                quality = 100; // Full 5 bars.\r\n            } else if (packetLoss <= 4) {\r\n                quality = 70; // 4 bars\r\n            } else if (packetLoss <= 6) {\r\n                quality = 50; // 3 bars\r\n            } else if (packetLoss <= 8) {\r\n                quality = 30; // 2 bars\r\n            } else if (packetLoss <= 12) {\r\n                quality = 10; // 1 bars\r\n            } else {\r\n                quality = 0; // Still 1 bar, but slower climb-up.\r\n            }\r\n        } else {\r\n            // Calculate a value based on the sending bitrate.\r\n\r\n            // Figure out if simulcast is in use\r\n            const activeTPC = this._conference.getActivePeerConnection();\r\n            const isSimulcastOn\r\n                = Boolean(activeTPC && activeTPC.isSimulcastOn());\r\n\r\n            const newVideoBitrateCap\r\n                = activeTPC && activeTPC.bandwidthLimiter\r\n                && activeTPC.bandwidthLimiter.getBandwidthLimit('video');\r\n\r\n            // If we had a cap set but there isn't one now, then it has\r\n            // just been 'lifted', so we should treat this like a new\r\n            // ramp up.\r\n            if (!newVideoBitrateCap && videoBitrateCap) {\r\n                this._timeLastBwCapRemoved = window.performance.now();\r\n\r\n                // Set the start bitrate to whatever we were just capped to\r\n                startBitrate = videoBitrateCap;\r\n            }\r\n            videoBitrateCap = newVideoBitrateCap;\r\n\r\n            // time since sending of video was enabled.\r\n            const millisSinceStart = window.performance.now()\r\n                - Math.max(this._timeVideoUnmuted,\r\n                    this._timeIceConnected,\r\n                    this._timeLastBwCapRemoved);\r\n\r\n            // expected sending bitrate in perfect conditions\r\n            let target\r\n                = getTarget(isSimulcastOn, resolution, millisSinceStart);\r\n\r\n            target = Math.min(0.9 * target, MAX_TARGET_BITRATE);\r\n\r\n            if (videoBitrateCap) {\r\n                target = Math.min(target, videoBitrateCap);\r\n            }\r\n\r\n            quality = 100 * this._localStats.bitrate.upload / target;\r\n\r\n            // Whatever the bitrate, drop early if there is significant loss\r\n            if (packetLoss && packetLoss >= 10) {\r\n                quality = Math.min(quality, 30);\r\n            }\r\n        }\r\n\r\n        // Make sure that the quality doesn't climb quickly\r\n        if (this._lastConnectionQualityUpdate > 0) {\r\n            const maxIncreasePerSecond = 2;\r\n            const prevConnectionQuality = this._localStats.connectionQuality;\r\n            const diffSeconds\r\n                = (window.performance.now() - this._lastConnectionQualityUpdate)\r\n                    / 1000;\r\n\r\n            quality\r\n                = Math.min(\r\n                    quality,\r\n                    prevConnectionQuality\r\n                        + (diffSeconds * maxIncreasePerSecond));\r\n        }\r\n\r\n        return Math.min(100, quality);\r\n    }\r\n\r\n    /**\r\n     * Updates the localConnectionQuality value\r\n     * @param values {number} the new value. Should be in [0, 100].\r\n     */\r\n    _updateLocalConnectionQuality(value) {\r\n        this._localStats.connectionQuality = value;\r\n        this._lastConnectionQualityUpdate = window.performance.now();\r\n    }\r\n\r\n    /**\r\n     * Broadcasts the local statistics to all other participants in the\r\n     * conference.\r\n     */\r\n    _broadcastLocalStats() {\r\n        // Send only the data that remote participants care about.\r\n        const data = {\r\n            bitrate: this._localStats.bitrate,\r\n            packetLoss: this._localStats.packetLoss,\r\n            connectionQuality: this._localStats.connectionQuality,\r\n            jvbRTT: this._localStats.jvbRTT,\r\n            serverRegion: this._localStats.serverRegion,\r\n            avgAudioLevels: this._localStats.localAvgAudioLevels\r\n        };\r\n\r\n        try {\r\n            this._conference.broadcastEndpointMessage({\r\n                type: STATS_MESSAGE_TYPE,\r\n                values: data });\r\n        } catch (e) {\r\n            // We often hit this in the beginning of a call, before the data\r\n            // channel is ready. It is not a big problem, because we will\r\n            // send the statistics again after a few seconds, and the error is\r\n            // already logged elsewhere. So just ignore it.\r\n\r\n            // let errorMsg = \"Failed to broadcast local stats\";\r\n            // logger.error(errorMsg, e);\r\n            // GlobalOnErrorHandler.callErrorHandler(\r\n            //    new Error(errorMsg + \": \" + e));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates the local statistics\r\n     * @param {TraceablePeerConnection} tpc the peerconnection which emitted\r\n     * the stats\r\n     * @param data new statistics\r\n     */\r\n    _updateLocalStats(tpc, data) {\r\n        // Update jvbRTT\r\n        if (!tpc.isP2P) {\r\n            const jvbRTT\r\n                = data.transport\r\n                    && data.transport.length && data.transport[0].rtt;\r\n\r\n            this._localStats.jvbRTT = jvbRTT ? jvbRTT : undefined;\r\n        }\r\n\r\n        // Do not continue with processing of other stats if they do not\r\n        // originate from the active peerconnection\r\n        if (tpc !== this._conference.getActivePeerConnection()) {\r\n            return;\r\n        }\r\n\r\n        let key;\r\n        const updateLocalConnectionQuality\r\n            = !this._conference.isConnectionInterrupted();\r\n        const localVideoTrack\r\n            = this._conference.getLocalVideoTrack();\r\n        const videoType\r\n            = localVideoTrack ? localVideoTrack.videoType : undefined;\r\n        const isMuted = localVideoTrack ? localVideoTrack.isMuted() : true;\r\n        const resolution = localVideoTrack ? localVideoTrack.resolution : null;\r\n\r\n        if (!isMuted) {\r\n            this._maybeUpdateUnmuteTime();\r\n        }\r\n\r\n        // Copy the fields already in 'data'.\r\n        for (key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                this._localStats[key] = data[key];\r\n            }\r\n        }\r\n\r\n        // And re-calculate the connectionQuality field.\r\n        if (updateLocalConnectionQuality) {\r\n            this._updateLocalConnectionQuality(\r\n                this._calculateConnectionQuality(\r\n                    videoType,\r\n                    isMuted,\r\n                    resolution));\r\n        }\r\n\r\n        this.eventEmitter.emit(\r\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\r\n            this._localStats);\r\n        this._broadcastLocalStats();\r\n    }\r\n\r\n    /**\r\n     * Updates remote statistics\r\n     * @param id the id of the remote participant\r\n     * @param data the statistics received\r\n     */\r\n    _updateRemoteStats(id, data) {\r\n        // Use only the fields we need\r\n        this._remoteStats[id] = {\r\n            bitrate: data.bitrate,\r\n            packetLoss: data.packetLoss,\r\n            connectionQuality: data.connectionQuality,\r\n            jvbRTT: data.jvbRTT,\r\n            serverRegion: data.serverRegion,\r\n            avgAudioLevels: data.avgAudioLevels\r\n        };\r\n\r\n        this.eventEmitter.emit(\r\n            ConnectionQualityEvents.REMOTE_STATS_UPDATED,\r\n            id,\r\n            this._remoteStats[id]);\r\n    }\r\n\r\n    /**\r\n     * Returns the local statistics.\r\n     * Exported only for use in jitsi-meet-torture.\r\n     */\r\n    getStats() {\r\n        return this._localStats;\r\n    }\r\n}\r\n","/* global __filename */\r\nimport { getLogger } from 'jitsi-meet-logger';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * A delayed ICE failed notification which is triggered only if the ICE\r\n * connection does not recover soon after or before the XMPP connection is\r\n * restored (if it was ever broken). If ICE fails while the XMPP connection is\r\n * not broken then the notifications will be sent after 2 seconds delay. This\r\n * extra delay is not intentional just a side effect of the code.\r\n * NOTE that this delayed task can only be used if PING is supported by the XMPP\r\n * server.\r\n */\r\nexport default class IceFailedNotification {\r\n    /**\r\n     * Creates new {@code DelayedIceFailed} task.\r\n     * @param {JitsiConference} conference\r\n     */\r\n    constructor(conference) {\r\n        this._conference = conference;\r\n    }\r\n\r\n    /**\r\n     * Starts the task.\r\n     * @param {JingleSessionPC} session - the JVB Jingle session.\r\n     */\r\n    start(session) {\r\n        // The 65 seconds are greater than the default Prosody's BOSH\r\n        // timeout of 60. This gives some time for the XMPP connection\r\n        // to recover.\r\n        this._conference.xmpp.ping(65000).then(\r\n            () => {\r\n                if (this._canceled) {\r\n                    return;\r\n                }\r\n\r\n                if (this._conference.isJvbConnectionInterrupted) {\r\n                    this._iceFailedTimeout = window.setTimeout(() => {\r\n                        logger.info(\r\n                            'Sending ICE failed'\r\n                            + ' - the connection has not recovered');\r\n                        this._iceFailedTimeout = undefined;\r\n                        session.sendIceFailedNotification();\r\n                    }, 2000);\r\n                } else {\r\n                    logger.info(\r\n                        'ICE connection restored - not sending ICE failed');\r\n                }\r\n            },\r\n            error => {\r\n                logger.error(\r\n                    'PING error/timeout - not sending ICE failed', error);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Cancels the task.\r\n     */\r\n    cancel() {\r\n        this._canceled = true;\r\n        if (this._iceFailedTimeout) {\r\n            window.clearTimeout(this._iceFailedTimeout);\r\n        }\r\n    }\r\n}\r\n","/* global __filename */\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\r\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport browser from '../browser';\r\nimport RTCEvents from '../../service/RTC/RTCEvents';\r\nimport Statistics from '../statistics/statistics';\r\nimport { createParticipantConnectionStatusEvent } from '../../service/statistics/AnalyticsEvents';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Default value of 500 milliseconds for\r\n * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\r\n *\r\n * @type {number}\r\n */\r\nconst DEFAULT_NOT_IN_LAST_N_TIMEOUT = 500;\r\n\r\n/**\r\n * Default value of 2000 milliseconds for\r\n * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\r\n *\r\n * @type {number}\r\n */\r\nconst DEFAULT_RTC_MUTE_TIMEOUT = 10000;\r\n\r\n/**\r\n * The time to wait a track to be restored. Track which was out of lastN\r\n * should be inactive and when entering lastN it becomes restoring and when\r\n * data is received from bridge it will become active, but if no data is\r\n * received for some time we set status of that participant connection to\r\n * interrupted.\r\n * @type {number}\r\n */\r\nconst DEFAULT_RESTORING_TIMEOUT = 10000;\r\n\r\n/**\r\n * Participant connection statuses.\r\n *\r\n * @type {{\r\n *      ACTIVE: string,\r\n *      INACTIVE: string,\r\n *      INTERRUPTED: string,\r\n *      RESTORING: string\r\n * }}\r\n */\r\nexport const ParticipantConnectionStatus = {\r\n    /**\r\n     * Status indicating that connection is currently active.\r\n     */\r\n    ACTIVE: 'active',\r\n\r\n    /**\r\n     * Status indicating that connection is currently inactive.\r\n     * Inactive means the connection was stopped on purpose from the bridge,\r\n     * like exiting lastN or adaptivity decided to drop video because of not\r\n     * enough bandwidth.\r\n     */\r\n    INACTIVE: 'inactive',\r\n\r\n    /**\r\n     * Status indicating that connection is currently interrupted.\r\n     */\r\n    INTERRUPTED: 'interrupted',\r\n\r\n    /**\r\n     * Status indicating that connection is currently restoring.\r\n     */\r\n    RESTORING: 'restoring'\r\n};\r\n\r\n/**\r\n * Class is responsible for emitting\r\n * JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED events.\r\n */\r\nexport default class ParticipantConnectionStatusHandler {\r\n    /* eslint-disable max-params*/\r\n    /**\r\n     * Calculates the new {@link ParticipantConnectionStatus} based on\r\n     * the values given for some specific remote user. It is assumed that\r\n     * the conference is currently in the JVB mode (in contrary to the P2P mode)\r\n     * @param {boolean} isConnectionActiveByJvb true if the JVB did not get any\r\n     * data from the user for the last 15 seconds.\r\n     * @param {boolean} isInLastN indicates whether the user is in the last N\r\n     * set. When set to false it means that JVB is not sending any video for\r\n     * the user.\r\n     * @param {boolean} isRestoringTimedout if true it means that the user has\r\n     * been outside of last N too long to be considered\r\n     * {@link ParticipantConnectionStatus.RESTORING}.\r\n     * @param {boolean} isVideoMuted true if the user is video muted and we\r\n     * should not expect to receive any video.\r\n     * @param {boolean} isVideoTrackFrozen if the current browser support video\r\n     * frozen detection then it will be set to true when the video track is\r\n     * frozen. If the current browser does not support frozen detection the it's\r\n     * always false.\r\n     * @return {ParticipantConnectionStatus} the new connection status for\r\n     * the user for whom the values above were provided.\r\n     * @private\r\n     */\r\n    static _getNewStateForJvbMode(\r\n            isConnectionActiveByJvb,\r\n            isInLastN,\r\n            isRestoringTimedout,\r\n            isVideoMuted,\r\n            isVideoTrackFrozen) {\r\n        if (!isConnectionActiveByJvb) {\r\n            // when there is a connection problem signaled from jvb\r\n            // it means no media was flowing for at least 15secs, so both audio\r\n            // and video are most likely interrupted\r\n            return ParticipantConnectionStatus.INTERRUPTED;\r\n        } else if (isVideoMuted) {\r\n            // If the connection is active according to JVB and the user is\r\n            // video muted there is no way for the connection to be inactive,\r\n            // because the detection logic below only makes sense for video.\r\n            return ParticipantConnectionStatus.ACTIVE;\r\n        }\r\n\r\n        // Logic when isVideoTrackFrozen is supported\r\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\r\n            if (!isVideoTrackFrozen) {\r\n                // If the video is playing we're good\r\n                return ParticipantConnectionStatus.ACTIVE;\r\n            } else if (isInLastN) {\r\n                return isRestoringTimedout\r\n                    ? ParticipantConnectionStatus.INTERRUPTED\r\n                    : ParticipantConnectionStatus.RESTORING;\r\n            }\r\n\r\n            return ParticipantConnectionStatus.INACTIVE;\r\n        }\r\n\r\n        // Because this browser is incapable of detecting frozen video we must\r\n        // rely on the lastN value\r\n        return isInLastN\r\n            ? ParticipantConnectionStatus.ACTIVE\r\n            : ParticipantConnectionStatus.INACTIVE;\r\n    }\r\n\r\n    /* eslint-enable max-params*/\r\n\r\n    /**\r\n     * In P2P mode we don't care about any values coming from the JVB and\r\n     * the connection status can be only active or interrupted.\r\n     * @param {boolean} isVideoMuted the user if video muted\r\n     * @param {boolean} isVideoTrackFrozen true if the video track for\r\n     * the remote user is currently frozen. If the current browser does not\r\n     * support video frozen detection then it's always false.\r\n     * @return {ParticipantConnectionStatus}\r\n     * @private\r\n     */\r\n    static _getNewStateForP2PMode(isVideoMuted, isVideoTrackFrozen) {\r\n        if (!browser.supportsVideoMuteOnConnInterrupted()) {\r\n            // There's no way to detect problems in P2P when there's no video\r\n            // track frozen detection...\r\n            return ParticipantConnectionStatus.ACTIVE;\r\n        }\r\n\r\n        return isVideoMuted || !isVideoTrackFrozen\r\n            ? ParticipantConnectionStatus.ACTIVE\r\n            : ParticipantConnectionStatus.INTERRUPTED;\r\n    }\r\n\r\n    /**\r\n     * Creates new instance of <tt>ParticipantConnectionStatus</tt>.\r\n     *\r\n     * @constructor\r\n     * @param {RTC} rtc the RTC service instance\r\n     * @param {JitsiConference} conference parent conference instance\r\n     * @param {Object} options\r\n     * @param {number} [options.rtcMuteTimeout=2000] custom value for\r\n     * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\r\n     * @param {number} [options.outOfLastNTimeout=500] custom value for\r\n     * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\r\n     */\r\n    constructor(rtc, conference, options) {\r\n        this.rtc = rtc;\r\n        this.conference = conference;\r\n\r\n        /**\r\n         * A map of the \"endpoint ID\"(which corresponds to the resource part\r\n         * of MUC JID(nickname)) to the timeout callback IDs scheduled using\r\n         * window.setTimeout.\r\n         * @type {Object.<string, number>}\r\n         */\r\n        this.trackTimers = {};\r\n\r\n        /**\r\n         * This map holds the endpoint connection status received from the JVB\r\n         * (as it might be different than the one stored in JitsiParticipant).\r\n         * Required for getting back in sync when remote video track is removed.\r\n         * @type {Object.<string, boolean>}\r\n         */\r\n        this.connStatusFromJvb = { };\r\n\r\n        /**\r\n         * If video track frozen detection through RTC mute event is supported,\r\n         * we wait some time until video track is considered frozen. But because\r\n         * when the user falls out of last N it is expected for the video to\r\n         * freeze this timeout must be significantly reduced in \"out of last N\"\r\n         * case.\r\n         *\r\n         * Basically this value is used instead of {@link rtcMuteTimeout} when\r\n         * user is not in last N.\r\n         * @type {number}\r\n         */\r\n        this.outOfLastNTimeout\r\n            = typeof options.outOfLastNTimeout === 'number'\r\n                ? options.outOfLastNTimeout : DEFAULT_NOT_IN_LAST_N_TIMEOUT;\r\n\r\n        /**\r\n         * How long we're going to wait after the RTC video track muted event\r\n         * for the corresponding signalling mute event, before the connection\r\n         * interrupted is fired. The default value is\r\n         * {@link DEFAULT_RTC_MUTE_TIMEOUT}.\r\n         *\r\n         * @type {number} amount of time in milliseconds\r\n         */\r\n        this.rtcMuteTimeout\r\n            = typeof options.rtcMuteTimeout === 'number'\r\n                ? options.rtcMuteTimeout : DEFAULT_RTC_MUTE_TIMEOUT;\r\n\r\n        /**\r\n         * This map holds a timestamp indicating  when participant's video track\r\n         * was RTC muted (it is assumed that each participant can have only 1\r\n         * video track at a time). The purpose of storing the timestamp is to\r\n         * avoid the transition to disconnected status in case of legitimate\r\n         * video mute operation where the signalling video muted event can\r\n         * arrive shortly after RTC muted event.\r\n         *\r\n         * The key is participant's ID which is the same as endpoint id in\r\n         * the Colibri conference allocated on the JVB.\r\n         *\r\n         * The value is a timestamp measured in milliseconds obtained with\r\n         * <tt>Date.now()</tt>.\r\n         *\r\n         * FIXME merge this logic with NO_DATA_FROM_SOURCE event\r\n         *       implemented in JitsiLocalTrack by extending the event to\r\n         *       the remote track and allowing to set different timeout for\r\n         *       local and remote tracks.\r\n         *\r\n         * @type {Object.<string, number>}\r\n         */\r\n        this.rtcMutedTimestamp = { };\r\n        logger.info(`RtcMuteTimeout set to: ${this.rtcMuteTimeout}`);\r\n\r\n        /**\r\n         * This map holds the timestamps indicating when participant's video\r\n         * entered lastN set. Participants entering lastN will have connection\r\n         * status restoring and when we start receiving video will become\r\n         * active, but if video is not received for certain time\r\n         * {@link DEFAULT_RESTORING_TIMEOUT} that participant connection status\r\n         * will become interrupted.\r\n         *\r\n         * @type {Map<string, number>}\r\n         */\r\n        this.enteredLastNTimestamp = new Map();\r\n\r\n        /**\r\n         * A map of the \"endpoint ID\"(which corresponds to the resource part\r\n         * of MUC JID(nickname)) to the restoring timeout callback IDs\r\n         * scheduled using window.setTimeout.\r\n         *\r\n         * @type {Map<string, number>}\r\n         */\r\n        this.restoringTimers = new Map();\r\n\r\n        /**\r\n         * A map that holds the current connection status (along with all the internal events that happen\r\n         * while in that state).\r\n         *\r\n         * The goal is to send this information to the analytics backend for post-mortem analysis.\r\n         */\r\n        this.connectionStatusMap = new Map();\r\n    }\r\n\r\n    /**\r\n     * Gets the video frozen timeout for given user.\r\n     * @param {string} id endpoint/participant ID\r\n     * @return {number} how long are we going to wait since RTC video muted\r\n     * even, before a video track is considered frozen.\r\n     * @private\r\n     */\r\n    _getVideoFrozenTimeout(id) {\r\n        return this.rtc.isInLastN(id)\r\n            ? this.rtcMuteTimeout : this.outOfLastNTimeout;\r\n    }\r\n\r\n    /**\r\n     * Initializes <tt>ParticipantConnectionStatus</tt> and bind required event\r\n     * listeners.\r\n     */\r\n    init() {\r\n\r\n        this._onEndpointConnStatusChanged\r\n            = this.onEndpointConnStatusChanged.bind(this);\r\n\r\n        this.rtc.addListener(\r\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\r\n            this._onEndpointConnStatusChanged);\r\n\r\n        // Handles P2P status changes\r\n        this._onP2PStatus = this.refreshConnectionStatusForAll.bind(this);\r\n        this.conference.on(JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\r\n\r\n        // Used to send analytics events for the participant that left the call.\r\n        this._onUserLeft = this.onUserLeft.bind(this);\r\n        this.conference.on(JitsiConferenceEvents.USER_LEFT, this._onUserLeft);\r\n\r\n        // On some browsers MediaStreamTrack trigger \"onmute\"/\"onunmute\"\r\n        // events for video type tracks when they stop receiving data which is\r\n        // often a sign that remote user is having connectivity issues\r\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\r\n\r\n            this._onTrackRtcMuted = this.onTrackRtcMuted.bind(this);\r\n            this.rtc.addListener(\r\n                RTCEvents.REMOTE_TRACK_MUTE, this._onTrackRtcMuted);\r\n\r\n            this._onTrackRtcUnmuted = this.onTrackRtcUnmuted.bind(this);\r\n            this.rtc.addListener(\r\n                RTCEvents.REMOTE_TRACK_UNMUTE, this._onTrackRtcUnmuted);\r\n\r\n            // Track added/removed listeners are used to bind \"mute\"/\"unmute\"\r\n            // event handlers\r\n            this._onRemoteTrackAdded = this.onRemoteTrackAdded.bind(this);\r\n            this.conference.on(\r\n                JitsiConferenceEvents.TRACK_ADDED,\r\n                this._onRemoteTrackAdded);\r\n\r\n            this._onRemoteTrackRemoved = this.onRemoteTrackRemoved.bind(this);\r\n            this.conference.on(\r\n                JitsiConferenceEvents.TRACK_REMOVED,\r\n                this._onRemoteTrackRemoved);\r\n\r\n            // Listened which will be bound to JitsiRemoteTrack to listen for\r\n            // signalling mute/unmute events.\r\n            this._onSignallingMuteChanged\r\n                = this.onSignallingMuteChanged.bind(this);\r\n\r\n            // Used to send an analytics event when the video type changes.\r\n            this._onTrackVideoTypeChanged\r\n                = this.onTrackVideoTypeChanged.bind(this);\r\n        }\r\n\r\n        this._onLastNChanged = this._onLastNChanged.bind(this);\r\n        this.conference.on(\r\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\r\n            this._onLastNChanged);\r\n\r\n        this._onLastNValueChanged\r\n            = this.refreshConnectionStatusForAll.bind(this);\r\n        this.rtc.on(\r\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\r\n    }\r\n\r\n    /**\r\n     * Removes all event listeners and disposes of all resources held by this\r\n     * instance.\r\n     */\r\n    dispose() {\r\n\r\n        this.rtc.removeListener(\r\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\r\n            this._onEndpointConnStatusChanged);\r\n\r\n        if (browser.supportsVideoMuteOnConnInterrupted()) {\r\n            this.rtc.removeListener(\r\n                RTCEvents.REMOTE_TRACK_MUTE,\r\n                this._onTrackRtcMuted);\r\n            this.rtc.removeListener(\r\n                RTCEvents.REMOTE_TRACK_UNMUTE,\r\n                this._onTrackRtcUnmuted);\r\n\r\n            this.conference.off(\r\n                JitsiConferenceEvents.TRACK_ADDED,\r\n                this._onRemoteTrackAdded);\r\n            this.conference.off(\r\n                JitsiConferenceEvents.TRACK_REMOVED,\r\n                this._onRemoteTrackRemoved);\r\n        }\r\n\r\n        this.conference.off(\r\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\r\n            this._onLastNChanged);\r\n\r\n        this.rtc.removeListener(\r\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\r\n\r\n        this.conference.off(\r\n            JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\r\n\r\n        this.conference.off(\r\n            JitsiConferenceEvents.USER_LEFT, this._onUserLeft);\r\n\r\n        const participantIds = Object.keys(this.trackTimers);\r\n\r\n        for (const participantId of participantIds) {\r\n            this.clearTimeout(participantId);\r\n            this.clearRtcMutedTimestamp(participantId);\r\n        }\r\n\r\n        for (const id in this.connectionStatusMap) {\r\n            if (this.connectionStatusMap.hasOwnProperty(id)) {\r\n                this.onUserLeft(id);\r\n            }\r\n        }\r\n\r\n        // Clear RTC connection status cache\r\n        this.connStatusFromJvb = {};\r\n    }\r\n\r\n    /**\r\n     * Handles RTCEvents.ENDPOINT_CONN_STATUS_CHANGED triggered when we receive\r\n     * notification over the data channel from the bridge about endpoint's\r\n     * connection status update.\r\n     * @param {string} endpointId - The endpoint ID(MUC nickname/resource JID).\r\n     * @param {boolean} isActive - true if the connection is OK or false otherwise.\r\n     */\r\n    onEndpointConnStatusChanged(endpointId, isActive) {\r\n\r\n        logger.debug(\r\n            `Detector RTCEvents.ENDPOINT_CONN_STATUS_CHANGED(${Date.now()}): ${\r\n                endpointId}: ${isActive}`);\r\n\r\n        // Filter out events for the local JID for now\r\n        if (endpointId !== this.conference.myUserId()) {\r\n            // Store the status received over the data channels\r\n            this.connStatusFromJvb[endpointId] = isActive;\r\n            this.figureOutConnectionStatus(endpointId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changes connection status.\r\n     * @param {JitsiParticipant} participant\r\n     * @param newStatus\r\n     */\r\n    _changeConnectionStatus(participant, newStatus) {\r\n        if (participant.getConnectionStatus() !== newStatus) {\r\n\r\n            const endpointId = participant.getId();\r\n\r\n            participant._setConnectionStatus(newStatus);\r\n\r\n            logger.debug(\r\n                `Emit endpoint conn status(${Date.now()}) ${endpointId}: ${\r\n                    newStatus}`);\r\n\r\n            // Log the event on CallStats\r\n            Statistics.sendLog(\r\n                JSON.stringify({\r\n                    id: 'peer.conn.status',\r\n                    participant: endpointId,\r\n                    status: newStatus\r\n                }));\r\n\r\n\r\n            this.conference.eventEmitter.emit(\r\n                JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED,\r\n                endpointId, newStatus);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset the postponed \"connection interrupted\" event which was previously\r\n     * scheduled as a timeout on RTC 'onmute' event.\r\n     *\r\n     * @param {string} participantId - The participant for which the \"connection\r\n     * interrupted\" timeout was scheduled.\r\n     */\r\n    clearTimeout(participantId) {\r\n        if (this.trackTimers[participantId]) {\r\n            window.clearTimeout(this.trackTimers[participantId]);\r\n            this.trackTimers[participantId] = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears the timestamp of the RTC muted event for participant's video track\r\n     * @param {string} participantId the id of the conference participant which\r\n     * is the same as the Colibri endpoint ID of the video channel allocated for\r\n     * the user on the videobridge.\r\n     */\r\n    clearRtcMutedTimestamp(participantId) {\r\n        this.rtcMutedTimestamp[participantId] = null;\r\n    }\r\n\r\n    /**\r\n     * Bind signalling mute event listeners for video {JitsiRemoteTrack} when\r\n     * a new one is added to the conference.\r\n     *\r\n     * @param {JitsiTrack} remoteTrack - The {JitsiTrack} which is being added to\r\n     * the conference.\r\n     */\r\n    onRemoteTrackAdded(remoteTrack) {\r\n        if (!remoteTrack.isLocal()\r\n                && remoteTrack.getType() === MediaType.VIDEO) {\r\n\r\n            logger.debug(\r\n                `Detector on remote track added for: ${\r\n                    remoteTrack.getParticipantId()}`);\r\n\r\n            remoteTrack.on(\r\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\r\n                this._onSignallingMuteChanged);\r\n            remoteTrack.on(\r\n                JitsiTrackEvents.TRACK_VIDEOTYPE_CHANGED,\r\n                videoType => this._onTrackVideoTypeChanged(remoteTrack, videoType));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes all event listeners bound to the remote video track and clears\r\n     * any related timeouts.\r\n     *\r\n     * @param {JitsiRemoteTrack} remoteTrack - The remote track which is being\r\n     * removed from the conference.\r\n     */\r\n    onRemoteTrackRemoved(remoteTrack) {\r\n        if (!remoteTrack.isLocal()\r\n                && remoteTrack.getType() === MediaType.VIDEO) {\r\n\r\n            const endpointId = remoteTrack.getParticipantId();\r\n\r\n            logger.debug(`Detector on remote track removed: ${endpointId}`);\r\n\r\n            remoteTrack.off(\r\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\r\n                this._onSignallingMuteChanged);\r\n\r\n            this.clearTimeout(endpointId);\r\n            this.clearRtcMutedTimestamp(endpointId);\r\n\r\n            this.figureOutConnectionStatus(endpointId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if given participant's video is considered frozen.\r\n     * @param {JitsiParticipant} participant - The participant.\r\n     * @return {boolean} <tt>true</tt> if the video has frozen for given\r\n     * participant or <tt>false</tt> when it's either not considered frozen\r\n     * (yet) or if freeze detection is not supported by the current browser.\r\n     *\r\n     * FIXME merge this logic with NO_DATA_FROM_SOURCE event\r\n     *       implemented in JitsiLocalTrack by extending the event to\r\n     *       the remote track and allowing to set different timeout for\r\n     *       local and remote tracks.\r\n     *\r\n     */\r\n    isVideoTrackFrozen(participant) {\r\n        if (!browser.supportsVideoMuteOnConnInterrupted()) {\r\n            return false;\r\n        }\r\n\r\n        const id = participant.getId();\r\n        const hasAnyVideoRTCMuted = participant.hasAnyVideoTrackWebRTCMuted();\r\n        const rtcMutedTimestamp = this.rtcMutedTimestamp[id];\r\n        const timeout = this._getVideoFrozenTimeout(id);\r\n\r\n        return hasAnyVideoRTCMuted\r\n            && typeof rtcMutedTimestamp === 'number'\r\n            && (Date.now() - rtcMutedTimestamp) >= timeout;\r\n    }\r\n\r\n    /**\r\n     * Goes over every participant and updates connectivity status.\r\n     * Should be called when a parameter which affects all of the participants\r\n     * is changed (P2P for example).\r\n     */\r\n    refreshConnectionStatusForAll() {\r\n        const participants = this.conference.getParticipants();\r\n\r\n        for (const participant of participants) {\r\n            this.figureOutConnectionStatus(participant.getId());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Figures out (and updates) the current connectivity status for\r\n     * the participant identified by the given id.\r\n     *\r\n     * @param {string} id - The participant's id (MUC nickname or Colibri endpoint ID).\r\n     */\r\n    figureOutConnectionStatus(id) {\r\n        const participant = this.conference.getParticipantById(id);\r\n\r\n        if (!participant) {\r\n            // Probably the participant is no longer in the conference\r\n            // (at the time of writing this code, participant is\r\n            // detached from the conference and TRACK_REMOVED events are\r\n            // fired),\r\n            // so we don't care, but let's print a log message for debugging purposes.\r\n            logger.debug(`figure out conn status - no participant for: ${id}`);\r\n\r\n            return;\r\n        }\r\n\r\n        const inP2PMode = this.conference.isP2PActive();\r\n        const isRestoringTimedOut = this._isRestoringTimedout(id);\r\n        const audioOnlyMode = this.rtc.getLastN() === 0;\r\n\r\n        // NOTE Overriding videoMuted to true for audioOnlyMode should disable\r\n        // any detection based on video playback or the last N.\r\n        const isVideoMuted = participant.isVideoMuted() || audioOnlyMode;\r\n        const isVideoTrackFrozen = this.isVideoTrackFrozen(participant);\r\n        const isInLastN = this.rtc.isInLastN(id);\r\n        let isConnActiveByJvb = this.connStatusFromJvb[id];\r\n\r\n        if (typeof isConnActiveByJvb !== 'boolean') {\r\n            // If no status was received from the JVB it means that it's active\r\n            // (the bridge does not send notification unless there is a problem)\r\n            logger.debug('Assuming connection active by JVB - no notification');\r\n            isConnActiveByJvb = true;\r\n        }\r\n\r\n        const newState\r\n            = inP2PMode\r\n                ? ParticipantConnectionStatusHandler._getNewStateForP2PMode(\r\n                    isVideoMuted,\r\n                    isVideoTrackFrozen)\r\n                : ParticipantConnectionStatusHandler._getNewStateForJvbMode(\r\n                    isConnActiveByJvb,\r\n                    isInLastN,\r\n                    isRestoringTimedOut,\r\n                    isVideoMuted,\r\n                    isVideoTrackFrozen);\r\n\r\n        // if the new state is not restoring clear timers and timestamps\r\n        // that we use to track the restoring state\r\n        if (newState !== ParticipantConnectionStatus.RESTORING) {\r\n            this._clearRestoringTimer(id);\r\n        }\r\n\r\n        logger.debug(\r\n            `Figure out conn status for ${id}, is video muted: ${\r\n                isVideoMuted} is active(jvb): ${\r\n                isConnActiveByJvb} video track frozen: ${\r\n                isVideoTrackFrozen} p2p mode: ${\r\n                inP2PMode} is in last N: ${\r\n                isInLastN} currentStatus => newStatus: ${\r\n                participant.getConnectionStatus()} => ${newState}`);\r\n\r\n        const oldConnectionStatus = this.connectionStatusMap[id] || {};\r\n\r\n        // Send an analytics event (guard on either the p2p flag or the connection status has changed\r\n        // since the last time this code block run).\r\n        if (!('p2p' in oldConnectionStatus)\r\n            || !('connectionStatus' in oldConnectionStatus)\r\n            || oldConnectionStatus.p2p !== inP2PMode\r\n            || oldConnectionStatus.connectionStatus !== newState) {\r\n\r\n            const nowMs = Date.now();\r\n\r\n            this.maybeSendParticipantConnectionStatusEvent(id, nowMs);\r\n\r\n            this.connectionStatusMap[id] = {\r\n                ...oldConnectionStatus,\r\n                connectionStatus: newState,\r\n                p2p: inP2PMode,\r\n                startedMs: nowMs\r\n            };\r\n\r\n            // sometimes (always?) we're late to hook the TRACK_VIDEOTYPE_CHANGED event and the\r\n            // video type is not in oldConnectionStatus.\r\n            if (!('videoType' in this.connectionStatusMap[id])) {\r\n                const videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\r\n\r\n                if (Array.isArray(videoTracks) && videoTracks.length !== 0) {\r\n                    this.connectionStatusMap[id].videoType = videoTracks[0].videoType;\r\n                }\r\n            }\r\n        }\r\n        this._changeConnectionStatus(participant, newState);\r\n    }\r\n\r\n    /**\r\n     * Computes the duration of the current connection status for the participant with the specified id (i.e. 15 seconds\r\n     * in the INTERRUPTED state) and sends a participant connection status event.\r\n     * @param {string} id - The jid of the participant.\r\n     * @param {Number} nowMs - The current time (in millis).\r\n     * @returns {void}\r\n     */\r\n    maybeSendParticipantConnectionStatusEvent(id, nowMs) {\r\n        const participantConnectionStatus = this.connectionStatusMap[id];\r\n\r\n        if (participantConnectionStatus\r\n            && 'startedMs' in participantConnectionStatus\r\n            && 'videoType' in participantConnectionStatus\r\n            && 'connectionStatus' in participantConnectionStatus\r\n            && 'p2p' in participantConnectionStatus) {\r\n            participantConnectionStatus.value = nowMs - participantConnectionStatus.startedMs;\r\n            Statistics.sendAnalytics(\r\n                createParticipantConnectionStatusEvent(participantConnectionStatus));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On change in Last N set check all leaving and entering participants to\r\n     * change their corresponding statuses.\r\n     *\r\n     * @param {Array<string>} leavingLastN - The array of ids leaving lastN.\r\n     * @param {Array<string>} enteringLastN - The array of ids entering lastN.\r\n     * @private\r\n     */\r\n    _onLastNChanged(leavingLastN = [], enteringLastN = []) {\r\n        const now = Date.now();\r\n\r\n        logger.debug(\r\n            'leaving/entering lastN', leavingLastN, enteringLastN, now);\r\n\r\n        for (const id of leavingLastN) {\r\n            this.enteredLastNTimestamp.delete(id);\r\n            this._clearRestoringTimer(id);\r\n            this.figureOutConnectionStatus(id);\r\n        }\r\n        for (const id of enteringLastN) {\r\n            // store the timestamp this id is entering lastN\r\n            this.enteredLastNTimestamp.set(id, now);\r\n            this.figureOutConnectionStatus(id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears the restoring timer for participant's video track and the\r\n     * timestamp for entering lastN.\r\n     *\r\n     * @param {string} participantId - The id of the conference participant which\r\n     * is the same as the Colibri endpoint ID of the video channel allocated for\r\n     * the user on the videobridge.\r\n     */\r\n    _clearRestoringTimer(participantId) {\r\n        const rTimer = this.restoringTimers.get(participantId);\r\n\r\n        if (rTimer) {\r\n            clearTimeout(rTimer);\r\n            this.restoringTimers.delete(participantId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks whether a track had stayed enough in restoring state, compares\r\n     * current time and the time the track entered in lastN. If it hasn't\r\n     * timedout and there is no timer added, add new timer in order to give it\r\n     * more time to become active or mark it as interrupted on next check.\r\n     *\r\n     * @param {string} participantId - The id of the conference participant which\r\n     * is the same as the Colibri endpoint ID of the video channel allocated for\r\n     * the user on the videobridge.\r\n     * @returns {boolean} <tt>true</tt> if the track was in restoring state\r\n     * more than the timeout ({@link DEFAULT_RESTORING_TIMEOUT}.) in order to\r\n     * set its status to interrupted.\r\n     * @private\r\n     */\r\n    _isRestoringTimedout(participantId) {\r\n        const enteredLastNTimestamp\r\n            = this.enteredLastNTimestamp.get(participantId);\r\n\r\n        if (enteredLastNTimestamp\r\n            && (Date.now() - enteredLastNTimestamp)\r\n                >= DEFAULT_RESTORING_TIMEOUT) {\r\n            return true;\r\n        }\r\n\r\n        // still haven't reached timeout, if there is no timer scheduled,\r\n        // schedule one so we can track the restoring state and change it after\r\n        // reaching the timeout\r\n        const rTimer = this.restoringTimers.get(participantId);\r\n\r\n        if (!rTimer) {\r\n            this.restoringTimers.set(participantId, setTimeout(\r\n                () => this.figureOutConnectionStatus(participantId),\r\n                DEFAULT_RESTORING_TIMEOUT));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Sends a last/final participant connection status event for the participant that left the conference.\r\n     * @param {string} id - The id of the participant that left the conference.\r\n     * @returns {void}\r\n     */\r\n    onUserLeft(id) {\r\n        this.maybeSendParticipantConnectionStatusEvent(id, Date.now());\r\n        delete this.connectionStatusMap[id];\r\n    }\r\n\r\n    /**\r\n     * Handles RTC 'onmute' event for the video track.\r\n     *\r\n     * @param {JitsiRemoteTrack} track - The video track for which 'onmute' event\r\n     * will be processed.\r\n     */\r\n    onTrackRtcMuted(track) {\r\n        const participantId = track.getParticipantId();\r\n        const participant = this.conference.getParticipantById(participantId);\r\n\r\n        logger.debug(`Detector track RTC muted: ${participantId}`, Date.now());\r\n        if (!participant) {\r\n            logger.error(`No participant for id: ${participantId}`);\r\n\r\n            return;\r\n        }\r\n        this.rtcMutedTimestamp[participantId] = Date.now();\r\n        if (!participant.isVideoMuted()) {\r\n            // If the user is not muted according to the signalling we'll give\r\n            // it some time, before the connection interrupted event is\r\n            // triggered.\r\n            this.clearTimeout(participantId);\r\n\r\n            // The timeout is reduced when user is not in the last N\r\n            const timeout = this._getVideoFrozenTimeout(participantId);\r\n\r\n            this.trackTimers[participantId] = window.setTimeout(() => {\r\n                logger.debug(\r\n                    `Set RTC mute timeout for: ${participantId}\\\r\n                     of ${timeout} ms`);\r\n                this.clearTimeout(participantId);\r\n                this.figureOutConnectionStatus(participantId);\r\n            }, timeout);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles RTC 'onunmute' event for the video track.\r\n     *\r\n     * @param {JitsiRemoteTrack} track - The video track for which 'onunmute'\r\n     * event will be processed.\r\n     */\r\n    onTrackRtcUnmuted(track) {\r\n        const participantId = track.getParticipantId();\r\n\r\n        logger.debug(\r\n            `Detector track RTC unmuted: ${participantId}`, Date.now());\r\n\r\n        this.clearTimeout(participantId);\r\n        this.clearRtcMutedTimestamp(participantId);\r\n\r\n        this.figureOutConnectionStatus(participantId);\r\n    }\r\n\r\n    /**\r\n     * Here the signalling \"mute\"/\"unmute\" events are processed.\r\n     *\r\n     * @param {JitsiRemoteTrack} track - The remote video track for which\r\n     * the signalling mute/unmute event will be processed.\r\n     */\r\n    onSignallingMuteChanged(track) {\r\n        const participantId = track.getParticipantId();\r\n\r\n        logger.debug(\r\n            `Detector on track signalling mute changed: ${participantId}`,\r\n            track.isMuted());\r\n\r\n        this.figureOutConnectionStatus(participantId);\r\n    }\r\n\r\n    /**\r\n     * Sends a participant connection status event as a result of the video type\r\n     * changing.\r\n     * @param {JitsiRemoteTrack} track - The track.\r\n     * @param {VideoType} type - The video type.\r\n     * @returns {void}\r\n     */\r\n    onTrackVideoTypeChanged(track, type) {\r\n        const id = track.getParticipantId();\r\n        const nowMs = Date.now();\r\n\r\n        this.maybeSendParticipantConnectionStatusEvent(id, nowMs);\r\n\r\n        this.connectionStatusMap[id] = {\r\n            ...this.connectionStatusMap[id] || {},\r\n            videoType: type,\r\n            startedMs: nowMs\r\n        };\r\n    }\r\n}\r\n","import { getLogger } from 'jitsi-meet-logger';\r\n\r\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\r\nimport RTC from '../RTC/RTC';\r\nimport Statistics from '../statistics/statistics';\r\n\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n// If after 3000 ms the detector did not find any active devices consider that there aren't any usable ones available\r\n// i.e. audioLevel > 0.008\r\nconst DETECTION_TIMEOUT = 3000;\r\n\r\n\r\n/**\r\n * Go through all audio devices on the system and return one that is active, i.e. has audio signal.\r\n *\r\n * @returns Promise<Object> - Object containing information about the found device.\r\n */\r\nexport default function getActiveAudioDevice() {\r\n\r\n    return new Promise(resolve => {\r\n        RTC.enumerateDevices(devices => {\r\n            const audioDevices = devices.filter(device => device.kind === 'audioinput');\r\n            const devicePromiseArray = [];\r\n\r\n\r\n            for (const micDevice of audioDevices) {\r\n                const devicePromise = RTC.obtainAudioAndVideoPermissions({ devices: [ 'audio' ],\r\n                    micDeviceId: micDevice.deviceId }).then(tracks => {\r\n\r\n                    // We expect a single device to be available when obtained from obtainAudioAndVideoPermissions\r\n                    // that's  why only take p.value[0].\r\n                    const track = tracks[0];\r\n                    const originalStream = track.getOriginalStream();\r\n\r\n                    Statistics.startLocalStats(originalStream, track.setAudioLevel.bind(track));\r\n                    track.addEventListener(JitsiTrackEvents.LOCAL_TRACK_STOPPED, () => {\r\n                        Statistics.stopLocalStats(originalStream);\r\n                    });\r\n\r\n                    return track;\r\n                });\r\n\r\n                devicePromiseArray.push(devicePromise);\r\n            }\r\n\r\n            Promise.allSettled(devicePromiseArray).then(outcomeArray => {\r\n                const successfulPromises = outcomeArray.filter(p => p.status === 'fulfilled');\r\n                const rejectedPromises = outcomeArray.filter(p => p.status === 'rejected');\r\n\r\n\r\n                const availableDevices = successfulPromises.map(p => p.value);\r\n                const rejectReasons = rejectedPromises.map(p => p.value);\r\n\r\n                for (const reason of rejectReasons) {\r\n                    logger.error('Failed to acquire audio device with error: ', reason);\r\n                }\r\n\r\n                // Setup event handlers for monitored devices.\r\n                for (const device of availableDevices) {\r\n                    device.on(JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED, audioLevel => {\r\n                        // This is a very naive approach but works, a more accurate one would be to use rnnoise in\r\n                        // order to limit  the number of false positives. The 0.008 constant is due to how\r\n                        // LocalStatsCollector from lib-jitsi-meet publishes audio-levels, in this case 0.008 denotes //\r\n                        // no input.\r\n                        if (audioLevel > 0.008) {\r\n                            stopActiveDevices(availableDevices);\r\n                            resolve({ deviceId: device.deviceId,\r\n                                deviceLabel: device.track.label });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                // Cancel the detection in case no devices was found with audioLevel > 0 in the set timeout.\r\n                setTimeout(() => {\r\n                    stopActiveDevices(availableDevices);\r\n                    resolve({\r\n                        deviceId: '',\r\n                        deviceLabel: '' }\r\n                    );\r\n                }, DETECTION_TIMEOUT);\r\n\r\n            });\r\n\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Stop the streams of the provided JitsiLocalTracks.\r\n *\r\n * @param {Array<JitsiLocalTrack>} deviceList - Array of JitsiLocalTracks to stop.\r\n * @returns {void}\r\n */\r\nfunction stopActiveDevices(deviceList) {\r\n    for (const device of deviceList) {\r\n        device.stopStream();\r\n    }\r\n}\r\n","/**\r\n * Event triggered by a audio detector indicating that its active state has changed from active to inactive or vice\r\n * versa.\r\n * @event\r\n * @type {boolean} - true when service has changed to active false otherwise.\r\n */\r\nexport const DETECTOR_STATE_CHANGE = 'detector_state_change';\r\n\r\n/** Event triggered by {@link NoAudioSignalDetector} when the local audio device associated with a JitsiConference\r\n * starts receiving audio levels with the value of 0 meaning no audio is being captured on that device, or when\r\n * it starts receiving audio levels !== 0 after being in a state of no audio.\r\n * @event\r\n * @type {boolean} - true when the current conference audio track has audio input false otherwise.\r\n */\r\nexport const AUDIO_INPUT_STATE_CHANGE = 'audio_input_state_changed';\r\n\r\n/** Event triggered by NoAudioSignalDetector when the local audio device associated with a JitsiConference goes silent\r\n * for a period of time, meaning that the device is either broken or hardware/software muted.\r\n * @event\r\n * @type {void}\r\n */\r\nexport const NO_AUDIO_INPUT = 'no_audio_input_detected';\r\n\r\n/**\r\n *  Event generated by {@link VADNoiseDetection} when the tracked device is considered noisy.\r\n *  @event\r\n *  @type {Object}\r\n */\r\nexport const VAD_NOISY_DEVICE = 'detection.vad_noise_device';\r\n\r\n/**\r\n * Event generated by VADReportingService when if finishes creating a VAD report for the monitored devices.\r\n * The generated objects are of type Array<Object>, one score for each monitored device.\r\n * @event VAD_REPORT_PUBLISHED\r\n * @type Array<Object> with the following structure:\r\n * @property {Date} timestamp - Timestamp at which the compute took place.\r\n * @property {number} avgVAD - Average VAD score over monitored period of time.\r\n * @property {string} deviceId - Associate local audio device ID.\r\n */\r\nexport const VAD_REPORT_PUBLISHED = 'vad-report-published';\r\n\r\n/**\r\n * Event generated by {@link TrackVADEmitter} when PCM sample VAD score is available.\r\n *\r\n * @event\r\n * @type {Object}\r\n * @property {Date}   timestamp - Exact time at which processed PCM sample was generated.\r\n * @property {number} score - VAD score on a scale from 0 to 1 (i.e. 0.7)\r\n * @property {Float32Array} pcmData - Raw PCM data with which the VAD score was calculated.\r\n * @property {string} deviceId - Device id of the associated track.\r\n */\r\nexport const VAD_SCORE_PUBLISHED = 'detection.vad_score_published';\r\n\r\n/**\r\n *  Event generated by {@link VADTalkMutedDetection} when a user is talking while the mic is muted.\r\n *\r\n *  @event\r\n *  @type {Object}\r\n */\r\nexport const VAD_TALK_WHILE_MUTED = 'detection.vad_talk_while_muted';\r\n","import EventEmitter from 'events';\r\n\r\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\r\n\r\nimport * as DetectionEvents from './DetectionEvents';\r\n\r\n// We wait a certain time interval for constant silence input from the current device to account for\r\n// potential abnormalities and for a better use experience i.e. don't generate event the instant\r\n// an audio track is added to the tcr.\r\n// Potential improvement - add this as a configurable parameter.\r\nconst SILENCE_PERIOD_MS = 4000;\r\n\r\n/**\r\n * Detect if there is no audio input on the current TraceAblePeerConnection selected track. The no audio\r\n * state must be constant for a configured amount of time in order for the event to be triggered.\r\n * @fires DetectionEvents.AUDIO_INPUT_STATE_CHANGE\r\n * @fires DetectionEvents.NO_AUDIO_INPUT\r\n */\r\nexport default class NoAudioSignalDetection extends EventEmitter {\r\n    /**\r\n     * Creates new NoAudioSignalDetection.\r\n     *\r\n     * @param conference the JitsiConference instance that created us.\r\n     * @constructor\r\n     */\r\n    constructor(conference) {\r\n        super();\r\n\r\n        this._conference = conference;\r\n        this._timeoutTrigger = null;\r\n        this._hasAudioInput = null;\r\n\r\n        conference.statistics.addAudioLevelListener(this._audioLevel.bind(this));\r\n        conference.on(JitsiConferenceEvents.TRACK_ADDED, this._trackAdded.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Clear the timeout state.\r\n     */\r\n    _clearTriggerTimeout() {\r\n        clearTimeout(this._timeoutTrigger);\r\n        this._timeoutTrigger = null;\r\n    }\r\n\r\n\r\n    /**\r\n     * Generated event triggered by a change in the current conference audio input state.\r\n     *\r\n     * @param {*} audioLevel - The audio level of the ssrc.\r\n     * @fires DetectionEvents.AUDIO_INPUT_STATE_CHANGE\r\n     */\r\n    _handleAudioInputStateChange(audioLevel) {\r\n        // Current audio input state of the active local track in the conference, true for audio input false for no\r\n        // audio input.\r\n        const status = audioLevel !== 0;\r\n\r\n        // If this is the first audio event picked up or the current status is different from the previous trigger\r\n        // the event.\r\n        if (this._hasAudioInput === null || this._hasAudioInput !== status) {\r\n            this._hasAudioInput = status;\r\n\r\n            this.emit(DetectionEvents.AUDIO_INPUT_STATE_CHANGE, this._hasAudioInput);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate event triggered by a prolonged period of no audio input.\r\n     *\r\n     * @param {number} audioLevel - The audio level of the ssrc.\r\n     * @fires DetectionEvents.NO_AUDIO_INPUT\r\n     */\r\n    _handleNoAudioInputDetection(audioLevel) {\r\n        if (this._eventFired) {\r\n            return;\r\n        }\r\n\r\n        if (audioLevel === 0 && !this._timeoutTrigger) {\r\n            this._timeoutTrigger = setTimeout(() => {\r\n                this._eventFired = true;\r\n\r\n                this.emit(DetectionEvents.NO_AUDIO_INPUT);\r\n            }, SILENCE_PERIOD_MS);\r\n        } else if (audioLevel !== 0 && this._timeoutTrigger) {\r\n            this._clearTriggerTimeout();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Receives audio level events for all send and receive streams on the current TraceablePeerConnection.\r\n     *\r\n     * @param {TraceablePeerConnection} tpc - TraceablePeerConnection of the owning conference.\r\n     * @param {number} ssrc - The synchronization source identifier (SSRC) of the endpoint/participant/stream\r\n     * being reported.\r\n     * @param {number} audioLevel - The audio level of the ssrc.\r\n     * @param {boolean} isLocal - true for local/send streams or false for remote/receive streams.\r\n     */\r\n    _audioLevel(tpc, ssrc, audioLevel, isLocal) {\r\n        // We are interested in the local audio streams\r\n        if (!isLocal || !this._audioTrack) {\r\n            return;\r\n        }\r\n\r\n        // Get currently active local tracks from the TraceablePeerConnection\r\n        const localSSRCs = tpc.localSSRCs.get(this._audioTrack.rtcId);\r\n\r\n\r\n        // Only target the current active track in the tpc. For some reason audio levels for previous\r\n        // devices are also picked up from the PeerConnection so we filter them out.\r\n        if (!localSSRCs || !localSSRCs.ssrcs.includes(ssrc)) {\r\n            return;\r\n        }\r\n\r\n        // First handle audio input state change. In case the state changed to no input the no audio input event\r\n        // can try to fire again.\r\n        this._handleAudioInputStateChange(audioLevel);\r\n        this._handleNoAudioInputDetection(audioLevel);\r\n\r\n    }\r\n\r\n    /**\r\n     * Notifies NoAudioSignalDetection that a JitsiTrack was added to the associated JitsiConference.\r\n     * Only take into account local audio tracks.\r\n     *\r\n     * @param {JitsiTrack} track - The added JitsiTrack.\r\n     */\r\n    _trackAdded(track) {\r\n        if (track.isLocalAudioTrack()) {\r\n            // Reset state for the new track.\r\n            this._audioTrack = track;\r\n            this._eventFired = false;\r\n            this._clearTriggerTimeout();\r\n        }\r\n    }\r\n}\r\n","import * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\r\nimport RTCEvents from '../../service/RTC/RTCEvents';\r\n\r\n/**\r\n * The value which we use to say, every sound over this threshold\r\n * is talking on the mic.\r\n * @type {number}\r\n */\r\nconst SPEECH_DETECT_THRESHOLD = 0.6;\r\n\r\n/**\r\n * The <tt>P2PDominantSpeakerDetection</tt> is activated only when p2p is\r\n * currently used.\r\n * Listens for changes in the audio level changes of the local p2p audio track\r\n * or remote p2p one and fires dominant speaker events to be able to use\r\n * features depending on those events (speaker stats), to make them work without\r\n * the video bridge.\r\n */\r\nexport default class P2PDominantSpeakerDetection {\r\n    /**\r\n     * Creates P2PDominantSpeakerDetection\r\n     * @param conference the JitsiConference instance that created us.\r\n     * @constructor\r\n     */\r\n    constructor(conference) {\r\n        this.conference = conference;\r\n\r\n        conference.addEventListener(\r\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\r\n            this._audioLevel.bind(this));\r\n\r\n        this.myUserID = this.conference.myUserId();\r\n    }\r\n\r\n    /**\r\n     * Receives audio level events for all streams in the conference.\r\n     *\r\n     * @param {String} id - The participant id\r\n     * @param {number} audioLevel - The audio level.\r\n     */\r\n    _audioLevel(id, audioLevel) {\r\n\r\n        // we do not process if p2p is not active\r\n        // or audio level is under certain threshold\r\n        // or if the audio level is for local audio track which is muted\r\n        if (!this.conference.isP2PActive()\r\n            || audioLevel <= SPEECH_DETECT_THRESHOLD\r\n            || (id === this.myUserID\r\n                    && this.conference.getLocalAudioTrack().isMuted())) {\r\n            return;\r\n        }\r\n\r\n        this.conference.rtc.eventEmitter.emit(\r\n            RTCEvents.DOMINANT_SPEAKER_CHANGED,\r\n            id);\r\n    }\r\n}\r\n","import * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\r\n\r\n/**\r\n * The value which we use to say, every sound over this threshold\r\n * is talking on the mic.\r\n * @type {number}\r\n */\r\nconst SPEECH_DETECT_THRESHOLD = 0.6;\r\n\r\n/**\r\n * Detect user trying to speek while is locally muted and fires an event.\r\n */\r\nexport default class TalkMutedDetection {\r\n    /**\r\n     * Creates TalkMutedDetection\r\n     * @param conference the JitsiConference instance that created us.\r\n     * @param callback the callback to call when detected that the local user is\r\n     * talking while her microphone is muted.\r\n     * @constructor\r\n     */\r\n    constructor(conference, callback) {\r\n        /**\r\n         * The callback to call when detected that the local user is talking\r\n         * while her microphone is muted.\r\n         *\r\n         * @private\r\n         */\r\n        this._callback = callback;\r\n\r\n        /**\r\n         * The indicator which determines whether <tt>callback</tt> has been\r\n         * invoked for the current local audio track of <tt>conference</tt> so\r\n         * that it is invoked once only.\r\n         *\r\n         * @private\r\n         */\r\n        this._eventFired = false;\r\n\r\n        // XXX I went back and forth on the subject of where to put the access\r\n        // to statistics. On the one had, (1) statistics is likely intended to\r\n        // be private to conference and (2) there is a desire to keep the\r\n        // dependencies of modules to the minimum (i.e. not have\r\n        // TalkMutedDetection depend on statistics). On the other hand, (1)\r\n        // statistics is technically not private because\r\n        // JitsiConferenceEventManager accesses it and (2) TalkMutedDetection\r\n        // works exactly because it knows that there are no audio levels for\r\n        // JitsiLocalTrack but there are audio levels for the local participant\r\n        // through statistics.\r\n        conference.statistics.addAudioLevelListener(\r\n            this._audioLevel.bind(this));\r\n\r\n        conference.on(\r\n            JitsiConferenceEvents.TRACK_MUTE_CHANGED,\r\n            this._trackMuteChanged.bind(this));\r\n        conference.on(\r\n            JitsiConferenceEvents.TRACK_ADDED,\r\n            this._trackAdded.bind(this));\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n    /**\r\n     * Receives audio level events for all send and receive streams.\r\n     *\r\n     * @param {TraceablePeerConnection} pc - WebRTC PeerConnection object of the\r\n     * @param {number} ssrc - The synchronization source identifier (SSRC) of\r\n     * the endpoint/participant/stream being reported.\r\n     * @param {number} audioLevel - The audio level of <tt>ssrc</tt>.\r\n     * @param {boolean} isLocal - <tt>true</tt> if <tt>ssrc</tt> represents a\r\n     * local/send stream or <tt>false</tt> for a remote/receive stream.\r\n     */\r\n    _audioLevel(tpc, ssrc, audioLevel, isLocal) {\r\n        // We are interested in the local audio stream only and if event is not\r\n        // sent yet.\r\n        if (!isLocal || !this.audioTrack || this._eventFired) {\r\n            return;\r\n        }\r\n\r\n        if (this.audioTrack.isMuted()\r\n            && audioLevel > SPEECH_DETECT_THRESHOLD) {\r\n            this._eventFired = true;\r\n            this._callback();\r\n        }\r\n    }\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Determines whether a specific {@link JitsiTrack} represents a local audio\r\n     * track.\r\n     *\r\n     * @param {JitsiTrack} track - The <tt>JitsiTrack</tt> to be checked whether\r\n     * it represents a local audio track.\r\n     * @private\r\n     * @return {boolean} - <tt>true</tt> if the specified <tt>track</tt>\r\n     * represents a local audio track; otherwise, <tt>false</tt>.\r\n     */\r\n    _isLocalAudioTrack(track) {\r\n        return track.isAudioTrack() && track.isLocal();\r\n    }\r\n\r\n    /**\r\n     * Notifies this <tt>TalkMutedDetection</tt> that a {@link JitsiTrack} was\r\n     * added to the associated {@link JitsiConference}. Looks for the local\r\n     * audio track only.\r\n     *\r\n     * @param {JitsiTrack} track - The added <tt>JitsiTrack</tt>.\r\n     * @private\r\n     */\r\n    _trackAdded(track) {\r\n        if (this._isLocalAudioTrack(track)) {\r\n            this.audioTrack = track;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Notifies this <tt>TalkMutedDetection</tt> that the mute state of a\r\n     * {@link JitsiTrack} has changed. Looks for the local audio track only.\r\n     *\r\n     * @param {JitsiTrack} track - The <tt>JitsiTrack</tt> whose mute state has\r\n     * changed.\r\n     * @private\r\n     */\r\n    _trackMuteChanged(track) {\r\n        if (this._isLocalAudioTrack(track) && track.isMuted()) {\r\n            this._eventFired = false;\r\n        }\r\n    }\r\n}\r\n","import EventEmitter from 'events';\r\n\r\nimport RTC from '../RTC/RTC';\r\n\r\nimport { createAudioContext } from '../webaudio/WebAudioUtils';\r\nimport { VAD_SCORE_PUBLISHED } from './DetectionEvents';\r\n\r\n/**\r\n * Connects an audio JitsiLocalTrack to a vadProcessor using WebAudio ScriptProcessorNode.\r\n * Once an object is created audio from the local track flows through the ScriptProcessorNode as raw PCM.\r\n * The PCM is processed by the injected vad module and a voice activity detection score is obtained, the\r\n * score is published to consumers via an EventEmitter.\r\n * After work is done with this service the destroy method needs to be called for a proper cleanup.\r\n *\r\n * @fires VAD_SCORE_PUBLISHED\r\n */\r\nexport default class TrackVADEmitter extends EventEmitter {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param {number} procNodeSampleRate - Sample rate of the ScriptProcessorNode. Possible values  256, 512, 1024,\r\n     *  2048, 4096, 8192, 16384. Passing other values will default to closes neighbor.\r\n     * @param {Object} vadProcessor - VAD processor that allows us to calculate VAD score for PCM samples.\r\n     * @param {JitsiLocalTrack} jitsiLocalTrack - JitsiLocalTrack corresponding to micDeviceId.\r\n     */\r\n    constructor(procNodeSampleRate, vadProcessor, jitsiLocalTrack) {\r\n        super();\r\n\r\n        /**\r\n         * Sample rate of the ScriptProcessorNode.\r\n         */\r\n        this._procNodeSampleRate = procNodeSampleRate;\r\n\r\n        /**\r\n         * VAD Processor that allows us to calculate VAD score for PCM samples\r\n         */\r\n        this._vadProcessor = vadProcessor;\r\n\r\n        /**\r\n         * The JitsiLocalTrack instance.\r\n         */\r\n        this._localTrack = jitsiLocalTrack;\r\n\r\n        /**\r\n         * Buffer to hold residue PCM resulting after a ScriptProcessorNode callback\r\n         */\r\n        this._bufferResidue = new Float32Array([]);\r\n\r\n        /**\r\n         * The AudioContext instance with the preferred sample frequency.\r\n         */\r\n        this._audioContext = createAudioContext({ sampleRate: vadProcessor.getRequiredPCMFrequency() });\r\n\r\n        /**\r\n         * PCM Sample size expected by the VAD Processor instance. We cache it here as this value is used extensively,\r\n         * saves a couple of function calls.\r\n         */\r\n        this._vadSampleSize = vadProcessor.getSampleLength();\r\n\r\n        /**\r\n         * Event listener function that will be called by the ScriptProcessNode with raw PCM data, depending on the set\r\n         * sample rate.\r\n         */\r\n        this._onAudioProcess = this._onAudioProcess.bind(this);\r\n\r\n        this._initializeAudioContext();\r\n    }\r\n\r\n    /**\r\n     * Factory method that sets up all the necessary components for the creation of the TrackVADEmitter.\r\n     *\r\n     * @param {string} micDeviceId - Target microphone device id.\r\n     * @param {number} procNodeSampleRate - Sample rate of the proc node.\r\n     * @param {Object} vadProcessor -Module that calculates the voice activity score for a certain audio PCM sample.\r\n     * The processor needs to implement the following functions:\r\n     * - <tt>getSampleLength()</tt> - Returns the sample size accepted by getSampleLength.\r\n     * - <tt>getRequiredPCMFrequency()</tt> - Returns the PCM frequency at which the processor operates.\r\n     * - <tt>calculateAudioFrameVAD(pcmSample)</tt> - Process a 32 float pcm sample of getSampleLength size.\r\n     * @returns {Promise<TrackVADEmitter>} - Promise resolving in a new instance of TrackVADEmitter.\r\n     */\r\n    static create(micDeviceId, procNodeSampleRate, vadProcessor) {\r\n        return RTC.obtainAudioAndVideoPermissions({\r\n            devices: [ 'audio' ],\r\n            micDeviceId\r\n        }).then(localTrack => {\r\n            // We only expect one audio track when specifying a device id.\r\n            if (!localTrack[0]) {\r\n                throw new Error(`Failed to create jitsi local track for device id: ${micDeviceId}`);\r\n            }\r\n\r\n            return new TrackVADEmitter(procNodeSampleRate, vadProcessor, localTrack[0]);\r\n\r\n            // We have no exception handling at this point as there is nothing to clean up, the vadProcessor\r\n            // life cycle is handled by whoever created this instance.\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets up the audio graph in the AudioContext.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    _initializeAudioContext() {\r\n        this._audioSource = this._audioContext.createMediaStreamSource(this._localTrack.stream);\r\n\r\n        // TODO AudioProcessingNode is deprecated in the web audio specifications and the recommended replacement\r\n        // is audio worklet, however at the point of implementation AudioProcessingNode was still de de facto way\r\n        // of achieving this functionality and supported in all major browsers as opposed to audio worklet which\r\n        // was only available in Chrome. This todo is just a reminder that we should replace AudioProcessingNode\r\n        // with audio worklet when it's mature enough and has more browser support.\r\n        // We don't need stereo for determining the VAD score so we create a single channel processing node.\r\n        this._audioProcessingNode = this._audioContext.createScriptProcessor(this._procNodeSampleRate, 1, 1);\r\n    }\r\n\r\n    /**\r\n     * ScriptProcessorNode callback, the input parameters contains the PCM audio that is then sent to rnnoise.\r\n     * Rnnoise only accepts PCM samples of 480 bytes whereas the webaudio processor node can't sample at a multiple\r\n     * of 480 thus after each _onAudioProcess callback there will remain and PCM buffer residue equal\r\n     * to _procNodeSampleRate / 480 which will be added to the next sample buffer and so on.\\\r\n     *\r\n     *\r\n     * @param {AudioProcessingEvent} audioEvent - Audio event.\r\n     * @returns {void}\r\n     * @fires VAD_SCORE_PUBLISHED\r\n     */\r\n    _onAudioProcess(audioEvent) {\r\n        // Prepend the residue PCM buffer from the previous process callback.\r\n        const inData = audioEvent.inputBuffer.getChannelData(0);\r\n        const completeInData = [ ...this._bufferResidue, ...inData ];\r\n        const sampleTimestamp = Date.now();\r\n\r\n        let i = 0;\r\n\r\n        for (; i + this._vadSampleSize < completeInData.length; i += this._vadSampleSize) {\r\n            const pcmSample = completeInData.slice(i, i + this._vadSampleSize);\r\n\r\n            // The VAD processor might change the values inside the array so we make a copy.\r\n            const vadScore = this._vadProcessor.calculateAudioFrameVAD(pcmSample.slice());\r\n\r\n            this.emit(VAD_SCORE_PUBLISHED, {\r\n                timestamp: sampleTimestamp,\r\n                score: vadScore,\r\n                pcmData: pcmSample,\r\n                deviceId: this._localTrack.getDeviceId()\r\n            });\r\n        }\r\n\r\n        this._bufferResidue = completeInData.slice(i, completeInData.length);\r\n    }\r\n\r\n    /**\r\n     * Connects the nodes in the AudioContext to start the flow of audio data.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    _connectAudioGraph() {\r\n        this._audioProcessingNode.onaudioprocess = this._onAudioProcess;\r\n        this._audioSource.connect(this._audioProcessingNode);\r\n        this._audioProcessingNode.connect(this._audioContext.destination);\r\n    }\r\n\r\n    /**\r\n     * Disconnects the nodes in the AudioContext.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    _disconnectAudioGraph() {\r\n        // Even thought we disconnect the processing node it seems that some callbacks remain queued,\r\n        // resulting in calls with and uninitialized context.\r\n        // eslint-disable-next-line no-empty-function\r\n        this._audioProcessingNode.onaudioprocess = () => {};\r\n        this._audioProcessingNode.disconnect();\r\n        this._audioSource.disconnect();\r\n    }\r\n\r\n    /**\r\n     * Cleanup potentially acquired resources.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    _cleanupResources() {\r\n        this._disconnectAudioGraph();\r\n        this._localTrack.stopStream();\r\n    }\r\n\r\n    /**\r\n     * Get the associated track device ID.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getDeviceId() {\r\n        return this._localTrack.getDeviceId();\r\n    }\r\n\r\n\r\n    /**\r\n     * Get the associated track label.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getTrackLabel() {\r\n        return this._localTrack.getDeviceLabel();\r\n    }\r\n\r\n    /**\r\n     * Start the emitter by connecting the audio graph.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    start() {\r\n        this._connectAudioGraph();\r\n    }\r\n\r\n    /**\r\n     * Stops the emitter by disconnecting the audio graph.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    stop() {\r\n        this._disconnectAudioGraph();\r\n        this._bufferResidue = [];\r\n    }\r\n\r\n    /**\r\n     * Destroy TrackVADEmitter instance (release resources and stop callbacks).\r\n     *\r\n     * @returns {void}\r\n     */\r\n    destroy() {\r\n        if (this._destroyed) {\r\n            return;\r\n        }\r\n\r\n        this._cleanupResources();\r\n        this._destroyed = true;\r\n    }\r\n}\r\n","import { EventEmitter } from 'events';\r\nimport { getLogger } from 'jitsi-meet-logger';\r\n\r\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\r\n\r\nimport { VAD_SCORE_PUBLISHED, DETECTOR_STATE_CHANGE } from './DetectionEvents';\r\nimport TrackVADEmitter from './TrackVADEmitter';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Sample rate of TrackVADEmitter, it defines how many audio samples are processed at a time.\r\n * @type {number}\r\n */\r\nconst VAD_EMITTER_SAMPLE_RATE = 4096;\r\n\r\n/**\r\n * Connects a TrackVADEmitter to the target conference local audio track and manages various services that use\r\n * the data to produce audio analytics (VADTalkMutedDetection and VADNoiseDetection).\r\n */\r\nexport default class VADAudioAnalyser extends EventEmitter {\r\n    /**\r\n     * Creates <tt>VADAudioAnalyser</tt>\r\n     * @param {JitsiConference} conference - JitsiConference instance that created us.\r\n     * @param {Object} createVADProcessor - Function that creates a Voice activity detection processor. The processor\r\n     * needs to implement the following functions:\r\n     * - <tt>getSampleLength()</tt> - Returns the sample size accepted by getSampleLength.\r\n     * - <tt>getRequiredPCMFrequency()</tt> - Returns the PCM frequency at which the processor operates.\r\n     * - <tt>calculateAudioFrameVAD(pcmSample)</tt> - Process a 32 float pcm sample of getSampleLength size.\r\n     * @constructor\r\n     */\r\n    constructor(conference, createVADProcessor) {\r\n        super();\r\n\r\n        /**\r\n         * Member function that instantiates a VAD processor.\r\n         */\r\n        this._createVADProcessor = createVADProcessor;\r\n\r\n        /**\r\n         * Current {@link TrackVADEmitter}. VAD Emitter uses a {@link JitsiLocalTrack} and VAD processor to generate\r\n         * period voice probability scores.\r\n         */\r\n        this._vadEmitter = null;\r\n\r\n        /**\r\n         * Current state of the _vadEmitter\r\n         */\r\n        this._isVADEmitterRunning = false;\r\n\r\n        /**\r\n         * Array of currently attached VAD processing services.\r\n         */\r\n        this._detectionServices = [];\r\n\r\n        /**\r\n         * Promise used to chain create and destroy operations associated with TRACK_ADDED and TRACK_REMOVED events\r\n         * coming from the conference.\r\n         * Because we have an async created component (VAD Processor) we need to make sure that it's initialized before\r\n         * we destroy it ( when changing the device for instance), or when we use it from an external point of entry\r\n         * i.e. (TRACK_MUTE_CHANGED event callback).\r\n         */\r\n        this._vadInitTracker = Promise.resolve();\r\n\r\n        /**\r\n         * Listens for {@link TrackVADEmitter} events and processes them.\r\n         */\r\n        this._processVADScore = this._processVADScore.bind(this);\r\n\r\n        conference.on(JitsiConferenceEvents.TRACK_ADDED, this._trackAdded.bind(this));\r\n        conference.on(JitsiConferenceEvents.TRACK_REMOVED, this._trackRemoved.bind(this));\r\n        conference.on(JitsiConferenceEvents.TRACK_MUTE_CHANGED, this._trackMuteChanged.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Attach a VAD detector service to the analyser and handle it's state changes.\r\n     *\r\n     * @param {Object} vadTMDetector\r\n     */\r\n    addVADDetectionService(vadService) {\r\n        this._detectionServices.push(vadService);\r\n        vadService.on(DETECTOR_STATE_CHANGE, () => {\r\n            // When the state of a detector changes check if there are any active detectors attached so that\r\n            // the _vadEmitter doesn't run needlessly.\r\n            const activeDetector = this._detectionServices.filter(detector => detector.isActive() === true);\r\n\r\n            // If there are no active detectors running and the vadEmitter is running then stop the emitter as it is\r\n            // uses a considerable amount of CPU. Otherwise start the service if it's stopped and there is a detector\r\n            // that needs it.\r\n            if (!activeDetector.length && this._isVADEmitterRunning) {\r\n                this._stopVADEmitter();\r\n            } else if (!this._isVADEmitterRunning) {\r\n                this._startVADEmitter();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Start the {@link TrackVADEmitter} and attach the event listener.\r\n     * @returns {void}\r\n     */\r\n    _startVADEmitter() {\r\n        this._vadEmitter.on(VAD_SCORE_PUBLISHED, this._processVADScore);\r\n        this._vadEmitter.start();\r\n        this._isVADEmitterRunning = true;\r\n    }\r\n\r\n    /**\r\n     * Stop the {@link TrackVADEmitter} and detach the event listener.\r\n     * @returns {void}\r\n     */\r\n    _stopVADEmitter() {\r\n        this._vadEmitter.removeListener(VAD_SCORE_PUBLISHED, this._processVADScore);\r\n        this._vadEmitter.stop();\r\n        this._isVADEmitterRunning = false;\r\n    }\r\n\r\n    /**\r\n     * Listens for {@link TrackVADEmitter} events and directs them to attached services as needed.\r\n     *\r\n     * @param {Object} vadScore -VAD score emitted by {@link TrackVADEmitter}\r\n     * @param {Date}   vadScore.timestamp - Exact time at which processed PCM sample was generated.\r\n     * @param {number} vadScore.score - VAD score on a scale from 0 to 1 (i.e. 0.7)\r\n     * @param {Float32Array} pcmData - Raw PCM data with which the VAD score was calculated.\r\n     * @param {string} vadScore.deviceId - Device id of the associated track.\r\n     * @listens VAD_SCORE_PUBLISHED\r\n     */\r\n    _processVADScore(vadScore) {\r\n        for (const detector of this._detectionServices) {\r\n            detector.processVADScore(vadScore);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change the isMuted state of all attached detection services.\r\n     *\r\n     * @param {boolean} isMuted\r\n     */\r\n    _changeDetectorsMuteState(isMuted) {\r\n        for (const detector of this._detectionServices) {\r\n            detector.changeMuteState(isMuted);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Notifies the detector that a track was added to the associated {@link JitsiConference}.\r\n     * Only take into account local audio tracks.\r\n     * @param {JitsiTrack} track - The added track.\r\n     * @returns {void}\r\n     * @listens TRACK_ADDED\r\n     */\r\n    _trackAdded(track) {\r\n        if (track.isLocalAudioTrack()) {\r\n            // Keep a track promise so we take into account successive TRACK_ADD events being generated so that we\r\n            // destroy/create the processing context in the proper order.\r\n            this._vadInitTracker = this._vadInitTracker.then(() => this._createVADProcessor())\r\n                .then(vadProcessor =>\r\n                    TrackVADEmitter.create(track.getDeviceId(), VAD_EMITTER_SAMPLE_RATE, vadProcessor)\r\n                )\r\n                .then(vadEmitter => {\r\n                    logger.debug('Created VAD emitter for track: ', track.getTrackLabel());\r\n\r\n                    this._vadEmitter = vadEmitter;\r\n\r\n                    // Iterate through the detection services and set their appropriate mute state, depending on\r\n                    // service this will trigger a DETECTOR_STATE_CHANGE which in turn might start the _vadEmitter.\r\n                    this._changeDetectorsMuteState(track.isMuted());\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Notifies the detector that the mute state of a {@link JitsiConference} track has changed. Only takes into account\r\n     * local audio tracks.\r\n     * @param {JitsiTrack} track - The track whose mute state has changed.\r\n     * @returns {void}\r\n     * @listens TRACK_MUTE_CHANGED\r\n     */\r\n    _trackMuteChanged(track) {\r\n        if (track.isLocalAudioTrack()) {\r\n            // On a mute toggle reset the state.\r\n            this._vadInitTracker = this._vadInitTracker.then(() => {\r\n                // Set mute status for the attached detection services.\r\n                this._changeDetectorsMuteState(track.isMuted());\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Notifies the detector that a track associated with the {@link JitsiConference} was removed. Only takes into\r\n     * account local audio tracks. Cleans up resources associated with the track and resets the processing context.\r\n     *\r\n     * @param {JitsiTrack} track - The removed track.\r\n     * @returns {void}\r\n     * @listens TRACK_REMOVED\r\n     */\r\n    _trackRemoved(track) {\r\n        if (track.isLocalAudioTrack()) {\r\n            // Use the promise to make sure operations are in sequence.\r\n            this._vadInitTracker = this._vadInitTracker.then(() => {\r\n                logger.debug('Removing track from VAD detection - ', track.getTrackLabel());\r\n\r\n                // Track was removed, clean up and set appropriate states.\r\n                if (this._vadEmitter) {\r\n                    this._stopVADEmitter();\r\n                    this._vadEmitter.destroy();\r\n                    this._vadEmitter = null;\r\n                }\r\n\r\n                // Reset state of detectors when active track is removed.\r\n                for (const detector of this._detectionServices) {\r\n                    detector.reset();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { EventEmitter } from 'events';\r\n\r\nimport { calculateAverage, filterPositiveValues } from '../util/MathUtil';\r\n\r\nimport { VAD_NOISY_DEVICE, DETECTOR_STATE_CHANGE } from './DetectionEvents';\r\n\r\n/**\r\n * The average value VAD needs to be under over a period of time to be considered noise.\r\n * @type {number}\r\n */\r\nconst VAD_NOISE_AVG_THRESHOLD = 0.2;\r\n\r\n/**\r\n * The average values that audio input need to be over to be considered loud.\r\n * @type {number}\r\n */\r\nconst NOISY_AUDIO_LEVEL_THRESHOLD = 0.040;\r\n\r\n/**\r\n * The value that a VAD score needs to be under in order for processing to begin.\r\n * @type {number}\r\n */\r\nconst VAD_SCORE_TRIGGER = 0.2;\r\n\r\n/**\r\n * The value that a VAD score needs to be under in order for processing to begin.\r\n * @type {number}\r\n */\r\nconst AUDIO_LEVEL_SCORE_TRIGGER = 0.020;\r\n\r\n/**\r\n * Time span over which we calculate an average score used to determine if we trigger the event.\r\n * @type {number}\r\n */\r\nconst PROCESS_TIME_FRAME_SPAN_MS = 1500;\r\n\r\n/**\r\n * Detect if provided VAD score and PCM data is considered noise.\r\n */\r\nexport default class VADNoiseDetection extends EventEmitter {\r\n    /**\r\n     * Creates <tt>VADNoiseDetection</tt>\r\n     *\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * Flag which denotes the current state of the detection service i.e.if there is already a processing operation\r\n         * ongoing.\r\n         */\r\n        this._processing = false;\r\n\r\n        /**\r\n         * Buffer that keeps the VAD scores for a period of time.\r\n         */\r\n        this._scoreArray = [];\r\n\r\n        /**\r\n         * Buffer that keeps audio level samples for a period of time.\r\n         */\r\n        this._audioLvlArray = [];\r\n\r\n        /**\r\n         * Current state of the service, if it's not active no processing will occur.\r\n         */\r\n        this._active = false;\r\n\r\n        this._calculateNoisyScore = this._calculateNoisyScore.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Compute cumulative VAD score and PCM audio levels once the PROCESS_TIME_FRAME_SPAN_MS timeout has elapsed.\r\n     * If the score is above the set threshold fire the event.\r\n     * @returns {void}\r\n     * @fires VAD_NOISY_DEVICE\r\n     */\r\n    _calculateNoisyScore() {\r\n        const scoreAvg = calculateAverage(this._scoreArray);\r\n        const audioLevelAvg = calculateAverage(this._audioLvlArray);\r\n\r\n        if (scoreAvg < VAD_NOISE_AVG_THRESHOLD && audioLevelAvg > NOISY_AUDIO_LEVEL_THRESHOLD) {\r\n            this.emit(VAD_NOISY_DEVICE);\r\n\r\n            this._setActiveState(false);\r\n        }\r\n\r\n        // We reset the context in case a new process phase needs to be triggered.\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * Record the vad score and average volume in the appropriate buffers.\r\n     *\r\n     * @param {number} vadScore\r\n     * @param {number} avgAudioLvl - average audio level of the PCM sample associated with the VAD score.s\r\n     */\r\n    _recordValues(vadScore, avgAudioLvl) {\r\n        this._scoreArray.push(vadScore);\r\n        this._audioLvlArray.push(avgAudioLvl);\r\n    }\r\n\r\n    /**\r\n     * Set the active state of the detection service and notify any listeners.\r\n     *\r\n     * @param {boolean} active\r\n     * @fires DETECTOR_STATE_CHANGE\r\n     */\r\n    _setActiveState(active) {\r\n        this._active = active;\r\n        this.emit(DETECTOR_STATE_CHANGE, this._active);\r\n    }\r\n\r\n    /**\r\n     * Change the state according to the muted status of the tracked device.\r\n     *\r\n     * @param {boolean} isMuted - Is the device muted or not.\r\n     */\r\n    changeMuteState(isMuted) {\r\n        // This service only needs to run when the microphone is not muted.\r\n        this._setActiveState(!isMuted);\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * Check whether or not the service is active or not.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isActive() {\r\n        return this._active;\r\n    }\r\n\r\n    /**\r\n     * Reset the processing context, clear buffers, cancel the timeout trigger.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    reset() {\r\n        this._processing = false;\r\n        this._scoreArray = [];\r\n        this._audioLvlArray = [];\r\n        clearTimeout(this._processTimeout);\r\n    }\r\n\r\n    /**\r\n     * Listens for {@link TrackVADEmitter} events and processes them.\r\n     *\r\n     * @param {Object} vadScore -VAD score emitted by {@link TrackVADEmitter}\r\n     * @param {Date}   vadScore.timestamp - Exact time at which processed PCM sample was generated.\r\n     * @param {number} vadScore.score - VAD score on a scale from 0 to 1 (i.e. 0.7)\r\n     * @param {Float32Array} vadScore.pcmData - Raw PCM Data associated with the VAD score.\r\n     * @param {string} vadScore.deviceId - Device id of the associated track.\r\n     * @listens VAD_SCORE_PUBLISHED\r\n     */\r\n    processVADScore(vadScore) {\r\n        if (!this._active) {\r\n            return;\r\n        }\r\n\r\n        // There is a processing phase on going, add score to buffer array.\r\n        if (this._processing) {\r\n            // Filter and calculate sample average so we don't have to process one large array at a time.\r\n            const posAudioLevels = filterPositiveValues(vadScore.pcmData);\r\n\r\n            this._recordValues(vadScore.score, calculateAverage(posAudioLevels));\r\n\r\n            return;\r\n        }\r\n\r\n        // If the VAD score for the sample is low and audio level has a high enough level we can start listening for\r\n        // noise\r\n        if (vadScore.score < VAD_SCORE_TRIGGER) {\r\n            const posAudioLevels = filterPositiveValues(vadScore.pcmData);\r\n            const avgAudioLvl = calculateAverage(posAudioLevels);\r\n\r\n            if (avgAudioLvl > AUDIO_LEVEL_SCORE_TRIGGER) {\r\n                this._processing = true;\r\n                this._recordValues(vadScore.score, avgAudioLvl);\r\n\r\n                // Once the preset timeout executes the final score will be calculated.\r\n                this._processTimeout = setTimeout(this._calculateNoisyScore, PROCESS_TIME_FRAME_SPAN_MS);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { EventEmitter } from 'events';\r\n\r\nimport { calculateAverage } from '../util/MathUtil';\r\n\r\nimport { VAD_TALK_WHILE_MUTED, DETECTOR_STATE_CHANGE } from './DetectionEvents';\r\n\r\n\r\n/**\r\n * The threshold which the average VAD values for a span of time needs to exceed to trigger an event.\r\n * @type {number}\r\n */\r\nconst VAD_AVG_THRESHOLD = 0.6;\r\n\r\n/**\r\n * The VAD score needed to trigger the processing algorithm, i.e. if a sample has the VAD score >= VAD_VOICE_LEVEL\r\n * we start processing all scores for a time span defined by const PROCESS_TIME_FRAME_SPAN_MS.\r\n * @type {number}\r\n */\r\nconst VAD_VOICE_LEVEL = 0.9;\r\n\r\n/**\r\n * Sample rate of TrackVADEmitter, it defines how many audio samples are processed at a time.\r\n * @type {number}\r\n */\r\n\r\n/**\r\n * Time span over which we calculate an average score used to determine if we trigger the event.\r\n * @type {number}\r\n */\r\nconst PROCESS_TIME_FRAME_SPAN_MS = 700;\r\n\r\n/**\r\n * Detect if provided VAD score which is generated on a muted device is voice and fires an event.\r\n */\r\nexport default class VADTalkMutedDetection extends EventEmitter {\r\n    /**\r\n     * Creates <tt>VADTalkMutedDetection</tt>\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * Flag which denotes the current state of the detection service i.e.if there is already a processing operation\r\n         * ongoing.\r\n         */\r\n        this._processing = false;\r\n\r\n        /**\r\n         * Buffer that keeps the VAD scores for a period of time.\r\n         */\r\n        this._scoreArray = [];\r\n\r\n        /**\r\n         * Current mute state of the audio track being monitored.\r\n         */\r\n        this._active = false;\r\n\r\n        this._calculateVADScore = this._calculateVADScore.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Compute cumulative VAD score function called once the PROCESS_TIME_FRAME_SPAN_MS timeout has elapsed.\r\n     * @returns {void}\r\n     * @fires VAD_TALK_WHILE_MUTED\r\n     */\r\n    _calculateVADScore() {\r\n        const score = calculateAverage(this._scoreArray);\r\n\r\n        if (score > VAD_AVG_THRESHOLD) {\r\n            this.emit(VAD_TALK_WHILE_MUTED);\r\n\r\n            // Event was fired. Stop event emitter and remove listeners so no residue events kick off after this point\r\n            // and a single VAD_TALK_WHILE_MUTED is generated per mic muted state.\r\n            this._setActiveState(false);\r\n        }\r\n\r\n        // We reset the context in case a new process phase needs to be triggered.\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * Set the active state of the detection service and notify any listeners.\r\n     *\r\n     * @param {boolean} active\r\n     * @fires DETECTOR_STATE_CHANGE\r\n     */\r\n    _setActiveState(active) {\r\n        this._active = active;\r\n        this.emit(DETECTOR_STATE_CHANGE, this._active);\r\n    }\r\n\r\n    /**\r\n     * Change the state according to the muted status of the tracked device.\r\n     *\r\n     * @param {boolean} isMuted - Is the device muted or not.\r\n     */\r\n    changeMuteState(isMuted) {\r\n        // This service only needs to run when the microphone is muted.\r\n        this._setActiveState(isMuted);\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * Check whether or not the service is active or not.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isActive() {\r\n        return this._active;\r\n    }\r\n\r\n    /**\r\n     * Listens for {@link TrackVADEmitter} events and processes them.\r\n     *\r\n     * @param {Object} vadScore -VAD score emitted by {@link TrackVADEmitter}\r\n     * @param {Date}   vadScore.timestamp - Exact time at which processed PCM sample was generated.\r\n     * @param {number} vadScore.score - VAD score on a scale from 0 to 1 (i.e. 0.7)\r\n     * @param {string} vadScore.deviceId - Device id of the associated track.\r\n     * @listens VAD_SCORE_PUBLISHED\r\n     */\r\n    processVADScore(vadScore) {\r\n        if (!this._active) {\r\n            return;\r\n        }\r\n\r\n        // There is a processing phase on going, add score to buffer array.\r\n        if (this._processing) {\r\n            this._scoreArray.push(vadScore.score);\r\n\r\n            return;\r\n        }\r\n\r\n        // Because we remove all listeners on the vadEmitter once the main event is triggered,\r\n        // there is no need to check for rogue events.\r\n        if (vadScore.score > VAD_VOICE_LEVEL) {\r\n            this._processing = true;\r\n            this._scoreArray.push(vadScore.score);\r\n\r\n            // Start gathering VAD scores for the configured period of time.\r\n            this._processTimeout = setTimeout(this._calculateVADScore, PROCESS_TIME_FRAME_SPAN_MS);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset the processing context, clear buffer, cancel the timeout trigger.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    reset() {\r\n        this._processing = false;\r\n        this._scoreArray = [];\r\n        clearTimeout(this._processTimeout);\r\n    }\r\n}\r\n","/* global __filename, TransformStream */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n// We use a ringbuffer of keys so we can change them and still decode packets that were\r\n// encrypted with an old key.\r\n// In the future when we dont rely on a globally shared key we will actually use it. For\r\n// now set the size to 1 which means there is only a single key. This causes some\r\n// glitches when changing the key but its ok.\r\nconst keyRingSize = 1;\r\n\r\n// We use a 96 bit IV for AES GCM. This is signalled in plain together with the\r\n// packet. See https://developer.mozilla.org/en-US/docs/Web/API/AesGcmParams\r\nconst ivLength = 12;\r\n\r\n// We copy the first bytes of the VP8 payload unencrypted.\r\n// For keyframes this is 10 bytes, for non-keyframes (delta) 3. See\r\n//   https://tools.ietf.org/html/rfc6386#section-9.1\r\n// This allows the bridge to continue detecting keyframes (only one byte needed in the JVB)\r\n// and is also a bit easier for the VP8 decoder (i.e. it generates funny garbage pictures\r\n// instead of being unable to decode).\r\n// This is a bit for show and we might want to reduce to 1 unconditionally in the final version.\r\n//\r\n// For audio (where frame.type is not set) we do not encrypt the opus TOC byte:\r\n//   https://tools.ietf.org/html/rfc6716#section-3.1\r\nconst unencryptedBytes = {\r\n    key: 10,\r\n    delta: 3,\r\n    undefined: 1 // frame.type is not set on audio\r\n};\r\n\r\n// Flag to set on senders / receivers to avoid setting up the encryption transform\r\n// more than once.\r\nconst kJitsiE2EE = Symbol('kJitsiE2EE');\r\n\r\n/**\r\n * Context encapsulating the cryptography bits required for E2EE.\r\n * This uses the WebRTC Insertable Streams API which is explained in\r\n *   https://github.com/alvestrand/webrtc-media-streams/blob/master/explainer.md\r\n * that provides access to the encoded frames and allows them to be transformed.\r\n *\r\n * The encoded frame format is explained below in the _encodeFunction method.\r\n * High level design goals were:.\r\n * - do not require changes to existing SFUs and retain (VP8) metadata.\r\n * - allow the SFU to rewrite SSRCs, timestamp, pictureId.\r\n * - allow for the key to be rotated frequently.\r\n */\r\nexport default class E2EEcontext {\r\n\r\n    /**\r\n     * Build a new E2EE context instance, which will be used in a given conference.\r\n     *\r\n     * @param {string} options.salt - Salt to be used for key deviation.\r\n     *      FIXME: We currently use the MUC room name for this which has the same lifetime\r\n     *      as this context. While not (pseudo)random as recommended in\r\n     *        https://developer.mozilla.org/en-US/docs/Web/API/Pbkdf2Params\r\n     *      this is easily available and the same for all participants.\r\n     *      We currently do not enforce a minimum length of 16 bytes either.\r\n     */\r\n    constructor(options) {\r\n        this._options = options;\r\n\r\n        // An array (ring) of keys that we use for sending and receiving.\r\n        this._cryptoKeyRing = new Array(keyRingSize);\r\n\r\n        // A pointer to the currently used key.\r\n        this._currentKeyIndex = -1;\r\n\r\n        // We keep track of how many frames we have sent per ssrc.\r\n        // Starts with a random offset similar to the RTP sequence number.\r\n        this._sendCounts = new Map();\r\n\r\n        // Initialize the salt and convert it once.\r\n        const encoder = new TextEncoder();\r\n\r\n        this._salt = encoder.encode(options.salt);\r\n    }\r\n\r\n    /**\r\n     * Handles the given {@code RTCRtpReceiver} by creating a {@code TransformStream} which will injecct\r\n     * a frame decoder.\r\n     *\r\n     * @param {RTCRtpReceiver} receiver - The receiver which will get the decoding function injected.\r\n     * @param {string} kind - The kind of track this receiver belongs to.\r\n     */\r\n    handleReceiver(receiver, kind) {\r\n        if (receiver[kJitsiE2EE]) {\r\n            return;\r\n        }\r\n\r\n        const receiverStreams\r\n            = kind === 'video' ? receiver.createEncodedVideoStreams() : receiver.createEncodedAudioStreams();\r\n        const transform = new TransformStream({\r\n            transform: this._decodeFunction.bind(this)\r\n        });\r\n\r\n        receiverStreams.readableStream\r\n            .pipeThrough(transform)\r\n            .pipeTo(receiverStreams.writableStream);\r\n\r\n        receiver[kJitsiE2EE] = true;\r\n    }\r\n\r\n    /**\r\n     * Handles the given {@code RTCRtpSender} by creating a {@code TransformStream} which will injecct\r\n     * a frame encoder.\r\n     *\r\n     * @param {RTCRtpSender} sender - The sender which will get the encoding funcction injected.\r\n     * @param {string} kind - The kind of track this sender belongs to.\r\n     */\r\n    handleSender(sender, kind) {\r\n        if (sender[kJitsiE2EE]) {\r\n            return;\r\n        }\r\n\r\n        const senderStreams\r\n            = kind === 'video' ? sender.createEncodedVideoStreams() : sender.createEncodedAudioStreams();\r\n        const transform = new TransformStream({\r\n            transform: this._encodeFunction.bind(this)\r\n        });\r\n\r\n        senderStreams.readableStream\r\n            .pipeThrough(transform)\r\n            .pipeTo(senderStreams.writableStream);\r\n\r\n        sender[kJitsiE2EE] = true;\r\n    }\r\n\r\n    /**\r\n     * Sets the key to be used for E2EE.\r\n     *\r\n     * @param {string} value - Value to be used as the new key. May be falsy to disable end-to-end encryption.\r\n     */\r\n    async setKey(value) {\r\n        let key;\r\n\r\n        if (value) {\r\n            const encoder = new TextEncoder();\r\n\r\n            key = await this._deriveKey(encoder.encode(value));\r\n        } else {\r\n            key = false;\r\n        }\r\n        this._currentKeyIndex++;\r\n        this._cryptoKeyRing[this._currentKeyIndex % this._cryptoKeyRing.length] = key;\r\n    }\r\n\r\n    /**\r\n     * Derives a AES-GCM key with 128 bits from the input using PBKDF2\r\n     * The salt is configured in the constructor of this class.\r\n     * @param {Uint8Array} keyBytes - Value to derive key from\r\n     */\r\n    async _deriveKey(keyBytes) {\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey\r\n        const material = await crypto.subtle.importKey('raw', keyBytes,\r\n            'PBKDF2', false, [ 'deriveBits', 'deriveKey' ]);\r\n\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey#PBKDF2\r\n        return crypto.subtle.deriveKey({\r\n            name: 'PBKDF2',\r\n            salt: this._salt,\r\n            iterations: 100000,\r\n            hash: 'SHA-256'\r\n        }, material, {\r\n            name: 'AES-GCM',\r\n            length: 128\r\n        }, false, [ 'encrypt', 'decrypt' ]);\r\n    }\r\n\r\n    /**\r\n     * Construct the IV used for AES-GCM and sent (in plain) with the packet similar to\r\n     * https://tools.ietf.org/html/rfc7714#section-8.1\r\n     * It concatenates\r\n     * - the 32 bit synchronization source (SSRC) given on the encoded frame,\r\n     * - the 32 bit rtp timestamp given on the encoded frame,\r\n     * - a send counter that is specific to the SSRC. Starts at a random number.\r\n     * The send counter is essentially the pictureId but we currently have to implement this ourselves.\r\n     * There is no XOR with a salt. Note that this IV leaks the SSRC to the receiver but since this is\r\n     * randomly generated and SFUs may not rewrite this is considered acceptable.\r\n     * The SSRC is used to allow demultiplexing multiple streams with the same key, as described in\r\n     *   https://tools.ietf.org/html/rfc3711#section-4.1.1\r\n     * The RTP timestamp is 32 bits and advances by the codec clock rate (90khz for video, 48khz for\r\n     * opus audio) every second. For video it rolls over roughly every 13 hours.\r\n     * The send counter will advance at the frame rate (30fps for video, 50fps for 20ms opus audio)\r\n     * every second. It will take a long time to roll over.\r\n     *\r\n     * See also https://developer.mozilla.org/en-US/docs/Web/API/AesGcmParams\r\n     */\r\n    _makeIV(synchronizationSource, timestamp) {\r\n        const iv = new ArrayBuffer(ivLength);\r\n        const ivView = new DataView(iv);\r\n\r\n        // having to keep our own send count (similar to a picture id) is not ideal.\r\n        if (!this._sendCounts.has(synchronizationSource)) {\r\n            // Initialize with a random offset, similar to the RTP sequence number.\r\n            this._sendCounts.set(synchronizationSource, Math.floor(Math.random() * 0xFFFF));\r\n        }\r\n        const sendCount = this._sendCounts.get(synchronizationSource);\r\n\r\n        ivView.setUint32(0, synchronizationSource);\r\n        ivView.setUint32(4, timestamp);\r\n        ivView.setUint32(8, sendCount % 0xFFFF);\r\n\r\n        this._sendCounts.set(synchronizationSource, sendCount + 1);\r\n\r\n        return iv;\r\n    }\r\n\r\n    /**\r\n     * Function that will be injected in a stream and will encrypt the given encoded frames.\r\n     *\r\n     * @param {RTCEncodedVideoFrame|RTCEncodedAudioFrame} encodedFrame - Encoded video frame.\r\n     * @param {TransformStreamDefaultController} controller - TransportStreamController.\r\n     *\r\n     * The packet format is described below. One of the design goals was to not require\r\n     * changes to the SFU which for video requires not encrypting the keyframe bit of VP8\r\n     * as SFUs need to detect a keyframe (framemarking or the generic frame descriptor will\r\n     * solve this eventually). This also \"hides\" that a client is using E2EE a bit.\r\n     *\r\n     * Note that this operates on the full frame, i.e. for VP8 the data described in\r\n     *   https://tools.ietf.org/html/rfc6386#section-9.1\r\n     *\r\n     * The VP8 payload descriptor described in\r\n     *   https://tools.ietf.org/html/rfc7741#section-4.2\r\n     * is part of the RTP packet and not part of the frame and is not controllable by us.\r\n     * This is fine as the SFU keeps having access to it for routing.\r\n     *\r\n     * The encrypted frame is formed as follows:\r\n     * 1) Leave the first (10, 3, 1) bytes unencrypted, depending on the frame type and kind.\r\n     * 2) Form the GCM IV for the frame as described above.\r\n     * 3) Encrypt the rest of the frame using AES-GCM.\r\n     * 4) Allocate space for the encrypted frame.\r\n     * 5) Copy the unencrypted bytes to the start of the encrypted frame.\r\n     * 6) Append the ciphertext to the encrypted frame.\r\n     * 7) Append the IV.\r\n     * 8) Append a single byte for the key identifier. TODO: we don't need all the bits.\r\n     * 9) Enqueue the encrypted frame for sending.\r\n     */\r\n    _encodeFunction(encodedFrame, controller) {\r\n        const keyIndex = this._currentKeyIndex % this._cryptoKeyRing.length;\r\n\r\n        if (this._cryptoKeyRing[keyIndex]) {\r\n            const iv = this._makeIV(encodedFrame.synchronizationSource, encodedFrame.timestamp);\r\n\r\n            return crypto.subtle.encrypt({\r\n                name: 'AES-GCM',\r\n                iv,\r\n                additionalData: new Uint8Array(encodedFrame.data, 0, unencryptedBytes[encodedFrame.type])\r\n            }, this._cryptoKeyRing[keyIndex], new Uint8Array(encodedFrame.data, unencryptedBytes[encodedFrame.type]))\r\n            .then(cipherText => {\r\n                const newData = new ArrayBuffer(unencryptedBytes[encodedFrame.type] + cipherText.byteLength\r\n                    + iv.byteLength + 1);\r\n                const newUint8 = new Uint8Array(newData);\r\n\r\n                newUint8.set(\r\n                    new Uint8Array(encodedFrame.data, 0, unencryptedBytes[encodedFrame.type])); // copy first bytes.\r\n                newUint8.set(\r\n                    new Uint8Array(cipherText), unencryptedBytes[encodedFrame.type]); // add ciphertext.\r\n                newUint8.set(\r\n                    new Uint8Array(iv), unencryptedBytes[encodedFrame.type] + cipherText.byteLength); // append IV.\r\n                newUint8[unencryptedBytes[encodedFrame.type] + cipherText.byteLength + ivLength]\r\n                    = keyIndex; // set key index.\r\n\r\n                encodedFrame.data = newData;\r\n\r\n                return controller.enqueue(encodedFrame);\r\n            }, e => {\r\n                logger.error(e);\r\n\r\n                // We are not enqueuing the frame here on purpose.\r\n            });\r\n        }\r\n\r\n        /* NOTE WELL:\r\n         * This will send unencrypted data (only protected by DTLS transport encryption) when no key is configured.\r\n         * This is ok for demo purposes but should not be done once this becomes more relied upon.\r\n         */\r\n        controller.enqueue(encodedFrame);\r\n    }\r\n\r\n    /**\r\n     * Function that will be injected in a stream and will decrypt the given encoded frames.\r\n     *\r\n     * @param {RTCEncodedVideoFrame|RTCEncodedAudioFrame} encodedFrame - Encoded video frame.\r\n     * @param {TransformStreamDefaultController} controller - TransportStreamController.\r\n     *\r\n     * The decrypted frame is formed as follows:\r\n     * 1) Extract the key index from the last byte of the encrypted frame.\r\n     *    If there is no key associated with the key index, the frame is enqueued for decoding\r\n     *    and these steps terminate.\r\n     * 2) Determine the frame type in order to look up the number of unencrypted header bytes.\r\n     * 2) Extract the 12-byte IV from its position near the end of the packet.\r\n     *    Note: the IV is treated as opaque and not reconstructed from the input.\r\n     * 3) Decrypt the encrypted frame content after the unencrypted bytes using AES-GCM.\r\n     * 4) Allocate space for the decrypted frame.\r\n     * 5) Copy the unencrypted bytes from the start of the encrypted frame.\r\n     * 6) Append the plaintext to the decrypted frame.\r\n     * 7) Enqueue the decrypted frame for decoding.\r\n     */\r\n    _decodeFunction(encodedFrame, controller) {\r\n        const data = new Uint8Array(encodedFrame.data);\r\n        const keyIndex = data[encodedFrame.data.byteLength - 1];\r\n\r\n        if (this._cryptoKeyRing[keyIndex]) {\r\n            const iv = new Uint8Array(encodedFrame.data, encodedFrame.data.byteLength - ivLength - 1, ivLength);\r\n            const cipherTextStart = unencryptedBytes[encodedFrame.type];\r\n            const cipherTextLength = encodedFrame.data.byteLength - (unencryptedBytes[encodedFrame.type]\r\n                + ivLength + 1);\r\n\r\n            return crypto.subtle.decrypt({\r\n                name: 'AES-GCM',\r\n                iv,\r\n                additionalData: new Uint8Array(encodedFrame.data, 0, unencryptedBytes[encodedFrame.type])\r\n            }, this._cryptoKeyRing[keyIndex], new Uint8Array(encodedFrame.data, cipherTextStart, cipherTextLength))\r\n            .then(plainText => {\r\n                const newData = new ArrayBuffer(unencryptedBytes[encodedFrame.type] + plainText.byteLength);\r\n                const newUint8 = new Uint8Array(newData);\r\n\r\n                newUint8.set(new Uint8Array(encodedFrame.data, 0, unencryptedBytes[encodedFrame.type]));\r\n                newUint8.set(new Uint8Array(plainText), unencryptedBytes[encodedFrame.type]);\r\n\r\n                encodedFrame.data = newData;\r\n\r\n                return controller.enqueue(encodedFrame);\r\n            }, e => {\r\n                logger.error(e, encodedFrame.type);\r\n\r\n                // TODO: notify the application about error status.\r\n\r\n                // TODO: For video we need a better strategy since we do not want to based any\r\n                // non-error frames on a garbage keyframe.\r\n                if (encodedFrame.type === undefined) { // audio, replace with silence.\r\n                    // audio, replace with silence.\r\n                    const newData = new ArrayBuffer(3);\r\n                    const newUint8 = new Uint8Array(newData);\r\n\r\n                    newUint8.set([ 0xd8, 0xff, 0xfe ]); // opus silence frame.\r\n                    encodedFrame.data = newData;\r\n                    controller.enqueue(encodedFrame);\r\n                }\r\n            });\r\n        }\r\n\r\n        // TODO: this just passes through to the decoder. Is that ok? If we don't know the key yet\r\n        // we might want to buffer a bit but it is still unclear how to do that (and for how long etc).\r\n        controller.enqueue(encodedFrame);\r\n    }\r\n}\r\n","/* global __filename */\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { createE2eRttEvent } from '../../service/statistics/AnalyticsEvents';\r\nimport * as E2ePingEvents\r\n    from '../../service/e2eping/E2ePingEvents';\r\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\r\nimport Statistics from '../statistics/statistics';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * The 'type' of a message which designates an e2e ping request.\r\n * @type {string}\r\n */\r\nconst E2E_PING_REQUEST = 'e2e-ping-request';\r\n\r\n/**\r\n * The 'type' of a message which designates an e2e ping response.\r\n * @type {string}\r\n */\r\nconst E2E_PING_RESPONSE = 'e2e-ping-response';\r\n\r\n/**\r\n * Saves e2e ping related state for a single JitsiParticipant.\r\n */\r\nclass ParticipantWrapper {\r\n    /**\r\n     * Creates a ParticipantWrapper\r\n     * @param {JitsiParticipant} participant - The remote participant that this\r\n     * object wraps.\r\n     * @param {E2ePing} e2eping\r\n     */\r\n    constructor(participant, e2eping) {\r\n        // The JitsiParticipant\r\n        this.participant = participant;\r\n\r\n        // The E2ePing\r\n        this.e2eping = e2eping;\r\n\r\n        // Caches the ID\r\n        this.id = participant.getId();\r\n\r\n        // Recently sent requests\r\n        this.requests = {};\r\n\r\n        // The ID of the last sent request. We just increment it for each new\r\n        // request. Start at 1 so we can consider only thruthy values valid.\r\n        this.lastRequestId = 1;\r\n\r\n        this.clearIntervals = this.clearIntervals.bind(this);\r\n        this.sendRequest = this.sendRequest.bind(this);\r\n        this.handleResponse = this.handleResponse.bind(this);\r\n        this.maybeSendAnalytics = this.maybeSendAnalytics.bind(this);\r\n        this.sendAnalytics = this.sendAnalytics.bind(this);\r\n\r\n        // If the data channel was already open (this is likely a participant\r\n        // joining an existing conference) send a request immediately.\r\n        if (e2eping.isDataChannelOpen) {\r\n            this.sendRequest();\r\n        }\r\n\r\n        this.pingInterval = window.setInterval(\r\n            this.sendRequest, e2eping.pingIntervalMs);\r\n        this.analyticsInterval = window.setTimeout(\r\n            this.maybeSendAnalytics, this.e2eping.analyticsIntervalMs);\r\n    }\r\n\r\n    /**\r\n     * Clears the interval which sends pings.\r\n     * @type {*}\r\n     */\r\n    clearIntervals() {\r\n        if (this.pingInterval) {\r\n            window.clearInterval(this.pingInterval);\r\n        }\r\n        if (this.analyticsInterval) {\r\n            window.clearInterval(this.analyticsInterval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends the next ping request.\r\n     * @type {*}\r\n     */\r\n    sendRequest() {\r\n        const requestId = this.lastRequestId++;\r\n        const requestMessage = {\r\n            type: E2E_PING_REQUEST,\r\n            id: requestId\r\n        };\r\n\r\n        this.e2eping.sendMessage(requestMessage, this.id);\r\n        this.requests[requestId] = {\r\n            id: requestId,\r\n            timeSent: window.performance.now()\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Handles a response from this participant.\r\n     * @type {*}\r\n     */\r\n    handleResponse(response) {\r\n        const request = this.requests[response.id];\r\n\r\n        if (request) {\r\n            request.rtt = window.performance.now() - request.timeSent;\r\n            this.e2eping.eventEmitter.emit(\r\n                E2ePingEvents.E2E_RTT_CHANGED,\r\n                this.participant,\r\n                request.rtt);\r\n        }\r\n\r\n        this.maybeSendAnalytics();\r\n    }\r\n\r\n    /**\r\n     * Goes over the requests, clearing ones which we don't need anymore, and\r\n     * if it finds at least one request with a valid RTT in the last\r\n     * 'analyticsIntervalMs' then sends an analytics event.\r\n     * @type {*}\r\n     */\r\n    maybeSendAnalytics() {\r\n        const now = window.performance.now();\r\n\r\n        // The RTT we'll report is the minimum RTT measured in the last\r\n        // analyticsInterval\r\n        let rtt = Infinity;\r\n        let request, requestId;\r\n\r\n        // It's time to send analytics. Clean up all requests and find the\r\n        for (requestId in this.requests) {\r\n            if (this.requests.hasOwnProperty(requestId)) {\r\n                request = this.requests[requestId];\r\n\r\n                if (request.timeSent < now - this.e2eping.analyticsIntervalMs) {\r\n                    // An old request. We don't care about it anymore.\r\n                    delete this.requests[requestId];\r\n                } else if (request.rtt) {\r\n                    rtt = Math.min(rtt, request.rtt);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (rtt < Infinity) {\r\n            this.sendAnalytics(rtt);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends an analytics event for this participant with the given RTT.\r\n     * @type {*}\r\n     */\r\n    sendAnalytics(rtt) {\r\n        Statistics.sendAnalytics(createE2eRttEvent(\r\n            this.id,\r\n            this.participant.getProperty('region'),\r\n            rtt));\r\n    }\r\n}\r\n\r\n/**\r\n * Implements end-to-end ping (from one conference participant to another) via\r\n * the jitsi-videobridge channel (either WebRTC data channel or web socket).\r\n *\r\n * TODO: use a broadcast message instead of individual pings to each remote\r\n * participant.\r\n *\r\n * This class:\r\n * 1. Sends periodic ping requests to all other participants in the\r\n * conference.\r\n * 2. Responds to ping requests from other participants.\r\n * 3. Fires events with the end-to-end RTT to each participant whenever a\r\n * response is received.\r\n * 4. Fires analytics events with the end-to-end RTT periodically.\r\n */\r\nexport default class E2ePing {\r\n    /**\r\n     * @param {JitsiConference} conference - The conference.\r\n     * @param {Function} sendMessage - The function to use to send a message.\r\n     * @param {Object} options\r\n     */\r\n    constructor(conference, options, sendMessage) {\r\n        this.conference = conference;\r\n        this.eventEmitter = conference.eventEmitter;\r\n        this.sendMessage = sendMessage;\r\n\r\n        // The interval at which pings will be sent (<= 0 disables sending).\r\n        this.pingIntervalMs = 10000;\r\n\r\n        // The interval at which analytics events will be sent.\r\n        this.analyticsIntervalMs = 60000;\r\n\r\n        // Maps a participant ID to its ParticipantWrapper\r\n        this.participants = {};\r\n\r\n        // Whether the WebRTC channel has been opened or not.\r\n        this.isDataChannelOpen = false;\r\n\r\n        if (options && options.e2eping) {\r\n            if (typeof options.e2eping.pingInterval === 'number') {\r\n                this.pingIntervalMs = options.e2eping.pingInterval;\r\n            }\r\n            if (typeof options.e2eping.analyticsInterval === 'number') {\r\n                this.analyticsIntervalMs = options.e2eping.analyticsInterval;\r\n            }\r\n\r\n            // We want to report at most once a ping interval.\r\n            if (this.analyticsIntervalMs > 0 && this.analyticsIntervalMs\r\n                < this.pingIntervalMs) {\r\n                this.analyticsIntervalMs = this.pingIntervalMs;\r\n            }\r\n        }\r\n        logger.info(\r\n            `Initializing e2e ping; pingInterval=${\r\n                this.pingIntervalMs}, analyticsInterval=${\r\n                this.analyticsIntervalMs}.`);\r\n\r\n        this.participantJoined = this.participantJoined.bind(this);\r\n        conference.on(\r\n            JitsiConferenceEvents.USER_JOINED,\r\n            this.participantJoined);\r\n\r\n        this.participantLeft = this.participantLeft.bind(this);\r\n        conference.on(\r\n            JitsiConferenceEvents.USER_LEFT,\r\n            this.participantLeft);\r\n\r\n        this.messageReceived = this.messageReceived.bind(this);\r\n        conference.on(\r\n            JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\r\n            this.messageReceived);\r\n\r\n        this.dataChannelOpened = this.dataChannelOpened.bind(this);\r\n        conference.on(\r\n            JitsiConferenceEvents.DATA_CHANNEL_OPENED,\r\n            this.dataChannelOpened);\r\n    }\r\n\r\n    /**\r\n     * Notifies this instance that the communications channel has been opened\r\n     * and it can now send messages via sendMessage.\r\n     */\r\n    dataChannelOpened() {\r\n        this.isDataChannelOpen = true;\r\n\r\n        // We don't want to wait the whole interval before sending the first\r\n        // request, but we can't send it immediately after the participant joins\r\n        // either, because our data channel might not have initialized.\r\n        // So once the data channel initializes, send requests to everyone.\r\n        // Wait an additional 200ms to give a chance to the remote side (if it\r\n        // also just connected as is the case for the first 2 participants in a\r\n        // conference) to open its data channel.\r\n        for (const id in this.participants) {\r\n            if (this.participants.hasOwnProperty(id)) {\r\n                const participantWrapper = this.participants[id];\r\n\r\n                window.setTimeout(participantWrapper.sendRequest, 200);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles a message that was received.\r\n     *\r\n     * @param participant - The message sender.\r\n     * @param payload - The payload of the message.\r\n     */\r\n    messageReceived(participant, payload) {\r\n        // Listen to E2E PING requests and responses from other participants\r\n        // in the conference.\r\n        if (payload.type === E2E_PING_REQUEST) {\r\n            this.handleRequest(participant.getId(), payload);\r\n        } else if (payload.type === E2E_PING_RESPONSE) {\r\n            this.handleResponse(participant.getId(), payload);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles a participant joining the conference. Starts to send ping\r\n     * requests to the participant.\r\n     *\r\n     * @param {String} id - The ID of the participant.\r\n     * @param {JitsiParticipant} participant - The participant that joined.\r\n     */\r\n    participantJoined(id, participant) {\r\n        if (this.pingIntervalMs <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.participants[id]) {\r\n            logger.info(\r\n                `Participant wrapper already exists for ${id}. Clearing.`);\r\n            this.participants[id].clearIntervals();\r\n            delete this.participants[id];\r\n        }\r\n\r\n        this.participants[id] = new ParticipantWrapper(participant, this);\r\n    }\r\n\r\n    /**\r\n     * Handles a participant leaving the conference. Stops sending requests.\r\n     *\r\n     * @param {String} id - The ID of the participant.\r\n     */\r\n    participantLeft(id) {\r\n        if (this.pingIntervalMs <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.participants[id]) {\r\n            this.participants[id].clearIntervals();\r\n            delete this.participants[id];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles a ping request coming from another participant.\r\n     *\r\n     * @param {string} participantId - The ID of the participant who sent the\r\n     * request.\r\n     * @param {Object} request - The request.\r\n     */\r\n    handleRequest(participantId, request) {\r\n        // If it's a valid request, just send a response.\r\n        if (request && request.id) {\r\n            const response = {\r\n                type: E2E_PING_RESPONSE,\r\n                id: request.id\r\n            };\r\n\r\n            this.sendMessage(response, participantId);\r\n        } else {\r\n            logger.info(\r\n                `Received an invalid e2e ping request from ${participantId}.`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles a ping response coming from another participant\r\n     * @param {string} participantId - The ID of the participant who sent the\r\n     * response.\r\n     * @param {Object} response - The response.\r\n     */\r\n    handleResponse(participantId, response) {\r\n        const participantWrapper = this.participants[participantId];\r\n\r\n        if (participantWrapper) {\r\n            participantWrapper.handleResponse(response);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops this E2ePing (i.e. stop sending requests).\r\n     */\r\n    stop() {\r\n        logger.info('Stopping e2eping');\r\n\r\n        this.conference.off(\r\n            JitsiConferenceEvents.USER_JOINED,\r\n            this.participantJoined);\r\n        this.conference.off(\r\n            JitsiConferenceEvents.USER_LEFT,\r\n            this.participantLeft);\r\n        this.conference.off(\r\n            JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\r\n            this.messageReceived);\r\n        this.conference.off(\r\n            JitsiConferenceEvents.DATA_CHANNEL_OPENED,\r\n            this.dataChannelOpened);\r\n\r\n        for (const id in this.participants) {\r\n            if (this.participants.hasOwnProperty(id)) {\r\n                this.participants[id].clearIntervals();\r\n            }\r\n        }\r\n\r\n        this.participants = {};\r\n    }\r\n}\r\n\r\n","/* global __filename */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Emits {@link JitsiConferenceEvents.JVB121_STATUS} events based on the current\r\n * P2P status and the conference participants count. See the event description\r\n * for more info.\r\n */\r\nexport default class Jvb121EventGenerator {\r\n    /**\r\n     * Creates new <tt>Jvb121EventGenerator</tt> for the given conference.\r\n     * @param {JitsiConference} conference\r\n     */\r\n    constructor(conference) {\r\n        this._conference = conference;\r\n\r\n        /**\r\n         * Indicates whether it's a one to one JVB conference (<tt>true</tt>)\r\n         * or a multiparty (<tt>false</tt>). Will be also <tt>false</tt> if\r\n         * the conference is currently in the P2P mode.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._jvb121 = true;\r\n\r\n        this._conference.addEventListener(\r\n            JitsiConferenceEvents.USER_JOINED, () => this.evaluateStatus());\r\n        this._conference.addEventListener(\r\n            JitsiConferenceEvents.USER_LEFT, () => this.evaluateStatus());\r\n        this._conference.addEventListener(\r\n            JitsiConferenceEvents.P2P_STATUS, () => this.evaluateStatus());\r\n    }\r\n\r\n    /**\r\n     * Checks whether the JVB121 value should be updated and a new event\r\n     * emitted.\r\n     */\r\n    evaluateStatus() {\r\n        const oldStatus = this._jvb121;\r\n        const newStatus\r\n            = !this._conference.isP2PActive()\r\n                && this._conference.getParticipantCount() <= 2;\r\n\r\n        if (oldStatus !== newStatus) {\r\n            this._jvb121 = newStatus;\r\n            logger.debug(`JVB121 status ${oldStatus} => ${newStatus}`);\r\n            this._conference.eventEmitter.emit(\r\n                JitsiConferenceEvents.JVB121_STATUS, oldStatus, newStatus);\r\n        }\r\n    }\r\n}\r\n","import { getLogger } from 'jitsi-meet-logger';\r\n\r\nimport RTC from '../RTC/RTC';\r\nimport RTCEvents from '../../service/RTC/RTCEvents';\r\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\r\n\r\nimport JingleSessionPC from '../xmpp/JingleSessionPC';\r\nimport { DEFAULT_STUN_SERVERS } from '../xmpp/xmpp';\r\n\r\nimport { ACTIONS } from './constants';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * An adapter around {@code JingleSessionPC} so its logic can be re-used without\r\n * an XMPP connection. It is being re-used for consistency with the rest of the\r\n * codebase and to leverage existing peer connection event handling. Also\r\n * this class provides a facade to hide most of the API for\r\n * {@code JingleSessionPC}.\r\n */\r\nexport default class ProxyConnectionPC {\r\n    /**\r\n     * Initializes a new {@code ProxyConnectionPC} instance.\r\n     *\r\n     * @param {Object} options - Values to initialize the instance with.\r\n     * @param {Object} [options.iceConfig] - The {@code RTCConfiguration} to use\r\n     * for the peer connection.\r\n     * @param {boolean} [options.isInitiator] - If true, the local client should\r\n     * send offers. If false, the local client should send answers. Defaults to\r\n     * false.\r\n     * @param {Function} options.onRemoteStream - Callback to invoke when a\r\n     * remote media stream has been received through the peer connection.\r\n     * @param {string} options.peerJid - The jid of the remote client with which\r\n     * the peer connection is being establish and which should receive direct\r\n     * messages regarding peer connection updates.\r\n     * @param {boolean} [options.receiveVideo] - Whether or not the peer\r\n     * connection should accept incoming video streams. Defaults to false.\r\n     * @param {Function} options.onSendMessage - Callback to invoke when a\r\n     * message has to be sent (signaled) out.\r\n     */\r\n    constructor(options = {}) {\r\n        this._options = {\r\n            iceConfig: {},\r\n            isInitiator: false,\r\n            receiveAudio: false,\r\n            receiveVideo: false,\r\n            ...options\r\n        };\r\n\r\n        /**\r\n         * Instances of {@code JitsiTrack} associated with this instance of\r\n         * {@code ProxyConnectionPC}.\r\n         *\r\n         * @type {Array<JitsiTrack>}\r\n         */\r\n        this._tracks = [];\r\n\r\n        /**\r\n         * The active instance of {@code JingleSessionPC}.\r\n         *\r\n         * @type {JingleSessionPC|null}\r\n         */\r\n        this._peerConnection = null;\r\n\r\n        // Bind event handlers so they are only bound once for every instance.\r\n        this._onError = this._onError.bind(this);\r\n        this._onRemoteStream = this._onRemoteStream.bind(this);\r\n        this._onSendMessage = this._onSendMessage.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Returns the jid of the remote peer with which this peer connection should\r\n     * be established with.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getPeerJid() {\r\n        return this._options.peerJid;\r\n    }\r\n\r\n    /**\r\n     * Updates the peer connection based on the passed in jingle.\r\n     *\r\n     * @param {Object} $jingle - An XML jingle element, wrapped in query,\r\n     * describing how the peer connection should be updated.\r\n     * @returns {void}\r\n     */\r\n    processMessage($jingle) {\r\n        switch ($jingle.attr('action')) {\r\n        case ACTIONS.ACCEPT:\r\n            this._onSessionAccept($jingle);\r\n            break;\r\n\r\n        case ACTIONS.INITIATE:\r\n            this._onSessionInitiate($jingle);\r\n            break;\r\n\r\n        case ACTIONS.TERMINATE:\r\n            this._onSessionTerminate($jingle);\r\n            break;\r\n\r\n        case ACTIONS.TRANSPORT_INFO:\r\n            this._onTransportInfo($jingle);\r\n            break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Instantiates a peer connection and starts the offer/answer cycle to\r\n     * establish a connection with a remote peer.\r\n     *\r\n     * @param {Array<JitsiLocalTrack>} localTracks - Initial local tracks to add\r\n     * to add to the peer connection.\r\n     * @returns {void}\r\n     */\r\n    start(localTracks = []) {\r\n        if (this._peerConnection) {\r\n            return;\r\n        }\r\n\r\n        this._tracks = this._tracks.concat(localTracks);\r\n\r\n        this._peerConnection = this._createPeerConnection();\r\n\r\n        this._peerConnection.invite(localTracks);\r\n    }\r\n\r\n    /**\r\n     * Begins the process of disconnecting from a remote peer and cleaning up\r\n     * the peer connection.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    stop() {\r\n        if (this._peerConnection) {\r\n            this._peerConnection.terminate();\r\n        }\r\n\r\n        this._onSessionTerminate();\r\n    }\r\n\r\n    /**\r\n     * Instantiates a new {@code JingleSessionPC} by stubbing out the various\r\n     * dependencies of {@code JingleSessionPC}.\r\n     *\r\n     * @private\r\n     * @returns {JingleSessionPC}\r\n     */\r\n    _createPeerConnection() {\r\n        /**\r\n         * {@code JingleSessionPC} takes in the entire jitsi-meet config.js\r\n         * object, which may not be accessible from the caller.\r\n         *\r\n         * @type {Object}\r\n         */\r\n        const configStub = {};\r\n\r\n        /**\r\n         * {@code JingleSessionPC} assumes an XMPP/Strophe connection object is\r\n         * passed through, which also has the jingle plugin initialized on it.\r\n         * This connection object is used to signal out peer connection updates\r\n         * via iqs, and those updates need to be piped back out to the remote\r\n         * peer.\r\n         *\r\n         * @type {Object}\r\n         */\r\n        const connectionStub = {\r\n            // At the time this is used for Spot and it's okay to say the connection is always connected, because if\r\n            // spot has no signalling it will not be in a meeting where this is used.\r\n            connected: true,\r\n            jingle: {\r\n                terminate: () => { /** no-op */ }\r\n            },\r\n            sendIQ: this._onSendMessage,\r\n\r\n            // Returns empty function, because it does not add any listeners for real\r\n            // eslint-disable-next-line no-empty-function\r\n            addEventListener: () => () => { }\r\n        };\r\n\r\n        /**\r\n         * {@code JingleSessionPC} can take in a custom ice configuration,\r\n         * depending on the peer connection type, peer-to-peer or other.\r\n         * However, {@code ProxyConnectionPC} always assume a peer-to-peer\r\n         * connection so the ice configuration is hard-coded with defaults.\r\n         *\r\n         * @type {Object}\r\n         */\r\n        const iceConfigStub = {\r\n            iceServers: DEFAULT_STUN_SERVERS,\r\n            ...this._options.iceConfig\r\n        };\r\n\r\n        /**\r\n         * {@code JingleSessionPC} expects an instance of\r\n         * {@code JitsiConference}, which has an event emitter that is used\r\n         * to signal various connection updates that the local client should\r\n         * act upon. The conference instance is not a dependency of a proxy\r\n         * connection, but the emitted events can be relevant to the proxy\r\n         * connection so the event emitter is stubbed.\r\n         *\r\n         * @param {string} event - The constant for the event type.\r\n         * @type {Function}\r\n         * @returns {void}\r\n         */\r\n        const emitter = event => {\r\n            switch (event) {\r\n            case XMPPEvents.CONNECTION_ICE_FAILED:\r\n            case XMPPEvents.CONNECTION_FAILED:\r\n                this._onError(ACTIONS.CONNECTION_ERROR, event);\r\n                break;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * {@code JingleSessionPC} expects an instance of\r\n         * {@code JitsiConference} to be passed in. {@code ProxyConnectionPC}\r\n         * is instantiated outside of the {@code JitsiConference}, so it must be\r\n         * stubbed to prevent errors.\r\n         *\r\n         * @type {Object}\r\n         */\r\n        const roomStub = {\r\n            addPresenceListener: () => { /** no-op */ },\r\n            connectionTimes: [],\r\n            eventEmitter: { emit: emitter },\r\n            getMediaPresenceInfo: () => {\r\n                // Errors occur if this function does not return an object\r\n\r\n                return {};\r\n            },\r\n            removePresenceListener: () => { /** no-op */ }\r\n        };\r\n\r\n        /**\r\n         * Create an instance of {@code RTC} as it is required for peer\r\n         * connection creation by {@code JingleSessionPC}. An existing instance\r\n         * of {@code RTC} from elsewhere should not be re-used because it is\r\n         * a stateful grouping of utilities.\r\n         */\r\n        this._rtc = new RTC(this, {});\r\n\r\n        /**\r\n         * Add the remote track listener here as {@code JingleSessionPC} has\r\n         * {@code TraceablePeerConnection} which uses {@code RTC}'s event\r\n         * emitter.\r\n         */\r\n        this._rtc.addListener(\r\n            RTCEvents.REMOTE_TRACK_ADDED,\r\n            this._onRemoteStream\r\n        );\r\n\r\n        const peerConnection = new JingleSessionPC(\r\n            undefined, // sid\r\n            undefined, // localJid\r\n            this._options.peerJid, // remoteJid\r\n            connectionStub, // connection\r\n            {\r\n                offerToReceiveAudio: this._options.receiveAudio,\r\n                offerToReceiveVideo: this._options.receiveVideo\r\n            }, // mediaConstraints\r\n            iceConfigStub, // iceConfig\r\n            true, // isP2P\r\n            this._options.isInitiator // isInitiator\r\n        );\r\n\r\n        /**\r\n         * An additional initialize call is necessary to properly set instance\r\n         * variable for calling.\r\n         */\r\n        peerConnection.initialize(roomStub, this._rtc, configStub);\r\n\r\n        return peerConnection;\r\n    }\r\n\r\n    /**\r\n     * Invoked when a connection related issue has been encountered.\r\n     *\r\n     * @param {string} errorType - The constant indicating the type of the error\r\n     * that occured.\r\n     * @param {string} details - Optional additional data about the error.\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onError(errorType, details = '') {\r\n        this._options.onError(this._options.peerJid, errorType, details);\r\n    }\r\n\r\n    /**\r\n     * Callback invoked when the peer connection has received a remote media\r\n     * stream.\r\n     *\r\n     * @param {JitsiRemoteTrack} jitsiRemoteTrack - The remote media stream\r\n     * wrapped in {@code JitsiRemoteTrack}.\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onRemoteStream(jitsiRemoteTrack) {\r\n        this._tracks.push(jitsiRemoteTrack);\r\n\r\n        this._options.onRemoteStream(jitsiRemoteTrack);\r\n    }\r\n\r\n    /**\r\n     * Callback invoked when {@code JingleSessionPC} needs to signal a message\r\n     * out to the remote peer.\r\n     *\r\n     * @param {XML} iq - The message to signal out.\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onSendMessage(iq) {\r\n        this._options.onSendMessage(this._options.peerJid, iq);\r\n    }\r\n\r\n    /**\r\n     * Callback invoked in response to an agreement to start a proxy connection.\r\n     * The passed in jingle element should contain an SDP answer to a previously\r\n     * sent SDP offer.\r\n     *\r\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onSessionAccept($jingle) {\r\n        if (!this._peerConnection) {\r\n            logger.error('Received an answer when no peer connection exists.');\r\n\r\n            return;\r\n        }\r\n\r\n        this._peerConnection.setAnswer($jingle);\r\n    }\r\n\r\n    /**\r\n     * Callback invoked in response to a request to start a proxy connection.\r\n     * The passed in jingle element should contain an SDP offer.\r\n     *\r\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onSessionInitiate($jingle) {\r\n        if (this._peerConnection) {\r\n            logger.error('Received an offer when an offer was already sent.');\r\n\r\n            return;\r\n        }\r\n\r\n        this._peerConnection = this._createPeerConnection();\r\n\r\n        this._peerConnection.acceptOffer(\r\n            $jingle,\r\n            () => { /** no-op */ },\r\n            () => this._onError(\r\n                this._options.peerJid,\r\n                ACTIONS.CONNECTION_ERROR,\r\n                'session initiate error'\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Callback invoked in response to a request to disconnect an active proxy\r\n     * connection. Cleans up tracks and the peer connection.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onSessionTerminate() {\r\n        this._tracks.forEach(track => track.dispose());\r\n        this._tracks = [];\r\n\r\n        if (this._peerConnection) {\r\n            this._peerConnection.onTerminated();\r\n        }\r\n\r\n        if (this._rtc) {\r\n            this._rtc.removeListener(\r\n                RTCEvents.REMOTE_TRACK_ADDED,\r\n                this._onRemoteStream\r\n            );\r\n\r\n            this._rtc.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback invoked in response to ICE candidates from the remote peer.\r\n     * The passed in jingle element should contain an ICE candidate.\r\n     *\r\n     * @param {Object} $jingle - The jingle element wrapped in jQuery.\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onTransportInfo($jingle) {\r\n        this._peerConnection.addIceCandidates($jingle);\r\n    }\r\n}\r\n","/* globals $ */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { $iq } from 'strophe.js';\r\n\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport VideoType from '../../service/RTC/VideoType';\r\nimport RTC from '../RTC/RTC';\r\n\r\nimport ProxyConnectionPC from './ProxyConnectionPC';\r\nimport { ACTIONS } from './constants';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Instantiates a new ProxyConnectionPC and ensures only one exists at a given\r\n * time. Currently it assumes ProxyConnectionPC is used only for screensharing\r\n * and assumes IQs to be used for communication.\r\n */\r\nexport default class ProxyConnectionService {\r\n    /**\r\n     * Initializes a new {@code ProxyConnectionService} instance.\r\n     *\r\n     * @param {Object} options - Values to initialize the instance with.\r\n     * @param {boolean} [options.convertVideoToDesktop] - Whether or not proxied\r\n     * video should be returned as a desktop stream. Defaults to false.\r\n     * @param {Object} [options.iceConfig] - The {@code RTCConfiguration} to use\r\n     * for the peer connection.\r\n     * @param {JitsiConnection} [options.jitsiConnection] - The\r\n     * {@code JitsiConnection} which will be used to fetch TURN credentials for\r\n     * the P2P connection.\r\n     * @param {Function} options.onRemoteStream - Callback to invoke when a\r\n     * remote video stream has been received and converted to a\r\n     * {@code JitsiLocakTrack}. The {@code JitsiLocakTrack} will be passed in.\r\n     * @param {Function} options.onSendMessage - Callback to invoke when a\r\n     * message has to be sent (signaled) out. The arguments passed in are the\r\n     * jid to send the message to and the message\r\n     */\r\n    constructor(options = {}) {\r\n        const {\r\n            jitsiConnection,\r\n            ...otherOptions\r\n        } = options;\r\n\r\n        /**\r\n         * Holds a reference to the collection of all callbacks.\r\n         *\r\n         * @type {Object}\r\n         */\r\n        this._options = {\r\n            iceConfig: jitsiConnection\r\n                && jitsiConnection.xmpp.connection.jingle.p2pIceConfig,\r\n            ...otherOptions\r\n        };\r\n\r\n        /**\r\n         * The active instance of {@code ProxyConnectionService}.\r\n         *\r\n         * @type {ProxyConnectionPC|null}\r\n         */\r\n        this._peerConnection = null;\r\n\r\n        // Bind event handlers so they are only bound once for every instance.\r\n        this._onFatalError = this._onFatalError.bind(this);\r\n        this._onSendMessage = this._onSendMessage.bind(this);\r\n        this._onRemoteStream = this._onRemoteStream.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Parses a message object regarding a proxy connection to create a new\r\n     * proxy connection or update and existing connection.\r\n     *\r\n     * @param {Object} message - A message object regarding establishing or\r\n     * updating a proxy connection.\r\n     * @param {Object} message.data - An object containing additional message\r\n     * details.\r\n     * @param {string} message.data.iq - The stringified iq which explains how\r\n     * and what to update regarding the proxy connection.\r\n     * @param {string} message.from - The message sender's full jid. Used for\r\n     * sending replies.\r\n     * @returns {void}\r\n     */\r\n    processMessage(message) {\r\n        const peerJid = message.from;\r\n\r\n        if (!peerJid) {\r\n            return;\r\n        }\r\n\r\n        // If a proxy connection has already been established and messages come\r\n        // from another peer jid then those messages should be replied to with\r\n        // a rejection.\r\n        if (this._peerConnection\r\n            && this._peerConnection.getPeerJid() !== peerJid) {\r\n            this._onFatalError(\r\n                peerJid,\r\n                ACTIONS.CONNECTION_ERROR,\r\n                'rejected'\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        const iq = this._convertStringToXML(message.data.iq);\r\n        const $jingle = iq && iq.find('jingle');\r\n        const action = $jingle && $jingle.attr('action');\r\n\r\n        if (action === ACTIONS.INITIATE) {\r\n            this._peerConnection = this._createPeerConnection(peerJid, {\r\n                isInitiator: false,\r\n                receiveVideo: true\r\n            });\r\n        }\r\n\r\n        // Truthy check for peer connection added to protect against possibly\r\n        // receiving actions before an ACTIONS.INITIATE.\r\n        if (this._peerConnection) {\r\n            this._peerConnection.processMessage($jingle);\r\n        }\r\n\r\n        // Take additional steps to ensure the peer connection is cleaned up\r\n        // if it is to be closed.\r\n        if (action === ACTIONS.CONNECTION_ERROR\r\n            || action === ACTIONS.UNAVAILABLE\r\n            || action === ACTIONS.TERMINATE) {\r\n            this._selfCloseConnection();\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Instantiates and initiates a proxy peer connection.\r\n     *\r\n     * @param {string} peerJid - The jid of the remote client that should\r\n     * receive messages.\r\n     * @param {Array<JitsiLocalTrack>} localTracks - Initial media tracks to\r\n     * send through to the peer.\r\n     * @returns {void}\r\n     */\r\n    start(peerJid, localTracks = []) {\r\n        this._peerConnection = this._createPeerConnection(peerJid, {\r\n            isInitiator: true,\r\n            receiveVideo: false\r\n        });\r\n\r\n        this._peerConnection.start(localTracks);\r\n    }\r\n\r\n    /**\r\n     * Terminates any active proxy peer connection.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    stop() {\r\n        if (this._peerConnection) {\r\n            this._peerConnection.stop();\r\n        }\r\n\r\n        this._peerConnection = null;\r\n    }\r\n\r\n    /**\r\n     * Transforms a stringified xML into a XML wrapped in jQuery.\r\n     *\r\n     * @param {string} xml - The XML in string form.\r\n     * @private\r\n     * @returns {Object|null} A jQuery version of the xml. Null will be returned\r\n     * if an error is encountered during transformation.\r\n     */\r\n    _convertStringToXML(xml) {\r\n        try {\r\n            const xmlDom = new DOMParser().parseFromString(xml, 'text/xml');\r\n\r\n            return $(xmlDom);\r\n        } catch (e) {\r\n            logger.error('Attempted to convert incorrectly formatted xml');\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper for creating an instance of {@code ProxyConnectionPC}.\r\n     *\r\n     * @param {string} peerJid - The jid of the remote peer with which the\r\n     * {@code ProxyConnectionPC} will be established with.\r\n     * @param {Object} options - Additional defaults to instantiate the\r\n     * {@code ProxyConnectionPC} with. See the constructor of ProxyConnectionPC\r\n     * for more details.\r\n     * @private\r\n     * @returns {ProxyConnectionPC}\r\n     */\r\n    _createPeerConnection(peerJid, options = {}) {\r\n        if (!peerJid) {\r\n            throw new Error('Cannot create ProxyConnectionPC without a peer.');\r\n        }\r\n\r\n        const pcOptions = {\r\n            iceConfig: this._options.iceConfig,\r\n            onError: this._onFatalError,\r\n            onRemoteStream: this._onRemoteStream,\r\n            onSendMessage: this._onSendMessage,\r\n            peerJid,\r\n            ...options\r\n        };\r\n\r\n        return new ProxyConnectionPC(pcOptions);\r\n    }\r\n\r\n    /**\r\n     * Callback invoked when an error occurs that should cause\r\n     * {@code ProxyConnectionPC} to be closed if the peer is currently\r\n     * connected. Sends an error message/reply back to the peer.\r\n     *\r\n     * @param {string} peerJid - The peer jid with which the connection was\r\n     * attempted or started, and to which an iq with error details should be\r\n     * sent.\r\n     * @param {string} errorType - The constant indicating the type of the error\r\n     * that occured.\r\n     * @param {string} details - Optional additional data about the error.\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onFatalError(peerJid, errorType, details = '') {\r\n        logger.error(\r\n            'Received a proxy connection error', peerJid, errorType, details);\r\n\r\n        const iq = $iq({\r\n            to: peerJid,\r\n            type: 'set'\r\n        })\r\n            .c('jingle', {\r\n                xmlns: 'urn:xmpp:jingle:1',\r\n                action: errorType\r\n            })\r\n            .c('details')\r\n            .t(details)\r\n            .up();\r\n\r\n        this._onSendMessage(peerJid, iq);\r\n\r\n        if (this._peerConnection\r\n            && this._peerConnection.getPeerJid() === peerJid) {\r\n            this._selfCloseConnection();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback invoked when the remote peer of the {@code ProxyConnectionPC}\r\n     * has offered a media stream. The stream is converted into a\r\n     * {@code JitsiLocalTrack} for local usage if the {@code onRemoteStream}\r\n     * callback is defined.\r\n     *\r\n     * @param {JitsiRemoteTrack} jitsiRemoteTrack - The {@code JitsiRemoteTrack}\r\n     * for the peer's media stream.\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onRemoteStream(jitsiRemoteTrack) {\r\n        if (!this._options.onRemoteStream) {\r\n            logger.error('Remote track received without callback.');\r\n            jitsiRemoteTrack.dispose();\r\n\r\n            return;\r\n        }\r\n\r\n        const isVideo = jitsiRemoteTrack.isVideoTrack();\r\n        let videoType;\r\n\r\n        if (isVideo) {\r\n            videoType = this._options.convertVideoToDesktop\r\n                ? VideoType.DESKTOP : VideoType.CAMERA;\r\n        }\r\n\r\n        // Grab the webrtc media stream and pipe it through the same processing\r\n        // that would occur for a locally obtained media stream.\r\n        const mediaStream = jitsiRemoteTrack.getOriginalStream();\r\n        const jitsiLocalTracks = RTC.newCreateLocalTracks(\r\n            [\r\n                {\r\n                    deviceId:\r\n                        `proxy:${this._peerConnection.getPeerJid()}`,\r\n                    mediaType: isVideo ? MediaType.VIDEO : MediaType.AUDIO,\r\n                    sourceType: 'proxy',\r\n                    stream: mediaStream,\r\n                    track: mediaStream.getVideoTracks()[0],\r\n                    videoType\r\n                }\r\n            ]);\r\n\r\n        this._options.onRemoteStream(jitsiLocalTracks[0]);\r\n    }\r\n\r\n    /**\r\n     * Formats and forwards a message an iq to be sent to a peer jid.\r\n     *\r\n     * @param {string} peerJid - The jid the iq should be sent to.\r\n     * @param {Object} iq - The iq which would be sent to the peer jid.\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _onSendMessage(peerJid, iq) {\r\n        if (!this._options.onSendMessage) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const stringifiedIq\r\n                = new XMLSerializer().serializeToString(iq.nodeTree || iq);\r\n\r\n            this._options.onSendMessage(peerJid, { iq: stringifiedIq });\r\n        } catch (e) {\r\n            logger.error('Attempted to send an incorrectly formatted iq.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Invoked when preemptively closing the {@code ProxyConnectionPC}.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _selfCloseConnection() {\r\n        this.stop();\r\n\r\n        this._options.onConnectionClosed\r\n            && this._options.onConnectionClosed();\r\n    }\r\n}\r\n","/**\r\n * The know jingle actions that can be sent and should be acted upon by\r\n * {@code ProxyConnectionService} and {@code ProxyConnectionPC}.\r\n */\r\nexport const ACTIONS = {\r\n    ACCEPT: 'session-accept',\r\n    CONNECTION_ERROR: 'connection-error-encountered',\r\n    INITIATE: 'session-initiate',\r\n    TERMINATE: 'session-terminate',\r\n    TRANSPORT_INFO: 'transport-info',\r\n    UNAVAILABLE: 'unavailable'\r\n};\r\n","import { $iq } from 'strophe.js';\r\n\r\nimport recordingXMLUtils from './recordingXMLUtils';\r\n\r\n/**\r\n * Represents a recording session.\r\n */\r\nexport default class JibriSession {\r\n    /**\r\n     * Initializes a new JibriSession instance.\r\n     *\r\n     * @constructor\r\n     */\r\n    constructor(options = {}) {\r\n        this._connection = options.connection;\r\n        this._mode = options.mode;\r\n\r\n        this._setSessionID(options.sessionID);\r\n        this.setStatus(options.status);\r\n    }\r\n\r\n    /**\r\n     * Returns the error related to the session instance, if any.\r\n     *\r\n     * @returns {string|undefined}\r\n     */\r\n    getError() {\r\n        return this._error;\r\n    }\r\n\r\n    /**\r\n     * Returns the session ID of the session instance.\r\n     *\r\n     * @returns {string|undefined}\r\n     */\r\n    getID() {\r\n        return this._sessionID;\r\n    }\r\n\r\n    /**\r\n     * Returns the initiator of the session instance.\r\n     *\r\n     * @returns {JitsiParticipant|undefined} The participant that started the session.\r\n     */\r\n    getInitiator() {\r\n        return this._initiator;\r\n    }\r\n\r\n    /**\r\n     * Returns the streaming URL of the session.\r\n     *\r\n     * @returns {string|undefined}\r\n     */\r\n    getLiveStreamViewURL() {\r\n        return this._liveStreamViewURL;\r\n    }\r\n\r\n    /**\r\n     * Returns the current status of the session.\r\n     *\r\n     * @returns {string|undefined}\r\n     */\r\n    getStatus() {\r\n        return this._status;\r\n    }\r\n\r\n    /**\r\n     * Returns the jid of the participant that stopped the session.\r\n     *\r\n     * @returns {JitsiParticipant|undefined} The participant that stopped the session.\r\n     */\r\n    getTerminator() {\r\n        return this._terminator;\r\n    }\r\n\r\n    /**\r\n     * Returns the current recording mode of the session, such as \"file\".\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getMode() {\r\n        return this._mode;\r\n    }\r\n\r\n    /**\r\n     * Sets the last known error message related to the session.\r\n     *\r\n     * @param {string} error - The error string explaining why the session\r\n     * entered an error state.\r\n     * @returns {void}\r\n     */\r\n    setError(error) {\r\n        this._error = error;\r\n    }\r\n\r\n    /**\r\n     * Sets the last live stream URL for the session instance. Usually this is\r\n     * a YouTube URL and usually this is only set for \"stream\" sessions.\r\n     *\r\n     * @param {string} url - The live stream URL associated with the session.\r\n     * @returns {void}\r\n     */\r\n    setLiveStreamViewURL(url) {\r\n        this._liveStreamViewURL = url;\r\n    }\r\n\r\n    /**\r\n     * Sets the last known status for this recording session.\r\n     *\r\n     * @param {string} status - The new status to set.\r\n     * @returns {void}\r\n     */\r\n    setStatus(status) {\r\n        this._status = status;\r\n    }\r\n\r\n    /**\r\n     * Sets the creator's jid of the session.\r\n     * @param {JitsiParticipant} participant - The creator of the session.\r\n     */\r\n    setInitiator(participant) {\r\n        this._initiator = participant;\r\n    }\r\n\r\n    /**\r\n     * Sets the jid of the participant that stopped the session.\r\n     * @param {JitsiParticipant} participant  - The participant's jid,\r\n     * that stopped the session.\r\n     */\r\n    setTerminator(participant) {\r\n        this._terminator = participant;\r\n    }\r\n\r\n    /**\r\n     * Sends a message to start the actual recording.\r\n     *\r\n     * @param {Object} options - Additional arguments for starting the\r\n     * recording.\r\n     * @param {string} [options.appData] - Data specific to the app/service that\r\n     * the result file will be uploaded.\r\n     * @param {string} [options.broadcastId] - The broadcast ID of an\r\n     * associated YouTube stream, used for knowing the URL from which the stream\r\n     * can be viewed.\r\n     * @param {string} options.focusMucJid - The JID of the focus participant\r\n     * that controls recording.\r\n     * @param {streamId} options.streamId - Necessary for live streaming, this\r\n     * is the the stream key needed to start a live streaming session with the\r\n     * streaming service provider.\r\n     * @returns Promise\r\n     */\r\n    start({ appData, broadcastId, focusMucJid, streamId }) {\r\n        return new Promise((resolve, reject) => {\r\n            this._connection.sendIQ(\r\n                this._createIQ({\r\n                    action: 'start',\r\n                    appData,\r\n                    focusMucJid,\r\n                    broadcastId,\r\n                    streamId\r\n                }),\r\n                result => {\r\n                    // All users will eventually receive the 'pending' status\r\n                    // from the backend, but for the user initiating the session\r\n                    // it's better to give some instant feedback that recording\r\n                    // is starting so fire 'pending' here manually.\r\n                    this.setStatus('pending');\r\n                    this._setSessionID(\r\n                        recordingXMLUtils.getSessionIdFromIq(result));\r\n\r\n                    resolve();\r\n                },\r\n                error => {\r\n                    this._setErrorFromIq(error);\r\n\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sends a message to actually stop the recording session.\r\n     *\r\n     * @param {Object} options - Additional arguments for stopping the\r\n     * recording.\r\n     * @param {Object} options.focusMucJid - The JID of the focus participant\r\n     * that controls recording.\r\n     * @returns Promise\r\n     */\r\n    stop({ focusMucJid }) {\r\n        return new Promise((resolve, reject) => {\r\n            this._connection.sendIQ(\r\n                this._createIQ({\r\n                    action: 'stop',\r\n                    focusMucJid\r\n                }),\r\n                resolve,\r\n                reject);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Generates the message to change the status of the recording session.\r\n     *\r\n     * @param {string} status - The new status to which the recording session\r\n     * should transition.\r\n     * @param {string} [options.appData] - Data specific to the app/service that\r\n     * the result file will be uploaded.\r\n     * @param {string} [options.broadcastId] - The broadcast ID of an\r\n     * associated YouTube stream, used for knowing the URL from which the stream\r\n     * can be viewed.\r\n     * @param {string} options.focusMucJid - The JID of the focus participant\r\n     * that controls recording.\r\n     * @param {streamId} options.streamId - Necessary for live streaming, this\r\n     * is the the stream key needed to start a live streaming session with the\r\n     * streaming service provider.\r\n     * @returns Object - The XMPP IQ message.\r\n     */\r\n    _createIQ({ action, appData, broadcastId, focusMucJid, streamId }) {\r\n        return $iq({\r\n            to: focusMucJid,\r\n            type: 'set'\r\n        })\r\n        .c('jibri', {\r\n            'xmlns': 'http://jitsi.org/protocol/jibri',\r\n            'action': action,\r\n            'app_data': appData,\r\n            'recording_mode': this._mode,\r\n            'streamid': streamId,\r\n            'you_tube_broadcast_id': broadcastId\r\n        })\r\n        .up();\r\n    }\r\n\r\n    /**\r\n     * Handles the error from an iq and stores the error.\r\n     *\r\n     * @param {Node} errorIq - The error response from an Iq.\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _setErrorFromIq(errorIq) {\r\n        const error = errorIq.getElementsByTagName('error')[0];\r\n\r\n        this.setError(error.children[0].tagName);\r\n    }\r\n\r\n    /**\r\n     * Sets the known session ID for this recording session.\r\n     *\r\n     * @param {string} sessionID\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _setSessionID(sessionID) {\r\n        this._sessionID = sessionID;\r\n    }\r\n}\r\n","import { getLogger } from 'jitsi-meet-logger';\r\n\r\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\r\n\r\nimport JibriSession from './JibriSession';\r\nimport recordingXMLUtils from './recordingXMLUtils';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * A class responsible for starting and stopping recording sessions and emitting\r\n * state updates for them.\r\n */\r\nclass RecordingManager {\r\n    /**\r\n     * Initialize {@code RecordingManager} with other objects that are necessary\r\n     * for starting a recording.\r\n     *\r\n     * @param {ChatRoom} chatRoom - The chat room to handle.\r\n     * @returns {void}\r\n     */\r\n    constructor(chatRoom) {\r\n        /**\r\n         * All known recording sessions from the current conference.\r\n         */\r\n        this._sessions = {};\r\n\r\n        this._chatRoom = chatRoom;\r\n\r\n        this.onPresence = this.onPresence.bind(this);\r\n\r\n        this._chatRoom.eventEmitter.addListener(\r\n            XMPPEvents.PRESENCE_RECEIVED, this.onPresence);\r\n    }\r\n\r\n    /**\r\n     * Finds an existing recording session by session ID.\r\n     *\r\n     * @param {string} sessionID - The session ID associated with the recording.\r\n     * @returns {JibriSession|undefined}\r\n     */\r\n    getSession(sessionID) {\r\n        return this._sessions[sessionID];\r\n    }\r\n\r\n    /**\r\n     * Callback to invoke to parse through a presence update to find recording\r\n     * related updates (from Jibri participant doing the recording and the\r\n     * focus which controls recording).\r\n     *\r\n     * @param {Object} event - The presence data from the pubsub event.\r\n     * @param {Node} event.presence - An XMPP presence update.\r\n     * @param {boolean} event.fromHiddenDomain - Whether or not the update comes\r\n     * from a participant that is trusted but not visible, as would be the case\r\n     * with the Jibri recorder participant.\r\n     * @returns {void}\r\n     */\r\n    onPresence({ fromHiddenDomain, presence }) {\r\n        if (recordingXMLUtils.isFromFocus(presence)) {\r\n            this._handleFocusPresence(presence);\r\n        } else if (fromHiddenDomain) {\r\n            this._handleJibriPresence(presence);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Start a recording session.\r\n     *\r\n     * @param {Object} options - Configuration for the recording.\r\n     * @param {string} [options.appData] - Data specific to the app/service that\r\n     * the result file will be uploaded.\r\n     * @param {string} [optional] options.broadcastId - The channel on which a\r\n     * live stream will occur.\r\n     * @param {string} options.mode - The mode in which recording should be\r\n     * started. Recognized values are \"file\" and \"stream\".\r\n     * @param {string} [optional] options.streamId - The stream key to be used\r\n     * for live stream broadcasting. Required for live streaming.\r\n     * @returns {Promise} A promise for starting a recording, which will pass\r\n     * back the session on success. The promise resolves after receiving an\r\n     * acknowledgment of the start request success or fail.\r\n     */\r\n    startRecording(options) {\r\n        const session = new JibriSession({\r\n            ...options,\r\n            connection: this._chatRoom.connection\r\n        });\r\n\r\n        return session.start({\r\n            appData: options.appData,\r\n            broadcastId: options.broadcastId,\r\n            focusMucJid: this._chatRoom.focusMucJid,\r\n            streamId: options.streamId\r\n        })\r\n            .then(() => {\r\n                // Only store the session and emit if the session has not been\r\n                // added already. This is a workaround for the session getting\r\n                // created due to a presence update to announce a \"pending\"\r\n                // recording being received before JibriSession#start finishes.\r\n                if (!this.getSession(session.getID())) {\r\n                    this._addSession(session);\r\n                    this._emitSessionUpdate(session);\r\n                }\r\n\r\n                return session;\r\n            })\r\n            .catch(error => {\r\n                this._emitSessionUpdate(session);\r\n\r\n                return Promise.reject(error);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Stop a recording session.\r\n     *\r\n     * @param {string} sessionID - The ID associated with the recording session\r\n     * to be stopped.\r\n     * @returns {Promise} The promise resolves after receiving an\r\n     * acknowledgment of the stop request success or fail.\r\n     */\r\n    stopRecording(sessionID) {\r\n        const session = this.getSession(sessionID);\r\n\r\n        if (session) {\r\n            return session.stop({ focusMucJid: this._chatRoom.focusMucJid });\r\n        }\r\n\r\n        return Promise.reject(new Error('Could not find session'));\r\n    }\r\n\r\n    /**\r\n     * Stores a reference to the passed in JibriSession.\r\n     *\r\n     * @param {string} session - The JibriSession instance to store.\r\n     * @returns {void}\r\n     */\r\n    _addSession(session) {\r\n        this._sessions[session.getID()] = session;\r\n    }\r\n\r\n    /**\r\n     * Create a new instance of a recording session and stores a reference to\r\n     * it.\r\n     *\r\n     * @param {string} sessionID - The session ID of the recording in progress.\r\n     * @param {string} status - The current status of the recording session.\r\n     * @param {string} mode - The recording mode of the session.\r\n     * @returns {JibriSession}\r\n     */\r\n    _createSession(sessionID, status, mode) {\r\n        const session = new JibriSession({\r\n            connection: this._chatRoom.connection,\r\n            focusMucJid: this._chatRoom.focusMucJid,\r\n            mode,\r\n            sessionID,\r\n            status\r\n        });\r\n\r\n        this._addSession(session);\r\n\r\n        return session;\r\n    }\r\n\r\n    /**\r\n     * Notifies listeners of an update to a recording session.\r\n     *\r\n     * @param {JibriSession} session - The session that has been updated.\r\n     * @param {string|undefined} initiator - The jid of the initiator of the update.\r\n     */\r\n    _emitSessionUpdate(session, initiator) {\r\n        this._chatRoom.eventEmitter.emit(\r\n            XMPPEvents.RECORDER_STATE_CHANGED, session, initiator);\r\n    }\r\n\r\n    /**\r\n     * Parses presence to update an existing JibriSession or to create a new\r\n     * JibriSession.\r\n     *\r\n     * @param {Node} presence - An XMPP presence update.\r\n     * @returns {void}\r\n     */\r\n    _handleFocusPresence(presence) {\r\n        const jibriStatus = recordingXMLUtils.getFocusRecordingUpdate(presence);\r\n\r\n        if (!jibriStatus) {\r\n            return;\r\n        }\r\n\r\n        const { error, initiator, recordingMode, sessionID, status } = jibriStatus;\r\n\r\n        // We'll look for an existing session or create one (in case we're a\r\n        // participant joining a call with an existing recording going on).\r\n        let session = this.getSession(sessionID);\r\n\r\n        // Handle the case where a status update is received in presence but\r\n        // the local participant has joined while the JibriSession has already\r\n        // ended.\r\n        if (!session && status === 'off') {\r\n            logger.warn(\r\n                'Ignoring recording presence update',\r\n                'Received a new session with status off.');\r\n\r\n            return;\r\n        }\r\n\r\n        // Jicofo sends updates via presence, and any extension in presence\r\n        // is sent until it is explicitly removed.  It's difficult for\r\n        // Jicofo to know when a presence has been sent once, so it won't\r\n        // remove jibri status extension.  This means we may receive the same\r\n        // status update more than once, so check for that here\r\n        if (session\r\n            && session.getStatus() === status\r\n            && session.getError() === error) {\r\n            logger.warn('Ignoring duplicate presence update: ',\r\n                JSON.stringify(jibriStatus));\r\n\r\n            return;\r\n        }\r\n\r\n        if (!session) {\r\n            session = this._createSession(sessionID, status, recordingMode);\r\n        }\r\n\r\n        session.setStatus(status);\r\n\r\n        if (error) {\r\n            session.setError(error);\r\n        }\r\n\r\n        this._emitSessionUpdate(session, initiator);\r\n    }\r\n\r\n    /**\r\n     * Handles updates from the Jibri which can broadcast a YouTube URL that\r\n     * needs to be updated in a JibriSession.\r\n     *\r\n     * @param {Node} presence - An XMPP presence update.\r\n     * @returns {void}\r\n     */\r\n    _handleJibriPresence(presence) {\r\n        const { liveStreamViewURL, mode, sessionID }\r\n            = recordingXMLUtils.getHiddenDomainUpdate(presence);\r\n\r\n        if (!sessionID) {\r\n            logger.warn(\r\n                'Ignoring potential jibri presence due to no session id.');\r\n\r\n            return;\r\n        }\r\n\r\n        let session = this.getSession(sessionID);\r\n\r\n        if (!session) {\r\n            session = this._createSession(sessionID, '', mode);\r\n        }\r\n\r\n        session.setLiveStreamViewURL(liveStreamViewURL);\r\n\r\n        this._emitSessionUpdate(session);\r\n    }\r\n}\r\n\r\nexport default RecordingManager;\r\n","export default {\r\n    error: {\r\n        BUSY: 'busy',\r\n        ERROR: 'error',\r\n        RESOURCE_CONSTRAINT: 'resource-constraint',\r\n        SERVICE_UNAVAILABLE: 'service-unavailable'\r\n    },\r\n    mode: {\r\n        FILE: 'file',\r\n        STREAM: 'stream'\r\n    },\r\n    status: {\r\n        OFF: 'off',\r\n        ON: 'on',\r\n        PENDING: 'pending'\r\n    }\r\n};\r\n","/**\r\n * A collection of utility functions for taking in XML and parsing it to return\r\n * certain values.\r\n */\r\nexport default {\r\n    /**\r\n     * Parses the presence update of the focus and returns an object with the\r\n     * statuses related to recording.\r\n     *\r\n     * @param {Node} presence - An XMPP presence update.\r\n     * @returns {Object} The current presence values related to recording.\r\n     */\r\n    getFocusRecordingUpdate(presence) {\r\n        const jibriStatus = presence\r\n            && presence.getElementsByTagName('jibri-recording-status')[0];\r\n\r\n        if (!jibriStatus) {\r\n            return;\r\n        }\r\n\r\n        return {\r\n            error: jibriStatus.getAttribute('failure_reason'),\r\n            initiator: jibriStatus.getAttribute('initiator'),\r\n            recordingMode: jibriStatus.getAttribute('recording_mode'),\r\n            sessionID: jibriStatus.getAttribute('session_id'),\r\n            status: jibriStatus.getAttribute('status')\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Parses the presence update from a hidden domain participant and returns\r\n     * an object with the statuses related to recording.\r\n     *\r\n     * @param {Node} presence - An XMPP presence update.\r\n     * @returns {Object} The current presence values related to recording.\r\n     */\r\n    getHiddenDomainUpdate(presence) {\r\n        const liveStreamViewURLContainer\r\n            = presence.getElementsByTagName('live-stream-view-url')[0];\r\n        const liveStreamViewURL = liveStreamViewURLContainer\r\n            && liveStreamViewURLContainer.textContent;\r\n        const modeContainer\r\n            = presence.getElementsByTagName('mode')[0];\r\n        const mode = modeContainer\r\n            && modeContainer.textContent\r\n            && modeContainer.textContent.toLowerCase();\r\n        const sessionIDContainer\r\n            = presence.getElementsByTagName('session_id')[0];\r\n        const sessionID\r\n            = sessionIDContainer && sessionIDContainer.textContent;\r\n\r\n        return {\r\n            liveStreamViewURL,\r\n            mode,\r\n            sessionID\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Returns the recording session ID from a successful IQ.\r\n     *\r\n     * @param {Node} response - The response from the IQ.\r\n     * @returns {string} The session ID of the recording session.\r\n     */\r\n    getSessionIdFromIq(response) {\r\n        const jibri = response && response.getElementsByTagName('jibri')[0];\r\n\r\n        return jibri && jibri.getAttribute('session_id');\r\n    },\r\n\r\n    /**\r\n     * Returns the recording session ID from a presence, if it exists.\r\n     *\r\n     * @param {Node} presence - An XMPP presence update.\r\n     * @returns {string|undefined} The session ID of the recording session.\r\n     */\r\n    getSessionId(presence) {\r\n        const sessionIdContainer\r\n            = presence.getElementsByTagName('session_id')[0];\r\n        const sessionId = sessionIdContainer && sessionIdContainer.textContent;\r\n\r\n        return sessionId;\r\n    },\r\n\r\n    /**\r\n     * Returns whether or not a presence is from the focus.\r\n     *\r\n     * @param {Node} presence - An XMPP presence update.\r\n     * @returns {boolean} True if the presence is from the focus.\r\n     */\r\n    isFromFocus(presence) {\r\n        return presence.getAttribute('from').includes('focus');\r\n    }\r\n};\r\n","import browser from '../browser';\r\nimport { createRttByRegionEvent }\r\n    from '../../service/statistics/AnalyticsEvents';\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport RTCUtils from '../RTC/RTCUtils';\r\nimport Statistics from '../statistics/statistics';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * The options to pass to createOffer (we need to offer to receive *something*\r\n * for the PC to gather candidates.\r\n */\r\nconst offerOptions = {\r\n    offerToReceiveAudio: 1,\r\n    offerToReceiveVideo: 0\r\n};\r\n\r\n\r\n/**\r\n * The interval at which the webrtc engine sends STUN keep alive requests.\r\n * @type {number}\r\n */\r\nconst stunKeepAliveIntervalMs = 10000;\r\n\r\n/**\r\n * Wraps a PeerConnection with one specific STUN server and measures the RTT\r\n * to the STUN server.\r\n */\r\nclass PCMonitor {\r\n    /* eslint-disable max-params */\r\n    /**\r\n     *\r\n     * @param {String} region - The region of the STUN server.\r\n     * @param {String} address - The address of the STUN server.\r\n     * @param {number} getStatsIntervalMs how often to call getStats.\r\n     * @param {number} delay the delay after which the PeerConnection will be\r\n     * started (that is, createOffer and setLocalDescription will be invoked).\r\n     *\r\n     */\r\n    constructor(region, address, getStatsIntervalMs, delay) {\r\n        /* eslint-disable max-params */\r\n        this.region = region;\r\n        this.getStatsIntervalMs = getStatsIntervalMs;\r\n        this.getStatsInterval = null;\r\n\r\n        // What we consider the current RTT. It is Math.min(this.rtts).\r\n        this.rtt = Infinity;\r\n\r\n        // The RTT measurements we've made from the latest getStats() calls.\r\n        this.rtts = [];\r\n\r\n        const iceServers = [ { 'url': `stun:${address}` } ];\r\n\r\n        this.pc = new RTCUtils.RTCPeerConnectionType(\r\n            {\r\n                'iceServers': iceServers\r\n            });\r\n\r\n        // Maps a key consisting of the IP address, port and priority of a\r\n        // candidate to some state related to it. If we have more than one\r\n        // network interface we will might multiple srflx candidates and this\r\n        // helps to distinguish between then.\r\n        this.candidates = {};\r\n\r\n        this.stopped = false;\r\n\r\n        this.start = this.start.bind(this);\r\n        this.stop = this.stop.bind(this);\r\n        this.startStatsInterval = this.startStatsInterval.bind(this);\r\n        this.handleCandidateRtt = this.handleCandidateRtt.bind(this);\r\n\r\n        window.setTimeout(this.start, delay);\r\n    }\r\n\r\n    /**\r\n     * Starts this PCMonitor. That is, invokes createOffer and\r\n     * setLocalDescription on the PeerConnection and starts an interval which\r\n     * calls getStats.\r\n     */\r\n    start() {\r\n        if (this.stopped) {\r\n            return;\r\n        }\r\n\r\n        this.pc.createOffer(offerOptions).then(offer => {\r\n            this.pc.setLocalDescription(\r\n                offer,\r\n                () => {\r\n                    logger.info(\r\n                        `setLocalDescription success for ${this.region}`);\r\n                    this.startStatsInterval();\r\n                },\r\n                error => {\r\n                    logger.warn(\r\n                        `setLocalDescription failed for ${this.region}: ${\r\n                            error}`);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Starts an interval which invokes getStats on the PeerConnection and\r\n     * measures the RTTs for the different candidates.\r\n     */\r\n    startStatsInterval() {\r\n        this.getStatsInterval = window.setInterval(\r\n            () => {\r\n                // Note that the data that we use to measure the RTT is only\r\n                // available in the legacy (callback based) getStats API.\r\n                this.pc.getStats(stats => {\r\n                    const results = stats.result();\r\n\r\n                    for (let i = 0; i < results.length; ++i) {\r\n                        const res = results[i];\r\n                        const rttTotal\r\n                            = Number(res.stat('stunKeepaliveRttTotal'));\r\n\r\n                        // We recognize the results that we care for (local\r\n                        // candidates of type srflx) by the existance of the\r\n                        // stunKeepaliveRttTotal stat.\r\n                        if (rttTotal > 0) {\r\n                            const candidateKey\r\n                                = `${res.stat('ipAddress')}_${\r\n                                    res.stat('portNumber')}_${\r\n                                    res.stat('priority')}`;\r\n\r\n                            this.handleCandidateRtt(\r\n                                candidateKey,\r\n                                rttTotal,\r\n                                Number(\r\n                                    res.stat('stunKeepaliveResponsesReceived')),\r\n                                Number(\r\n                                    res.stat('stunKeepaliveRequestsSent')));\r\n                        }\r\n                    }\r\n\r\n                    // After we've measured the RTT for all candidates we,\r\n                    // update the state of the PC with the shortest one.\r\n                    let rtt = Infinity;\r\n\r\n                    for (const key in this.candidates) {\r\n                        if (this.candidates.hasOwnProperty(key)\r\n                            && this.candidates[key].rtt > 0) {\r\n                            rtt = Math.min(rtt, this.candidates[key].rtt);\r\n                        }\r\n                    }\r\n\r\n                    // We keep the last 6 measured RTTs and choose the shortest\r\n                    // one to export to analytics. This is because we often see\r\n                    // failures get a real measurement which end up as Infinity.\r\n                    this.rtts.push(rtt);\r\n                    if (this.rtts.length > 6) {\r\n                        this.rtts = this.rtts.splice(1, 7);\r\n                    }\r\n                    this.rtt = Math.min(...this.rtts);\r\n                });\r\n            },\r\n            this.getStatsIntervalMs\r\n        );\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n    /**\r\n     * Updates the RTT for a candidate identified by \"key\" based on the values\r\n     * from getStats() and the previously saved state (i.e. old values).\r\n     *\r\n     * @param {String} key the ID for the candidate\r\n     * @param {number} rttTotal the value of the 'stunKeepaliveRttTotal' just\r\n     * measured.\r\n     * @param {number} responsesReceived the value of the\r\n     * 'stunKeepaliveResponsesReceived' stat just measured.\r\n     * @param {number} requestsSent the value of the 'stunKeepaliveRequestsSent'\r\n     * stat just measured.\r\n     */\r\n    handleCandidateRtt(key, rttTotal, responsesReceived, requestsSent) {\r\n        /* eslist-enable max-params */\r\n        if (!this.candidates[key]) {\r\n            this.candidates[key] = {\r\n                rttTotal: 0,\r\n                responsesReceived: 0,\r\n                requestsSent: 0,\r\n                rtt: NaN\r\n            };\r\n        }\r\n\r\n        const rttTotalDiff = rttTotal - this.candidates[key].rttTotal;\r\n        const responsesReceivedDiff\r\n            = responsesReceived - this.candidates[key].responsesReceived;\r\n\r\n        // We observe that when the difference between the number of requests\r\n        // and responses has grown (i.q. when the value below is positive), the\r\n        // the RTT measurements are incorrect (too low). For this reason we\r\n        // ignore these measurement (setting rtt=NaN), but update our state.\r\n        const requestsResponsesDiff\r\n            = (requestsSent - responsesReceived)\r\n            - (this.candidates[key].requestsSent\r\n                - this.candidates[key].responsesReceived);\r\n        let rtt = NaN;\r\n\r\n        if (responsesReceivedDiff > 0 && requestsResponsesDiff === 0) {\r\n            rtt = rttTotalDiff / responsesReceivedDiff;\r\n        }\r\n\r\n        this.candidates[key].rttTotal = rttTotal;\r\n        this.candidates[key].responsesReceived = responsesReceived;\r\n        this.candidates[key].requestsSent = requestsSent;\r\n        this.candidates[key].rtt = rtt;\r\n    }\r\n\r\n\r\n    /**\r\n     * Stops this PCMonitor, clearing its intervals and stopping the\r\n     * PeerConnection.\r\n     */\r\n    stop() {\r\n        if (this.getStatsInterval) {\r\n            window.clearInterval(this.getStatsInterval);\r\n        }\r\n\r\n        this.pc.close();\r\n\r\n        this.stopped = true;\r\n    }\r\n}\r\n\r\n/**\r\n * A class which monitors the round-trip time (RTT) to a set of STUN servers.\r\n * The measured RTTs are sent as analytics events. It uses a separate\r\n * PeerConnection (represented as a PCMonitor) for each STUN server.\r\n */\r\nexport default class RttMonitor {\r\n    /**\r\n     * Initializes a new RttMonitor.\r\n     * @param {Object} config the object holding the configuration.\r\n     */\r\n    constructor(config) {\r\n        if (!config || !config.enabled\r\n            || !browser.supportsLocalCandidateRttStatistics()) {\r\n            return;\r\n        }\r\n\r\n        // Maps a region to the PCMonitor instance for that region.\r\n        this.pcMonitors = {};\r\n\r\n        this.startPCMonitors = this.startPCMonitors.bind(this);\r\n        this.sendAnalytics = this.sendAnalytics.bind(this);\r\n        this.stop = this.stop.bind(this);\r\n\r\n        this.analyticsInterval = null;\r\n        this.stopped = false;\r\n\r\n        const initialDelay = config.initialDelay || 60000;\r\n\r\n\r\n        logger.info(\r\n            `Starting RTT monitor with an initial delay of ${initialDelay}`);\r\n\r\n\r\n        window.setTimeout(\r\n            () => this.startPCMonitors(config),\r\n            initialDelay);\r\n    }\r\n\r\n    /**\r\n     * Starts the PCMonitors according to the configuration.\r\n     */\r\n    startPCMonitors(config) {\r\n        if (!config.stunServers) {\r\n            logger.warn('No stun servers configured.');\r\n\r\n            return;\r\n        }\r\n\r\n        if (this.stopped) {\r\n            return;\r\n        }\r\n\r\n        const getStatsIntervalMs\r\n            = config.getStatsInterval || stunKeepAliveIntervalMs;\r\n        const analyticsIntervalMs\r\n            = config.analyticsInterval || getStatsIntervalMs;\r\n        const count = Object.keys(config.stunServers).length;\r\n        const offset = getStatsIntervalMs / count;\r\n\r\n        // We delay the initialization of each PC so that they are uniformly\r\n        // distributed across the getStatsIntervalMs.\r\n        let i = 0;\r\n\r\n        for (const region in config.stunServers) {\r\n            if (config.stunServers.hasOwnProperty(region)) {\r\n                const address = config.stunServers[region];\r\n\r\n                this.pcMonitors[region]\r\n                    = new PCMonitor(\r\n                        region,\r\n                        address,\r\n                        getStatsIntervalMs,\r\n                        offset * i);\r\n                i++;\r\n            }\r\n        }\r\n\r\n        window.setTimeout(\r\n            () => {\r\n                if (!this.stopped) {\r\n                    this.analyticsInterval\r\n                        = window.setInterval(\r\n                        this.sendAnalytics, analyticsIntervalMs);\r\n                }\r\n            },\r\n            1000);\r\n    }\r\n\r\n    /**\r\n     * Sends an analytics event with the measured RTT to each region/STUN\r\n     * server.\r\n     */\r\n    sendAnalytics() {\r\n        const rtts = {};\r\n\r\n        for (const region in this.pcMonitors) {\r\n            if (this.pcMonitors.hasOwnProperty(region)) {\r\n                const rtt = this.pcMonitors[region].rtt;\r\n\r\n                if (!isNaN(rtt) && rtt !== Infinity) {\r\n                    rtts[region.replace('-', '_')] = rtt;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (rtts) {\r\n            Statistics.sendAnalytics(createRttByRegionEvent(rtts));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stops this RttMonitor, clearing all intervals and closing all\r\n     * PeerConnections.\r\n     */\r\n    stop() {\r\n        logger.info('Stopping RttMonitor.');\r\n        this.stopped = true;\r\n        for (const region in this.pcMonitors) {\r\n            if (this.pcMonitors.hasOwnProperty(region)) {\r\n                this.pcMonitors[region].stop();\r\n            }\r\n        }\r\n        this.pcMonitors = {};\r\n\r\n        if (this.analyticsInterval) {\r\n            window.clearInterval(this.analyticsInterval);\r\n        }\r\n    }\r\n}\r\n","import { getLogger } from 'jitsi-meet-logger';\r\nconst logger = getLogger(__filename);\r\n\r\nimport UsernameGenerator from '../util/UsernameGenerator';\r\n\r\nlet _callStatsUserName;\r\n\r\nlet _machineId;\r\n\r\n/**\r\n *\r\n */\r\nexport default {\r\n    /**\r\n     * Returns fake username for callstats\r\n     * @returns {string} fake username for callstats\r\n     */\r\n    get callStatsUserName() {\r\n        if (!_callStatsUserName) {\r\n            const localStorage = getLocalStorage();\r\n\r\n            if (localStorage) {\r\n                _callStatsUserName = localStorage.getItem('callStatsUserName');\r\n            }\r\n            if (!_callStatsUserName) {\r\n                _callStatsUserName = generateCallStatsUserName();\r\n                if (localStorage) {\r\n                    localStorage.setItem(\r\n                        'callStatsUserName',\r\n                        _callStatsUserName);\r\n                }\r\n            }\r\n        }\r\n\r\n        return _callStatsUserName;\r\n    },\r\n\r\n    /**\r\n     * Returns current machine id.\r\n     * @returns {string} machine id\r\n     */\r\n    get machineId() {\r\n        if (!_machineId) {\r\n            const localStorage = getLocalStorage();\r\n\r\n            if (localStorage) {\r\n                _machineId = localStorage.getItem('jitsiMeetId');\r\n            }\r\n            if (!_machineId) {\r\n                _machineId = generateJitsiMeetId();\r\n                if (localStorage) {\r\n                    localStorage.setItem('jitsiMeetId', _machineId);\r\n                }\r\n            }\r\n        }\r\n\r\n        return _machineId;\r\n    },\r\n\r\n    /**\r\n     * Returns current session id.\r\n     * @returns {string} current session id\r\n     */\r\n    get sessionId() {\r\n        // We may update sessionId in localStorage from another JitsiConference\r\n        // instance and that's why we should always re-read it.\r\n        const localStorage = getLocalStorage();\r\n\r\n        return localStorage ? localStorage.getItem('sessionId') : undefined;\r\n    },\r\n\r\n    /**\r\n     * Save current session id.\r\n     * @param {string} sessionId session id\r\n     */\r\n    set sessionId(sessionId) {\r\n        const localStorage = getLocalStorage();\r\n\r\n        if (localStorage) {\r\n            if (sessionId) {\r\n                localStorage.setItem('sessionId', sessionId);\r\n            } else {\r\n                localStorage.removeItem('sessionId');\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Generate fake username for callstats.\r\n * @returns {string} fake random username\r\n */\r\nfunction generateCallStatsUserName() {\r\n    const username = UsernameGenerator.generateUsername();\r\n\r\n    logger.log('generated callstats uid', username);\r\n\r\n    return username;\r\n}\r\n\r\n/**\r\n * Generate unique id.\r\n * @returns {string} random unique id\r\n */\r\nfunction generateJitsiMeetId() {\r\n    const jitsiMeetId = generateUniqueId();\r\n\r\n    logger.log('generated id', jitsiMeetId);\r\n\r\n    return jitsiMeetId;\r\n}\r\n\r\n/**\r\n * Gets the localStorage of the browser. (Technically, gets the localStorage of\r\n * the global object because there may be no browser but React Native for\r\n * example).\r\n * @returns {Storage} the local Storage object (if any)\r\n */\r\nfunction getLocalStorage() {\r\n    let storage;\r\n\r\n    try {\r\n        // eslint-disable-next-line no-invalid-this\r\n        storage = (window || this).localStorage;\r\n    } catch (error) {\r\n        logger.error(error);\r\n    }\r\n\r\n    return storage;\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction generateUniqueId() {\r\n    return _p8() + _p8() + _p8() + _p8();\r\n}\r\n\r\n/**\r\n *\r\n */\r\nfunction _p8() {\r\n    return `${Math.random().toString(16)}000000000`.substr(2, 8);\r\n}\r\n","import {\r\n    TYPE_OPERATIONAL,\r\n    TYPE_PAGE,\r\n    TYPE_TRACK,\r\n    TYPE_UI\r\n} from '../../service/statistics/AnalyticsEvents';\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport browser from '../browser';\r\n\r\nconst MAX_CACHE_SIZE = 100;\r\n\r\n// eslist-disable-line no-undef\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * This class provides an API to lib-jitsi-meet and its users for sending\r\n * analytics events. It serves as a bridge to different backend implementations\r\n * (\"analytics handlers\") and a cache for events attempted to be sent before\r\n * the analytics handlers were enabled.\r\n *\r\n * The API is designed to be an easy replacement for the previous version of\r\n * this adapter, and is meant to be extended with more convenience methods.\r\n *\r\n *\r\n * The API calls are translated to objects with the following structure, which\r\n * are then passed to the sendEvent(event) function of the underlying handlers:\r\n *\r\n * {\r\n *    type,\r\n *\r\n *    action,\r\n *    actionSubject,\r\n *    actionSubjectId,\r\n *    attributes,\r\n *    categories,\r\n *    containerId,\r\n *    containerType,\r\n *    name,\r\n *    objectId,\r\n *    objectType,\r\n *    source,\r\n *    tags\r\n * }\r\n *\r\n * The 'type' is one of 'operational', 'page', 'track' or 'ui', and some of the\r\n * other properties are considered required according to the type.\r\n *\r\n * For events with type 'page', the required properties are: name.\r\n *\r\n * For events with type 'operational' and 'ui', the required properties are:\r\n * action, actionSubject, source\r\n *\r\n * For events with type 'page', the required properties are:\r\n * action, actionSubject, source, containerType, containerId, objectType,\r\n * objectId\r\n */\r\nclass AnalyticsAdapter {\r\n    /**\r\n     * Creates new AnalyticsAdapter instance.\r\n     */\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * Reset the state to the initial one.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    reset() {\r\n        /**\r\n         * Whether this AnalyticsAdapter has been disposed of or not. Once this\r\n         * is set to true, the AnalyticsAdapter is disabled and does not accept\r\n         * any more events, and it can not be re-enabled.\r\n         * @type {boolean}\r\n         */\r\n        this.disposed = false;\r\n\r\n        /**\r\n         * The set of handlers to which events will be sent.\r\n         * @type {Set<any>}\r\n         */\r\n        this.analyticsHandlers = new Set();\r\n\r\n        /**\r\n         * The cache of events which are not sent yet. The cache is enabled\r\n         * while this field is truthy, and disabled otherwise.\r\n         * @type {Array}\r\n         */\r\n        this.cache = [];\r\n\r\n        /**\r\n         * Map of properties that will be added to every event. Note that the\r\n         * keys will be prefixed with \"permanent.\".\r\n         */\r\n        this.permanentProperties = {};\r\n\r\n        /**\r\n         * The name of the conference that this AnalyticsAdapter is associated\r\n         * with.\r\n         * @type {null}\r\n         */\r\n        this.conferenceName = '';\r\n\r\n        this.addPermanentProperties({\r\n            'user_agent': navigator.userAgent,\r\n            'browser_name': browser.getName()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Dispose analytics. Clears all handlers.\r\n     */\r\n    dispose() {\r\n        logger.warn('Disposing of analytics adapter.');\r\n\r\n        if (this.analyticsHandlers && this.analyticsHandlers.size > 0) {\r\n            this.analyticsHandlers.forEach(handler => {\r\n                if (typeof handler.dispose === 'function') {\r\n                    handler.dispose();\r\n                }\r\n            });\r\n        }\r\n\r\n        this.setAnalyticsHandlers([]);\r\n        this.disposed = true;\r\n    }\r\n\r\n    /**\r\n     * Sets the handlers that are going to be used to send analytics. Sends any\r\n     * cached events.\r\n     * @param {Array} handlers the handlers\r\n     */\r\n    setAnalyticsHandlers(handlers) {\r\n        if (this.disposed) {\r\n            return;\r\n        }\r\n\r\n        this.analyticsHandlers = new Set(handlers);\r\n\r\n        this._setUserProperties();\r\n\r\n        // Note that we disable the cache even if the set of handlers is empty.\r\n        const cache = this.cache;\r\n\r\n        this.cache = null;\r\n        if (cache) {\r\n            cache.forEach(event => this._sendEvent(event));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the user properties to the analytics handlers.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    _setUserProperties() {\r\n        this.analyticsHandlers.forEach(handler => {\r\n            try {\r\n                handler.setUserProperties(this.permanentProperties);\r\n            } catch (error) {\r\n                logger.warn('Error in setUserProperties method of one of the '\r\n                    + `analytics handlers: ${error}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adds a set of permanent properties to this this AnalyticsAdapter.\r\n     * Permanent properties will be added as \"attributes\" to events sent to\r\n     * the underlying \"analytics handlers\", and their keys will be prefixed\r\n     * by \"permanent_\", i.e. adding a permanent property {key: \"value\"} will\r\n     * result in {\"permanent_key\": \"value\"} object to be added to the\r\n     * \"attributes\" field of events.\r\n     *\r\n     * @param {Object} properties the properties to add\r\n     */\r\n    addPermanentProperties(properties) {\r\n        this.permanentProperties = {\r\n            ...this.permanentProperties,\r\n            ...properties\r\n        };\r\n\r\n        this._setUserProperties();\r\n    }\r\n\r\n    /**\r\n     * Sets the name of the conference that this AnalyticsAdapter is associated\r\n     * with.\r\n     * @param name the name to set.\r\n     */\r\n    setConferenceName(name) {\r\n        this.conferenceName = name;\r\n        this.addPermanentProperties({ 'conference_name': name });\r\n    }\r\n\r\n    /**\r\n     * Sends an event with a given name and given properties. The first\r\n     * parameter is either a string or an object. If it is a string, it is used\r\n     * as the event name and the second parameter is used at the attributes to\r\n     * attach to the event. If it is an object, it represents the whole event,\r\n     * including any desired attributes, and the second parameter is ignored.\r\n     *\r\n     * @param {String|Object} eventName either a string to be used as the name\r\n     * of the event, or an event object. If an event object is passed, the\r\n     * properties parameters is ignored.\r\n     * @param {Object} properties the properties/attributes to attach to the\r\n     * event, if eventName is a string.\r\n     */\r\n    sendEvent(eventName, properties = {}) {\r\n        if (this.disposed) {\r\n            return;\r\n        }\r\n\r\n        let event = null;\r\n\r\n        if (typeof eventName === 'string') {\r\n            event = {\r\n                type: TYPE_OPERATIONAL,\r\n                action: eventName,\r\n                actionSubject: eventName,\r\n                source: eventName,\r\n                attributes: properties\r\n            };\r\n        } else if (typeof eventName === 'object') {\r\n            event = eventName;\r\n        }\r\n\r\n        if (!this._verifyRequiredFields(event)) {\r\n            logger.error(\r\n                `Dropping a mis-formatted event: ${JSON.stringify(event)}`);\r\n\r\n            return;\r\n        }\r\n\r\n        this._sendEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Checks whether an event has all of the required fields set, and tries\r\n     * to fill in some of the missing fields with reasonable default values.\r\n     * Returns true if after this operation the event has all of the required\r\n     * fields set, and false otherwise (if some of the required fields were not\r\n     * set and the attempt to fill them in with a default failed).\r\n     *\r\n     * @param event the event object.\r\n     * @return {boolean} true if the event (after the call to this function)\r\n     * contains all of the required fields, and false otherwise.\r\n     * @private\r\n     */\r\n    _verifyRequiredFields(event) {\r\n        if (!event) {\r\n            return false;\r\n        }\r\n\r\n        if (!event.type) {\r\n            event.type = TYPE_OPERATIONAL;\r\n        }\r\n\r\n        const type = event.type;\r\n\r\n        if (type !== TYPE_OPERATIONAL && type !== TYPE_PAGE\r\n            && type !== TYPE_UI && type !== TYPE_TRACK) {\r\n            logger.error(`Unknown event type: ${type}`);\r\n\r\n            return false;\r\n        }\r\n\r\n        if (type === TYPE_PAGE) {\r\n            return Boolean(event.name);\r\n        }\r\n\r\n        // Try to set some reasonable default values in case some of the\r\n        // parameters required by the handler API are missing.\r\n        event.action = event.action || event.name || event.actionSubject;\r\n        event.actionSubject = event.actionSubject || event.name || event.action;\r\n        event.source = event.source || event.name || event.action\r\n            || event.actionSubject;\r\n\r\n        if (!event.action || !event.actionSubject || !event.source) {\r\n            logger.error(\r\n                'Required field missing (action, actionSubject or source)');\r\n\r\n            return false;\r\n        }\r\n\r\n        // Track events have additional required fields.\r\n        if (type === TYPE_TRACK) {\r\n            event.objectType = event.objectType || 'generic-object-type';\r\n            event.containerType = event.containerType || 'conference';\r\n            if (event.containerType === 'conference' && !event.containerId) {\r\n                event.containerId = this.conferenceName;\r\n            }\r\n\r\n\r\n            if (!event.objectType || !event.objectId\r\n                || !event.containerType || !event.containerId) {\r\n                logger.error(\r\n                    'Required field missing (containerId, containerType, '\r\n                        + 'objectId or objectType)');\r\n\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Saves an event to the cache, if the cache is enabled.\r\n     * @param event the event to save.\r\n     * @returns {boolean} true if the event was saved, and false otherwise (i.e.\r\n     * if the cache was disabled).\r\n     * @private\r\n     */\r\n    _maybeCacheEvent(event) {\r\n        if (this.cache) {\r\n            this.cache.push(event);\r\n\r\n            // We limit the size of the cache, in case the user fails to ever\r\n            // set the analytics handlers.\r\n            if (this.cache.length > MAX_CACHE_SIZE) {\r\n                this.cache.splice(0, 1);\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     * @private\r\n     */\r\n    _sendEvent(event) {\r\n        if (this._maybeCacheEvent(event)) {\r\n            // The event was consumed by the cache.\r\n        } else {\r\n            this.analyticsHandlers.forEach(handler => {\r\n                try {\r\n                    handler.sendEvent(event);\r\n                } catch (e) {\r\n                    logger.warn(`Error sending analytics event: ${e}`);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default new AnalyticsAdapter();\r\n","import { getLogger } from 'jitsi-meet-logger';\r\n\r\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\r\nimport * as ConnectionQualityEvents from '../../service/connectivity/ConnectionQualityEvents';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport { createAudioOutputProblemEvent } from '../../service/statistics/AnalyticsEvents';\r\n\r\nimport Statistics from './statistics';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Number of local samples that will be used for comparison before and after the remote sample is received.\r\n */\r\nconst NUMBER_OF_LOCAL_SAMPLES = 2;\r\n\r\n/**\r\n * Collects the average audio levels per participant from the local stats and the stats received by every remote\r\n * participant and compares them to detect potential audio problem for a participant.\r\n */\r\nexport default class AudioOutputProblemDetector {\r\n\r\n    /**\r\n     * Creates new <tt>AudioOutputProblemDetector</tt> instance.\r\n     *\r\n     * @param {JitsiCofnerence} conference - The conference instance to be monitored.\r\n     */\r\n    constructor(conference) {\r\n        this._conference = conference;\r\n        this._localAudioLevelCache = {};\r\n        this._reportedParticipants = [];\r\n        this._audioProblemCandidates = {};\r\n        this._numberOfRemoteAudioLevelsReceived = {};\r\n        this._onLocalAudioLevelsReport = this._onLocalAudioLevelsReport.bind(this);\r\n        this._onRemoteAudioLevelReceived = this._onRemoteAudioLevelReceived.bind(this);\r\n        this._clearUserData = this._clearUserData.bind(this);\r\n        this._conference.on(ConnectionQualityEvents.REMOTE_STATS_UPDATED, this._onRemoteAudioLevelReceived);\r\n        this._conference.statistics.addConnectionStatsListener(this._onLocalAudioLevelsReport);\r\n        this._conference.on(ConferenceEvents.USER_LEFT, this._clearUserData);\r\n    }\r\n\r\n    /**\r\n     * A listener for audio level data received by a remote participant.\r\n     *\r\n     * @param {string} userID - The user id of the participant that sent the data.\r\n     * @param {number} audioLevel - The average audio level value.\r\n     * @returns {void}\r\n     */\r\n    _onRemoteAudioLevelReceived(userID, { avgAudioLevels }) {\r\n        const numberOfReports = (this._numberOfRemoteAudioLevelsReceived[userID] + 1) || 0;\r\n\r\n        this._numberOfRemoteAudioLevelsReceived[userID] = numberOfReports;\r\n\r\n        if (this._reportedParticipants.indexOf(userID) !== -1 || (userID in this._audioProblemCandidates)\r\n                || avgAudioLevels <= 0 || numberOfReports < 3) {\r\n            return;\r\n        }\r\n\r\n        const participant = this._conference.getParticipantById(userID);\r\n\r\n        if (participant) {\r\n            const tracks = participant.getTracksByMediaType(MediaType.AUDIO);\r\n\r\n            if (tracks.length > 0 && participant.isAudioMuted()) {\r\n                // We don't need to report an error if everything seems fine with the participant and its tracks but\r\n                // the participant is audio muted. Since those are average audio levels we potentially can receive non\r\n                // zero values for muted track.\r\n                return;\r\n            }\r\n        }\r\n\r\n        const localAudioLevels = this._localAudioLevelCache[userID];\r\n\r\n        if (!Array.isArray(localAudioLevels) || localAudioLevels.every(audioLevel => audioLevel === 0)) {\r\n            this._audioProblemCandidates[userID] = {\r\n                remoteAudioLevels: avgAudioLevels,\r\n                localAudioLevels: []\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A listener for audio level data retrieved by the local stats.\r\n     *\r\n     * @param {TraceablePeerConnection} tpc - The <tt>TraceablePeerConnection</tt> instance used to gather the data.\r\n     * @param {Object} avgAudioLevels - The average audio levels per participant.\r\n     * @returns {void}\r\n     */\r\n    _onLocalAudioLevelsReport(tpc, { avgAudioLevels }) {\r\n        if (tpc !== this._conference.getActivePeerConnection()) {\r\n            return;\r\n        }\r\n\r\n        Object.keys(avgAudioLevels).forEach(userID => {\r\n            if (this._reportedParticipants.indexOf(userID) !== -1) {\r\n                return;\r\n            }\r\n\r\n            const localAudioLevels = this._localAudioLevelCache[userID];\r\n\r\n            if (!Array.isArray(localAudioLevels)) {\r\n                this._localAudioLevelCache[userID] = [ ];\r\n            } else if (localAudioLevels.length >= NUMBER_OF_LOCAL_SAMPLES) {\r\n                localAudioLevels.shift();\r\n            }\r\n\r\n            this._localAudioLevelCache[userID].push(avgAudioLevels[userID]);\r\n        });\r\n\r\n\r\n        Object.keys(this._audioProblemCandidates).forEach(userID => {\r\n            const { localAudioLevels, remoteAudioLevels } = this._audioProblemCandidates[userID];\r\n\r\n            localAudioLevels.push(avgAudioLevels[userID]);\r\n\r\n            if (localAudioLevels.length === NUMBER_OF_LOCAL_SAMPLES) {\r\n                if (localAudioLevels.every(audioLevel => typeof audioLevel === 'undefined' || audioLevel === 0)) {\r\n                    const localAudioLevelsString = JSON.stringify(localAudioLevels);\r\n\r\n                    Statistics.sendAnalytics(\r\n                        createAudioOutputProblemEvent(userID, localAudioLevelsString, remoteAudioLevels));\r\n                    logger.warn(`A potential problem is detected with the audio output for participant ${\r\n                        userID}, local audio levels: ${localAudioLevelsString}, remote audio levels: ${\r\n                        remoteAudioLevels}`);\r\n                    this._reportedParticipants.push(userID);\r\n                    this._clearUserData(userID);\r\n                }\r\n\r\n                delete this._audioProblemCandidates[userID];\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Clears the data stored for a participant.\r\n     *\r\n     * @param {string} userID - The id of the participant.\r\n     * @returns {void}\r\n     */\r\n    _clearUserData(userID) {\r\n        delete this._localAudioLevelCache[userID];\r\n    }\r\n\r\n    /**\r\n     * Disposes the allocated resources.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    dispose() {\r\n        this._conference.off(ConnectionQualityEvents.REMOTE_STATS_UPDATED, this._onRemoteAudioLevelReceived);\r\n        this._conference.off(ConferenceEvents.USER_LEFT, this._clearUserData);\r\n        this._conference.statistics.removeConnectionStatsListener(this._onLocalAudioLevelsReport);\r\n        this._localAudioLevelCache = undefined;\r\n        this._audioProblemCandidates = undefined;\r\n        this._reportedParticipants = undefined;\r\n        this._numberOfRemoteAudioLevelsReceived = undefined;\r\n        this._conference = undefined;\r\n    }\r\n}\r\n","/* global __filename */\r\nimport isEqual from 'lodash.isequal';\r\n\r\nimport {\r\n    createRtpStatsEvent,\r\n    createTransportStatsEvent\r\n} from '../../service/statistics/AnalyticsEvents';\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport * as ConnectionQualityEvents\r\n    from '../../service/connectivity/ConnectionQualityEvents';\r\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport browser from '../browser';\r\nimport Statistics from './statistics';\r\nimport * as VideoType from '../../service/RTC/VideoType';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * This will calculate an average for one, named stat and submit it to\r\n * the analytics module when requested. It automatically counts the samples.\r\n */\r\nclass AverageStatReport {\r\n    /**\r\n     * Creates new <tt>AverageStatReport</tt> for given name.\r\n     * @param {string} name that's the name of the event that will be reported\r\n     * to the analytics module.\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.count = 0;\r\n        this.sum = 0;\r\n        this.samples = [];\r\n    }\r\n\r\n    /**\r\n     * Adds the next value that will be included in the average when\r\n     * {@link calculate} is called.\r\n     * @param {number} nextValue\r\n     */\r\n    addNext(nextValue) {\r\n        if (typeof nextValue !== 'number') {\r\n            logger.error(\r\n                `${this.name} - invalid value for idx: ${this.count}`,\r\n                nextValue);\r\n        } else if (!isNaN(nextValue)) {\r\n            this.sum += nextValue;\r\n            this.samples.push(nextValue);\r\n            this.count += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates an average for the samples collected using {@link addNext}.\r\n     * @return {number|NaN} an average of all collected samples or <tt>NaN</tt>\r\n     * if no samples were collected.\r\n     */\r\n    calculate() {\r\n        return this.sum / this.count;\r\n    }\r\n\r\n    /**\r\n     * Appends the report to the analytics \"data\" object. The object will be\r\n     * set under <tt>prefix</tt> + {@link this.name} key.\r\n     * @param {Object} report the analytics \"data\" object\r\n     */\r\n    appendReport(report) {\r\n        report[`${this.name}_avg`] = this.calculate();\r\n        report[`${this.name}_samples`] = JSON.stringify(this.samples);\r\n    }\r\n\r\n    /**\r\n     * Clears all memory of any samples collected, so that new average can be\r\n     * calculated using this instance.\r\n     */\r\n    reset() {\r\n        this.samples = [];\r\n        this.sum = 0;\r\n        this.count = 0;\r\n    }\r\n}\r\n\r\n/**\r\n * Class gathers the stats that are calculated and reported for a\r\n * {@link TraceablePeerConnection} even if it's not currently active. For\r\n * example we want to monitor RTT for the JVB connection while in P2P mode.\r\n */\r\nclass ConnectionAvgStats {\r\n    /**\r\n     * Creates new <tt>ConnectionAvgStats</tt>\r\n     * @param {AvgRTPStatsReporter} avgRtpStatsReporter\r\n     * @param {boolean} isP2P\r\n     * @param {number} n the number of samples, before arithmetic mean is to be\r\n     * calculated and values submitted to the analytics module.\r\n     */\r\n    constructor(avgRtpStatsReporter, isP2P, n) {\r\n        /**\r\n         * Is this instance for JVB or P2P connection ?\r\n         * @type {boolean}\r\n         */\r\n        this.isP2P = isP2P;\r\n\r\n        /**\r\n         * How many samples are to be included in arithmetic mean calculation.\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this._n = n;\r\n\r\n        /**\r\n         * The current sample index. Starts from 0 and goes up to {@link _n})\r\n         * when analytics report will be submitted.\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this._sampleIdx = 0;\r\n\r\n        /**\r\n         * Average round trip time reported by the ICE candidate pair.\r\n         * @type {AverageStatReport}\r\n         */\r\n        this._avgRTT = new AverageStatReport('rtt');\r\n\r\n        /**\r\n         * Map stores average RTT to the JVB reported by remote participants.\r\n         * Mapped per participant id {@link JitsiParticipant.getId}.\r\n         *\r\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\r\n         * <tt>false</tt>.\r\n         *\r\n         * @type {Map<string,AverageStatReport>}\r\n         * @private\r\n         */\r\n        this._avgRemoteRTTMap = new Map();\r\n\r\n        /**\r\n         * The conference for which stats will be collected and reported.\r\n         * @type {JitsiConference}\r\n         * @private\r\n         */\r\n        this._avgRtpStatsReporter = avgRtpStatsReporter;\r\n\r\n        /**\r\n         * The latest average E2E RTT for the JVB connection only.\r\n         *\r\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\r\n         * <tt>false</tt>.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this._avgEnd2EndRTT = undefined;\r\n\r\n        this._onConnectionStats = (tpc, stats) => {\r\n            if (this.isP2P === tpc.isP2P) {\r\n                this._calculateAvgStats(stats);\r\n            }\r\n        };\r\n\r\n        const conference = avgRtpStatsReporter._conference;\r\n\r\n        conference.statistics.addConnectionStatsListener(\r\n            this._onConnectionStats);\r\n\r\n        if (!this.isP2P) {\r\n            this._onUserLeft = id => this._avgRemoteRTTMap.delete(id);\r\n            conference.on(ConferenceEvents.USER_LEFT, this._onUserLeft);\r\n\r\n            this._onRemoteStatsUpdated\r\n                = (id, data) => this._processRemoteStats(id, data);\r\n            conference.on(\r\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\r\n                this._onRemoteStatsUpdated);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Processes next batch of stats.\r\n     * @param {go figure} data\r\n     * @private\r\n     */\r\n    _calculateAvgStats(data) {\r\n        if (!data) {\r\n            logger.error('No stats');\r\n\r\n            return;\r\n        }\r\n\r\n        if (browser.supportsRTTStatistics()) {\r\n            if (data.transport && data.transport.length) {\r\n                this._avgRTT.addNext(data.transport[0].rtt);\r\n            }\r\n        }\r\n\r\n        this._sampleIdx += 1;\r\n\r\n        if (this._sampleIdx >= this._n) {\r\n            if (browser.supportsRTTStatistics()) {\r\n                const conference = this._avgRtpStatsReporter._conference;\r\n\r\n                const batchReport = {\r\n                    p2p: this.isP2P,\r\n                    'conference_size': conference.getParticipantCount()\r\n                };\r\n\r\n                if (data.transport && data.transport.length) {\r\n                    Object.assign(batchReport, {\r\n                        'local_candidate_type':\r\n                            data.transport[0].localCandidateType,\r\n                        'remote_candidate_type':\r\n                            data.transport[0].remoteCandidateType,\r\n                        'transport_type': data.transport[0].type\r\n                    });\r\n                }\r\n\r\n                this._avgRTT.appendReport(batchReport);\r\n\r\n                if (this.isP2P) {\r\n                    // Report RTT diff only for P2P.\r\n                    const jvbEnd2EndRTT = this\r\n                        ._avgRtpStatsReporter.jvbStatsMonitor._avgEnd2EndRTT;\r\n\r\n                    if (!isNaN(jvbEnd2EndRTT)) {\r\n                        // eslint-disable-next-line dot-notation\r\n                        batchReport['rtt_diff']\r\n                            = this._avgRTT.calculate() - jvbEnd2EndRTT;\r\n                    }\r\n                } else {\r\n                    // Report end to end RTT only for JVB.\r\n                    const avgRemoteRTT = this._calculateAvgRemoteRTT();\r\n                    const avgLocalRTT = this._avgRTT.calculate();\r\n\r\n                    this._avgEnd2EndRTT = avgLocalRTT + avgRemoteRTT;\r\n\r\n                    if (!isNaN(avgLocalRTT) && !isNaN(avgRemoteRTT)) {\r\n                        // eslint-disable-next-line dot-notation\r\n                        batchReport['end2end_rtt_avg'] = this._avgEnd2EndRTT;\r\n                    }\r\n                }\r\n\r\n                Statistics.sendAnalytics(createRtpStatsEvent(batchReport));\r\n            }\r\n\r\n            this._resetAvgStats();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates arithmetic mean of all RTTs towards the JVB reported by\r\n     * participants.\r\n     * @return {number|NaN} NaN if not available (not enough data)\r\n     * @private\r\n     */\r\n    _calculateAvgRemoteRTT() {\r\n        let count = 0, sum = 0;\r\n\r\n        // FIXME should we ignore RTT for participant\r\n        // who \"is having connectivity issues\" ?\r\n        for (const remoteAvg of this._avgRemoteRTTMap.values()) {\r\n            const avg = remoteAvg.calculate();\r\n\r\n            if (!isNaN(avg)) {\r\n                sum += avg;\r\n                count += 1;\r\n                remoteAvg.reset();\r\n            }\r\n        }\r\n\r\n        return sum / count;\r\n    }\r\n\r\n    /**\r\n     * Processes {@link ConnectionQualityEvents.REMOTE_STATS_UPDATED} to analyse\r\n     * RTT towards the JVB reported by each participant.\r\n     * @param {string} id {@link JitsiParticipant.getId}\r\n     * @param {go figure in ConnectionQuality.js} data\r\n     * @private\r\n     */\r\n    _processRemoteStats(id, data) {\r\n        const validData = typeof data.jvbRTT === 'number';\r\n        let rttAvg = this._avgRemoteRTTMap.get(id);\r\n\r\n        if (!rttAvg && validData) {\r\n            rttAvg = new AverageStatReport(`${id}_stat_rtt`);\r\n            this._avgRemoteRTTMap.set(id, rttAvg);\r\n        }\r\n\r\n        if (validData) {\r\n            rttAvg.addNext(data.jvbRTT);\r\n        } else if (rttAvg) {\r\n            this._avgRemoteRTTMap.delete(id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset cache of all averages and {@link _sampleIdx}.\r\n     * @private\r\n     */\r\n    _resetAvgStats() {\r\n        this._avgRTT.reset();\r\n        if (this._avgRemoteRTTMap) {\r\n            this._avgRemoteRTTMap.clear();\r\n        }\r\n        this._sampleIdx = 0;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    dispose() {\r\n\r\n        const conference = this._avgRtpStatsReporter._conference;\r\n\r\n        conference.statistics.removeConnectionStatsListener(\r\n            this._onConnectionStats);\r\n        if (!this.isP2P) {\r\n            conference.off(\r\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\r\n                this._onRemoteStatsUpdated);\r\n            conference.off(\r\n                ConferenceEvents.USER_LEFT,\r\n                this._onUserLeft);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Reports average RTP statistics values (arithmetic mean) to the analytics\r\n * module for things like bit rate, bandwidth, packet loss etc. It keeps track\r\n * of the P2P vs JVB conference modes and submits the values under different\r\n * namespaces (the events for P2P mode have 'p2p.' prefix). Every switch between\r\n * P2P mode resets the data collected so far and averages are calculated from\r\n * scratch.\r\n */\r\nexport default class AvgRTPStatsReporter {\r\n    /**\r\n     * Creates new instance of <tt>AvgRTPStatsReporter</tt>\r\n     * @param {JitsiConference} conference\r\n     * @param {number} n the number of samples, before arithmetic mean is to be\r\n     * calculated and values submitted to the analytics module.\r\n     */\r\n    constructor(conference, n) {\r\n        /**\r\n         * How many {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED} samples\r\n         * are to be included in arithmetic mean calculation.\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this._n = n;\r\n\r\n        if (n > 0) {\r\n            logger.info(`Avg RTP stats will be calculated every ${n} samples`);\r\n        } else {\r\n            logger.info('Avg RTP stats reports are disabled.');\r\n\r\n            // Do not initialize\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * The current sample index. Starts from 0 and goes up to {@link _n})\r\n         * when analytics report will be submitted.\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this._sampleIdx = 0;\r\n\r\n        /**\r\n         * The conference for which stats will be collected and reported.\r\n         * @type {JitsiConference}\r\n         * @private\r\n         */\r\n        this._conference = conference;\r\n\r\n        /**\r\n         * Average audio upload bitrate\r\n         * XXX What are the units?\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgAudioBitrateUp\r\n            = new AverageStatReport('bitrate_audio_upload');\r\n\r\n        /**\r\n         * Average audio download bitrate\r\n         * XXX What are the units?\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgAudioBitrateDown\r\n            = new AverageStatReport('bitrate_audio_download');\r\n\r\n        /**\r\n         * Average video upload bitrate\r\n         * XXX What are the units?\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgVideoBitrateUp\r\n            = new AverageStatReport('bitrate_video_upload');\r\n\r\n        /**\r\n         * Average video download bitrate\r\n         * XXX What are the units?\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgVideoBitrateDown\r\n            = new AverageStatReport('bitrate_video_download');\r\n\r\n        /**\r\n         * Average upload bandwidth\r\n         * XXX What are the units?\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgBandwidthUp\r\n            = new AverageStatReport('bandwidth_upload');\r\n\r\n        /**\r\n         * Average download bandwidth\r\n         * XXX What are the units?\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgBandwidthDown\r\n            = new AverageStatReport('bandwidth_download');\r\n\r\n        /**\r\n         * Average total packet loss\r\n         * XXX What are the units?\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgPacketLossTotal\r\n            = new AverageStatReport('packet_loss_total');\r\n\r\n        /**\r\n         * Average upload packet loss\r\n         * XXX What are the units?\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgPacketLossUp\r\n            = new AverageStatReport('packet_loss_upload');\r\n\r\n        /**\r\n         * Average download packet loss\r\n         * XXX What are the units?\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgPacketLossDown\r\n            = new AverageStatReport('packet_loss_download');\r\n\r\n        /**\r\n         * Average FPS for remote videos\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgRemoteFPS = new AverageStatReport('framerate_remote');\r\n\r\n        /**\r\n         * Average FPS for remote screen streaming videos (reported only if not\r\n         * a <tt>NaN</tt>).\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgRemoteScreenFPS\r\n            = new AverageStatReport('framerate_screen_remote');\r\n\r\n        /**\r\n         * Average FPS for local video (camera)\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgLocalFPS = new AverageStatReport('framerate_local');\r\n\r\n        /**\r\n         * Average FPS for local screen streaming video (reported only if not\r\n         * a <tt>NaN</tt>).\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgLocalScreenFPS\r\n            = new AverageStatReport('framerate_screen_local');\r\n\r\n        /**\r\n         * Average pixels for remote screen streaming videos (reported only if\r\n         * not a <tt>NaN</tt>).\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgRemoteCameraPixels\r\n            = new AverageStatReport('pixels_remote');\r\n\r\n        /**\r\n         * Average pixels for remote screen streaming videos (reported only if\r\n         * not a <tt>NaN</tt>).\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgRemoteScreenPixels\r\n            = new AverageStatReport('pixels_screen_remote');\r\n\r\n        /**\r\n         * Average pixels for local video (camera)\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgLocalCameraPixels\r\n            = new AverageStatReport('pixels_local');\r\n\r\n        /**\r\n         * Average pixels for local screen streaming video (reported only if not\r\n         * a <tt>NaN</tt>).\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgLocalScreenPixels\r\n            = new AverageStatReport('pixels_screen_local');\r\n\r\n        /**\r\n         * Average connection quality as defined by\r\n         * the {@link ConnectionQuality} module.\r\n         * @type {AverageStatReport}\r\n         * @private\r\n         */\r\n        this._avgCQ = new AverageStatReport('connection_quality');\r\n\r\n        this._cachedTransportStats = undefined;\r\n\r\n        this._onLocalStatsUpdated = data => {\r\n            this._calculateAvgStats(data);\r\n            this._maybeSendTransportAnalyticsEvent(data);\r\n        };\r\n        conference.on(\r\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\r\n            this._onLocalStatsUpdated);\r\n\r\n        this._onP2PStatusChanged = () => {\r\n            logger.debug('Resetting average stats calculation');\r\n            this._resetAvgStats();\r\n            this.jvbStatsMonitor._resetAvgStats();\r\n            this.p2pStatsMonitor._resetAvgStats();\r\n        };\r\n        conference.on(\r\n            ConferenceEvents.P2P_STATUS,\r\n            this._onP2PStatusChanged);\r\n\r\n        this._onJvb121StatusChanged = (oldStatus, newStatus) => {\r\n            // We want to reset only on the transition from false => true,\r\n            // because otherwise those stats are resetted on JVB <=> P2P\r\n            // transition.\r\n            if (newStatus === true) {\r\n                logger.info('Resetting JVB avg RTP stats');\r\n                this._resetAvgJvbStats();\r\n            }\r\n        };\r\n        conference.on(\r\n            ConferenceEvents.JVB121_STATUS,\r\n            this._onJvb121StatusChanged);\r\n\r\n        this.jvbStatsMonitor\r\n            = new ConnectionAvgStats(this, false /* JVB */, n);\r\n\r\n        this.p2pStatsMonitor\r\n            = new ConnectionAvgStats(this, true /* P2P */, n);\r\n    }\r\n\r\n    /**\r\n     * Processes next batch of stats reported on\r\n     * {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED}.\r\n     * @param {go figure} data\r\n     * @private\r\n     */\r\n    _calculateAvgStats(data) {\r\n\r\n        if (!data) {\r\n            logger.error('No stats');\r\n\r\n            return;\r\n        }\r\n\r\n        const isP2P = this._conference.isP2PActive();\r\n        const confSize = this._conference.getParticipantCount();\r\n\r\n        if (!isP2P && confSize < 2) {\r\n\r\n            // There's no point in collecting stats for a JVB conference of 1.\r\n            // That happens for short period of time after everyone leaves\r\n            // the room, until Jicofo terminates the session.\r\n            return;\r\n        }\r\n\r\n        /* Uncomment to figure out stats structure\r\n        for (const key in data) {\r\n            if (data.hasOwnProperty(key)) {\r\n                logger.info(`local stat ${key}: `, data[key]);\r\n            }\r\n        } */\r\n\r\n        const bitrate = data.bitrate;\r\n        const bandwidth = data.bandwidth;\r\n        const packetLoss = data.packetLoss;\r\n        const frameRate = data.framerate;\r\n        const resolution = data.resolution;\r\n\r\n        if (!bitrate) {\r\n            logger.error('No \"bitrate\"');\r\n\r\n            return;\r\n        } else if (!bandwidth) {\r\n            logger.error('No \"bandwidth\"');\r\n\r\n            return;\r\n        } else if (!packetLoss) {\r\n            logger.error('No \"packetloss\"');\r\n\r\n            return;\r\n        } else if (!frameRate) {\r\n            logger.error('No \"framerate\"');\r\n\r\n            return;\r\n        } else if (!resolution) {\r\n            logger.error('No resolution');\r\n\r\n            return;\r\n        }\r\n\r\n        this._avgAudioBitrateUp.addNext(bitrate.audio.upload);\r\n        this._avgAudioBitrateDown.addNext(bitrate.audio.download);\r\n\r\n        this._avgVideoBitrateUp.addNext(bitrate.video.upload);\r\n        this._avgVideoBitrateDown.addNext(bitrate.video.download);\r\n\r\n        if (browser.supportsBandwidthStatistics()) {\r\n            this._avgBandwidthUp.addNext(bandwidth.upload);\r\n            this._avgBandwidthDown.addNext(bandwidth.download);\r\n        }\r\n\r\n        this._avgPacketLossUp.addNext(packetLoss.upload);\r\n        this._avgPacketLossDown.addNext(packetLoss.download);\r\n        this._avgPacketLossTotal.addNext(packetLoss.total);\r\n\r\n        this._avgCQ.addNext(data.connectionQuality);\r\n\r\n        if (frameRate) {\r\n            this._avgRemoteFPS.addNext(\r\n                this._calculateAvgVideoFps(\r\n                    frameRate, false /* remote */, VideoType.CAMERA));\r\n            this._avgRemoteScreenFPS.addNext(\r\n                this._calculateAvgVideoFps(\r\n                    frameRate, false /* remote */, VideoType.DESKTOP));\r\n\r\n            this._avgLocalFPS.addNext(\r\n                this._calculateAvgVideoFps(\r\n                    frameRate, true /* local */, VideoType.CAMERA));\r\n            this._avgLocalScreenFPS.addNext(\r\n                this._calculateAvgVideoFps(\r\n                    frameRate, true /* local */, VideoType.DESKTOP));\r\n        }\r\n\r\n        if (resolution) {\r\n            this._avgRemoteCameraPixels.addNext(\r\n                this._calculateAvgVideoPixels(\r\n                    resolution, false /* remote */, VideoType.CAMERA));\r\n\r\n            this._avgRemoteScreenPixels.addNext(\r\n                this._calculateAvgVideoPixels(\r\n                    resolution, false /* remote */, VideoType.DESKTOP));\r\n\r\n            this._avgLocalCameraPixels.addNext(\r\n                this._calculateAvgVideoPixels(\r\n                    resolution, true /* local */, VideoType.CAMERA));\r\n\r\n            this._avgLocalScreenPixels.addNext(\r\n                this._calculateAvgVideoPixels(\r\n                    resolution, true /* local */, VideoType.DESKTOP));\r\n        }\r\n\r\n        this._sampleIdx += 1;\r\n\r\n        if (this._sampleIdx >= this._n) {\r\n\r\n            const batchReport = {\r\n                p2p: isP2P,\r\n                'conference_size': confSize\r\n            };\r\n\r\n            if (data.transport && data.transport.length) {\r\n                Object.assign(batchReport, {\r\n                    'local_candidate_type':\r\n                        data.transport[0].localCandidateType,\r\n                    'remote_candidate_type':\r\n                        data.transport[0].remoteCandidateType,\r\n                    'transport_type': data.transport[0].type\r\n                });\r\n            }\r\n\r\n            this._avgAudioBitrateUp.appendReport(batchReport);\r\n            this._avgAudioBitrateDown.appendReport(batchReport);\r\n\r\n            this._avgVideoBitrateUp.appendReport(batchReport);\r\n            this._avgVideoBitrateDown.appendReport(batchReport);\r\n\r\n            if (browser.supportsBandwidthStatistics()) {\r\n                this._avgBandwidthUp.appendReport(batchReport);\r\n                this._avgBandwidthDown.appendReport(batchReport);\r\n            }\r\n            this._avgPacketLossUp.appendReport(batchReport);\r\n            this._avgPacketLossDown.appendReport(batchReport);\r\n            this._avgPacketLossTotal.appendReport(batchReport);\r\n\r\n            this._avgRemoteFPS.appendReport(batchReport);\r\n            if (!isNaN(this._avgRemoteScreenFPS.calculate())) {\r\n                this._avgRemoteScreenFPS.appendReport(batchReport);\r\n            }\r\n            this._avgLocalFPS.appendReport(batchReport);\r\n            if (!isNaN(this._avgLocalScreenFPS.calculate())) {\r\n                this._avgLocalScreenFPS.appendReport(batchReport);\r\n            }\r\n\r\n            this._avgRemoteCameraPixels.appendReport(batchReport);\r\n            if (!isNaN(this._avgRemoteScreenPixels.calculate())) {\r\n                this._avgRemoteScreenPixels.appendReport(batchReport);\r\n            }\r\n            this._avgLocalCameraPixels.appendReport(batchReport);\r\n            if (!isNaN(this._avgLocalScreenPixels.calculate())) {\r\n                this._avgLocalScreenPixels.appendReport(batchReport);\r\n            }\r\n\r\n            this._avgCQ.appendReport(batchReport);\r\n\r\n            Statistics.sendAnalytics(createRtpStatsEvent(batchReport));\r\n\r\n            this._resetAvgStats();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates average number of pixels for the report\r\n     *\r\n     * @param {map} peerResolutions a map of peer resolutions\r\n     * @param {boolean} isLocal if the average is to be calculated for the local\r\n     * video or <tt>false</tt> if for remote videos.\r\n     * @param {VideoType} videoType\r\n     * @return {number|NaN} average number of pixels or <tt>NaN</tt> if there\r\n     * are no samples.\r\n     * @private\r\n     */\r\n    _calculateAvgVideoPixels(peerResolutions, isLocal, videoType) {\r\n        let peerPixelsSum = 0;\r\n        let peerCount = 0;\r\n        const myID = this._conference.myUserId();\r\n\r\n        for (const peerID of Object.keys(peerResolutions)) {\r\n            if (isLocal ? peerID === myID : peerID !== myID) {\r\n                const participant\r\n                    = isLocal\r\n                        ? null\r\n                        : this._conference.getParticipantById(peerID);\r\n                const videosResolution = peerResolutions[peerID];\r\n\r\n                // Do not continue without participant for non local peerID\r\n                if ((isLocal || participant) && videosResolution) {\r\n                    const peerAvgPixels = this._calculatePeerAvgVideoPixels(\r\n                        videosResolution, participant, videoType);\r\n\r\n                    if (!isNaN(peerAvgPixels)) {\r\n                        peerPixelsSum += peerAvgPixels;\r\n                        peerCount += 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return peerPixelsSum / peerCount;\r\n    }\r\n\r\n    /**\r\n     * Calculate average pixels for either remote or local participant\r\n     * @param {object} videos maps resolution per video SSRC\r\n     * @param {JitsiParticipant|null} participant remote participant or\r\n     * <tt>null</tt> for local video pixels calculation.\r\n     * @param {VideoType} videoType the type of the video for which an average\r\n     * will be calculated.\r\n     * @return {number|NaN} average video pixels of all participant's videos or\r\n     * <tt>NaN</tt> if currently not available\r\n     * @private\r\n     */\r\n    _calculatePeerAvgVideoPixels(videos, participant, videoType) {\r\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\r\n        let videoTracks = null;\r\n\r\n        // NOTE that this method is supposed to be called for the stats\r\n        // received from the current peerconnection.\r\n        const tpc = this._conference.getActivePeerConnection();\r\n\r\n        if (participant) {\r\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\r\n            if (videoTracks) {\r\n                ssrcs\r\n                    = ssrcs.filter(\r\n                        ssrc => videoTracks.find(\r\n                            track =>\r\n                                !track.isMuted()\r\n                                    && track.getSSRC() === ssrc\r\n                                    && track.videoType === videoType));\r\n            }\r\n        } else {\r\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\r\n            ssrcs\r\n                = ssrcs.filter(\r\n                    ssrc => videoTracks.find(\r\n                        track =>\r\n                            !track.isMuted()\r\n                                && tpc.getLocalSSRC(track) === ssrc\r\n                                && track.videoType === videoType));\r\n        }\r\n\r\n        let peerPixelsSum = 0;\r\n        let peerSsrcCount = 0;\r\n\r\n        for (const ssrc of ssrcs) {\r\n            const peerSsrcPixels\r\n                = Number(videos[ssrc].height) * Number(videos[ssrc].width);\r\n\r\n            // FPS is reported as 0 for users with no video\r\n            if (!isNaN(peerSsrcPixels) && peerSsrcPixels > 0) {\r\n                peerPixelsSum += peerSsrcPixels;\r\n                peerSsrcCount += 1;\r\n            }\r\n        }\r\n\r\n        return peerPixelsSum / peerSsrcCount;\r\n    }\r\n\r\n\r\n    /**\r\n     * Calculates average FPS for the report\r\n     * @param {go figure} frameRate\r\n     * @param {boolean} isLocal if the average is to be calculated for the local\r\n     * video or <tt>false</tt> if for remote videos.\r\n     * @param {VideoType} videoType\r\n     * @return {number|NaN} average FPS or <tt>NaN</tt> if there are no samples.\r\n     * @private\r\n     */\r\n    _calculateAvgVideoFps(frameRate, isLocal, videoType) {\r\n        let peerFpsSum = 0;\r\n        let peerCount = 0;\r\n        const myID = this._conference.myUserId();\r\n\r\n        for (const peerID of Object.keys(frameRate)) {\r\n            if (isLocal ? peerID === myID : peerID !== myID) {\r\n                const participant\r\n                    = isLocal\r\n                        ? null : this._conference.getParticipantById(peerID);\r\n                const videosFps = frameRate[peerID];\r\n\r\n                // Do not continue without participant for non local peerID\r\n                if ((isLocal || participant) && videosFps) {\r\n                    const peerAvgFPS\r\n                        = this._calculatePeerAvgVideoFps(\r\n                            videosFps, participant, videoType);\r\n\r\n                    if (!isNaN(peerAvgFPS)) {\r\n                        peerFpsSum += peerAvgFPS;\r\n                        peerCount += 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return peerFpsSum / peerCount;\r\n    }\r\n\r\n    /**\r\n     * Calculate average FPS for either remote or local participant\r\n     * @param {object} videos maps FPS per video SSRC\r\n     * @param {JitsiParticipant|null} participant remote participant or\r\n     * <tt>null</tt> for local FPS calculation.\r\n     * @param {VideoType} videoType the type of the video for which an average\r\n     * will be calculated.\r\n     * @return {number|NaN} average FPS of all participant's videos or\r\n     * <tt>NaN</tt> if currently not available\r\n     * @private\r\n     */\r\n    _calculatePeerAvgVideoFps(videos, participant, videoType) {\r\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\r\n        let videoTracks = null;\r\n\r\n        // NOTE that this method is supposed to be called for the stats\r\n        // received from the current peerconnection.\r\n        const tpc = this._conference.getActivePeerConnection();\r\n\r\n        if (participant) {\r\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\r\n            if (videoTracks) {\r\n                ssrcs\r\n                    = ssrcs.filter(\r\n                        ssrc => videoTracks.find(\r\n                            track => !track.isMuted()\r\n                                && track.getSSRC() === ssrc\r\n                                && track.videoType === videoType));\r\n            }\r\n        } else {\r\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\r\n            ssrcs\r\n                = ssrcs.filter(\r\n                    ssrc => videoTracks.find(\r\n                        track => !track.isMuted()\r\n                            && tpc.getLocalSSRC(track) === ssrc\r\n                            && track.videoType === videoType));\r\n        }\r\n\r\n        let peerFpsSum = 0;\r\n        let peerSsrcCount = 0;\r\n\r\n        for (const ssrc of ssrcs) {\r\n            const peerSsrcFps = Number(videos[ssrc]);\r\n\r\n            // FPS is reported as 0 for users with no video\r\n            if (!isNaN(peerSsrcFps) && peerSsrcFps > 0) {\r\n                peerFpsSum += peerSsrcFps;\r\n                peerSsrcCount += 1;\r\n            }\r\n        }\r\n\r\n        return peerFpsSum / peerSsrcCount;\r\n    }\r\n\r\n    /**\r\n     * Sends the 'transport.stats' analytics event whenever we detect that\r\n     * there is a change in the local or remote candidate type on the transport\r\n     * that is currently selected.\r\n     * @param {*} data\r\n     * @private\r\n     */\r\n    _maybeSendTransportAnalyticsEvent(data) {\r\n        if (!data || !data.transport || !data.transport.length) {\r\n            return;\r\n        }\r\n        const transportStats = {\r\n            p2p: data.transport[0].p2p,\r\n            'local_candidate_type': data.transport[0].localCandidateType,\r\n            'remote_candidate_type': data.transport[0].remoteCandidateType,\r\n            'transport_type': data.transport[0].type\r\n        };\r\n\r\n        if (!this._cachedTransportStats || !isEqual(transportStats, this._cachedTransportStats)) {\r\n            this._cachedTransportStats = transportStats;\r\n            Statistics.sendAnalytics(createTransportStatsEvent(transportStats));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Resets the stats related to JVB connection. Must not be called when in\r\n     * P2P mode, because then the {@link AverageStatReport} instances are\r\n     * tracking P2P stats. Note that this should never happen unless something\r\n     * is wrong with the P2P and JVB121 events.\r\n     * @private\r\n     */\r\n    _resetAvgJvbStats() {\r\n        this._resetAvgStats();\r\n        this.jvbStatsMonitor._resetAvgStats();\r\n    }\r\n\r\n    /**\r\n     * Reset cache of all averages and {@link _sampleIdx}.\r\n     * @private\r\n     */\r\n    _resetAvgStats() {\r\n        this._avgAudioBitrateUp.reset();\r\n        this._avgAudioBitrateDown.reset();\r\n\r\n        this._avgVideoBitrateUp.reset();\r\n        this._avgVideoBitrateDown.reset();\r\n\r\n        this._avgBandwidthUp.reset();\r\n        this._avgBandwidthDown.reset();\r\n\r\n        this._avgPacketLossUp.reset();\r\n        this._avgPacketLossDown.reset();\r\n        this._avgPacketLossTotal.reset();\r\n\r\n        this._avgRemoteFPS.reset();\r\n        this._avgRemoteScreenFPS.reset();\r\n        this._avgLocalFPS.reset();\r\n        this._avgLocalScreenFPS.reset();\r\n\r\n        this._avgRemoteCameraPixels.reset();\r\n        this._avgRemoteScreenPixels.reset();\r\n        this._avgLocalCameraPixels.reset();\r\n        this._avgLocalScreenPixels.reset();\r\n\r\n        this._avgCQ.reset();\r\n\r\n        this._sampleIdx = 0;\r\n    }\r\n\r\n    /**\r\n     * Unregisters all event listeners and stops working.\r\n     */\r\n    dispose() {\r\n        this._conference.off(\r\n            ConferenceEvents.P2P_STATUS,\r\n            this._onP2PStatusChanged);\r\n        this._conference.off(\r\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\r\n            this._onLocalStatsUpdated);\r\n        this._conference.off(\r\n            ConferenceEvents.JVB121_STATUS,\r\n            this._onJvb121StatusChanged);\r\n        this.jvbStatsMonitor.dispose();\r\n        this.p2pStatsMonitor.dispose();\r\n    }\r\n}\r\n","/* global callstats */\r\n\r\nimport browser from '../browser';\r\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\r\n\r\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\r\n\r\n/**\r\n * We define enumeration of wrtcFuncNames as we need them before\r\n * callstats is initialized to queue events.\r\n * @const\r\n * @see http://www.callstats.io/api/#enumeration-of-wrtcfuncnames\r\n */\r\nconst wrtcFuncNames = {\r\n    createOffer: 'createOffer',\r\n    createAnswer: 'createAnswer',\r\n    setLocalDescription: 'setLocalDescription',\r\n    setRemoteDescription: 'setRemoteDescription',\r\n    addIceCandidate: 'addIceCandidate',\r\n    getUserMedia: 'getUserMedia',\r\n    iceConnectionFailure: 'iceConnectionFailure',\r\n    signalingError: 'signalingError',\r\n    applicationLog: 'applicationLog'\r\n};\r\n\r\n/**\r\n * We define enumeration of fabricEvent as we need them before\r\n * callstats is initialized to queue events.\r\n * @const\r\n * @see http://www.callstats.io/api/#enumeration-of-fabricevent\r\n */\r\nconst fabricEvent = {\r\n    fabricHold: 'fabricHold',\r\n    fabricResume: 'fabricResume',\r\n    audioMute: 'audioMute',\r\n    audioUnmute: 'audioUnmute',\r\n    videoPause: 'videoPause',\r\n    videoResume: 'videoResume',\r\n    fabricUsageEvent: 'fabricUsageEvent',\r\n    fabricStats: 'fabricStats',\r\n    fabricTerminated: 'fabricTerminated',\r\n    screenShareStart: 'screenShareStart',\r\n    screenShareStop: 'screenShareStop',\r\n    dominantSpeaker: 'dominantSpeaker',\r\n    activeDeviceList: 'activeDeviceList'\r\n};\r\n\r\n/**\r\n * The user id to report to callstats as destination.\r\n * @type {string}\r\n */\r\nconst DEFAULT_REMOTE_USER = 'jitsi';\r\n\r\n/**\r\n * Type of pending reports, can be event or an error.\r\n * @type {{ERROR: string, EVENT: string}}\r\n */\r\nconst reportType = {\r\n    ERROR: 'error',\r\n    EVENT: 'event',\r\n    MST_WITH_USERID: 'mstWithUserID'\r\n};\r\n\r\n/**\r\n * Set of currently existing {@link CallStats} instances.\r\n * @type {Set<CallStats>}\r\n */\r\nlet _fabrics;\r\n\r\n/**\r\n * An instance of this class is a wrapper for the CallStats API fabric. A fabric\r\n * reports one peer connection the the CallStats backend and is allocated with\r\n * {@link callstats.addNewFabric}. It has a bunch of instance methods for\r\n * reporting various events. A fabric is considered disposed when\r\n * {@link CallStats.sendTerminateEvent} is executed.\r\n *\r\n * Currently only one backend instance can be created ever and it's done using\r\n * {@link CallStats.initBackend}. At the time of this writing there is no way to\r\n * explicitly shutdown the backend, but it's supposed to close it's connection\r\n * automatically, after all fabrics have been terminated.\r\n */\r\nexport default class CallStats {\r\n    /**\r\n     * A callback passed to {@link callstats.addNewFabric}.\r\n     * @param {string} error 'success' means ok\r\n     * @param {string} msg some more details\r\n     * @private\r\n     */\r\n    static _addNewFabricCallback(error, msg) {\r\n        if (CallStats.backend && error !== 'success') {\r\n            logger.error(`Monitoring status: ${error} msg: ${msg}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Callback passed to {@link callstats.initialize} (backend initialization)\r\n     * @param {string} error 'success' means ok\r\n     * @param {String} msg\r\n     * @private\r\n     */\r\n    static _initCallback(error, msg) {\r\n        logger.log(`CallStats Status: err=${error} msg=${msg}`);\r\n\r\n        // there is no lib, nothing to report to\r\n        if (error !== 'success') {\r\n            return;\r\n        }\r\n\r\n        CallStats.backendInitialized = true;\r\n\r\n        // I hate that\r\n        let atLeastOneFabric = false;\r\n        let defaultInstance = null;\r\n\r\n        for (const callStatsInstance of CallStats.fabrics.values()) {\r\n            if (!callStatsInstance.hasFabric) {\r\n                logger.debug('addNewFabric - initCallback');\r\n                if (callStatsInstance._addNewFabric()) {\r\n                    atLeastOneFabric = true;\r\n                    if (!defaultInstance) {\r\n                        defaultInstance = callStatsInstance;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!atLeastOneFabric) {\r\n            return;\r\n        }\r\n\r\n        CallStats._emptyReportQueue(defaultInstance);\r\n    }\r\n\r\n    /**\r\n     * Empties report queue.\r\n     *\r\n     * @param {CallStats} csInstance - The callstats instance.\r\n     * @private\r\n     */\r\n    static _emptyReportQueue(csInstance) {\r\n        // There is no conference ID nor a PeerConnection available when some of\r\n        // the events are scheduled on the reportsQueue, so those will be\r\n        // reported on the first initialized fabric.\r\n        const defaultConfID = csInstance.confID;\r\n        const defaultPC = csInstance.peerconnection;\r\n\r\n        // notify callstats about failures if there were any\r\n        for (const report of CallStats.reportsQueue) {\r\n            if (report.type === reportType.ERROR) {\r\n                const errorData = report.data;\r\n\r\n                CallStats._reportError(\r\n                    csInstance,\r\n                    errorData.type,\r\n                    errorData.error,\r\n                    errorData.pc || defaultPC);\r\n            } else if (report.type === reportType.EVENT) {\r\n                // if we have and event to report and we failed to add\r\n                // fabric this event will not be reported anyway, returning\r\n                // an error\r\n                const eventData = report.data;\r\n\r\n                CallStats.backend.sendFabricEvent(\r\n                    report.pc || defaultPC,\r\n                    eventData.event,\r\n                    defaultConfID,\r\n                    eventData.eventData);\r\n            } else if (report.type === reportType.MST_WITH_USERID) {\r\n                const data = report.data;\r\n\r\n                CallStats.backend.associateMstWithUserID(\r\n                    report.pc || defaultPC,\r\n                    data.callStatsId,\r\n                    defaultConfID,\r\n                    data.ssrc,\r\n                    data.usageLabel,\r\n                    data.containerId\r\n                );\r\n            }\r\n        }\r\n        CallStats.reportsQueue.length = 0;\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n    /**\r\n     * Reports an error to callstats.\r\n     *\r\n     * @param {CallStats} [cs]\r\n     * @param type the type of the error, which will be one of the wrtcFuncNames\r\n     * @param error the error\r\n     * @param pc the peerconnection\r\n     * @private\r\n     */\r\n    static _reportError(cs, type, error, pc) {\r\n        let _error = error;\r\n\r\n        if (!_error) {\r\n            logger.warn('No error is passed!');\r\n            _error = new Error('Unknown error');\r\n        }\r\n        if (CallStats.backendInitialized && cs) {\r\n            CallStats.backend.reportError(pc, cs.confID, type, _error);\r\n        } else {\r\n            CallStats.reportsQueue.push({\r\n                type: reportType.ERROR,\r\n                data: {\r\n                    error: _error,\r\n                    pc,\r\n                    type\r\n                }\r\n            });\r\n        }\r\n\r\n        // else just ignore it\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Reports an error to callstats.\r\n     *\r\n     * @param {CallStats} cs\r\n     * @param event the type of the event, which will be one of the fabricEvent\r\n     * @param eventData additional data to pass to event\r\n     * @private\r\n     */\r\n    static _reportEvent(cs, event, eventData) {\r\n        const pc = cs && cs.peerconnection;\r\n        const confID = cs && cs.confID;\r\n\r\n        if (CallStats.backendInitialized && cs) {\r\n            CallStats.backend.sendFabricEvent(pc, event, confID, eventData);\r\n        } else {\r\n            CallStats.reportsQueue.push({\r\n                confID,\r\n                pc,\r\n                type: reportType.EVENT,\r\n                data: { event,\r\n                    eventData }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wraps some of the CallStats API method and logs their calls with\r\n     * arguments on the debug logging level. Also wraps some of the backend\r\n     * methods execution into try catch blocks to not crash the app in case\r\n     * there is a problem with the backend itself.\r\n     * @param {callstats} theBackend\r\n     * @private\r\n     */\r\n    static _traceAndCatchBackendCalls(theBackend) {\r\n        const tryCatchMethods = [\r\n            'associateMstWithUserID',\r\n            'sendFabricEvent',\r\n            'sendUserFeedback'\r\n\r\n            // 'reportError', - this one needs special handling - see code below\r\n        ];\r\n\r\n        for (const methodName of tryCatchMethods) {\r\n            const originalMethod = theBackend[methodName];\r\n\r\n            theBackend[methodName] = function(...theArguments) {\r\n                try {\r\n                    return originalMethod.apply(theBackend, theArguments);\r\n                } catch (e) {\r\n                    GlobalOnErrorHandler.callErrorHandler(e);\r\n                }\r\n            };\r\n        }\r\n        const debugMethods = [\r\n            'associateMstWithUserID',\r\n            'sendFabricEvent',\r\n            'sendUserFeedback'\r\n\r\n            // 'reportError', - this one needs special handling - see code below\r\n        ];\r\n\r\n        for (const methodName of debugMethods) {\r\n            const originalMethod = theBackend[methodName];\r\n\r\n            theBackend[methodName] = function(...theArguments) {\r\n                logger.debug(methodName, theArguments);\r\n                originalMethod.apply(theBackend, theArguments);\r\n            };\r\n        }\r\n        const originalReportError = theBackend.reportError;\r\n\r\n        /* eslint-disable max-params */\r\n        theBackend.reportError = function(pc, cs, type, ...args) {\r\n            // Logs from the logger are submitted on the applicationLog event\r\n            // \"type\". Logging the arguments on the logger will create endless\r\n            // loop, because it will put all the logs to the logger queue again.\r\n            if (type === wrtcFuncNames.applicationLog) {\r\n                // NOTE otherArguments are not logged to the console on purpose\r\n                // to not log the whole log batch\r\n                // FIXME check the current logging level (currently not exposed\r\n                // by the logger implementation)\r\n                // NOTE it is not safe to log whole objects on react-native as\r\n                // those contain too many circular references and may crash\r\n                // the app.\r\n                if (!browser.isReactNative()) {\r\n                    console && console.debug('reportError', pc, cs, type);\r\n                }\r\n            } else {\r\n                logger.debug('reportError', pc, cs, type, ...args);\r\n            }\r\n            try {\r\n                originalReportError.call(theBackend, pc, cs, type, ...args);\r\n            } catch (exception) {\r\n                if (type === wrtcFuncNames.applicationLog) {\r\n                    console && console.error('reportError', exception);\r\n                } else {\r\n                    GlobalOnErrorHandler.callErrorHandler(exception);\r\n                }\r\n            }\r\n        };\r\n\r\n        /* eslint-enable max-params */\r\n    }\r\n\r\n    /**\r\n     * Returns the Set with the currently existing {@link CallStats} instances.\r\n     * Lazily initializes the Set to allow any Set polyfills to be applied.\r\n     * @type {Set<CallStats>}\r\n     */\r\n    static get fabrics() {\r\n        if (!_fabrics) {\r\n            _fabrics = new Set();\r\n        }\r\n\r\n        return _fabrics;\r\n    }\r\n\r\n    /**\r\n     * Initializes the CallStats backend. Should be called only if\r\n     * {@link CallStats.isBackendInitialized} returns <tt>false</tt>.\r\n     * @param {object} options\r\n     * @param {String} options.callStatsID CallStats credentials - ID\r\n     * @param {String} options.callStatsSecret CallStats credentials - secret\r\n     * @param {string} options.aliasName the <tt>aliasName</tt> part of\r\n     * the <tt>userID</tt> aka endpoint ID, see CallStats docs for more info.\r\n     * @param {string} options.userName the <tt>userName</tt> part of\r\n     * the <tt>userID</tt> aka display name, see CallStats docs for more info.\r\n     *\r\n     */\r\n    static initBackend(options) {\r\n        if (CallStats.backend) {\r\n            throw new Error('CallStats backend has been initialized already!');\r\n        }\r\n        try {\r\n            const CallStatsBackend = callstats;\r\n\r\n            CallStats.backend = new CallStatsBackend();\r\n            CallStats._traceAndCatchBackendCalls(CallStats.backend);\r\n            CallStats.userID = {\r\n                aliasName: options.aliasName,\r\n                userName: options.userName\r\n            };\r\n            CallStats.callStatsID = options.callStatsID;\r\n            CallStats.callStatsSecret = options.callStatsSecret;\r\n\r\n            let configParams;\r\n\r\n            if (options.applicationName) {\r\n                configParams = {\r\n                    applicationVersion:\r\n                        `${options.applicationName} (${\r\n                            browser.getName()})`\r\n                };\r\n            }\r\n\r\n            if (options.confID) {\r\n                // we first check is there a tenant in the confID\r\n                const match = options.confID.match(/.*\\/(.*)\\/.*/);\r\n\r\n                // if there is no tenant, we will just set '/'\r\n                configParams.siteID = (match && match[1]) || '/';\r\n            }\r\n\r\n            // userID is generated or given by the origin server\r\n            CallStats.backend.initialize(\r\n                CallStats.callStatsID,\r\n                CallStats.callStatsSecret,\r\n                CallStats.userID,\r\n                CallStats._initCallback,\r\n                undefined,\r\n                configParams);\r\n\r\n            const getWiFiStatsMethod = options.getWiFiStatsMethod;\r\n\r\n            if (getWiFiStatsMethod) {\r\n                CallStats.backend.attachWifiStatsHandler(getWiFiStatsMethod);\r\n\r\n                getWiFiStatsMethod().then(result => {\r\n                    if (result) {\r\n                        logger.info('Reported wifi addresses:'\r\n                            , JSON.parse(result).addresses);\r\n                    }\r\n                })\r\n                .catch(() => {});// eslint-disable-line no-empty-function\r\n            }\r\n\r\n            return true;\r\n        } catch (e) {\r\n            // The callstats.io API failed to initialize (e.g. because its\r\n            // download did not succeed in general or on time). Further attempts\r\n            // to utilize it cannot possibly succeed.\r\n            GlobalOnErrorHandler.callErrorHandler(e);\r\n            CallStats.backend = null;\r\n            logger.error(e);\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the CallStats backend has been created. It does not mean that\r\n     * it has been initialized, but only that the API instance has been\r\n     * allocated successfully.\r\n     * @return {boolean} <tt>true</tt> if backend exists or <tt>false</tt>\r\n     * otherwise\r\n     */\r\n    static isBackendInitialized() {\r\n        return Boolean(CallStats.backend);\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats about active device.\r\n     * @param {{deviceList: {String:String}}} devicesData list of devices with\r\n     * their data\r\n     * @param {CallStats} cs callstats instance related to the event\r\n     */\r\n    static sendActiveDeviceListEvent(devicesData, cs) {\r\n        CallStats._reportEvent(cs, fabricEvent.activeDeviceList, devicesData);\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats that there is a log we want to report.\r\n     *\r\n     * @param {Error} e error to send or {String} message\r\n     * @param {CallStats} cs callstats instance related to the error (optional)\r\n     */\r\n    static sendApplicationLog(e, cs) {\r\n        try {\r\n            CallStats._reportError(\r\n                cs,\r\n                wrtcFuncNames.applicationLog,\r\n                e,\r\n                cs && cs.peerconnection);\r\n        } catch (error) {\r\n            // If sendApplicationLog fails it should not be printed to\r\n            // the logger, because it will try to push the logs again\r\n            // (through sendApplicationLog) and an endless loop is created.\r\n            if (console && (typeof console.error === 'function')) {\r\n                // FIXME send analytics event as well\r\n                console.error('sendApplicationLog failed', error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends the given feedback through CallStats.\r\n     *\r\n     * @param {string} conferenceID the conference ID for which the feedback\r\n     * will be reported.\r\n     * @param overall an integer between 1 and 5 indicating the\r\n     * user feedback\r\n     * @param comment detailed feedback from the user.\r\n     */\r\n    static sendFeedback(conferenceID, overall, comment) {\r\n        return new Promise((resolve, reject) => {\r\n            if (CallStats.backend) {\r\n                CallStats.backend.sendUserFeedback(\r\n                    conferenceID,\r\n                    {\r\n                        userID: CallStats.userID,\r\n                        overall,\r\n                        comment\r\n                    },\r\n                    (status, message) => {\r\n                        if (status === 'success') {\r\n                            resolve(message);\r\n                        } else {\r\n                            reject(message);\r\n                        }\r\n                    });\r\n            } else {\r\n                const reason = 'Failed to submit feedback to CallStats - no backend';\r\n\r\n                logger.error(reason);\r\n                reject(reason);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats that getUserMedia failed.\r\n     *\r\n     * @param {Error} e error to send\r\n     * @param {CallStats} cs callstats instance related to the error (optional)\r\n     */\r\n    static sendGetUserMediaFailed(e, cs) {\r\n        CallStats._reportError(cs, wrtcFuncNames.getUserMedia, e, null);\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats for mute events\r\n     * @param mute {boolean} true for muted and false for not muted\r\n     * @param type {String} \"audio\"/\"video\"\r\n     * @param {CallStats} cs callstats instance related to the event\r\n     */\r\n    static sendMuteEvent(mute, type, cs) {\r\n        let event;\r\n\r\n        if (type === 'video') {\r\n            event = mute ? fabricEvent.videoPause : fabricEvent.videoResume;\r\n        } else {\r\n            event = mute ? fabricEvent.audioMute : fabricEvent.audioUnmute;\r\n        }\r\n\r\n        CallStats._reportEvent(cs, event);\r\n    }\r\n\r\n    /**\r\n     * Creates new CallStats instance that handles all callstats API calls for\r\n     * given {@link TraceablePeerConnection}. Each instance is meant to handle\r\n     * one CallStats fabric added with 'addFabric' API method for the\r\n     * {@link TraceablePeerConnection} instance passed in the constructor.\r\n     * @param {TraceablePeerConnection} tpc\r\n     * @param {Object} options\r\n     * @param {string} options.confID the conference ID that wil be used to\r\n     * report the session.\r\n     * @param {string} [options.remoteUserID='jitsi'] the remote user ID to\r\n     * which given <tt>tpc</tt> is connected.\r\n     */\r\n    constructor(tpc, options) {\r\n        this.confID = options.confID;\r\n        this.tpc = tpc;\r\n        this.peerconnection = tpc.peerconnection;\r\n        this.remoteUserID = options.remoteUserID || DEFAULT_REMOTE_USER;\r\n        this.hasFabric = false;\r\n\r\n        CallStats.fabrics.add(this);\r\n\r\n        if (CallStats.backendInitialized) {\r\n            this._addNewFabric();\r\n\r\n            // if this is the first fabric let's try to empty the\r\n            // report queue. Reports all events that we recorded between\r\n            // backend initialization and receiving the first fabric\r\n            if (CallStats.fabrics.size === 1) {\r\n                CallStats._emptyReportQueue(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes CallStats fabric by calling \"addNewFabric\" for\r\n     * the peer connection associated with this instance.\r\n     * @return {boolean} true if the call was successful or false otherwise.\r\n     */\r\n    _addNewFabric() {\r\n        logger.info('addNewFabric', this.remoteUserID);\r\n        try {\r\n            const fabricAttributes = {\r\n                remoteEndpointType:\r\n                    this.tpc.isP2P\r\n                        ? CallStats.backend.endpointType.peer\r\n                        : CallStats.backend.endpointType.server\r\n            };\r\n            const ret\r\n                = CallStats.backend.addNewFabric(\r\n                    this.peerconnection,\r\n                    this.remoteUserID,\r\n                    CallStats.backend.fabricUsage.multiplex,\r\n                    this.confID,\r\n                    fabricAttributes,\r\n                    CallStats._addNewFabricCallback);\r\n\r\n            this.hasFabric = true;\r\n\r\n            const success = ret.status === 'success';\r\n\r\n            if (!success) {\r\n                logger.error('callstats fabric not initilized', ret.message);\r\n            }\r\n\r\n            return success;\r\n\r\n        } catch (error) {\r\n            GlobalOnErrorHandler.callErrorHandler(error);\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    /**\r\n     * Lets CallStats module know where is given SSRC rendered by providing\r\n     * renderer tag ID.\r\n     * If the lib is not initialized yet queue the call for later, when it's\r\n     * ready.\r\n     * @param {number} ssrc the SSRC of the stream\r\n     * @param {boolean} isLocal indicates whether this the stream is local\r\n     * @param {string|null} streamEndpointId if the stream is not local the it\r\n     * needs to contain the stream owner's ID\r\n     * @param {string} usageLabel meaningful usage label of this stream like\r\n     *        'microphone', 'camera' or 'screen'.\r\n     * @param {string} containerId  the id of media 'audio' or 'video' tag which\r\n     *        renders the stream.\r\n     */\r\n    associateStreamWithVideoTag(\r\n            ssrc,\r\n            isLocal,\r\n            streamEndpointId,\r\n            usageLabel,\r\n            containerId) {\r\n        if (!CallStats.backend) {\r\n            return;\r\n        }\r\n\r\n        const callStatsId = isLocal ? CallStats.userID : streamEndpointId;\r\n\r\n        if (CallStats.backendInitialized) {\r\n            CallStats.backend.associateMstWithUserID(\r\n                this.peerconnection,\r\n                callStatsId,\r\n                this.confID,\r\n                ssrc,\r\n                usageLabel,\r\n                containerId);\r\n        } else {\r\n            CallStats.reportsQueue.push({\r\n                type: reportType.MST_WITH_USERID,\r\n                pc: this.peerconnection,\r\n                data: {\r\n                    callStatsId,\r\n                    containerId,\r\n                    ssrc,\r\n                    usageLabel\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Notifies CallStats that we are the new dominant speaker in the\r\n     * conference.\r\n     */\r\n    sendDominantSpeakerEvent() {\r\n        CallStats._reportEvent(this, fabricEvent.dominantSpeaker);\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats that the fabric for the underlying peerconnection was\r\n     * closed and no evens should be reported, after this call.\r\n     */\r\n    sendTerminateEvent() {\r\n        if (CallStats.backendInitialized) {\r\n            CallStats.backend.sendFabricEvent(\r\n                this.peerconnection,\r\n                CallStats.backend.fabricEvent.fabricTerminated,\r\n                this.confID);\r\n        }\r\n        CallStats.fabrics.delete(this);\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats for ice connection failed\r\n     */\r\n    sendIceConnectionFailedEvent() {\r\n        CallStats._reportError(\r\n            this,\r\n            wrtcFuncNames.iceConnectionFailure,\r\n            null,\r\n            this.peerconnection);\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats that peer connection failed to create offer.\r\n     *\r\n     * @param {Error} e error to send\r\n     */\r\n    sendCreateOfferFailed(e) {\r\n        CallStats._reportError(\r\n            this, wrtcFuncNames.createOffer, e, this.peerconnection);\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats that peer connection failed to create answer.\r\n     *\r\n     * @param {Error} e error to send\r\n     */\r\n    sendCreateAnswerFailed(e) {\r\n        CallStats._reportError(\r\n            this, wrtcFuncNames.createAnswer, e, this.peerconnection);\r\n    }\r\n\r\n    /**\r\n     * Sends either resume or hold event for the fabric associated with\r\n     * the underlying peerconnection.\r\n     * @param {boolean} isResume true to resume or false to hold\r\n     */\r\n    sendResumeOrHoldEvent(isResume) {\r\n        CallStats._reportEvent(\r\n            this,\r\n            isResume ? fabricEvent.fabricResume : fabricEvent.fabricHold);\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats for screen sharing events\r\n     * @param {boolean} start true for starting screen sharing and\r\n     * false for not stopping\r\n     * @param {string|null} ssrc - optional ssrc value, used only when\r\n     * starting screen sharing.\r\n     */\r\n    sendScreenSharingEvent(start, ssrc) {\r\n        let eventData;\r\n\r\n        if (ssrc) {\r\n            eventData = { ssrc };\r\n        }\r\n\r\n        CallStats._reportEvent(\r\n            this,\r\n            start ? fabricEvent.screenShareStart : fabricEvent.screenShareStop,\r\n            eventData);\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats that peer connection failed to set local description.\r\n     *\r\n     * @param {Error} e error to send\r\n     */\r\n    sendSetLocalDescFailed(e) {\r\n        CallStats._reportError(\r\n            this, wrtcFuncNames.setLocalDescription, e, this.peerconnection);\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats that peer connection failed to set remote description.\r\n     *\r\n     * @param {Error} e error to send\r\n     */\r\n    sendSetRemoteDescFailed(e) {\r\n        CallStats._reportError(\r\n            this, wrtcFuncNames.setRemoteDescription, e, this.peerconnection);\r\n    }\r\n\r\n    /**\r\n     * Notifies CallStats that peer connection failed to add ICE candidate.\r\n     *\r\n     * @param {Error} e error to send\r\n     */\r\n    sendAddIceCandidateFailed(e) {\r\n        CallStats._reportError(\r\n            this, wrtcFuncNames.addIceCandidate, e, this.peerconnection);\r\n    }\r\n}\r\n\r\n/**\r\n * The CallStats API backend instance\r\n * @type {callstats}\r\n */\r\nCallStats.backend = null;\r\n\r\n// some errors/events may happen before CallStats init\r\n// in this case we accumulate them in this array\r\n// and send them to callstats on init\r\nCallStats.reportsQueue = [];\r\n\r\n/**\r\n * Whether the library was successfully initialized(the backend) using its\r\n * initialize method.\r\n * @type {boolean}\r\n */\r\nCallStats.backendInitialized = false;\r\n\r\n/**\r\n * Part of the CallStats credentials - application ID\r\n * @type {string}\r\n */\r\nCallStats.callStatsID = null;\r\n\r\n/**\r\n * Part of the CallStats credentials - application secret\r\n * @type {string}\r\n */\r\nCallStats.callStatsSecret = null;\r\n\r\n/**\r\n * Local CallStats user ID structure. Can be set only once when\r\n * {@link backend} is initialized, so it's static for the time being.\r\n * See CallStats API for more info:\r\n * https://www.callstats.io/api/#userid\r\n * @type {object}\r\n */\r\nCallStats.userID = null;\r\n","/**\r\n * Provides statistics for the local stream.\r\n */\r\n\r\n/**\r\n * Size of the webaudio analyzer buffer.\r\n * @type {number}\r\n */\r\nconst WEBAUDIO_ANALYZER_FFT_SIZE = 2048;\r\n\r\n/**\r\n * Value of the webaudio analyzer smoothing time parameter.\r\n * @type {number}\r\n */\r\nconst WEBAUDIO_ANALYZER_SMOOTING_TIME = 0.8;\r\n\r\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n\r\nlet context = null;\r\n\r\nif (window.AudioContext) {\r\n    context = new AudioContext();\r\n\r\n    // XXX Not all browsers define a suspend method on AudioContext. As the\r\n    // invocation is at the (ES6 module) global execution level, it breaks the\r\n    // loading of the lib-jitsi-meet library in such browsers and, consequently,\r\n    // the loading of the very Web app that uses the lib-jitsi-meet library. For\r\n    // example, Google Chrome 40 on Android does not define the method but we\r\n    // still want to be able to load the lib-jitsi-meet library there and\r\n    // display a page which notifies the user that the Web app is not supported\r\n    // there.\r\n    context.suspend && context.suspend();\r\n}\r\n\r\n/**\r\n * Converts time domain data array to audio level.\r\n * @param samples the time domain data array.\r\n * @returns {number} the audio level\r\n */\r\nfunction timeDomainDataToAudioLevel(samples) {\r\n\r\n    let maxVolume = 0;\r\n\r\n    const length = samples.length;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        if (maxVolume < samples[i]) {\r\n            maxVolume = samples[i];\r\n        }\r\n    }\r\n\r\n    return parseFloat(((maxVolume - 127) / 128).toFixed(3));\r\n}\r\n\r\n/**\r\n * Animates audio level change\r\n * @param newLevel the new audio level\r\n * @param lastLevel the last audio level\r\n * @returns {Number} the audio level to be set\r\n */\r\nfunction animateLevel(newLevel, lastLevel) {\r\n    let value = 0;\r\n    const diff = lastLevel - newLevel;\r\n\r\n    if (diff > 0.2) {\r\n        value = lastLevel - 0.2;\r\n    } else if (diff < -0.4) {\r\n        value = lastLevel + 0.4;\r\n    } else {\r\n        value = newLevel;\r\n    }\r\n\r\n    return parseFloat(value.toFixed(3));\r\n}\r\n\r\n\r\n/**\r\n * <tt>LocalStatsCollector</tt> calculates statistics for the local stream.\r\n *\r\n * @param stream the local stream\r\n * @param interval stats refresh interval given in ms.\r\n * @param callback function that receives the audio levels.\r\n * @constructor\r\n */\r\nexport default function LocalStatsCollector(stream, interval, callback) {\r\n    this.stream = stream;\r\n    this.intervalId = null;\r\n    this.intervalMilis = interval;\r\n    this.audioLevel = 0;\r\n    this.callback = callback;\r\n}\r\n\r\n/**\r\n * Starts the collecting the statistics.\r\n */\r\nLocalStatsCollector.prototype.start = function() {\r\n    if (!LocalStatsCollector.isLocalStatsSupported()) {\r\n        return;\r\n    }\r\n    context.resume();\r\n    const analyser = context.createAnalyser();\r\n\r\n    analyser.smoothingTimeConstant = WEBAUDIO_ANALYZER_SMOOTING_TIME;\r\n    analyser.fftSize = WEBAUDIO_ANALYZER_FFT_SIZE;\r\n\r\n    const source = context.createMediaStreamSource(this.stream);\r\n\r\n    source.connect(analyser);\r\n\r\n\r\n    const self = this;\r\n\r\n    this.intervalId = setInterval(\r\n        () => {\r\n            const array = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n            analyser.getByteTimeDomainData(array);\r\n            const audioLevel = timeDomainDataToAudioLevel(array);\r\n\r\n            if (audioLevel !== self.audioLevel) {\r\n                self.audioLevel = animateLevel(audioLevel, self.audioLevel);\r\n                self.callback(self.audioLevel);\r\n            }\r\n        },\r\n        this.intervalMilis\r\n    );\r\n};\r\n\r\n/**\r\n * Stops collecting the statistics.\r\n */\r\nLocalStatsCollector.prototype.stop = function() {\r\n    if (this.intervalId) {\r\n        clearInterval(this.intervalId);\r\n        this.intervalId = null;\r\n    }\r\n};\r\n\r\n/**\r\n * Checks if the environment has the necessary conditions to support\r\n * collecting stats from local streams.\r\n *\r\n * @returns {boolean}\r\n */\r\nLocalStatsCollector.isLocalStatsSupported = function() {\r\n    return Boolean(context);\r\n};\r\n","import browser from '../browser';\r\nimport { browsers } from 'js-utils';\r\n\r\nimport * as StatisticsEvents from '../../service/statistics/Events';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\n\r\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\r\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\r\n\r\n/**\r\n * The lib-jitsi-meet browser-agnostic names of the browser-specific keys\r\n * reported by RTCPeerConnection#getStats mapped by browser.\r\n */\r\nconst KEYS_BY_BROWSER_TYPE = {};\r\n\r\nKEYS_BY_BROWSER_TYPE[browsers.FIREFOX] = {\r\n    'ssrc': 'ssrc',\r\n    'packetsReceived': 'packetsReceived',\r\n    'packetsLost': 'packetsLost',\r\n    'packetsSent': 'packetsSent',\r\n    'bytesReceived': 'bytesReceived',\r\n    'bytesSent': 'bytesSent',\r\n    'framerateMean': 'framerateMean',\r\n    'ip': 'address',\r\n    'port': 'port',\r\n    'protocol': 'protocol'\r\n};\r\nKEYS_BY_BROWSER_TYPE[browsers.CHROME] = {\r\n    'receiveBandwidth': 'googAvailableReceiveBandwidth',\r\n    'sendBandwidth': 'googAvailableSendBandwidth',\r\n    'remoteAddress': 'googRemoteAddress',\r\n    'transportType': 'googTransportType',\r\n    'localAddress': 'googLocalAddress',\r\n    'activeConnection': 'googActiveConnection',\r\n    'ssrc': 'ssrc',\r\n    'packetsReceived': 'packetsReceived',\r\n    'packetsSent': 'packetsSent',\r\n    'packetsLost': 'packetsLost',\r\n    'bytesReceived': 'bytesReceived',\r\n    'bytesSent': 'bytesSent',\r\n    'googFrameHeightReceived': 'googFrameHeightReceived',\r\n    'googFrameWidthReceived': 'googFrameWidthReceived',\r\n    'googFrameHeightSent': 'googFrameHeightSent',\r\n    'googFrameWidthSent': 'googFrameWidthSent',\r\n    'googFrameRateReceived': 'googFrameRateReceived',\r\n    'googFrameRateSent': 'googFrameRateSent',\r\n    'audioInputLevel': 'audioInputLevel',\r\n    'audioOutputLevel': 'audioOutputLevel',\r\n    'currentRoundTripTime': 'googRtt',\r\n    'remoteCandidateType': 'googRemoteCandidateType',\r\n    'localCandidateType': 'googLocalCandidateType',\r\n    'ip': 'ip',\r\n    'port': 'port',\r\n    'protocol': 'protocol'\r\n};\r\nKEYS_BY_BROWSER_TYPE[browsers.OPERA]\r\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\r\nKEYS_BY_BROWSER_TYPE[browsers.NWJS]\r\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\r\nKEYS_BY_BROWSER_TYPE[browsers.ELECTRON]\r\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\r\nKEYS_BY_BROWSER_TYPE[browsers.SAFARI]\r\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\r\nKEYS_BY_BROWSER_TYPE[browsers.REACT_NATIVE]\r\n    = KEYS_BY_BROWSER_TYPE[browsers.CHROME];\r\n\r\n/**\r\n * Calculates packet lost percent using the number of lost packets and the\r\n * number of all packet.\r\n * @param lostPackets the number of lost packets\r\n * @param totalPackets the number of all packets.\r\n * @returns {number} packet loss percent\r\n */\r\nfunction calculatePacketLoss(lostPackets, totalPackets) {\r\n    if (!totalPackets || totalPackets <= 0\r\n            || !lostPackets || lostPackets <= 0) {\r\n        return 0;\r\n    }\r\n\r\n    return Math.round((lostPackets / totalPackets) * 100);\r\n}\r\n\r\n/**\r\n * Holds \"statistics\" for a single SSRC.\r\n * @constructor\r\n */\r\nfunction SsrcStats() {\r\n    this.loss = {};\r\n    this.bitrate = {\r\n        download: 0,\r\n        upload: 0\r\n    };\r\n    this.resolution = {};\r\n    this.framerate = 0;\r\n}\r\n\r\n/**\r\n * Sets the \"loss\" object.\r\n * @param loss the value to set.\r\n */\r\nSsrcStats.prototype.setLoss = function(loss) {\r\n    this.loss = loss || {};\r\n};\r\n\r\n/**\r\n * Sets resolution that belong to the ssrc represented by this instance.\r\n * @param resolution new resolution value to be set.\r\n */\r\nSsrcStats.prototype.setResolution = function(resolution) {\r\n    this.resolution = resolution || {};\r\n};\r\n\r\n/**\r\n * Adds the \"download\" and \"upload\" fields from the \"bitrate\" parameter to\r\n * the respective fields of the \"bitrate\" field of this object.\r\n * @param bitrate an object holding the values to add.\r\n */\r\nSsrcStats.prototype.addBitrate = function(bitrate) {\r\n    this.bitrate.download += bitrate.download;\r\n    this.bitrate.upload += bitrate.upload;\r\n};\r\n\r\n/**\r\n * Resets the bit rate for given <tt>ssrc</tt> that belong to the peer\r\n * represented by this instance.\r\n */\r\nSsrcStats.prototype.resetBitrate = function() {\r\n    this.bitrate.download = 0;\r\n    this.bitrate.upload = 0;\r\n};\r\n\r\n/**\r\n * Sets the \"framerate\".\r\n * @param framerate the value to set.\r\n */\r\nSsrcStats.prototype.setFramerate = function(framerate) {\r\n    this.framerate = framerate || 0;\r\n};\r\n\r\n/**\r\n *\r\n */\r\nfunction ConferenceStats() {\r\n\r\n    /**\r\n     * The bandwidth\r\n     * @type {{}}\r\n     */\r\n    this.bandwidth = {};\r\n\r\n    /**\r\n     * The bit rate\r\n     * @type {{}}\r\n     */\r\n    this.bitrate = {};\r\n\r\n    /**\r\n     * The packet loss rate\r\n     * @type {{}}\r\n     */\r\n    this.packetLoss = null;\r\n\r\n    /**\r\n     * Array with the transport information.\r\n     * @type {Array}\r\n     */\r\n    this.transport = [];\r\n}\r\n\r\n/* eslint-disable max-params */\r\n\r\n/**\r\n * <tt>StatsCollector</tt> registers for stats updates of given\r\n * <tt>peerconnection</tt> in given <tt>interval</tt>. On each update particular\r\n * stats are extracted and put in {@link SsrcStats} objects. Once the processing\r\n * is done <tt>audioLevelsUpdateCallback</tt> is called with <tt>this</tt>\r\n * instance as an event source.\r\n *\r\n * @param peerconnection WebRTC PeerConnection object.\r\n * @param audioLevelsInterval\r\n * @param statsInterval stats refresh interval given in ms.\r\n * @param eventEmitter\r\n * @constructor\r\n */\r\nexport default function StatsCollector(\r\n        peerconnection,\r\n        audioLevelsInterval,\r\n        statsInterval,\r\n        eventEmitter) {\r\n    // StatsCollector depends entirely on the format of the reports returned by\r\n    // RTCPeerConnection#getStats. Given that the value of\r\n    // browser#getName() is very unlikely to change at runtime, it\r\n    // makes sense to discover whether StatsCollector supports the executing\r\n    // browser as soon as possible. Otherwise, (1) getStatValue would have to\r\n    // needlessly check a \"static\" condition multiple times very very often and\r\n    // (2) the lack of support for the executing browser would be discovered and\r\n    // reported multiple times very very often too late in the execution in some\r\n    // totally unrelated callback.\r\n    /**\r\n     * The browser type supported by this StatsCollector. In other words, the\r\n     * type of the browser which initialized this StatsCollector\r\n     * instance.\r\n     * @private\r\n     */\r\n    this._browserType = browser.getName();\r\n    const keys = KEYS_BY_BROWSER_TYPE[this._browserType];\r\n\r\n    if (!keys) {\r\n        // eslint-disable-next-line no-throw-literal\r\n        throw `The browser type '${this._browserType}' isn't supported!`;\r\n    }\r\n\r\n    /**\r\n     * Whether to use the Promise-based getStats API or not.\r\n     * @type {boolean}\r\n     */\r\n    this._usesPromiseGetStats\r\n        = browser.isSafari() || browser.isFirefox();\r\n\r\n    /**\r\n     * The function which is to be used to retrieve the value associated in a\r\n     * report returned by RTCPeerConnection#getStats with a lib-jitsi-meet\r\n     * browser-agnostic name/key.\r\n     *\r\n     * @function\r\n     * @private\r\n     */\r\n    this._getStatValue\r\n        = this._usesPromiseGetStats\r\n            ? this._defineNewGetStatValueMethod(keys)\r\n            : this._defineGetStatValueMethod(keys);\r\n\r\n    this.peerconnection = peerconnection;\r\n    this.baselineAudioLevelsReport = null;\r\n    this.currentAudioLevelsReport = null;\r\n    this.currentStatsReport = null;\r\n    this.previousStatsReport = null;\r\n    this.audioLevelReportHistory = {};\r\n    this.audioLevelsIntervalId = null;\r\n    this.eventEmitter = eventEmitter;\r\n    this.conferenceStats = new ConferenceStats();\r\n\r\n    // Updates stats interval\r\n    this.audioLevelsIntervalMilis = audioLevelsInterval;\r\n\r\n    this.statsIntervalId = null;\r\n    this.statsIntervalMilis = statsInterval;\r\n\r\n    /**\r\n     * Maps SSRC numbers to {@link SsrcStats}.\r\n     * @type {Map<number,SsrcStats}\r\n     */\r\n    this.ssrc2stats = new Map();\r\n}\r\n\r\n/* eslint-enable max-params */\r\n\r\n/**\r\n * Stops stats updates.\r\n */\r\nStatsCollector.prototype.stop = function() {\r\n    if (this.audioLevelsIntervalId) {\r\n        clearInterval(this.audioLevelsIntervalId);\r\n        this.audioLevelsIntervalId = null;\r\n    }\r\n\r\n    if (this.statsIntervalId) {\r\n        clearInterval(this.statsIntervalId);\r\n        this.statsIntervalId = null;\r\n    }\r\n};\r\n\r\n/**\r\n * Callback passed to <tt>getStats</tt> method.\r\n * @param error an error that occurred on <tt>getStats</tt> call.\r\n */\r\nStatsCollector.prototype.errorCallback = function(error) {\r\n    GlobalOnErrorHandler.callErrorHandler(error);\r\n    logger.error('Get stats error', error);\r\n    this.stop();\r\n};\r\n\r\n/**\r\n * Starts stats updates.\r\n */\r\nStatsCollector.prototype.start = function(startAudioLevelStats) {\r\n    const self = this;\r\n\r\n    if (startAudioLevelStats) {\r\n        this.audioLevelsIntervalId = setInterval(\r\n            () => {\r\n                // Interval updates\r\n                self.peerconnection.getStats(\r\n                    report => {\r\n                        let results = null;\r\n\r\n                        if (!report || !report.result\r\n                            || typeof report.result !== 'function') {\r\n                            results = report;\r\n                        } else {\r\n                            results = report.result();\r\n                        }\r\n                        self.currentAudioLevelsReport = results;\r\n                        if (this._usesPromiseGetStats) {\r\n                            self.processNewAudioLevelReport();\r\n                        } else {\r\n                            self.processAudioLevelReport();\r\n                        }\r\n\r\n                        self.baselineAudioLevelsReport\r\n                            = self.currentAudioLevelsReport;\r\n                    },\r\n                    error => self.errorCallback(error)\r\n                );\r\n            },\r\n            self.audioLevelsIntervalMilis\r\n        );\r\n    }\r\n\r\n    this.statsIntervalId = setInterval(\r\n        () => {\r\n            // Interval updates\r\n            self.peerconnection.getStats(\r\n                report => {\r\n                    let results = null;\r\n\r\n                    if (!report || !report.result\r\n                        || typeof report.result !== 'function') {\r\n                        // firefox\r\n                        results = report;\r\n                    } else {\r\n                        // chrome\r\n                        results = report.result();\r\n                    }\r\n\r\n                    self.currentStatsReport = results;\r\n                    try {\r\n                        if (this._usesPromiseGetStats) {\r\n                            self.processNewStatsReport();\r\n                        } else {\r\n                            self.processStatsReport();\r\n                        }\r\n                    } catch (e) {\r\n                        GlobalOnErrorHandler.callErrorHandler(e);\r\n                        logger.error(`Unsupported key:${e}`, e);\r\n                    }\r\n\r\n                    self.previousStatsReport = self.currentStatsReport;\r\n                },\r\n                error => self.errorCallback(error)\r\n            );\r\n        },\r\n        self.statsIntervalMilis\r\n    );\r\n};\r\n\r\n/**\r\n * Defines a function which (1) is to be used as a StatsCollector method and (2)\r\n * gets the value from a specific report returned by RTCPeerConnection#getStats\r\n * associated with a lib-jitsi-meet browser-agnostic name.\r\n *\r\n * @param {Object.<string,string>} keys the map of LibJitsi browser-agnostic\r\n * names to RTCPeerConnection#getStats browser-specific keys\r\n */\r\nStatsCollector.prototype._defineGetStatValueMethod = function(keys) {\r\n    // Define the function which converts a lib-jitsi-meet browser-asnostic name\r\n    // to a browser-specific key of a report returned by\r\n    // RTCPeerConnection#getStats.\r\n    const keyFromName = function(name) {\r\n        const key = keys[name];\r\n\r\n        if (key) {\r\n            return key;\r\n        }\r\n\r\n        // eslint-disable-next-line no-throw-literal\r\n        throw `The property '${name}' isn't supported!`;\r\n    };\r\n\r\n    // Define the function which retrieves the value from a specific report\r\n    // returned by RTCPeerConnection#getStats associated with a given\r\n    // browser-specific key.\r\n    let itemStatByKey;\r\n\r\n    switch (this._browserType) {\r\n    case browsers.CHROME:\r\n    case browsers.OPERA:\r\n    case browsers.NWJS:\r\n    case browsers.ELECTRON:\r\n        // TODO What about other types of browser which are based on Chrome such\r\n        // as NW.js? Every time we want to support a new type browser we have to\r\n        // go and add more conditions (here and in multiple other places).\r\n        // Cannot we do a feature detection instead of a browser type check? For\r\n        // example, if item has a stat property of type function, then it's very\r\n        // likely that whoever defined it wanted you to call it in order to\r\n        // retrieve the value associated with a specific key.\r\n        itemStatByKey = (item, key) => item.stat(key);\r\n        break;\r\n    case browsers.REACT_NATIVE:\r\n        // The implementation provided by react-native-webrtc follows the\r\n        // Objective-C WebRTC API: RTCStatsReport has a values property of type\r\n        // Array in which each element is a key-value pair.\r\n        itemStatByKey = function(item, key) {\r\n            let value;\r\n\r\n            item.values.some(pair => {\r\n                if (pair.hasOwnProperty(key)) {\r\n                    value = pair[key];\r\n\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n\r\n            });\r\n\r\n            return value;\r\n        };\r\n        break;\r\n    default:\r\n        itemStatByKey = (item, key) => item[key];\r\n    }\r\n\r\n    // Compose the 2 functions defined above to get a function which retrieves\r\n    // the value from a specific report returned by RTCPeerConnection#getStats\r\n    // associated with a specific lib-jitsi-meet browser-agnostic name.\r\n    return (item, name) => itemStatByKey(item, keyFromName(name));\r\n};\r\n\r\n/**\r\n * Obtains a stat value from given stat and converts it to a non-negative\r\n * number. If the value is either invalid or negative then 0 will be returned.\r\n * @param report\r\n * @param {string} name\r\n * @return {number}\r\n * @private\r\n */\r\nStatsCollector.prototype.getNonNegativeStat = function(report, name) {\r\n    let value = this._getStatValue(report, name);\r\n\r\n    if (typeof value !== 'number') {\r\n        value = Number(value);\r\n    }\r\n\r\n    if (isNaN(value)) {\r\n        return 0;\r\n    }\r\n\r\n    return Math.max(0, value);\r\n};\r\n\r\n/* eslint-disable no-continue */\r\n\r\n/**\r\n * Stats processing logic.\r\n */\r\nStatsCollector.prototype.processStatsReport = function() {\r\n    if (!this.previousStatsReport) {\r\n        return;\r\n    }\r\n\r\n    const getStatValue = this._getStatValue;\r\n    const byteSentStats = {};\r\n\r\n    for (const idx in this.currentStatsReport) {\r\n        if (!this.currentStatsReport.hasOwnProperty(idx)) {\r\n            continue;\r\n        }\r\n        const now = this.currentStatsReport[idx];\r\n\r\n        // The browser API may return \"undefined\" values in the array\r\n        if (!now) {\r\n            continue;\r\n        }\r\n\r\n        try {\r\n            const receiveBandwidth = getStatValue(now, 'receiveBandwidth');\r\n            const sendBandwidth = getStatValue(now, 'sendBandwidth');\r\n\r\n            if (receiveBandwidth || sendBandwidth) {\r\n                this.conferenceStats.bandwidth = {\r\n                    'download': Math.round(receiveBandwidth / 1000),\r\n                    'upload': Math.round(sendBandwidth / 1000)\r\n                };\r\n            }\r\n        } catch (e) { /* not supported*/ }\r\n\r\n        if (now.type === 'googCandidatePair') {\r\n            let active, ip, localCandidateType, localip,\r\n                remoteCandidateType, rtt, type;\r\n\r\n            try {\r\n                active = getStatValue(now, 'activeConnection');\r\n                if (!active) {\r\n                    continue;\r\n                }\r\n\r\n                ip = getStatValue(now, 'remoteAddress');\r\n                type = getStatValue(now, 'transportType');\r\n                localip = getStatValue(now, 'localAddress');\r\n                localCandidateType = getStatValue(now, 'localCandidateType');\r\n                remoteCandidateType = getStatValue(now, 'remoteCandidateType');\r\n                rtt = this.getNonNegativeStat(now, 'currentRoundTripTime');\r\n            } catch (e) { /* not supported*/ }\r\n            if (!ip || !type || !localip || active !== 'true') {\r\n                continue;\r\n            }\r\n\r\n            // Save the address unless it has been saved already.\r\n            const conferenceStatsTransport = this.conferenceStats.transport;\r\n\r\n            if (!conferenceStatsTransport.some(\r\n                    t =>\r\n                        t.ip === ip\r\n                            && t.type === type\r\n                            && t.localip === localip)) {\r\n                conferenceStatsTransport.push({\r\n                    ip,\r\n                    type,\r\n                    localip,\r\n                    p2p: this.peerconnection.isP2P,\r\n                    localCandidateType,\r\n                    remoteCandidateType,\r\n                    rtt\r\n                });\r\n            }\r\n            continue;\r\n        }\r\n\r\n        if (now.type === 'candidatepair') {\r\n            // we need succeeded and selected pairs only\r\n            if (now.state !== 'succeeded' || !now.selected) {\r\n                continue;\r\n            }\r\n\r\n            const local = this.currentStatsReport[now.localCandidateId];\r\n            const remote = this.currentStatsReport[now.remoteCandidateId];\r\n\r\n            this.conferenceStats.transport.push({\r\n                ip: `${remote.ipAddress}:${remote.portNumber}`,\r\n                type: local.transport,\r\n                localip: `${local.ipAddress}:${local.portNumber}`,\r\n                p2p: this.peerconnection.isP2P,\r\n                localCandidateType: local.candidateType,\r\n                remoteCandidateType: remote.candidateType\r\n            });\r\n        }\r\n\r\n        if (now.type !== 'ssrc' && now.type !== 'outboundrtp'\r\n            && now.type !== 'inboundrtp' && now.type !== 'track') {\r\n            continue;\r\n        }\r\n\r\n        const before = this.previousStatsReport[idx];\r\n        let ssrc = this.getNonNegativeStat(now, 'ssrc');\r\n\r\n        // If type=\"track\", take the first SSRC from ssrcIds.\r\n        if (now.type === 'track' && Array.isArray(now.ssrcIds)) {\r\n            ssrc = Number(now.ssrcIds[0]);\r\n        }\r\n\r\n        if (!before || !ssrc) {\r\n            continue;\r\n        }\r\n\r\n        // isRemote is available only in FF and is ignored in case of chrome\r\n        // according to the spec\r\n        // https://www.w3.org/TR/webrtc-stats/#dom-rtcrtpstreamstats-isremote\r\n        // when isRemote is true indicates that the measurements were done at\r\n        // the remote endpoint and reported in an RTCP RR/XR.\r\n        // Fixes a problem where we are calculating local stats wrong adding\r\n        // the sent bytes to the local download bitrate.\r\n        // In new W3 stats spec, type=\"track\" has a remoteSource boolean\r\n        // property.\r\n        if (now.isRemote === true || now.remoteSource === true) {\r\n            continue;\r\n        }\r\n\r\n        let ssrcStats = this.ssrc2stats.get(ssrc);\r\n\r\n        if (!ssrcStats) {\r\n            ssrcStats = new SsrcStats();\r\n            this.ssrc2stats.set(ssrc, ssrcStats);\r\n        }\r\n\r\n        let isDownloadStream = true;\r\n        let key = 'packetsReceived';\r\n        let packetsNow = getStatValue(now, key);\r\n\r\n        if (typeof packetsNow === 'undefined'\r\n            || packetsNow === null || packetsNow === '') {\r\n            isDownloadStream = false;\r\n            key = 'packetsSent';\r\n            packetsNow = getStatValue(now, key);\r\n            if (typeof packetsNow === 'undefined' || packetsNow === null) {\r\n                logger.warn('No packetsReceived nor packetsSent stat found');\r\n            }\r\n        }\r\n        if (!packetsNow || packetsNow < 0) {\r\n            packetsNow = 0;\r\n        }\r\n\r\n        const packetsBefore = this.getNonNegativeStat(before, key);\r\n        const packetsDiff = Math.max(0, packetsNow - packetsBefore);\r\n\r\n        const packetsLostNow\r\n            = this.getNonNegativeStat(now, 'packetsLost');\r\n        const packetsLostBefore\r\n            = this.getNonNegativeStat(before, 'packetsLost');\r\n        const packetsLostDiff = Math.max(0, packetsLostNow - packetsLostBefore);\r\n\r\n        ssrcStats.setLoss({\r\n            packetsTotal: packetsDiff + packetsLostDiff,\r\n            packetsLost: packetsLostDiff,\r\n            isDownloadStream\r\n        });\r\n\r\n        const bytesReceivedNow\r\n            = this.getNonNegativeStat(now, 'bytesReceived');\r\n        const bytesReceivedBefore\r\n            = this.getNonNegativeStat(before, 'bytesReceived');\r\n        const bytesReceived\r\n            = Math.max(0, bytesReceivedNow - bytesReceivedBefore);\r\n\r\n        let bytesSent = 0;\r\n\r\n        // TODO: clean this mess up!\r\n        let nowBytesTransmitted = getStatValue(now, 'bytesSent');\r\n\r\n        if (typeof nowBytesTransmitted === 'number'\r\n            || typeof nowBytesTransmitted === 'string') {\r\n            nowBytesTransmitted = Number(nowBytesTransmitted);\r\n            if (!isNaN(nowBytesTransmitted)) {\r\n                byteSentStats[ssrc] = nowBytesTransmitted;\r\n                if (nowBytesTransmitted > 0) {\r\n                    bytesSent = nowBytesTransmitted\r\n                        - getStatValue(before, 'bytesSent');\r\n                }\r\n            }\r\n        }\r\n        bytesSent = Math.max(0, bytesSent);\r\n\r\n        const timeMs = now.timestamp - before.timestamp;\r\n        let bitrateReceivedKbps = 0, bitrateSentKbps = 0;\r\n\r\n        if (timeMs > 0) {\r\n            // TODO is there any reason to round here?\r\n            bitrateReceivedKbps = Math.round((bytesReceived * 8) / timeMs);\r\n            bitrateSentKbps = Math.round((bytesSent * 8) / timeMs);\r\n        }\r\n\r\n        ssrcStats.addBitrate({\r\n            'download': bitrateReceivedKbps,\r\n            'upload': bitrateSentKbps\r\n        });\r\n\r\n        const resolution = {\r\n            height: null,\r\n            width: null\r\n        };\r\n\r\n        try {\r\n            let height, width;\r\n\r\n            if ((height = getStatValue(now, 'googFrameHeightReceived'))\r\n                && (width = getStatValue(now, 'googFrameWidthReceived'))) {\r\n                resolution.height = height;\r\n                resolution.width = width;\r\n            } else if ((height = getStatValue(now, 'googFrameHeightSent'))\r\n                && (width = getStatValue(now, 'googFrameWidthSent'))) {\r\n                resolution.height = height;\r\n                resolution.width = width;\r\n            }\r\n        } catch (e) { /* not supported*/ }\r\n\r\n        // Tries to get frame rate\r\n        let frameRate;\r\n\r\n        try {\r\n            frameRate = getStatValue(now, 'googFrameRateReceived')\r\n                || getStatValue(now, 'googFrameRateSent') || 0;\r\n        } catch (e) {\r\n            // if it fails with previous properties(chrome),\r\n            // let's try with another one (FF)\r\n            try {\r\n                frameRate = this.getNonNegativeStat(now, 'framerateMean');\r\n            } catch (err) { /* not supported*/ }\r\n        }\r\n        ssrcStats.setFramerate(Math.round(frameRate || 0));\r\n\r\n        if (resolution.height && resolution.width) {\r\n            ssrcStats.setResolution(resolution);\r\n        } else {\r\n            ssrcStats.setResolution(null);\r\n        }\r\n    }\r\n\r\n    this.eventEmitter.emit(\r\n        StatisticsEvents.BYTE_SENT_STATS, this.peerconnection, byteSentStats);\r\n\r\n    this._processAndEmitReport();\r\n};\r\n\r\n/**\r\n *\r\n */\r\nStatsCollector.prototype._processAndEmitReport = function() {\r\n    // process stats\r\n    const totalPackets = {\r\n        download: 0,\r\n        upload: 0\r\n    };\r\n    const lostPackets = {\r\n        download: 0,\r\n        upload: 0\r\n    };\r\n    let bitrateDownload = 0;\r\n    let bitrateUpload = 0;\r\n    const resolutions = {};\r\n    const framerates = {};\r\n    let audioBitrateDownload = 0;\r\n    let audioBitrateUpload = 0;\r\n    let videoBitrateDownload = 0;\r\n    let videoBitrateUpload = 0;\r\n\r\n    for (const [ ssrc, ssrcStats ] of this.ssrc2stats) {\r\n        // process packet loss stats\r\n        const loss = ssrcStats.loss;\r\n        const type = loss.isDownloadStream ? 'download' : 'upload';\r\n\r\n        totalPackets[type] += loss.packetsTotal;\r\n        lostPackets[type] += loss.packetsLost;\r\n\r\n        // process bitrate stats\r\n        bitrateDownload += ssrcStats.bitrate.download;\r\n        bitrateUpload += ssrcStats.bitrate.upload;\r\n\r\n        // collect resolutions and framerates\r\n        const track = this.peerconnection.getTrackBySSRC(ssrc);\r\n\r\n        if (track) {\r\n            if (track.isAudioTrack()) {\r\n                audioBitrateDownload += ssrcStats.bitrate.download;\r\n                audioBitrateUpload += ssrcStats.bitrate.upload;\r\n            } else {\r\n                videoBitrateDownload += ssrcStats.bitrate.download;\r\n                videoBitrateUpload += ssrcStats.bitrate.upload;\r\n            }\r\n\r\n            const participantId = track.getParticipantId();\r\n\r\n            if (participantId) {\r\n                const resolution = ssrcStats.resolution;\r\n\r\n                if (resolution.width\r\n                        && resolution.height\r\n                        && resolution.width !== -1\r\n                        && resolution.height !== -1) {\r\n                    const userResolutions = resolutions[participantId] || {};\r\n\r\n                    userResolutions[ssrc] = resolution;\r\n                    resolutions[participantId] = userResolutions;\r\n                }\r\n                if (ssrcStats.framerate !== 0) {\r\n                    const userFramerates = framerates[participantId] || {};\r\n\r\n                    userFramerates[ssrc] = ssrcStats.framerate;\r\n                    framerates[participantId] = userFramerates;\r\n                }\r\n            } else {\r\n                logger.error(`No participant ID returned by ${track}`);\r\n            }\r\n        }\r\n\r\n        ssrcStats.resetBitrate();\r\n    }\r\n\r\n    this.conferenceStats.bitrate = {\r\n        'upload': bitrateUpload,\r\n        'download': bitrateDownload\r\n    };\r\n\r\n    this.conferenceStats.bitrate.audio = {\r\n        'upload': audioBitrateUpload,\r\n        'download': audioBitrateDownload\r\n    };\r\n\r\n    this.conferenceStats.bitrate.video = {\r\n        'upload': videoBitrateUpload,\r\n        'download': videoBitrateDownload\r\n    };\r\n\r\n    this.conferenceStats.packetLoss = {\r\n        total:\r\n            calculatePacketLoss(\r\n                lostPackets.download + lostPackets.upload,\r\n                totalPackets.download + totalPackets.upload),\r\n        download:\r\n            calculatePacketLoss(lostPackets.download, totalPackets.download),\r\n        upload:\r\n            calculatePacketLoss(lostPackets.upload, totalPackets.upload)\r\n    };\r\n\r\n    const avgAudioLevels = {};\r\n    let localAvgAudioLevels;\r\n\r\n    Object.keys(this.audioLevelReportHistory).forEach(ssrc => {\r\n        const { data, isLocal } = this.audioLevelReportHistory[ssrc];\r\n        const avgAudioLevel = data.reduce((sum, currentValue) => sum + currentValue) / data.length;\r\n\r\n        if (isLocal) {\r\n            localAvgAudioLevels = avgAudioLevel;\r\n        } else {\r\n            const track = this.peerconnection.getTrackBySSRC(Number(ssrc));\r\n\r\n            if (track) {\r\n                const participantId = track.getParticipantId();\r\n\r\n                if (participantId) {\r\n                    avgAudioLevels[participantId] = avgAudioLevel;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    this.audioLevelReportHistory = {};\r\n\r\n    this.eventEmitter.emit(\r\n        StatisticsEvents.CONNECTION_STATS,\r\n        this.peerconnection,\r\n        {\r\n            'bandwidth': this.conferenceStats.bandwidth,\r\n            'bitrate': this.conferenceStats.bitrate,\r\n            'packetLoss': this.conferenceStats.packetLoss,\r\n            'resolution': resolutions,\r\n            'framerate': framerates,\r\n            'transport': this.conferenceStats.transport,\r\n            localAvgAudioLevels,\r\n            avgAudioLevels\r\n        });\r\n    this.conferenceStats.transport = [];\r\n};\r\n\r\n/**\r\n * Stats processing logic.\r\n */\r\nStatsCollector.prototype.processAudioLevelReport = function() {\r\n    if (!this.baselineAudioLevelsReport) {\r\n        return;\r\n    }\r\n\r\n    const getStatValue = this._getStatValue;\r\n\r\n    for (const idx in this.currentAudioLevelsReport) {\r\n        if (!this.currentAudioLevelsReport.hasOwnProperty(idx)) {\r\n            continue;\r\n        }\r\n\r\n        const now = this.currentAudioLevelsReport[idx];\r\n\r\n        if (now.type !== 'ssrc' && now.type !== 'track') {\r\n            continue;\r\n        }\r\n\r\n        const before = this.baselineAudioLevelsReport[idx];\r\n        let ssrc = this.getNonNegativeStat(now, 'ssrc');\r\n\r\n        if (!ssrc && Array.isArray(now.ssrcIds)) {\r\n            ssrc = Number(now.ssrcIds[0]);\r\n        }\r\n\r\n        if (!before) {\r\n            logger.warn(`${ssrc} not enough data`);\r\n            continue;\r\n        }\r\n\r\n        if (!ssrc) {\r\n            if ((Date.now() - now.timestamp) < 3000) {\r\n                logger.warn('No ssrc: ');\r\n            }\r\n            continue;\r\n        }\r\n\r\n        // Audio level\r\n        let audioLevel;\r\n\r\n        try {\r\n            audioLevel\r\n                = getStatValue(now, 'audioInputLevel')\r\n                    || getStatValue(now, 'audioOutputLevel');\r\n        } catch (e) { /* not supported*/\r\n            logger.warn('Audio Levels are not available in the statistics.');\r\n            clearInterval(this.audioLevelsIntervalId);\r\n\r\n            return;\r\n        }\r\n\r\n        if (audioLevel) {\r\n            let isLocal;\r\n\r\n            // If type=\"ssrc\" (legacy) check whether they are received packets.\r\n            if (now.type === 'ssrc') {\r\n                isLocal = !getStatValue(now, 'packetsReceived');\r\n\r\n            // If type=\"track\", check remoteSource boolean property.\r\n            } else {\r\n                isLocal = !now.remoteSource;\r\n            }\r\n\r\n            // According to the W3C WebRTC Stats spec, audioLevel should be in\r\n            // 0..1 range (0 == silence). However browsers don't behave that\r\n            // way so we must convert it to 0..1.\r\n            // TODO: Can't find specs about what this value really is, but it\r\n            // seems to vary between 0 and around 32k.\r\n            audioLevel = audioLevel / 32767;\r\n\r\n            if (!(ssrc in this.audioLevelReportHistory)) {\r\n                this.audioLevelReportHistory[ssrc] = {\r\n                    isLocal,\r\n                    data: []\r\n                };\r\n            }\r\n            this.audioLevelReportHistory[ssrc].data.push(audioLevel);\r\n\r\n            this.eventEmitter.emit(\r\n                StatisticsEvents.AUDIO_LEVEL,\r\n                this.peerconnection,\r\n                ssrc,\r\n                audioLevel,\r\n                isLocal);\r\n        }\r\n    }\r\n};\r\n\r\n/* eslint-enable no-continue */\r\n\r\n/**\r\n * New promised based getStats report processing.\r\n * Tested with chrome, firefox and safari. Not switching it on for chrome as\r\n * frameRate stat is missing and calculating it using framesSent,\r\n * gives values double the values seen in webrtc-internals.\r\n * https://w3c.github.io/webrtc-stats/\r\n */\r\n\r\n/**\r\n * Defines a function which (1) is to be used as a StatsCollector method and (2)\r\n * gets the value from a specific report returned by RTCPeerConnection#getStats\r\n * associated with a lib-jitsi-meet browser-agnostic name in case of using\r\n * Promised based getStats.\r\n *\r\n * @param {Object.<string,string>} keys the map of LibJitsi browser-agnostic\r\n * names to RTCPeerConnection#getStats browser-specific keys\r\n */\r\nStatsCollector.prototype._defineNewGetStatValueMethod = function(keys) {\r\n    // Define the function which converts a lib-jitsi-meet browser-asnostic name\r\n    // to a browser-specific key of a report returned by\r\n    // RTCPeerConnection#getStats.\r\n    const keyFromName = function(name) {\r\n        const key = keys[name];\r\n\r\n        if (key) {\r\n            return key;\r\n        }\r\n\r\n        // eslint-disable-next-line no-throw-literal\r\n        throw `The property '${name}' isn't supported!`;\r\n    };\r\n\r\n    // Compose the 2 functions defined above to get a function which retrieves\r\n    // the value from a specific report returned by RTCPeerConnection#getStats\r\n    // associated with a specific lib-jitsi-meet browser-agnostic name.\r\n    return (item, name) => item[keyFromName(name)];\r\n};\r\n\r\n/**\r\n * Converts the value to a non-negative number.\r\n * If the value is either invalid or negative then 0 will be returned.\r\n * @param {*} v\r\n * @return {number}\r\n * @private\r\n */\r\nStatsCollector.prototype.getNonNegativeValue = function(v) {\r\n    let value = v;\r\n\r\n    if (typeof value !== 'number') {\r\n        value = Number(value);\r\n    }\r\n\r\n    if (isNaN(value)) {\r\n        return 0;\r\n    }\r\n\r\n    return Math.max(0, value);\r\n};\r\n\r\n/**\r\n * Calculates bitrate between before and now using a supplied field name and its\r\n * value in the stats.\r\n * @param {RTCInboundRtpStreamStats|RTCSentRtpStreamStats} now the current stats\r\n * @param {RTCInboundRtpStreamStats|RTCSentRtpStreamStats} before the\r\n * previous stats.\r\n * @param fieldName the field to use for calculations.\r\n * @return {number} the calculated bitrate between now and before.\r\n * @private\r\n */\r\nStatsCollector.prototype._calculateBitrate = function(now, before, fieldName) {\r\n    const bytesNow = this.getNonNegativeValue(now[fieldName]);\r\n    const bytesBefore = this.getNonNegativeValue(before[fieldName]);\r\n    const bytesProcessed = Math.max(0, bytesNow - bytesBefore);\r\n\r\n    const timeMs = now.timestamp - before.timestamp;\r\n    let bitrateKbps = 0;\r\n\r\n    if (timeMs > 0) {\r\n        // TODO is there any reason to round here?\r\n        bitrateKbps = Math.round((bytesProcessed * 8) / timeMs);\r\n    }\r\n\r\n    return bitrateKbps;\r\n};\r\n\r\n/**\r\n * Stats processing new getStats logic.\r\n */\r\nStatsCollector.prototype.processNewStatsReport = function() {\r\n    if (!this.previousStatsReport) {\r\n        return;\r\n    }\r\n\r\n    const getStatValue = this._getStatValue;\r\n    const byteSentStats = {};\r\n\r\n    this.currentStatsReport.forEach(now => {\r\n\r\n        // RTCIceCandidatePairStats\r\n        // https://w3c.github.io/webrtc-stats/#candidatepair-dict*\r\n        if (now.type === 'candidate-pair'\r\n            && now.nominated\r\n            && now.state === 'succeeded') {\r\n\r\n            const availableIncomingBitrate = now.availableIncomingBitrate;\r\n            const availableOutgoingBitrate = now.availableOutgoingBitrate;\r\n\r\n            if (availableIncomingBitrate || availableOutgoingBitrate) {\r\n                this.conferenceStats.bandwidth = {\r\n                    'download': Math.round(availableIncomingBitrate / 1000),\r\n                    'upload': Math.round(availableOutgoingBitrate / 1000)\r\n                };\r\n            }\r\n\r\n            const remoteUsedCandidate\r\n                = this.currentStatsReport.get(now.remoteCandidateId);\r\n            const localUsedCandidate\r\n                = this.currentStatsReport.get(now.localCandidateId);\r\n\r\n            // RTCIceCandidateStats\r\n            // https://w3c.github.io/webrtc-stats/#icecandidate-dict*\r\n            // safari currently does not provide ice candidates in stats\r\n            if (remoteUsedCandidate && localUsedCandidate) {\r\n                const remoteIpAddress = getStatValue(remoteUsedCandidate, 'ip');\r\n                const remotePort = getStatValue(remoteUsedCandidate, 'port');\r\n                const ip = `${remoteIpAddress}:${remotePort}`;\r\n\r\n                const localIpAddress = getStatValue(localUsedCandidate, 'ip');\r\n                const localPort = getStatValue(localUsedCandidate, 'port');\r\n\r\n                const localIp = `${localIpAddress}:${localPort}`;\r\n                const type = getStatValue(remoteUsedCandidate, 'protocol');\r\n\r\n                // Save the address unless it has been saved already.\r\n                const conferenceStatsTransport = this.conferenceStats.transport;\r\n\r\n                if (!conferenceStatsTransport.some(\r\n                        t =>\r\n                            t.ip === ip\r\n                            && t.type === type\r\n                            && t.localip === localIp)) {\r\n                    conferenceStatsTransport.push({\r\n                        ip,\r\n                        type,\r\n                        localIp,\r\n                        p2p: this.peerconnection.isP2P,\r\n                        localCandidateType: localUsedCandidate.candidateType,\r\n                        remoteCandidateType: remoteUsedCandidate.candidateType,\r\n                        networkType: localUsedCandidate.networkType,\r\n                        rtt: now.currentRoundTripTime * 1000\r\n                    });\r\n                }\r\n            }\r\n\r\n        // RTCReceivedRtpStreamStats\r\n        // https://w3c.github.io/webrtc-stats/#receivedrtpstats-dict*\r\n        // RTCSentRtpStreamStats\r\n        // https://w3c.github.io/webrtc-stats/#sentrtpstats-dict*\r\n        } else if (now.type === 'inbound-rtp' || now.type === 'outbound-rtp') {\r\n            const before = this.previousStatsReport.get(now.id);\r\n            const ssrc = this.getNonNegativeValue(now.ssrc);\r\n\r\n            if (!before || !ssrc) {\r\n                return;\r\n            }\r\n\r\n            let ssrcStats = this.ssrc2stats.get(ssrc);\r\n\r\n            if (!ssrcStats) {\r\n                ssrcStats = new SsrcStats();\r\n                this.ssrc2stats.set(ssrc, ssrcStats);\r\n            }\r\n\r\n            let isDownloadStream = true;\r\n            let key = 'packetsReceived';\r\n\r\n            if (now.type === 'outbound-rtp') {\r\n                isDownloadStream = false;\r\n                key = 'packetsSent';\r\n            }\r\n\r\n            let packetsNow = now[key];\r\n\r\n            if (!packetsNow || packetsNow < 0) {\r\n                packetsNow = 0;\r\n            }\r\n\r\n            const packetsBefore = this.getNonNegativeValue(before[key]);\r\n            const packetsDiff = Math.max(0, packetsNow - packetsBefore);\r\n\r\n            const packetsLostNow\r\n                = this.getNonNegativeValue(now.packetsLost);\r\n            const packetsLostBefore\r\n                = this.getNonNegativeValue(before.packetsLost);\r\n            const packetsLostDiff\r\n                = Math.max(0, packetsLostNow - packetsLostBefore);\r\n\r\n            ssrcStats.setLoss({\r\n                packetsTotal: packetsDiff + packetsLostDiff,\r\n                packetsLost: packetsLostDiff,\r\n                isDownloadStream\r\n            });\r\n\r\n            if (now.type === 'inbound-rtp') {\r\n\r\n                ssrcStats.addBitrate({\r\n                    'download': this._calculateBitrate(\r\n                                    now, before, 'bytesReceived'),\r\n                    'upload': 0\r\n                });\r\n\r\n                // RTCInboundRtpStreamStats\r\n                // https://w3c.github.io/webrtc-stats/#inboundrtpstats-dict*\r\n                // TODO: can we use framesDecoded for frame rate, available\r\n                // in chrome\r\n            } else {\r\n                byteSentStats[ssrc] = this.getNonNegativeValue(now.bytesSent);\r\n                ssrcStats.addBitrate({\r\n                    'download': 0,\r\n                    'upload': this._calculateBitrate(\r\n                                now, before, 'bytesSent')\r\n                });\r\n\r\n                // RTCOutboundRtpStreamStats\r\n                // https://w3c.github.io/webrtc-stats/#outboundrtpstats-dict*\r\n                // TODO: can we use framesEncoded for frame rate, available\r\n                // in chrome\r\n            }\r\n\r\n            // FF has framerateMean out of spec\r\n            const framerateMean = now.framerateMean;\r\n\r\n            if (framerateMean) {\r\n                ssrcStats.setFramerate(Math.round(framerateMean || 0));\r\n            }\r\n\r\n        // track for resolution\r\n        // RTCVideoHandlerStats\r\n        // https://w3c.github.io/webrtc-stats/#vststats-dict*\r\n        // RTCMediaHandlerStats\r\n        // https://w3c.github.io/webrtc-stats/#mststats-dict*\r\n        } else if (now.type === 'track') {\r\n\r\n            const resolution = {\r\n                height: now.frameHeight,\r\n                width: now.frameWidth\r\n            };\r\n\r\n            // Tries to get frame rate\r\n            let frameRate = now.framesPerSecond;\r\n\r\n            if (!frameRate) {\r\n                // we need to calculate it\r\n                const before = this.previousStatsReport.get(now.id);\r\n\r\n                if (before) {\r\n                    const timeMs = now.timestamp - before.timestamp;\r\n\r\n                    if (timeMs > 0 && now.framesSent) {\r\n                        const numberOfFramesSinceBefore\r\n                            = now.framesSent - before.framesSent;\r\n\r\n                        frameRate = (numberOfFramesSinceBefore / timeMs) * 1000;\r\n                    }\r\n                }\r\n\r\n                if (!frameRate) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const trackIdentifier = now.trackIdentifier;\r\n            const ssrc = this.peerconnection.getSsrcByTrackId(trackIdentifier);\r\n\r\n            if (!ssrc) {\r\n                return;\r\n            }\r\n            let ssrcStats = this.ssrc2stats.get(ssrc);\r\n\r\n            if (!ssrcStats) {\r\n                ssrcStats = new SsrcStats();\r\n                this.ssrc2stats.set(ssrc, ssrcStats);\r\n            }\r\n            ssrcStats.setFramerate(Math.round(frameRate || 0));\r\n\r\n            if (resolution.height && resolution.width) {\r\n                ssrcStats.setResolution(resolution);\r\n            } else {\r\n                ssrcStats.setResolution(null);\r\n            }\r\n        }\r\n    });\r\n\r\n    this.eventEmitter.emit(\r\n        StatisticsEvents.BYTE_SENT_STATS, this.peerconnection, byteSentStats);\r\n\r\n    this._processAndEmitReport();\r\n};\r\n\r\n/**\r\n * Stats processing logic.\r\n */\r\nStatsCollector.prototype.processNewAudioLevelReport = function() {\r\n    if (!this.baselineAudioLevelsReport) {\r\n        return;\r\n    }\r\n\r\n    this.currentAudioLevelsReport.forEach(now => {\r\n        if (now.type !== 'track') {\r\n            return;\r\n        }\r\n\r\n        // Audio level\r\n        const audioLevel = now.audioLevel;\r\n\r\n        if (!audioLevel) {\r\n            return;\r\n        }\r\n\r\n        const trackIdentifier = now.trackIdentifier;\r\n        const ssrc = this.peerconnection.getSsrcByTrackId(trackIdentifier);\r\n\r\n        if (ssrc) {\r\n            const isLocal\r\n                = ssrc === this.peerconnection.getLocalSSRC(\r\n                this.peerconnection.getLocalTracks(MediaType.AUDIO));\r\n\r\n            this.eventEmitter.emit(\r\n                StatisticsEvents.AUDIO_LEVEL,\r\n                this.peerconnection,\r\n                ssrc,\r\n                audioLevel,\r\n                isLocal);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * End new promised based getStats processing methods.\r\n */\r\n","/**\r\n * A model for keeping track of each user's total\r\n * time as a dominant speaker. The model also\r\n * keeps track of the user's last known name\r\n * in case the user has left the meeting,\r\n * which is also tracked.\r\n */\r\nclass SpeakerStats {\r\n    /**\r\n     * Initializes a new SpeakerStats instance.\r\n     *\r\n     * @constructor\r\n     * @param {string} userId - The id of the user being tracked.\r\n     * @param {string} displayName - The name of the user being tracked.\r\n     * @param {boolean} isLocalStats - True if the stats model tracks\r\n     * the local user.\r\n     * @returns {void}\r\n     */\r\n    constructor(userId, displayName, isLocalStats) {\r\n        this._userId = userId;\r\n        this.setDisplayName(displayName);\r\n        this._isLocalStats = isLocalStats || false;\r\n        this.setDominantSpeaker(false);\r\n        this.totalDominantSpeakerTime = 0;\r\n        this._dominantSpeakerStart = 0;\r\n        this._hasLeft = false;\r\n    }\r\n\r\n    /**\r\n     * Get the user id being tracked.\r\n     *\r\n     * @returns {string} The user id.\r\n     */\r\n    getUserId() {\r\n        return this._userId;\r\n    }\r\n\r\n    /**\r\n     * Get the name of the user being tracked.\r\n     *\r\n     * @returns {string} The user name.\r\n     */\r\n    getDisplayName() {\r\n        return this.displayName;\r\n    }\r\n\r\n    /**\r\n     * Updates the last known name of the user being tracked.\r\n     *\r\n     * @param {string} - The user name.\r\n     * @returns {void}\r\n     */\r\n    setDisplayName(newName) {\r\n        this.displayName = newName;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the stats are tracking the local user.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isLocalStats() {\r\n        return this._isLocalStats;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the tracked user is currently a dominant speaker.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isDominantSpeaker() {\r\n        return this._dominantSpeakerStart > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the tracked user is currently a dominant speaker.\r\n     *\r\n     * @param {boolean} - If true, the user will being accumulating time\r\n     * as dominant speaker. If false, the user will not accumulate time\r\n     * and will record any time accumulated since starting as dominant speaker.\r\n     * @returns {void}\r\n     */\r\n    setDominantSpeaker(isNowDominantSpeaker) {\r\n        if (!this.isDominantSpeaker() && isNowDominantSpeaker) {\r\n            this._dominantSpeakerStart = Date.now();\r\n        } else if (this.isDominantSpeaker() && !isNowDominantSpeaker) {\r\n            const now = Date.now();\r\n            const timeElapsed = now - this._dominantSpeakerStart;\r\n\r\n            this.totalDominantSpeakerTime += timeElapsed;\r\n            this._dominantSpeakerStart = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get how long the tracked user has been dominant speaker.\r\n     *\r\n     * @returns {number} - The speaker time in milliseconds.\r\n     */\r\n    getTotalDominantSpeakerTime() {\r\n        let total = this.totalDominantSpeakerTime;\r\n\r\n        if (this.isDominantSpeaker()) {\r\n            total += Date.now() - this._dominantSpeakerStart;\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    /**\r\n     * Get whether or not the user is still in the meeting.\r\n     *\r\n     * @returns {boolean} True if the user is no longer in the meeting.\r\n     */\r\n    hasLeft() {\r\n        return this._hasLeft;\r\n    }\r\n\r\n    /**\r\n     * Set the user as having left the meeting.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    markAsHasLeft() {\r\n        this._hasLeft = true;\r\n        this.setDominantSpeaker(false);\r\n    }\r\n}\r\n\r\nmodule.exports = SpeakerStats;\r\n","import * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\r\nimport SpeakerStats from './SpeakerStats';\r\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\r\n\r\n/**\r\n * A collection for tracking speaker stats. Attaches listeners\r\n * to the conference to automatically update on tracked events.\r\n */\r\nexport default class SpeakerStatsCollector {\r\n    /**\r\n     * Initializes a new SpeakerStatsCollector instance.\r\n     *\r\n     * @constructor\r\n     * @param {JitsiConference} conference - The conference to track.\r\n     * @returns {void}\r\n     */\r\n    constructor(conference) {\r\n        this.stats = {\r\n            users: {\r\n\r\n                // userId: SpeakerStats\r\n            },\r\n            dominantSpeakerId: null\r\n        };\r\n\r\n        const userId = conference.myUserId();\r\n\r\n        this.stats.users[userId] = new SpeakerStats(userId, null, true);\r\n        this.conference = conference;\r\n\r\n        conference.addEventListener(\r\n            JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED,\r\n            this._onDominantSpeaker.bind(this));\r\n        conference.addEventListener(\r\n            JitsiConferenceEvents.USER_JOINED,\r\n            this._onUserJoin.bind(this));\r\n        conference.addEventListener(\r\n            JitsiConferenceEvents.USER_LEFT,\r\n            this._onUserLeave.bind(this));\r\n        conference.addEventListener(\r\n            JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\r\n            this._onDisplayNameChange.bind(this));\r\n        if (conference.xmpp) {\r\n            conference.xmpp.addListener(\r\n                XMPPEvents.SPEAKER_STATS_RECEIVED,\r\n                this._updateStats.bind(this));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reacts to dominant speaker change events by changing its speaker stats\r\n     * models to reflect the current dominant speaker.\r\n     *\r\n     * @param {string} dominantSpeakerId - The user id of the new\r\n     * dominant speaker.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    _onDominantSpeaker(dominantSpeakerId) {\r\n        const oldDominantSpeaker\r\n            = this.stats.users[this.stats.dominantSpeakerId];\r\n        const newDominantSpeaker = this.stats.users[dominantSpeakerId];\r\n\r\n        oldDominantSpeaker && oldDominantSpeaker.setDominantSpeaker(false);\r\n        newDominantSpeaker && newDominantSpeaker.setDominantSpeaker(true);\r\n        this.stats.dominantSpeakerId = dominantSpeakerId;\r\n    }\r\n\r\n    /**\r\n     * Reacts to user join events by creating a new SpeakerStats model.\r\n     *\r\n     * @param {string} userId - The user id of the new user.\r\n     * @param {JitsiParticipant} - The JitsiParticipant model for the new user.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    _onUserJoin(userId, participant) {\r\n        if (participant.isHidden()) {\r\n            return;\r\n        }\r\n\r\n        if (!this.stats.users[userId]) {\r\n            this.stats.users[userId] = new SpeakerStats(userId, participant.getDisplayName());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reacts to user leave events by updating the associated user's\r\n     * SpeakerStats model.\r\n     *\r\n     * @param {string} userId - The user id of the user that left.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    _onUserLeave(userId) {\r\n        const savedUser = this.stats.users[userId];\r\n\r\n        if (savedUser) {\r\n            savedUser.markAsHasLeft();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reacts to user name change events by updating the last known name\r\n     * tracked in the associated SpeakerStats model.\r\n     *\r\n     * @param {string} userId - The user id of the user that left.\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    _onDisplayNameChange(userId, newName) {\r\n        const savedUser = this.stats.users[userId];\r\n\r\n        if (savedUser) {\r\n            savedUser.setDisplayName(newName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return a copy of the tracked SpeakerStats models.\r\n     *\r\n     * @returns {Object} The keys are the user ids and the values are the\r\n     * associated user's SpeakerStats model.\r\n     * @private\r\n     */\r\n    getStats() {\r\n        return this.stats.users;\r\n    }\r\n\r\n    /**\r\n     * Updates of the current stats is requested, passing the new values.\r\n     *\r\n     * @param {Object} newStats - The new values used to update current one.\r\n     * @private\r\n     */\r\n    _updateStats(newStats) {\r\n        for (const userId in newStats) { // eslint-disable-line guard-for-in\r\n            let speakerStatsToUpdate;\r\n            const newParticipant = this.conference.getParticipantById(userId);\r\n\r\n            // we want to ignore hidden participants\r\n            if (!newParticipant || !newParticipant.isHidden()) {\r\n                if (this.stats.users[userId]) {\r\n                    speakerStatsToUpdate = this.stats.users[userId];\r\n\r\n                    if (!speakerStatsToUpdate.getDisplayName()) {\r\n                        speakerStatsToUpdate\r\n                            .setDisplayName(newStats[userId].displayName);\r\n                    }\r\n                } else {\r\n                    speakerStatsToUpdate = new SpeakerStats(\r\n                        userId, newStats[userId].displayName);\r\n                    this.stats.users[userId] = speakerStatsToUpdate;\r\n                    speakerStatsToUpdate.markAsHasLeft();\r\n                }\r\n            }\r\n\r\n            speakerStatsToUpdate.totalDominantSpeakerTime\r\n                = newStats[userId].totalDominantSpeakerTime;\r\n        }\r\n    }\r\n}\r\n","import EventEmitter from 'events';\r\n\r\nimport { FEEDBACK } from '../../service/statistics/AnalyticsEvents';\r\nimport analytics from './AnalyticsAdapter';\r\nimport CallStats from './CallStats';\r\nimport LocalStats from './LocalStatsCollector';\r\nimport RTPStats from './RTPStatsCollector';\r\n\r\nimport browser from '../browser';\r\nimport ScriptUtil from '../util/ScriptUtil';\r\nimport JitsiTrackError from '../../JitsiTrackError';\r\nimport * as StatisticsEvents from '../../service/statistics/Events';\r\n\r\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\r\n\r\n/**\r\n * Stores all active {@link Statistics} instances.\r\n * @type {Set<Statistics>}\r\n */\r\nlet _instances;\r\n\r\n/**\r\n * True if callstats API is loaded\r\n */\r\nlet isCallstatsLoaded = false;\r\n\r\n/**\r\n * Since callstats.io is a third party, we cannot guarantee the quality of their\r\n * service. More specifically, their server may take noticeably long time to\r\n * respond. Consequently, it is in our best interest (in the sense that the\r\n * intergration of callstats.io is pretty important to us but not enough to\r\n * allow it to prevent people from joining a conference) to (1) start\r\n * downloading their API as soon as possible and (2) do the downloading\r\n * asynchronously.\r\n *\r\n * @param {StatisticsOptions} options - Options to use for downloading and\r\n * initializing callstats backend.\r\n */\r\nfunction loadCallStatsAPI(options) {\r\n    if (!isCallstatsLoaded) {\r\n        ScriptUtil.loadScript(\r\n            options.customScriptUrl\r\n                || 'https://api.callstats.io/static/callstats-ws.min.js',\r\n            /* async */ true,\r\n            /* prepend */ true,\r\n            /* relativeURL */ undefined,\r\n            /* loadCallback */ () => _initCallStatsBackend(options)\r\n        );\r\n        isCallstatsLoaded = true;\r\n    }\r\n}\r\n\r\n/**\r\n * Initializes Callstats backend.\r\n *\r\n * @param {StatisticsOptions} options - The options to use for initializing\r\n * callstats backend.\r\n * @private\r\n */\r\nfunction _initCallStatsBackend(options) {\r\n    if (CallStats.isBackendInitialized()) {\r\n        return;\r\n    }\r\n\r\n    if (!CallStats.initBackend({\r\n        callStatsID: options.callStatsID,\r\n        callStatsSecret: options.callStatsSecret,\r\n        userName: options.userName,\r\n        aliasName: options.aliasName,\r\n        applicationName: options.applicationName,\r\n        getWiFiStatsMethod: options.getWiFiStatsMethod,\r\n        confID: options.confID\r\n    })) {\r\n        logger.error('CallStats Backend initialization failed bad');\r\n    }\r\n}\r\n\r\n/**\r\n * callstats strips any additional fields from Error except for \"name\", \"stack\",\r\n * \"message\" and \"constraintName\". So we need to bundle additional information\r\n * from JitsiTrackError into error passed to callstats to preserve valuable\r\n * information about error.\r\n * @param {JitsiTrackError} error\r\n */\r\nfunction formatJitsiTrackErrorForCallStats(error) {\r\n    const err = new Error();\r\n\r\n    // Just copy original stack from error\r\n    err.stack = error.stack;\r\n\r\n    // Combine name from error's name plus (possibly) name of original GUM error\r\n    err.name = (error.name || 'Unknown error') + (error.gum && error.gum.error\r\n        && error.gum.error.name ? ` - ${error.gum.error.name}` : '');\r\n\r\n    // Put all constraints into this field. For constraint failed errors we will\r\n    // still know which exactly constraint failed as it will be a part of\r\n    // message.\r\n    err.constraintName = error.gum && error.gum.constraints\r\n        ? JSON.stringify(error.gum.constraints) : '';\r\n\r\n    // Just copy error's message.\r\n    err.message = error.message;\r\n\r\n    return err;\r\n}\r\n\r\n/**\r\n * Init statistic options\r\n * @param options\r\n */\r\nStatistics.init = function(options) {\r\n    Statistics.audioLevelsEnabled = !options.disableAudioLevels;\r\n    if (typeof options.pcStatsInterval === 'number') {\r\n        Statistics.pcStatsInterval = options.pcStatsInterval;\r\n    }\r\n\r\n    if (typeof options.audioLevelsInterval === 'number') {\r\n        Statistics.audioLevelsInterval = options.audioLevelsInterval;\r\n    }\r\n\r\n    Statistics.disableThirdPartyRequests = options.disableThirdPartyRequests;\r\n};\r\n\r\n/**\r\n * The options to configure Statistics.\r\n * @typedef {Object} StatisticsOptions\r\n * @property {string} applicationName - The application name to pass to\r\n * callstats.\r\n * @property {string} aliasName - The alias name to use when initializing callstats.\r\n * @property {string} userName - The user name to use when initializing callstats.\r\n * @property {string} callStatsConfIDNamespace - A namespace to prepend the\r\n * callstats conference ID with.\r\n * @property {string} confID - The callstats conference ID to use.\r\n * @property {string} callStatsID - Callstats credentials - the id.\r\n * @property {string} callStatsSecret - Callstats credentials - the secret.\r\n * @property {string} customScriptUrl - A custom lib url to use when downloading\r\n * callstats library.\r\n * @property {string} roomName - The room name we are currently in.\r\n */\r\n/**\r\n *\r\n * @param xmpp\r\n * @param {StatisticsOptions} options - The options to use creating the\r\n * Statistics.\r\n */\r\nexport default function Statistics(xmpp, options) {\r\n    /**\r\n     * {@link RTPStats} mapped by {@link TraceablePeerConnection.id} which\r\n     * collect RTP statistics for each peerconnection.\r\n     * @type {Map<string, RTPStats}\r\n     */\r\n    this.rtpStatsMap = new Map();\r\n    this.eventEmitter = new EventEmitter();\r\n    this.xmpp = xmpp;\r\n    this.options = options || {};\r\n\r\n    this.callStatsIntegrationEnabled\r\n        = this.options.callStatsID && this.options.callStatsSecret\r\n\r\n            // Even though AppID and AppSecret may be specified, the integration\r\n            // of callstats.io may be disabled because of globally-disallowed\r\n            // requests to any third parties.\r\n            && (Statistics.disableThirdPartyRequests !== true);\r\n    if (this.callStatsIntegrationEnabled) {\r\n        this.callStatsApplicationLogsDisabled\r\n            = this.options.callStatsApplicationLogsDisabled;\r\n        if (browser.isReactNative()) {\r\n            _initCallStatsBackend(this.options);\r\n        } else {\r\n            loadCallStatsAPI(this.options);\r\n        }\r\n\r\n        if (!this.options.confID) {\r\n            logger.warn('\"confID\" is not defined');\r\n        }\r\n\r\n        if (!this.options.callStatsConfIDNamespace) {\r\n            logger.warn('\"callStatsConfIDNamespace\" is not defined');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Stores {@link CallStats} instances for each\r\n     * {@link TraceablePeerConnection} (one {@link CallStats} instance serves\r\n     * one TPC). The instances are mapped by {@link TraceablePeerConnection.id}.\r\n     * @type {Map<number, CallStats>}\r\n     */\r\n    this.callsStatsInstances = new Map();\r\n\r\n    Statistics.instances.add(this);\r\n}\r\nStatistics.audioLevelsEnabled = false;\r\nStatistics.audioLevelsInterval = 200;\r\nStatistics.pcStatsInterval = 10000;\r\nStatistics.disableThirdPartyRequests = false;\r\nStatistics.analytics = analytics;\r\n\r\nObject.defineProperty(Statistics, 'instances', {\r\n    /**\r\n     * Returns the Set holding all active {@link Statistics} instances. Lazily\r\n     * initializes the Set to allow any Set polyfills to be applied.\r\n     * @type {Set<Statistics>}\r\n     */\r\n    get() {\r\n        if (!_instances) {\r\n            _instances = new Set();\r\n        }\r\n\r\n        return _instances;\r\n    }\r\n});\r\n\r\n/**\r\n * Starts collecting RTP stats for given peerconnection.\r\n * @param {TraceablePeerConnection} peerconnection\r\n */\r\nStatistics.prototype.startRemoteStats = function(peerconnection) {\r\n    this.stopRemoteStats(peerconnection);\r\n\r\n    try {\r\n        const rtpStats\r\n            = new RTPStats(\r\n                peerconnection,\r\n                Statistics.audioLevelsInterval,\r\n                Statistics.pcStatsInterval,\r\n                this.eventEmitter);\r\n\r\n        rtpStats.start(Statistics.audioLevelsEnabled);\r\n        this.rtpStatsMap.set(peerconnection.id, rtpStats);\r\n    } catch (e) {\r\n        logger.error(`Failed to start collecting remote statistics: ${e}`);\r\n    }\r\n};\r\n\r\nStatistics.localStats = [];\r\n\r\nStatistics.startLocalStats = function(stream, callback) {\r\n    if (!Statistics.audioLevelsEnabled) {\r\n        return;\r\n    }\r\n    const localStats = new LocalStats(stream, Statistics.audioLevelsInterval,\r\n        callback);\r\n\r\n    this.localStats.push(localStats);\r\n    localStats.start();\r\n};\r\n\r\nStatistics.prototype.addAudioLevelListener = function(listener) {\r\n    if (!Statistics.audioLevelsEnabled) {\r\n        return;\r\n    }\r\n    this.eventEmitter.on(StatisticsEvents.AUDIO_LEVEL, listener);\r\n};\r\n\r\nStatistics.prototype.removeAudioLevelListener = function(listener) {\r\n    if (!Statistics.audioLevelsEnabled) {\r\n        return;\r\n    }\r\n    this.eventEmitter.removeListener(StatisticsEvents.AUDIO_LEVEL, listener);\r\n};\r\n\r\nStatistics.prototype.addBeforeDisposedListener = function(listener) {\r\n    this.eventEmitter.on(StatisticsEvents.BEFORE_DISPOSED, listener);\r\n};\r\n\r\nStatistics.prototype.removeBeforeDisposedListener = function(listener) {\r\n    this.eventEmitter.removeListener(\r\n        StatisticsEvents.BEFORE_DISPOSED, listener);\r\n};\r\n\r\nStatistics.prototype.addConnectionStatsListener = function(listener) {\r\n    this.eventEmitter.on(StatisticsEvents.CONNECTION_STATS, listener);\r\n};\r\n\r\nStatistics.prototype.removeConnectionStatsListener = function(listener) {\r\n    this.eventEmitter.removeListener(\r\n        StatisticsEvents.CONNECTION_STATS,\r\n        listener);\r\n};\r\n\r\nStatistics.prototype.addByteSentStatsListener = function(listener) {\r\n    this.eventEmitter.on(StatisticsEvents.BYTE_SENT_STATS, listener);\r\n};\r\n\r\nStatistics.prototype.removeByteSentStatsListener = function(listener) {\r\n    this.eventEmitter.removeListener(StatisticsEvents.BYTE_SENT_STATS,\r\n        listener);\r\n};\r\n\r\nStatistics.prototype.dispose = function() {\r\n    try {\r\n        // NOTE Before reading this please see the comment in stopCallStats...\r\n        //\r\n        // Here we prevent from emitting the event twice in case it will be\r\n        // triggered from stopCallStats.\r\n        // If the event is triggered from here it means that the logs will not\r\n        // be submitted anyway (because there is no CallStats instance), but\r\n        // we're doing that for the sake of some kind of consistency.\r\n        if (!this.callsStatsInstances.size) {\r\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\r\n        }\r\n        for (const callStats of this.callsStatsInstances.values()) {\r\n            this.stopCallStats(callStats.tpc);\r\n        }\r\n        for (const tpcId of this.rtpStatsMap.keys()) {\r\n            this._stopRemoteStats(tpcId);\r\n        }\r\n        if (this.eventEmitter) {\r\n            this.eventEmitter.removeAllListeners();\r\n        }\r\n    } finally {\r\n        Statistics.instances.delete(this);\r\n    }\r\n};\r\n\r\nStatistics.stopLocalStats = function(stream) {\r\n    if (!Statistics.audioLevelsEnabled) {\r\n        return;\r\n    }\r\n\r\n    for (let i = 0; i < Statistics.localStats.length; i++) {\r\n        if (Statistics.localStats[i].stream === stream) {\r\n            const localStats = Statistics.localStats.splice(i, 1);\r\n\r\n            localStats[0].stop();\r\n            break;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Stops remote RTP stats for given peerconnection ID.\r\n * @param {string} tpcId {@link TraceablePeerConnection.id}\r\n * @private\r\n */\r\nStatistics.prototype._stopRemoteStats = function(tpcId) {\r\n    const rtpStats = this.rtpStatsMap.get(tpcId);\r\n\r\n    if (rtpStats) {\r\n        rtpStats.stop();\r\n        this.rtpStatsMap.delete(tpcId);\r\n    }\r\n};\r\n\r\n/**\r\n * Stops collecting RTP stats for given peerconnection\r\n * @param {TraceablePeerConnection} tpc\r\n */\r\nStatistics.prototype.stopRemoteStats = function(tpc) {\r\n    this._stopRemoteStats(tpc.id);\r\n};\r\n\r\n// CALSTATS METHODS\r\n\r\n/**\r\n * Initializes the callstats.io API.\r\n * @param {TraceablePeerConnection} tpc the {@link TraceablePeerConnection}\r\n * instance for which CalStats will be started.\r\n * @param {string} remoteUserID\r\n */\r\nStatistics.prototype.startCallStats = function(tpc, remoteUserID) {\r\n    if (!this.callStatsIntegrationEnabled) {\r\n        return;\r\n    } else if (this.callsStatsInstances.has(tpc.id)) {\r\n        logger.error('CallStats instance for ${tpc} exists already');\r\n\r\n        return;\r\n    }\r\n\r\n    logger.info(`Starting CallStats for ${tpc}...`);\r\n\r\n    const newInstance\r\n        = new CallStats(\r\n            tpc,\r\n            {\r\n                confID: this._getCallStatsConfID(),\r\n                remoteUserID\r\n            });\r\n\r\n    this.callsStatsInstances.set(tpc.id, newInstance);\r\n};\r\n\r\n/**\r\n * Obtains the list of *all* {@link CallStats} instances collected from every\r\n * valid {@link Statistics} instance.\r\n * @return {Set<CallStats>}\r\n * @private\r\n */\r\nStatistics._getAllCallStatsInstances = function() {\r\n    const csInstances = new Set();\r\n\r\n    for (const statistics of Statistics.instances) {\r\n        for (const cs of statistics.callsStatsInstances.values()) {\r\n            csInstances.add(cs);\r\n        }\r\n    }\r\n\r\n    return csInstances;\r\n};\r\n\r\n/**\r\n * Constructs the CallStats conference ID based on the options currently\r\n * configured in this instance.\r\n * @return {string}\r\n * @private\r\n */\r\nStatistics.prototype._getCallStatsConfID = function() {\r\n    // The conference ID is case sensitive!!!\r\n    return this.options.callStatsConfIDNamespace\r\n        ? `${this.options.callStatsConfIDNamespace}/${this.options.roomName}`\r\n        : this.options.roomName;\r\n};\r\n\r\n/**\r\n * Removes the callstats.io instances.\r\n */\r\nStatistics.prototype.stopCallStats = function(tpc) {\r\n    const callStatsInstance = this.callsStatsInstances.get(tpc.id);\r\n\r\n    if (callStatsInstance) {\r\n        // FIXME the original purpose of adding BEFORE_DISPOSED event was to be\r\n        // able to submit the last log batch from jitsi-meet to CallStats. After\r\n        // recent changes we dispose the CallStats earlier\r\n        // (before Statistics.dispose), so we need to emit this event here to\r\n        // give this last chance for final log batch submission.\r\n        //\r\n        // Eventually there should be a separate module called \"log storage\"\r\n        // which should emit proper events when it's underlying\r\n        // CallStats instance is going away.\r\n        if (this.callsStatsInstances.size === 1) {\r\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\r\n        }\r\n        this.callsStatsInstances.delete(tpc.id);\r\n\r\n        // The fabric needs to be terminated when being stopped\r\n        callStatsInstance.sendTerminateEvent();\r\n    }\r\n};\r\n\r\n/**\r\n * Returns true if the callstats integration is enabled, otherwise returns\r\n * false.\r\n *\r\n * @returns true if the callstats integration is enabled, otherwise returns\r\n * false.\r\n */\r\nStatistics.prototype.isCallstatsEnabled = function() {\r\n    return this.callStatsIntegrationEnabled;\r\n};\r\n\r\n/**\r\n * Logs either resume or hold event for the given peer connection.\r\n * @param {TraceablePeerConnection} tpc the connection for which event will be\r\n * reported\r\n * @param {boolean} isResume true for resume or false for hold\r\n */\r\nStatistics.prototype.sendConnectionResumeOrHoldEvent = function(tpc, isResume) {\r\n    const instance = this.callsStatsInstances.get(tpc.id);\r\n\r\n    if (instance) {\r\n        instance.sendResumeOrHoldEvent(isResume);\r\n    }\r\n};\r\n\r\n/**\r\n * Notifies CallStats and analytics (if present) for ice connection failed\r\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\r\n */\r\nStatistics.prototype.sendIceConnectionFailedEvent = function(tpc) {\r\n    const instance = this.callsStatsInstances.get(tpc.id);\r\n\r\n    if (instance) {\r\n        instance.sendIceConnectionFailedEvent();\r\n    }\r\n};\r\n\r\n/**\r\n * Notifies CallStats for mute events\r\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\r\n * @param {boolean} muted true for muted and false for not muted\r\n * @param {String} type \"audio\"/\"video\"\r\n */\r\nStatistics.prototype.sendMuteEvent = function(tpc, muted, type) {\r\n    const instance = tpc && this.callsStatsInstances.get(tpc.id);\r\n\r\n    CallStats.sendMuteEvent(muted, type, instance);\r\n};\r\n\r\n/**\r\n * Notifies CallStats for screen sharing events\r\n * @param start {boolean} true for starting screen sharing and\r\n * false for not stopping\r\n * @param {string|null} ssrc - optional ssrc value, used only when\r\n * starting screen sharing.\r\n */\r\nStatistics.prototype.sendScreenSharingEvent\r\n    = function(start, ssrc) {\r\n        for (const cs of this.callsStatsInstances.values()) {\r\n            cs.sendScreenSharingEvent(start, ssrc);\r\n        }\r\n    };\r\n\r\n/**\r\n * Notifies the statistics module that we are now the dominant speaker of the\r\n * conference.\r\n * @param {String} roomJid - The room jid where the speaker event occurred.\r\n */\r\nStatistics.prototype.sendDominantSpeakerEvent = function(roomJid) {\r\n    for (const cs of this.callsStatsInstances.values()) {\r\n        cs.sendDominantSpeakerEvent();\r\n    }\r\n\r\n    // xmpp send dominant speaker event\r\n    this.xmpp.sendDominantSpeakerEvent(roomJid);\r\n};\r\n\r\n/**\r\n * Notifies about active device.\r\n * @param {{deviceList: {String:String}}} devicesData - list of devices with\r\n *      their data\r\n */\r\nStatistics.sendActiveDeviceListEvent = function(devicesData) {\r\n    const globalSet = Statistics._getAllCallStatsInstances();\r\n\r\n    if (globalSet.size) {\r\n        for (const cs of globalSet) {\r\n            CallStats.sendActiveDeviceListEvent(devicesData, cs);\r\n        }\r\n    } else {\r\n        CallStats.sendActiveDeviceListEvent(devicesData, null);\r\n    }\r\n};\r\n\r\n/* eslint-disable max-params */\r\n\r\n/**\r\n * Lets the underlying statistics module know where is given SSRC rendered by\r\n * providing renderer tag ID.\r\n * @param {TraceablePeerConnection} tpc the connection to which the stream\r\n * belongs to\r\n * @param {number} ssrc the SSRC of the stream\r\n * @param {boolean} isLocal\r\n * @param {string} userId\r\n * @param {string} usageLabel  meaningful usage label of this stream like\r\n *        'microphone', 'camera' or 'screen'.\r\n * @param {string} containerId the id of media 'audio' or 'video' tag which\r\n *        renders the stream.\r\n */\r\nStatistics.prototype.associateStreamWithVideoTag = function(\r\n        tpc,\r\n        ssrc,\r\n        isLocal,\r\n        userId,\r\n        usageLabel,\r\n        containerId) {\r\n    const instance = this.callsStatsInstances.get(tpc.id);\r\n\r\n    if (instance) {\r\n        instance.associateStreamWithVideoTag(\r\n            ssrc,\r\n            isLocal,\r\n            userId,\r\n            usageLabel,\r\n            containerId);\r\n    }\r\n};\r\n\r\n/* eslint-enable max-params */\r\n\r\n/**\r\n * Notifies CallStats that getUserMedia failed.\r\n *\r\n * @param {Error} e error to send\r\n */\r\nStatistics.sendGetUserMediaFailed = function(e) {\r\n    const error\r\n        = e instanceof JitsiTrackError\r\n            ? formatJitsiTrackErrorForCallStats(e) : e;\r\n    const globalSet = Statistics._getAllCallStatsInstances();\r\n\r\n    if (globalSet.size) {\r\n        for (const cs of globalSet) {\r\n            CallStats.sendGetUserMediaFailed(error, cs);\r\n        }\r\n    } else {\r\n        CallStats.sendGetUserMediaFailed(error, null);\r\n    }\r\n};\r\n\r\n/**\r\n * Notifies CallStats that peer connection failed to create offer.\r\n *\r\n * @param {Error} e error to send\r\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\r\n */\r\nStatistics.prototype.sendCreateOfferFailed = function(e, tpc) {\r\n    const instance = this.callsStatsInstances.get(tpc.id);\r\n\r\n    if (instance) {\r\n        instance.sendCreateOfferFailed(e);\r\n    }\r\n};\r\n\r\n/**\r\n * Notifies CallStats that peer connection failed to create answer.\r\n *\r\n * @param {Error} e error to send\r\n * @param {TraceablePeerConnection} tpc connection on which failure occured.\r\n */\r\nStatistics.prototype.sendCreateAnswerFailed = function(e, tpc) {\r\n    const instance = this.callsStatsInstances.get(tpc.id);\r\n\r\n    if (instance) {\r\n        instance.sendCreateAnswerFailed(e);\r\n    }\r\n};\r\n\r\n/**\r\n * Notifies CallStats that peer connection failed to set local description.\r\n *\r\n * @param {Error} e error to send\r\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\r\n */\r\nStatistics.prototype.sendSetLocalDescFailed = function(e, tpc) {\r\n    const instance = this.callsStatsInstances.get(tpc.id);\r\n\r\n    if (instance) {\r\n        instance.sendSetLocalDescFailed(e);\r\n    }\r\n};\r\n\r\n/**\r\n * Notifies CallStats that peer connection failed to set remote description.\r\n *\r\n * @param {Error} e error to send\r\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\r\n */\r\nStatistics.prototype.sendSetRemoteDescFailed = function(e, tpc) {\r\n    const instance = this.callsStatsInstances.get(tpc.id);\r\n\r\n    if (instance) {\r\n        instance.sendSetRemoteDescFailed(e);\r\n    }\r\n};\r\n\r\n/**\r\n * Notifies CallStats that peer connection failed to add ICE candidate.\r\n *\r\n * @param {Error} e error to send\r\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\r\n */\r\nStatistics.prototype.sendAddIceCandidateFailed = function(e, tpc) {\r\n    const instance = this.callsStatsInstances.get(tpc.id);\r\n\r\n    if (instance) {\r\n        instance.sendAddIceCandidateFailed(e);\r\n    }\r\n};\r\n\r\n/**\r\n * Adds to CallStats an application log.\r\n *\r\n * @param {String} m a log message to send or an {Error} object to be reported\r\n */\r\nStatistics.sendLog = function(m) {\r\n    const globalSubSet = new Set();\r\n\r\n    // FIXME we don't want to duplicate logs over P2P instance, but\r\n    // here we should go over instances and call this method for each\r\n    // unique conference ID rather than selecting the first one.\r\n    // We don't have such use case though, so leaving as is for now.\r\n    for (const stats of Statistics.instances) {\r\n        if (stats.callStatsApplicationLogsDisabled) {\r\n            return;\r\n        }\r\n\r\n        if (stats.callsStatsInstances.size) {\r\n            globalSubSet.add(stats.callsStatsInstances.values().next().value);\r\n        }\r\n    }\r\n\r\n    if (globalSubSet.size) {\r\n        for (const csPerStats of globalSubSet) {\r\n            CallStats.sendApplicationLog(m, csPerStats);\r\n        }\r\n    } else {\r\n        CallStats.sendApplicationLog(m, null);\r\n    }\r\n};\r\n\r\n/**\r\n * Sends the given feedback through CallStats.\r\n *\r\n * @param overall an integer between 1 and 5 indicating the user's rating.\r\n * @param comment the comment from the user.\r\n * @returns {Promise} Resolves when callstats feedback has been submitted\r\n * successfully.\r\n */\r\nStatistics.prototype.sendFeedback = function(overall, comment) {\r\n    // Statistics.analytics.sendEvent is currently fire and forget, without\r\n    // confirmation of successful send.\r\n    Statistics.analytics.sendEvent(\r\n        FEEDBACK,\r\n        {\r\n            rating: overall,\r\n            comment\r\n        });\r\n\r\n    return CallStats.sendFeedback(this._getCallStatsConfID(), overall, comment);\r\n};\r\n\r\nStatistics.LOCAL_JID = require('../../service/statistics/constants').LOCAL_JID;\r\n\r\n/**\r\n * Reports global error to CallStats.\r\n *\r\n * @param {Error} error\r\n */\r\nStatistics.reportGlobalError = function(error) {\r\n    if (error instanceof JitsiTrackError && error.gum) {\r\n        Statistics.sendGetUserMediaFailed(error);\r\n    } else {\r\n        Statistics.sendLog(error);\r\n    }\r\n};\r\n\r\n/**\r\n * Sends event to analytics and logs a message to the logger/console. Console\r\n * messages might also be logged to callstats automatically.\r\n *\r\n * @param {string | Object} event the event name, or an object which\r\n * represents the entire event.\r\n * @param {Object} properties properties to attach to the event (if an event\r\n * name as opposed to an event object is provided).\r\n */\r\nStatistics.sendAnalyticsAndLog = function(event, properties = {}) {\r\n    if (!event) {\r\n        logger.warn('No event or event name given.');\r\n\r\n        return;\r\n    }\r\n\r\n    let eventToLog;\r\n\r\n    // Also support an API with a single object as an event.\r\n    if (typeof event === 'object') {\r\n        eventToLog = event;\r\n    } else {\r\n        eventToLog = {\r\n            name: event,\r\n            properties\r\n        };\r\n    }\r\n\r\n    logger.log(JSON.stringify(eventToLog));\r\n\r\n    // We do this last, because it may modify the object which is passed.\r\n    this.analytics.sendEvent(event, properties);\r\n};\r\n\r\n/**\r\n * Sends event to analytics.\r\n *\r\n * @param {string | Object} eventName the event name, or an object which\r\n * represents the entire event.\r\n * @param {Object} properties properties to attach to the event\r\n */\r\nStatistics.sendAnalytics = function(eventName, properties = {}) {\r\n    this.analytics.sendEvent(eventName, properties);\r\n};\r\n","/* global MediaRecorder, MediaStream */\r\n\r\nconst RecordingResult = require('./recordingResult');\r\n\r\n/**\r\n * Possible audio formats MIME types\r\n */\r\nconst AUDIO_WEBM = 'audio/webm'; // Supported in chrome\r\nconst AUDIO_OGG = 'audio/ogg'; // Supported in firefox\r\n\r\n/**\r\n * A TrackRecorder object holds all the information needed for recording a\r\n * single JitsiTrack (either remote or local)\r\n * @param track The JitsiTrack the object is going to hold\r\n */\r\nconst TrackRecorder = function(track) {\r\n    // The JitsiTrack holding the stream\r\n    this.track = track;\r\n\r\n    // The MediaRecorder recording the stream\r\n    this.recorder = null;\r\n\r\n    // The array of data chunks recorded from the stream\r\n    // acts as a buffer until the data is stored on disk\r\n    this.data = null;\r\n\r\n    // the name of the person of the JitsiTrack. This can be undefined and/or\r\n    // not unique\r\n    this.name = null;\r\n\r\n    // the time of the start of the recording\r\n    this.startTime = null;\r\n};\r\n\r\n/**\r\n * Starts the recording of a JitsiTrack in a TrackRecorder object.\r\n * This will also define the timestamp and try to update the name\r\n * @param trackRecorder the TrackRecorder to start\r\n */\r\nfunction startRecorder(trackRecorder) {\r\n    if (trackRecorder.recorder === undefined) {\r\n        throw new Error('Passed an object to startRecorder which is not a '\r\n            + 'TrackRecorder object');\r\n    }\r\n    trackRecorder.recorder.start();\r\n    trackRecorder.startTime = new Date();\r\n}\r\n\r\n/**\r\n * Stops the recording of a JitsiTrack in a TrackRecorder object.\r\n * This will also try to update the name\r\n * @param trackRecorder the TrackRecorder to stop\r\n */\r\nfunction stopRecorder(trackRecorder) {\r\n    if (trackRecorder.recorder === undefined) {\r\n        throw new Error('Passed an object to stopRecorder which is not a '\r\n            + 'TrackRecorder object');\r\n    }\r\n    trackRecorder.recorder.stop();\r\n}\r\n\r\n/**\r\n * Determines which kind of audio recording the browser supports\r\n * chrome supports \"audio/webm\" and firefox supports \"audio/ogg\"\r\n */\r\nfunction determineCorrectFileType() {\r\n    if (MediaRecorder.isTypeSupported(AUDIO_WEBM)) {\r\n        return AUDIO_WEBM;\r\n    } else if (MediaRecorder.isTypeSupported(AUDIO_OGG)) {\r\n        return AUDIO_OGG;\r\n    }\r\n    throw new Error(\r\n        'unable to create a MediaRecorder with the right mimetype!');\r\n}\r\n\r\n/**\r\n * main exported object of the file, holding all\r\n * relevant functions and variables for the outside world\r\n * @param jitsiConference the jitsiConference which this object\r\n * is going to record\r\n */\r\nfunction AudioRecorder(jitsiConference) {\r\n    // array of TrackRecorders, where each trackRecorder\r\n    // holds the JitsiTrack, MediaRecorder and recorder data\r\n    this.recorders = [];\r\n\r\n    // get which file type is supported by the current browser\r\n    this.fileType = determineCorrectFileType();\r\n\r\n    // boolean flag for active recording\r\n    this.isRecording = false;\r\n\r\n    // the jitsiconference the object is recording\r\n    this.jitsiConference = jitsiConference;\r\n}\r\n\r\n/**\r\n * Add the the exported module so that it can be accessed by other files\r\n */\r\nAudioRecorder.determineCorrectFileType = determineCorrectFileType;\r\n\r\n/**\r\n * Adds a new TrackRecorder object to the array.\r\n *\r\n * @param track the track potentially holding an audio stream\r\n */\r\nAudioRecorder.prototype.addTrack = function(track) {\r\n    if (track.isAudioTrack()) {\r\n        // create the track recorder\r\n        const trackRecorder = this.instantiateTrackRecorder(track);\r\n\r\n        // push it to the local array of all recorders\r\n\r\n        this.recorders.push(trackRecorder);\r\n\r\n        // update the name of the trackRecorders\r\n        this.updateNames();\r\n\r\n        // If we're already recording, immediately start recording this new\r\n        // track.\r\n        if (this.isRecording) {\r\n            startRecorder(trackRecorder);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Creates a TrackRecorder object. Also creates the MediaRecorder and\r\n * data array for the trackRecorder.\r\n * @param track the JitsiTrack holding the audio MediaStream(s)\r\n */\r\nAudioRecorder.prototype.instantiateTrackRecorder = function(track) {\r\n    const trackRecorder = new TrackRecorder(track);\r\n\r\n    // Create a new stream which only holds the audio track\r\n    const originalStream = trackRecorder.track.getOriginalStream();\r\n    const stream = createEmptyStream();\r\n\r\n    originalStream.getAudioTracks().forEach(t => stream.addTrack(t));\r\n\r\n    // Create the MediaRecorder\r\n    trackRecorder.recorder = new MediaRecorder(stream,\r\n        { mimeType: this.fileType });\r\n\r\n    // array for holding the recorder data. Resets it when\r\n    // audio already has been recorder once\r\n    trackRecorder.data = [];\r\n\r\n    // function handling a dataEvent, e.g the stream gets new data\r\n    trackRecorder.recorder.ondataavailable = function(dataEvent) {\r\n        if (dataEvent.data.size > 0) {\r\n            trackRecorder.data.push(dataEvent.data);\r\n        }\r\n    };\r\n\r\n    return trackRecorder;\r\n};\r\n\r\n/**\r\n * Notifies the module that a specific track has stopped, e.g participant left\r\n * the conference.\r\n * if the recording has not started yet, the TrackRecorder will be removed from\r\n * the array. If the recording has started, the recorder will stop recording\r\n * but not removed from the array so that the recorded stream can still be\r\n * accessed\r\n *\r\n * @param {JitsiTrack} track the JitsiTrack to remove from the recording session\r\n */\r\nAudioRecorder.prototype.removeTrack = function(track) {\r\n    if (track.isVideoTrack()) {\r\n        return;\r\n    }\r\n\r\n    const array = this.recorders;\r\n    let i;\r\n\r\n    for (i = 0; i < array.length; i++) {\r\n        if (array[i].track.getParticipantId() === track.getParticipantId()) {\r\n            const recorderToRemove = array[i];\r\n\r\n            if (this.isRecording) {\r\n                stopRecorder(recorderToRemove);\r\n            } else {\r\n                // remove the TrackRecorder from the array\r\n                array.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // make sure the names are up to date\r\n    this.updateNames();\r\n};\r\n\r\n/**\r\n * Tries to update the name value of all TrackRecorder in the array.\r\n * If it hasn't changed,it will keep the exiting name. If it changes to a\r\n * undefined value, the old value will also be kept.\r\n */\r\nAudioRecorder.prototype.updateNames = function() {\r\n    const conference = this.jitsiConference;\r\n\r\n    this.recorders.forEach(trackRecorder => {\r\n        if (trackRecorder.track.isLocal()) {\r\n            trackRecorder.name = 'the transcriber';\r\n        } else {\r\n            const id = trackRecorder.track.getParticipantId();\r\n            const participant = conference.getParticipantById(id);\r\n            const newName = participant.getDisplayName();\r\n\r\n            if (newName !== 'undefined') {\r\n                trackRecorder.name = newName;\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Starts the audio recording of every local and remote track\r\n */\r\nAudioRecorder.prototype.start = function() {\r\n    if (this.isRecording) {\r\n        throw new Error('audiorecorder is already recording');\r\n    }\r\n\r\n    // set boolean isRecording flag to true so if new participants join the\r\n    // conference, that track can instantly start recording as well\r\n    this.isRecording = true;\r\n\r\n    // start all the mediaRecorders\r\n    this.recorders.forEach(trackRecorder => startRecorder(trackRecorder));\r\n\r\n    // log that recording has started\r\n    console.log(\r\n        `Started the recording of the audio. There are currently ${\r\n            this.recorders.length} recorders active.`);\r\n};\r\n\r\n/**\r\n * Stops the audio recording of every local and remote track\r\n */\r\nAudioRecorder.prototype.stop = function() {\r\n    // set the boolean flag to false\r\n    this.isRecording = false;\r\n\r\n    // stop all recorders\r\n    this.recorders.forEach(trackRecorder => stopRecorder(trackRecorder));\r\n    console.log('stopped recording');\r\n};\r\n\r\n/**\r\n * link hacking to download all recorded audio streams\r\n */\r\nAudioRecorder.prototype.download = function() {\r\n    this.recorders.forEach(trackRecorder => {\r\n        const blob = new Blob(trackRecorder.data, { type: this.fileType });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n\r\n        document.body.appendChild(a);\r\n        a.style = 'display: none';\r\n        a.href = url;\r\n        a.download = `test.${this.fileType.split('/')[1]}`;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n    });\r\n};\r\n\r\n/**\r\n * returns the audio files of all recorders as an array of objects,\r\n * which include the name of the owner of the track and the starting time stamp\r\n * @returns {Array} an array of RecordingResult objects\r\n */\r\nAudioRecorder.prototype.getRecordingResults = function() {\r\n    if (this.isRecording) {\r\n        throw new Error(\r\n            'cannot get blobs because the AudioRecorder is still recording!');\r\n    }\r\n\r\n    // make sure the names are up to date before sending them off\r\n    this.updateNames();\r\n\r\n    const array = [];\r\n\r\n    this.recorders.forEach(\r\n        recorder =>\r\n            array.push(\r\n                new RecordingResult(\r\n                    new Blob(recorder.data, { type: this.fileType }),\r\n                    recorder.name,\r\n                    recorder.startTime)));\r\n\r\n    return array;\r\n};\r\n\r\n/**\r\n * Gets the mime type of the recorder audio\r\n * @returns {String} the mime type of the recorder audio\r\n */\r\nAudioRecorder.prototype.getFileType = function() {\r\n    return this.fileType;\r\n};\r\n\r\n/**\r\n * Creates a empty MediaStream object which can be used\r\n * to add MediaStreamTracks to\r\n * @returns MediaStream\r\n */\r\nfunction createEmptyStream() {\r\n    if (typeof MediaStream !== 'undefined') {\r\n        return new MediaStream();\r\n    }\r\n    throw new Error('cannot create a clean mediaStream');\r\n}\r\n\r\n/**\r\n * export the main object AudioRecorder\r\n */\r\nmodule.exports = AudioRecorder;\r\n","/* eslint-disable max-params */\r\n\r\n/**\r\n * This object stores variables needed around the recording of an audio stream\r\n * and passing this recording along with additional information along to\r\n * different processes\r\n * @param blob the recording audio stream as a single blob\r\n * @param name the name of the person of the audio stream\r\n * @param startTime the time in UTC when recording of the audiostream started\r\n * @param wordArray the recorder audio stream transcribed as an array of Word\r\n *                  objects\r\n */\r\nconst RecordingResult = function(blob, name, startTime, wordArray) {\r\n    this.blob = blob;\r\n    this.name = name;\r\n    this.startTime = startTime;\r\n    this.wordArray = wordArray;\r\n};\r\n\r\n/* eslint-enable max-params */\r\n\r\nmodule.exports = RecordingResult;\r\n","const AudioRecorder = require('./audioRecorder');\r\nconst SphinxService = require(\r\n    './transcriptionServices/SphinxTranscriptionService');\r\n\r\nconst BEFORE_STATE = 'before';\r\nconst RECORDING_STATE = 'recording';\r\nconst TRANSCRIBING_STATE = 'transcribing';\r\nconst FINISHED_STATE = 'finished';\r\n\r\n// the amount of characters each line in the transcription will have\r\nconst MAXIMUM_SENTENCE_LENGTH = 80;\r\n\r\n/**\r\n * This is the main object for handing the Transcription. It interacts with\r\n * the audioRecorder to record every person in a conference and sends the\r\n * recorder audio to a transcriptionService. The returned speech-to-text result\r\n * will be merged to create a transcript\r\n * @param {AudioRecorder} audioRecorder An audioRecorder recording a conference\r\n */\r\nfunction Transcriber() {\r\n    // the object which can record all audio in the conference\r\n    this.audioRecorder = new AudioRecorder();\r\n\r\n    // this object can send the recorder audio to a speech-to-text service\r\n    this.transcriptionService = new SphinxService();\r\n\r\n    // holds a counter to keep track if merging can start\r\n    this.counter = null;\r\n\r\n    // holds the date when transcription started which makes it possible\r\n    // to calculate the offset between recordings\r\n    this.startTime = null;\r\n\r\n    // will hold the transcription once it is completed\r\n    this.transcription = null;\r\n\r\n    // this will be a method which will be called once the transcription is done\r\n    // with the transcription as parameter\r\n    this.callback = null;\r\n\r\n    // stores all the retrieved speech-to-text results to merge together\r\n    // this value will store an Array<Word> object\r\n    this.results = [];\r\n\r\n    // Stores the current state of the transcription process\r\n    this.state = BEFORE_STATE;\r\n\r\n    // Used in the updateTranscription method to add a new line when the\r\n    // sentence becomes to long\r\n    this.lineLength = 0;\r\n}\r\n\r\n/**\r\n * Method to start the transcription process. It will tell the audioRecorder\r\n * to start storing all audio streams and record the start time for merging\r\n * purposes\r\n */\r\nTranscriber.prototype.start = function start() {\r\n    if (this.state !== BEFORE_STATE) {\r\n        throw new Error(\r\n            `The transcription can only start when it's in the \"${\r\n                BEFORE_STATE}\" state. It's currently in the \"${\r\n                this.state}\" state`);\r\n    }\r\n    this.state = RECORDING_STATE;\r\n    this.audioRecorder.start();\r\n    this.startTime = new Date();\r\n};\r\n\r\n/**\r\n * Method to stop the transcription process. It will tell the audioRecorder to\r\n * stop, and get all the recorded audio to send it to the transcription service\r\n\r\n * @param callback a callback which will receive the transcription\r\n */\r\nTranscriber.prototype.stop = function stop(callback) {\r\n    if (this.state !== RECORDING_STATE) {\r\n        throw new Error(\r\n            `The transcription can only stop when it's in the \"${\r\n                RECORDING_STATE}\" state. It's currently in the \"${\r\n                this.state}\" state`);\r\n    }\r\n\r\n    // stop the recording\r\n    console.log('stopping recording and sending audio files');\r\n    this.audioRecorder.stop();\r\n\r\n    // and send all recorded audio the the transcription service\r\n    const callBack = blobCallBack.bind(null, this);\r\n\r\n    this.audioRecorder.getRecordingResults().forEach(recordingResult => {\r\n        this.transcriptionService.send(recordingResult, callBack);\r\n        this.counter++;\r\n    });\r\n\r\n    // set the state to \"transcribing\" so that maybeMerge() functions correctly\r\n    this.state = TRANSCRIBING_STATE;\r\n\r\n    // and store the callback for later\r\n    this.callback = callback;\r\n};\r\n\r\n/**\r\n * This method gets the answer from the transcription service, calculates the\r\n * offset and adds is to every Word object. It will also start the merging\r\n * when every send request has been received\r\n *\r\n * note: Make sure to bind this as a Transcription object\r\n * @param {Transcriber} transcriber the transcriber instance\r\n * @param {RecordingResult} answer a RecordingResult object with a defined\r\n * WordArray\r\n */\r\nfunction blobCallBack(transcriber, answer) {\r\n    console.log(\r\n        'retrieved an answer from the transcription service. The answer has an'\r\n            + ` array of length: ${answer.wordArray.length}`);\r\n\r\n    // first add the offset between the start of the transcription and\r\n    // the start of the recording to all start and end times\r\n    if (answer.wordArray.length > 0) {\r\n        let offset = answer.startTime.getUTCMilliseconds()\r\n            - transcriber.startTime.getUTCMilliseconds();\r\n\r\n        // transcriber time will always be earlier\r\n\r\n        if (offset < 0) {\r\n            offset = 0; // presume 0 if it somehow not earlier\r\n        }\r\n\r\n        let array = '[';\r\n\r\n        answer.wordArray.forEach(wordObject => {\r\n            wordObject.begin += offset;\r\n            wordObject.end += offset;\r\n            array += `${wordObject.word},`;\r\n        });\r\n        array += ']';\r\n        console.log(array);\r\n\r\n        // give a name value to the Array object so that the merging can access\r\n        // the name value without having to use the whole recordingResult object\r\n        // in the algorithm\r\n        answer.wordArray.name = answer.name;\r\n    }\r\n\r\n    // then store the array and decrease the counter\r\n    transcriber.results.push(answer.wordArray);\r\n    transcriber.counter--;\r\n    console.log(`current counter: ${transcriber.counter}`);\r\n\r\n    // and check if all results have been received.\r\n    transcriber.maybeMerge();\r\n}\r\n\r\n/**\r\n * this method will check if the counter is zero. If it is, it will call\r\n * the merging method\r\n */\r\nTranscriber.prototype.maybeMerge = function() {\r\n    if (this.state === TRANSCRIBING_STATE && this.counter === 0) {\r\n        // make sure to include the events in the result arrays before\r\n        // merging starts\r\n        this.merge();\r\n    }\r\n};\r\n\r\n/**\r\n * This method will merge all speech-to-text arrays together in one\r\n * readable transcription string\r\n */\r\nTranscriber.prototype.merge = function() {\r\n    console.log(\r\n        `starting merge process!\\n The length of the array: ${\r\n            this.results.length}`);\r\n    this.transcription = '';\r\n\r\n    // the merging algorithm will look over all Word objects who are at pos 0 in\r\n    // every array. It will then select the one closest in time to the\r\n    // previously placed word, while removing the selected word from its array\r\n    // note: words can be skipped the skipped word's begin and end time somehow\r\n    // end up between the closest word start and end time\r\n    const arrays = this.results;\r\n\r\n    // arrays of Word objects\r\n    const potentialWords = []; // array of the first Word objects\r\n    // check if any arrays are already empty and remove them\r\n\r\n    hasPopulatedArrays(arrays);\r\n\r\n    // populate all the potential Words for a first time\r\n    arrays.forEach(array => pushWordToSortedArray(potentialWords, array));\r\n\r\n    // keep adding words to transcription until all arrays are exhausted\r\n    while (hasPopulatedArrays(arrays)) {\r\n        // first select the lowest array;\r\n        let lowestWordArray = arrays[0];\r\n\r\n        arrays.forEach(wordArray => {\r\n            if (wordArray[0].begin < lowestWordArray[0].begin) {\r\n                lowestWordArray = wordArray;\r\n            }\r\n        });\r\n\r\n        // put the word in the transcription\r\n        let wordToAdd = lowestWordArray.shift();\r\n\r\n        this.updateTranscription(wordToAdd, lowestWordArray.name);\r\n\r\n        // keep going until a word in another array has a smaller time\r\n        // or the array is empty\r\n        while (lowestWordArray.length > 0) {\r\n            let foundSmaller = false;\r\n            const wordToCompare = lowestWordArray[0].begin;\r\n\r\n            arrays.forEach(wordArray => {\r\n                if (wordArray[0].begin < wordToCompare) {\r\n                    foundSmaller = true;\r\n                }\r\n            });\r\n\r\n            // add next word if no smaller time has been found\r\n            if (foundSmaller) {\r\n                break;\r\n            }\r\n\r\n            wordToAdd = lowestWordArray.shift();\r\n            this.updateTranscription(wordToAdd, null);\r\n        }\r\n\r\n    }\r\n\r\n    // set the state to finished and do the necessary left-over tasks\r\n    this.state = FINISHED_STATE;\r\n    if (this.callback) {\r\n        this.callback(this.transcription);\r\n    }\r\n};\r\n\r\n/**\r\n * Appends a word object to the transcription. It will make a new line with a\r\n * name if a name is specified\r\n * @param {Word} word the Word object holding the word to append\r\n * @param {String|null} name the name of a new speaker. Null if not applicable\r\n */\r\nTranscriber.prototype.updateTranscription = function(word, name) {\r\n    if (name !== undefined && name !== null) {\r\n        this.transcription += `\\n${name}:`;\r\n        this.lineLength = name.length + 1; // +1 for the semi-colon\r\n    }\r\n    if (this.lineLength + word.word.length > MAXIMUM_SENTENCE_LENGTH) {\r\n        this.transcription += '\\n    ';\r\n        this.lineLength = 4; // because of the 4 spaces after the new line\r\n    }\r\n    this.transcription += ` ${word.word}`;\r\n    this.lineLength += word.word.length + 1; // +1 for the space\r\n};\r\n\r\n/**\r\n * Check if the given 2 dimensional array has any non-zero Word-arrays in them.\r\n * All zero-element arrays inside will be removed\r\n * If any non-zero-element arrays are found, the method will return true.\r\n * otherwise it will return false\r\n * @param {Array<Array>} twoDimensionalArray the array to check\r\n * @returns {boolean} true if any non-zero arrays inside, otherwise false\r\n */\r\nfunction hasPopulatedArrays(twoDimensionalArray) {\r\n    for (let i = 0; i < twoDimensionalArray.length; i++) {\r\n        if (twoDimensionalArray[i].length === 0) {\r\n            twoDimensionalArray.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    return twoDimensionalArray.length > 0;\r\n}\r\n\r\n/**\r\n * Push a word to the right location in a sorted array. The array is sorted\r\n * from lowest to highest start time. Every word is stored in an object which\r\n * includes the name of the person saying the word.\r\n *\r\n * @param {Array<Word>} array the sorted array to push to\r\n * @param {Word} word the word to push into the array\r\n */\r\nfunction pushWordToSortedArray(array, word) {\r\n    if (array.length === 0) {\r\n        array.push(word);\r\n    } else {\r\n        if (array[array.length - 1].begin <= word.begin) {\r\n            array.push(word);\r\n\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < array.length; i++) {\r\n            if (word.begin < array[i].begin) {\r\n                array.splice(i, 0, word);\r\n\r\n                return;\r\n            }\r\n        }\r\n        array.push(word); // fail safe\r\n    }\r\n}\r\n\r\n/**\r\n * Gives the transcriber a JitsiTrack holding an audioStream to transcribe.\r\n * The JitsiTrack is given to the audioRecorder. If it doesn't hold an\r\n * audiostream, it will not be added by the audioRecorder\r\n * @param {JitsiTrack} track the track to give to the audioRecorder\r\n */\r\nTranscriber.prototype.addTrack = function(track) {\r\n    this.audioRecorder.addTrack(track);\r\n};\r\n\r\n/**\r\n * Remove the given track from the auioRecorder\r\n * @param track\r\n */\r\nTranscriber.prototype.removeTrack = function(track) {\r\n    this.audioRecorder.removeTrack(track);\r\n};\r\n\r\n/**\r\n * Will return the created transcription if it's avialable or throw an error\r\n * when it's not done yet\r\n * @returns {String} the transcription as a String\r\n */\r\nTranscriber.prototype.getTranscription = function() {\r\n    if (this.state !== FINISHED_STATE) {\r\n        throw new Error(\r\n            `The transcription can only be retrieved when it's in the \"${\r\n                FINISHED_STATE}\" state. It's currently in the \"${\r\n                this.state}\" state`);\r\n    }\r\n\r\n    return this.transcription;\r\n};\r\n\r\n/**\r\n * Returns the current state of the transcription process\r\n */\r\nTranscriber.prototype.getState = function() {\r\n    return this.state;\r\n};\r\n\r\n/**\r\n * Resets the state to the \"before\" state, such that it's again possible to\r\n * call the start method\r\n */\r\nTranscriber.prototype.reset = function() {\r\n    this.state = BEFORE_STATE;\r\n    this.counter = null;\r\n    this.transcription = null;\r\n    this.startTime = null;\r\n    this.callback = null;\r\n    this.results = [];\r\n    this.lineLength = 0;\r\n};\r\n\r\nmodule.exports = Transcriber;\r\n","/**\r\n * Abstract class representing an interface to implement a speech-to-text\r\n * service on.\r\n */\r\nconst TranscriptionService = function() {\r\n    throw new Error('TranscriptionService is abstract and cannot be'\r\n        + 'created');\r\n};\r\n\r\n/**\r\n * This method can be used to send the recorder audio stream and\r\n * retrieve the answer from the transcription service from the callback\r\n *\r\n * @param {RecordingResult} recordingResult a recordingResult object which\r\n * includes the recorded audio stream as a blob\r\n * @param {Function} callback  which will retrieve the a RecordingResult with\r\n *        the answer as a WordArray\r\n */\r\nTranscriptionService.prototype.send = function send(recordingResult, callback) {\r\n    this.sendRequest(recordingResult.blob, response => {\r\n        if (this.verify(response)) {\r\n            recordingResult.wordArray = this.formatResponse(response);\r\n        } else {\r\n            console.log('the retrieved response from the server is not valid!');\r\n            recordingResult.wordArray = [];\r\n        }\r\n        callback(recordingResult);\r\n    });\r\n};\r\n\r\n/**\r\n * Abstract method which will rend the recorder audio stream to the implemented\r\n * transcription service and will retrieve an answer, which will be\r\n * called on the given callback method\r\n *\r\n * @param {Blob} audioBlob the recorded audio stream as a single Blob\r\n * @param {function} callback function which will retrieve the answer\r\n *                            from the service\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nTranscriptionService.prototype.sendRequest = function(audioBlob, callback) {\r\n    throw new Error('TranscriptionService.sendRequest is abstract');\r\n};\r\n\r\n/**\r\n * Abstract method which will parse the output from the implemented\r\n * transcription service to the expected format\r\n *\r\n * The transcriber class expect an array of word objects, where each word\r\n * object is one transcribed word by the service.\r\n *\r\n * The expected output of this method is an array of word objects, in\r\n * the correct order. That is, the first object in the array is the first word\r\n * being said, and the last word in the array is the last word being said\r\n *\r\n * @param response the answer from the speech-to-text server which needs to be\r\n *                 formatted\r\n * @return {Array<Word>} an array of Word objects\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nTranscriptionService.prototype.formatResponse = function(response) {\r\n    throw new Error('TranscriptionService.format is abstract');\r\n};\r\n\r\n/**\r\n * Abstract method which will verify that the response from the server is valid\r\n *\r\n * @param response the response from the server\r\n * @return {boolean} true if response is valid, false otherwise\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nTranscriptionService.prototype.verify = function(response) {\r\n    throw new Error('TranscriptionService.verify is abstract');\r\n};\r\n\r\nmodule.exports = TranscriptionService;\r\n","/* global config */\r\n\r\nconst TranscriptionService = require('./AbstractTranscriptionService');\r\nconst Word = require('../word');\r\nconst audioRecorder = require('./../audioRecorder');\r\n\r\n/**\r\n * Implements a TranscriptionService for a Sphinx4 http server\r\n */\r\nconst SphinxService = function() {\r\n    // set the correct url\r\n    this.url = getURL();\r\n};\r\n\r\n/**\r\n * Subclass of AbstractTranscriptionService\r\n */\r\nSphinxService.prototype = Object.create(TranscriptionService.prototype);\r\n\r\n/**\r\n * Set the right constructor\r\n */\r\nSphinxService.constructor = SphinxService;\r\n\r\n/**\r\n * Overrides the sendRequest method from AbstractTranscriptionService\r\n * it will send the audio stream the a Sphinx4 server to get the transcription\r\n *\r\n * @param audioFileBlob the recorder audio stream an a single Blob\r\n * @param callback the callback function retrieving the server response\r\n */\r\nSphinxService.prototype.sendRequest = function(audioFileBlob, callback) {\r\n    console.log(`sending an audio file  to ${this.url}`);\r\n    console.log(`the audio file being sent: ${audioFileBlob}`);\r\n    const request = new XMLHttpRequest();\r\n\r\n    request.onreadystatechange = function() {\r\n        if (request.readyState === XMLHttpRequest.DONE\r\n            && request.status === 200) {\r\n            callback(request.responseText);\r\n        } else if (request.readyState === XMLHttpRequest.DONE) {\r\n            throw new Error(\r\n                `unable to accept response from sphinx server. status: ${\r\n                    request.status}`);\r\n        }\r\n\r\n        // if not ready no point to throw an error\r\n    };\r\n    request.open('POST', this.url);\r\n    request.setRequestHeader('Content-Type',\r\n        audioRecorder.determineCorrectFileType());\r\n    request.send(audioFileBlob);\r\n    console.log(`send ${audioFileBlob}`);\r\n};\r\n\r\n/**\r\n * Overrides the formatResponse method from AbstractTranscriptionService\r\n * It will parse the answer from the server in the expected format\r\n *\r\n * @param response the JSON body retrieved from the Sphinx4 server\r\n */\r\nSphinxService.prototype.formatResponse = function(response) {\r\n    const result = JSON.parse(response).objects;\r\n\r\n    // make sure to delete the session id object, which is always\r\n    // the first value in the JSON array\r\n\r\n    result.shift();\r\n    const array = [];\r\n\r\n    result.forEach(\r\n        word =>\r\n            word.filler\r\n                || array.push(new Word(word.word, word.start, word.end)));\r\n\r\n    return array;\r\n};\r\n\r\n/**\r\n * checks wether the reply is empty, or doesn't contain a correct JSON object\r\n * @param response the server response\r\n * @return {boolean} whether the response is valid\r\n */\r\nSphinxService.prototype.verify = function(response) {\r\n    console.log(`response from server:${response.toString()}`);\r\n\r\n    // test if server responded with a string object\r\n    if (typeof response !== 'string') {\r\n        return false;\r\n    }\r\n\r\n    // test if the string can be parsed into valid JSON\r\n    let json;\r\n\r\n    try {\r\n        json = JSON.parse(response);\r\n    } catch (error) {\r\n        console.log(error);\r\n\r\n        return false;\r\n    }\r\n\r\n    // check if the JSON has a \"objects\" value\r\n    if (json.objects === undefined) {\r\n        return false;\r\n    }\r\n\r\n    // get the \"objects\" value and check for a session ID\r\n    const array = json.objects;\r\n\r\n    if (!(array[0] && array[0]['session-id'])) {\r\n        return false;\r\n    }\r\n\r\n    // everything seems to be in order\r\n    return true;\r\n};\r\n\r\n/**\r\n * Gets the URL to the Sphinx4 server from the config file. If it's not there,\r\n * it will throw an error\r\n *\r\n * @returns {string} the URL to the sphinx4 server\r\n */\r\nfunction getURL() {\r\n    const message = 'config does not contain an url to a Sphinx4 https server';\r\n\r\n    if (config.sphinxURL === undefined) {\r\n        console.log(message);\r\n    } else {\r\n        const toReturn = config.sphinxURL;\r\n\r\n        if (toReturn.includes !== undefined && toReturn.includes('https://')) {\r\n            return toReturn;\r\n        }\r\n        console.log(message);\r\n\r\n    }\r\n}\r\n\r\nmodule.exports = SphinxService;\r\n","/**\r\n * An object representing a transcribed word, with some additional information\r\n * @param word the word\r\n * @param begin the time the word was started being uttered\r\n * @param end the time the word stopped being uttered\r\n */\r\nconst Word = function(word, begin, end) {\r\n    this.word = word;\r\n    this.begin = begin;\r\n    this.end = end;\r\n};\r\n\r\n/**\r\n * Get the string representation of the word\r\n * @returns {*} the word as a string\r\n */\r\nWord.prototype.getWord = function() {\r\n    return this.word;\r\n};\r\n\r\n/**\r\n * Get the time the word started being uttered\r\n * @returns {*} the start time as an integer\r\n */\r\nWord.prototype.getBeginTime = function() {\r\n    return this.begin;\r\n};\r\n\r\n/**\r\n * Get the time the word stopped being uttered\r\n * @returns {*} the end time as an integer\r\n */\r\nWord.prototype.getEndTime = function() {\r\n    return this.end;\r\n};\r\n\r\nmodule.exports = Word;\r\n","import async from 'async';\r\n\r\n/**\r\n * A queue for async task execution.\r\n */\r\nexport default class AsyncQueue {\r\n    /**\r\n     * Creates new instance.\r\n     */\r\n    constructor() {\r\n        this._queue = async.queue(this._processQueueTasks.bind(this), 1);\r\n        this._stopped = false;\r\n    }\r\n\r\n    /**\r\n     * Removes any pending tasks from the queue.\r\n     */\r\n    clear() {\r\n        this._queue.kill();\r\n    }\r\n\r\n    /**\r\n     * Internal task processing implementation which makes things work.\r\n     */\r\n    _processQueueTasks(task, finishedCallback) {\r\n        task(finishedCallback);\r\n    }\r\n\r\n    /**\r\n     * The 'task' function will be given a callback it MUST call with either:\r\n     *  1) No arguments if it was successful or\r\n     *  2) An error argument if there was an error\r\n     * If the task wants to process the success or failure of the task, it\r\n     * should pass the {@code callback} to the push function, e.g.:\r\n     * queue.push(task, (err) => {\r\n     *     if (err) {\r\n     *         // error handling\r\n     *     } else {\r\n     *         // success handling\r\n     *     }\r\n     * });\r\n     *\r\n     * @param {function} task - The task to be executed. See the description above.\r\n     * @param {function} [callback] - Optional callback to be called after the task has been executed.\r\n     */\r\n    push(task, callback) {\r\n        if (this._stopped) {\r\n            callback && callback(new Error('The queue has been stopped'));\r\n\r\n            return;\r\n        }\r\n        this._queue.push(task, callback);\r\n    }\r\n\r\n    /**\r\n     * Shutdowns the queue. All already queued tasks will execute, but no future tasks can be added. If a task is added\r\n     * after the queue has been shutdown then the callback will be called with an error.\r\n     */\r\n    shutdown() {\r\n        this._stopped = true;\r\n    }\r\n}\r\n","const AuthUtil = {\r\n    /**\r\n     * Creates the URL pointing to JWT token authentication service. It is\r\n     * formatted from the 'urlPattern' argument which can contain the following\r\n     * constants:\r\n     * '{room}' - name of the conference room passed as <tt>roomName</tt>\r\n     * argument to this method.\r\n     * '{roleUpgrade}' - will contain 'true' if the URL will be used for\r\n     * the role upgrade scenario, where user connects from anonymous domain and\r\n     * then gets upgraded to the moderator by logging-in from the popup window.\r\n     *\r\n     * @param urlPattern a URL pattern pointing to the login service\r\n     * @param roomName the name of the conference room for which the user will\r\n     * be authenticated\r\n     * @param {bool} roleUpgrade <tt>true</tt> if the URL will be used for role\r\n     * upgrade scenario, where the user logs-in from the popup window in order\r\n     * to have the moderator rights granted\r\n     *\r\n     * @returns {string|null} the URL pointing to JWT login service or\r\n     * <tt>null</tt> if 'urlPattern' is not a string and the URL can not be\r\n     * constructed.\r\n     */\r\n    getTokenAuthUrl(urlPattern, roomName, roleUpgrade) {\r\n        const url = urlPattern;\r\n\r\n        if (typeof url !== 'string') {\r\n            return null;\r\n        }\r\n\r\n        return url.replace('{room}', roomName)\r\n            .replace('{roleUpgrade}', roleUpgrade === true);\r\n    }\r\n};\r\n\r\nmodule.exports = AuthUtil;\r\n","/**\r\n * Implements utility to forward events from one eventEmitter to another.\r\n * @param src {object} instance of EventEmitter or another class that implements\r\n * addListener method which will register listener to EventEmitter instance.\r\n * @param dest {object} instance of EventEmitter or another class that\r\n * implements emit method which will emit an event.\r\n */\r\nfunction EventEmitterForwarder(src, dest) {\r\n    if (!src || !dest || typeof src.addListener !== 'function'\r\n        || typeof dest.emit !== 'function') {\r\n        throw new Error('Invalid arguments passed to EventEmitterForwarder');\r\n    }\r\n    this.src = src;\r\n    this.dest = dest;\r\n}\r\n\r\n/**\r\n * Adds event to be forwarded from src to dest.\r\n * @param srcEvent {string} the event that EventEmitterForwarder is listening\r\n * for.\r\n * @param dstEvent {string} the event that will be fired from dest.\r\n * @param arguments all other passed arguments are going to be fired with\r\n * dstEvent.\r\n */\r\nEventEmitterForwarder.prototype.forward = function(...args) {\r\n    const srcEvent = args[0];\r\n\r\n    // This will be the \"this\" value for emit function.\r\n\r\n    args[0] = this.dest;\r\n\r\n    // Using bind.apply to pass the arguments as Array-like object (\"arguments\")\r\n    this.src.addListener(\r\n        srcEvent,\r\n        Function.prototype.bind.apply(this.dest.emit, args));\r\n};\r\n\r\nmodule.exports = EventEmitterForwarder;\r\n","/**\r\n * This utility class defines custom onerror and onunhandledrejection functions.\r\n * The custom error handlers respect the previously-defined error handlers.\r\n * GlobalOnErrorHandler class provides utilities to add many custom error\r\n * handlers and to execute the error handlers directly.\r\n */\r\n\r\n\r\n/**\r\n * List with global error handlers that will be executed.\r\n */\r\nconst handlers = [];\r\n\r\n// If an old handler exists, also fire its events.\r\nconst oldOnErrorHandler = window.onerror;\r\n\r\n/**\r\n * Custom error handler that calls the old global error handler and executes\r\n * all handlers that were previously added.\r\n */\r\nfunction JitsiGlobalErrorHandler(...args) {\r\n    handlers.forEach(handler => handler(...args));\r\n    oldOnErrorHandler && oldOnErrorHandler(...args);\r\n}\r\n\r\n// If an old handler exists, also fire its events.\r\nconst oldOnUnhandledRejection = window.onunhandledrejection;\r\n\r\n/**\r\n * Custom handler that calls the old global handler and executes all handlers\r\n * that were previously added. This handler handles rejected Promises.\r\n */\r\nfunction JitsiGlobalUnhandledRejection(event) {\r\n    handlers.forEach(handler => handler(null, null, null, null, event.reason));\r\n    oldOnUnhandledRejection && oldOnUnhandledRejection(event);\r\n}\r\n\r\n// Setting the custom error handlers.\r\nwindow.onerror = JitsiGlobalErrorHandler;\r\nwindow.onunhandledrejection = JitsiGlobalUnhandledRejection;\r\n\r\nconst GlobalOnErrorHandler = {\r\n    /**\r\n     * Adds new error handlers.\r\n     * @param handler the new handler.\r\n     */\r\n    addHandler(handler) {\r\n        handlers.push(handler);\r\n    },\r\n\r\n    /**\r\n     * Calls the global error handler if there is one.\r\n     * @param error the error to pass to the error handler\r\n     */\r\n    callErrorHandler(error) {\r\n        const errHandler = window.onerror;\r\n\r\n        if (!errHandler) {\r\n            return;\r\n        }\r\n        errHandler(null, null, null, null, error);\r\n    },\r\n\r\n    /**\r\n     * Calls the global rejection handler if there is one.\r\n     * @param error the error to pass to the rejection handler.\r\n     */\r\n    callUnhandledRejectionHandler(error) {\r\n        const errHandler = window.onunhandledrejection;\r\n\r\n        if (!errHandler) {\r\n            return;\r\n        }\r\n        errHandler(error);\r\n    }\r\n};\r\n\r\n\r\nmodule.exports = GlobalOnErrorHandler;\r\n","import EventEmitter from 'events';\r\n\r\n/**\r\n * The class implements basic event operations - add/remove listener.\r\n * NOTE: The purpose of the class is to be extended in order to add\r\n * this functionality to other classes.\r\n */\r\nexport default class Listenable {\r\n    /**\r\n     * Creates new instance.\r\n     * @param {EventEmitter} eventEmitter\r\n     * @constructor\r\n     */\r\n    constructor(eventEmitter = new EventEmitter()) {\r\n        this.eventEmitter = eventEmitter;\r\n\r\n        // aliases for addListener/removeListener\r\n        this.addEventListener = this.on = this.addListener;\r\n        this.removeEventListener = this.off = this.removeListener;\r\n    }\r\n\r\n    /**\r\n     * Adds new listener.\r\n     * @param {String} eventName the name of the event\r\n     * @param {Function} listener the listener.\r\n     * @returns {Function} - The unsubscribe function.\r\n     */\r\n    addListener(eventName, listener) {\r\n        this.eventEmitter.addListener(eventName, listener);\r\n\r\n        return () => this.removeEventListener(eventName, listener);\r\n    }\r\n\r\n    /**\r\n     * Removes listener.\r\n     * @param {String} eventName the name of the event that triggers the\r\n     * listener\r\n     * @param {Function} listener the listener.\r\n     */\r\n    removeListener(eventName, listener) {\r\n        this.eventEmitter.removeListener(eventName, listener);\r\n    }\r\n}\r\n","\r\n\r\n/**\r\n * The method will increase the given number by 1. If the given counter is equal\r\n * or greater to {@link Number.MAX_SAFE_INTEGER} then it will be rolled back to\r\n * 1.\r\n * @param {number} number - An integer counter value to be incremented.\r\n * @return {number} the next counter value increased by 1 (see the description\r\n * above for exception).\r\n */\r\nexport function safeCounterIncrement(number) {\r\n    let nextValue = number;\r\n\r\n    if (number >= Number.MAX_SAFE_INTEGER) {\r\n        nextValue = 0;\r\n    }\r\n\r\n    return nextValue + 1;\r\n}\r\n\r\n/**\r\n * Calculates the average value of am Array of numbers.\r\n *\r\n * @param {Float32Array} valueArray - Array of numbers.\r\n * @returns {number} - Number array average.\r\n */\r\nexport function calculateAverage(valueArray) {\r\n    return valueArray.length > 0 ? valueArray.reduce((a, b) => a + b) / valueArray.length : 0;\r\n}\r\n\r\n\r\n/**\r\n * Returns only the positive values from an array of numbers.\r\n *\r\n * @param {Float32Array} valueArray - Array of vad scores.\r\n * @returns {Array} - Array of positive numbers.\r\n */\r\nexport function filterPositiveValues(valueArray) {\r\n    return valueArray.filter(value => value >= 0);\r\n}\r\n","/**\r\n * @const\r\n */\r\nconst ALPHANUM\r\n    = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\n/**\r\n * Hexadecimal digits.\r\n * @const\r\n */\r\nconst HEX_DIGITS = '0123456789abcdef';\r\n\r\n/**\r\n * Generates random int within the range [min, max]\r\n * @param min the minimum value for the generated number\r\n * @param max the maximum value for the generated number\r\n * @returns random int number\r\n */\r\nfunction randomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n/**\r\n * Get random element from array or string.\r\n * @param {Array|string} arr source\r\n * @returns array element or string character\r\n */\r\nfunction randomElement(arr) {\r\n    return arr[randomInt(0, arr.length - 1)];\r\n}\r\n\r\n/**\r\n * Generate random alphanumeric string.\r\n * @param {number} length expected string length\r\n * @returns {string} random string of specified length\r\n */\r\nfunction randomAlphanumStr(length) {\r\n    let result = '';\r\n\r\n    for (let i = 0; i < length; i += 1) {\r\n        result += randomElement(ALPHANUM);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Exported interface.\r\n */\r\nconst RandomUtil = {\r\n    /**\r\n     * Returns a random hex digit.\r\n     * @returns {*}\r\n     */\r\n    randomHexDigit() {\r\n        return randomElement(HEX_DIGITS);\r\n    },\r\n\r\n    /**\r\n     * Returns a random string of hex digits with length 'len'.\r\n     * @param len the length.\r\n     */\r\n    randomHexString(len) {\r\n        let ret = '';\r\n\r\n        while (len--) { // eslint-disable-line no-param-reassign\r\n            ret += this.randomHexDigit();\r\n        }\r\n\r\n        return ret;\r\n    },\r\n    randomElement,\r\n    randomAlphanumStr,\r\n    randomInt\r\n};\r\n\r\nmodule.exports = RandomUtil;\r\n","/**\r\n* Gets next timeout using the full jitter pattern.\r\n*\r\n* NOTE that there are no checks for argument correctness, so either do the math or use defaults.\r\n*\r\n* @param {number} retry - The retry number.\r\n* @param {number} minDelay - The minimal delay in milliseconds.\r\n* @param {number} base - The exponent base.\r\n* @returns {number} - The amount of waiting before trying another time given in milliseconds.\r\n* @private\r\n*/\r\nexport function getJitterDelay(retry, minDelay = 500, base = 2) {\r\n    return Math.floor((Math.random() * ((Math.pow(base, retry) * 1000) - minDelay)) + minDelay);\r\n}\r\n","const currentExecutingScript = require('current-executing-script');\r\n\r\n/* eslint-disable max-params */\r\n\r\n/**\r\n * Implements utility functions which facilitate the dealing with scripts such\r\n * as the download and execution of a JavaScript file.\r\n */\r\nconst ScriptUtil = {\r\n    /**\r\n     * Loads a script from a specific source.\r\n     *\r\n     * @param src the source from the which the script is to be (down)loaded\r\n     * @param async true to asynchronously load the script or false to\r\n     * synchronously load the script\r\n     * @param prepend true to schedule the loading of the script as soon as\r\n     * possible or false to schedule the loading of the script at the end of the\r\n     * scripts known at the time\r\n     * @param relativeURL whether we need load the library from url relative\r\n     * to the url that lib-jitsi-meet was loaded. Useful when sourcing the\r\n     * library from different location than the app that is using it\r\n     * @param loadCallback on load callback function\r\n     * @param errorCallback callback to be called on error loading the script\r\n     */\r\n    loadScript(\r\n            src,\r\n            async,\r\n            prepend,\r\n            relativeURL,\r\n            loadCallback,\r\n            errorCallback) {\r\n        const d = document;\r\n        const tagName = 'script';\r\n        const script = d.createElement(tagName);\r\n        const referenceNode = d.getElementsByTagName(tagName)[0];\r\n\r\n        script.async = async;\r\n\r\n        if (relativeURL) {\r\n            // finds the src url of the current loaded script\r\n            // and use it as base of the src supplied argument\r\n            const scriptEl = currentExecutingScript();\r\n\r\n            if (scriptEl) {\r\n                const scriptSrc = scriptEl.src;\r\n                const baseScriptSrc\r\n                    = scriptSrc.substring(0, scriptSrc.lastIndexOf('/') + 1);\r\n\r\n                if (scriptSrc && baseScriptSrc) {\r\n                    // eslint-disable-next-line no-param-reassign\r\n                    src = baseScriptSrc + src;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (loadCallback) {\r\n            script.onload = loadCallback;\r\n        }\r\n        if (errorCallback) {\r\n            script.onerror = errorCallback;\r\n        }\r\n\r\n        script.src = src;\r\n        if (prepend) {\r\n            referenceNode.parentNode.insertBefore(script, referenceNode);\r\n        } else {\r\n            referenceNode.parentNode.appendChild(script);\r\n        }\r\n    }\r\n};\r\n\r\n/* eslint-enable max-params */\r\n\r\nmodule.exports = ScriptUtil;\r\n","/**\r\n * Implements a simple hash code for a string (see\r\n * https://en.wikipedia.org/wiki/Java_hashCode()).\r\n *\r\n * @param {string} The string to return a hash of.\r\n * @return {Number} the integer hash code of the string.\r\n */\r\nfunction integerHash(string) {\r\n    if (!string) {\r\n        return 0;\r\n    }\r\n\r\n    let char, hash = 0, i;\r\n\r\n    for (i = 0; i < string.length; i++) {\r\n        char = string.charCodeAt(i);\r\n        hash += char * Math.pow(31, string.length - 1 - i);\r\n        hash = Math.abs(hash | 0); // eslint-disable-line no-bitwise\r\n    }\r\n\r\n    return hash;\r\n}\r\n\r\nmodule.exports = { integerHash };\r\n","const RandomUtil = require('./RandomUtil');\r\n\r\n/**\r\n * from faker.js - Copyright (c) 2014-2015 Matthew Bergman & Marak Squires\r\n * MIT License\r\n * http://github.com/marak/faker.js/\r\n *\r\n * @const\r\n */\r\nconst names = [\r\n    'Aaliyah', 'Aaron', 'Abagail', 'Abbey', 'Abbie', 'Abbigail', 'Abby',\r\n    'Abdiel', 'Abdul', 'Abdullah', 'Abe', 'Abel', 'Abelardo', 'Abigail',\r\n    'Abigale', 'Abigayle', 'Abner', 'Abraham', 'Ada', 'Adah', 'Adalberto',\r\n    'Adaline', 'Adam', 'Adan', 'Addie', 'Addison', 'Adela', 'Adelbert', 'Adele',\r\n    'Adelia', 'Adeline', 'Adell', 'Adella', 'Adelle', 'Aditya', 'Adolf',\r\n    'Adolfo', 'Adolph', 'Adolphus', 'Adonis', 'Adrain', 'Adrian', 'Adriana',\r\n    'Adrianna', 'Adriel', 'Adrien', 'Adrienne', 'Afton', 'Aglae', 'Agnes',\r\n    'Agustin', 'Agustina', 'Ahmad', 'Ahmed', 'Aida', 'Aidan', 'Aiden', 'Aileen',\r\n    'Aisha', 'Aiyana', 'Akeem', 'Al', 'Alaina', 'Alan', 'Alana', 'Alanis',\r\n    'Alanna', 'Alayna', 'Alba', 'Albert', 'Alberta', 'Albertha', 'Alberto',\r\n    'Albin', 'Albina', 'Alda', 'Alden', 'Alec', 'Aleen', 'Alejandra',\r\n    'Alejandrin', 'Alek', 'Alena', 'Alene', 'Alessandra', 'Alessandro',\r\n    'Alessia', 'Aletha', 'Alex', 'Alexa', 'Alexander', 'Alexandra', 'Alexandre',\r\n    'Alexandrea', 'Alexandria', 'Alexandrine', 'Alexandro', 'Alexane',\r\n    'Alexanne', 'Alexie', 'Alexis', 'Alexys', 'Alexzander', 'Alf', 'Alfonso',\r\n    'Alfonzo', 'Alford', 'Alfred', 'Alfreda', 'Alfredo', 'Ali', 'Alia', 'Alice',\r\n    'Alicia', 'Alisa', 'Alisha', 'Alison', 'Alivia', 'Aliya', 'Aliyah', 'Aliza',\r\n    'Alize', 'Allan', 'Allen', 'Allene', 'Allie', 'Allison', 'Ally', 'Alphonso',\r\n    'Alta', 'Althea', 'Alva', 'Alvah', 'Alvena', 'Alvera', 'Alverta', 'Alvina',\r\n    'Alvis', 'Alyce', 'Alycia', 'Alysa', 'Alysha', 'Alyson', 'Alysson',\r\n    'Amalia', 'Amanda', 'Amani', 'Amara', 'Amari', 'Amaya', 'Amber', 'Ambrose',\r\n    'Amelia', 'Amelie', 'Amely', 'America', 'Americo', 'Amie', 'Amina', 'Amir',\r\n    'Amira', 'Amiya', 'Amos', 'Amparo', 'Amy', 'Amya', 'Ana', 'Anabel',\r\n    'Anabelle', 'Anahi', 'Anais', 'Anastacio', 'Anastasia', 'Anderson', 'Andre',\r\n    'Andreane', 'Andreanne', 'Andres', 'Andrew', 'Andy', 'Angel', 'Angela',\r\n    'Angelica', 'Angelina', 'Angeline', 'Angelita', 'Angelo', 'Angie', 'Angus',\r\n    'Anibal', 'Anika', 'Anissa', 'Anita', 'Aniya', 'Aniyah', 'Anjali', 'Anna',\r\n    'Annabel', 'Annabell', 'Annabelle', 'Annalise', 'Annamae', 'Annamarie',\r\n    'Anne', 'Annetta', 'Annette', 'Annie', 'Ansel', 'Ansley', 'Anthony',\r\n    'Antoinette', 'Antone', 'Antonetta', 'Antonette', 'Antonia', 'Antonietta',\r\n    'Antonina', 'Antonio', 'Antwan', 'Antwon', 'Anya', 'April', 'Ara',\r\n    'Araceli', 'Aracely', 'Arch', 'Archibald', 'Ardella', 'Arden', 'Ardith',\r\n    'Arely', 'Ari', 'Ariane', 'Arianna', 'Aric', 'Ariel', 'Arielle', 'Arjun',\r\n    'Arlene', 'Arlie', 'Arlo', 'Armand', 'Armando', 'Armani', 'Arnaldo', 'Arne',\r\n    'Arno', 'Arnold', 'Arnoldo', 'Arnulfo', 'Aron', 'Art', 'Arthur', 'Arturo',\r\n    'Arvel', 'Arvid', 'Arvilla', 'Aryanna', 'Asa', 'Asha', 'Ashlee', 'Ashleigh',\r\n    'Ashley', 'Ashly', 'Ashlynn', 'Ashton', 'Ashtyn', 'Asia', 'Assunta',\r\n    'Astrid', 'Athena', 'Aubree', 'Aubrey', 'Audie', 'Audra', 'Audreanne',\r\n    'Audrey', 'August', 'Augusta', 'Augustine', 'Augustus', 'Aurelia',\r\n    'Aurelie', 'Aurelio', 'Aurore', 'Austen', 'Austin', 'Austyn', 'Autumn',\r\n    'Ava', 'Avery', 'Avis', 'Axel', 'Ayana', 'Ayden', 'Ayla', 'Aylin', 'Baby',\r\n    'Bailee', 'Bailey', 'Barbara', 'Barney', 'Baron', 'Barrett', 'Barry',\r\n    'Bart', 'Bartholome', 'Barton', 'Baylee', 'Beatrice', 'Beau', 'Beaulah',\r\n    'Bell', 'Bella', 'Belle', 'Ben', 'Benedict', 'Benjamin', 'Bennett',\r\n    'Bennie', 'Benny', 'Benton', 'Berenice', 'Bernadette', 'Bernadine',\r\n    'Bernard', 'Bernardo', 'Berneice', 'Bernhard', 'Bernice', 'Bernie',\r\n    'Berniece', 'Bernita', 'Berry', 'Bert', 'Berta', 'Bertha', 'Bertram',\r\n    'Bertrand', 'Beryl', 'Bessie', 'Beth', 'Bethany', 'Bethel', 'Betsy',\r\n    'Bette', 'Bettie', 'Betty', 'Bettye', 'Beulah', 'Beverly', 'Bianka', 'Bill',\r\n    'Billie', 'Billy', 'Birdie', 'Blair', 'Blaise', 'Blake', 'Blanca',\r\n    'Blanche', 'Blaze', 'Bo', 'Bobbie', 'Bobby', 'Bonita', 'Bonnie', 'Boris',\r\n    'Boyd', 'Brad', 'Braden', 'Bradford', 'Bradley', 'Bradly', 'Brady',\r\n    'Braeden', 'Brain', 'Brandi', 'Brando', 'Brandon', 'Brandt', 'Brandy',\r\n    'Brandyn', 'Brannon', 'Branson', 'Brant', 'Braulio', 'Braxton', 'Brayan',\r\n    'Breana', 'Breanna', 'Breanne', 'Brenda', 'Brendan', 'Brenden', 'Brendon',\r\n    'Brenna', 'Brennan', 'Brennon', 'Brent', 'Bret', 'Brett', 'Bria', 'Brian',\r\n    'Briana', 'Brianne', 'Brice', 'Bridget', 'Bridgette', 'Bridie', 'Brielle',\r\n    'Brigitte', 'Brionna', 'Brisa', 'Britney', 'Brittany', 'Brock', 'Broderick',\r\n    'Brody', 'Brook', 'Brooke', 'Brooklyn', 'Brooks', 'Brown', 'Bruce',\r\n    'Bryana', 'Bryce', 'Brycen', 'Bryon', 'Buck', 'Bud', 'Buddy', 'Buford',\r\n    'Bulah', 'Burdette', 'Burley', 'Burnice', 'Buster', 'Cade', 'Caden',\r\n    'Caesar', 'Caitlyn', 'Cale', 'Caleb', 'Caleigh', 'Cali', 'Calista',\r\n    'Callie', 'Camden', 'Cameron', 'Camila', 'Camilla', 'Camille', 'Camren',\r\n    'Camron', 'Camryn', 'Camylle', 'Candace', 'Candelario', 'Candice',\r\n    'Candida', 'Candido', 'Cara', 'Carey', 'Carissa', 'Carlee', 'Carleton',\r\n    'Carley', 'Carli', 'Carlie', 'Carlo', 'Carlos', 'Carlotta', 'Carmel',\r\n    'Carmela', 'Carmella', 'Carmelo', 'Carmen', 'Carmine', 'Carol', 'Carolanne',\r\n    'Carole', 'Carolina', 'Caroline', 'Carolyn', 'Carolyne', 'Carrie',\r\n    'Carroll', 'Carson', 'Carter', 'Cary', 'Casandra', 'Casey', 'Casimer',\r\n    'Casimir', 'Casper', 'Cassandra', 'Cassandre', 'Cassidy', 'Cassie',\r\n    'Catalina', 'Caterina', 'Catharine', 'Catherine', 'Cathrine', 'Cathryn',\r\n    'Cathy', 'Cayla', 'Ceasar', 'Cecelia', 'Cecil', 'Cecile', 'Cecilia',\r\n    'Cedrick', 'Celestine', 'Celestino', 'Celia', 'Celine', 'Cesar', 'Chad',\r\n    'Chadd', 'Chadrick', 'Chaim', 'Chance', 'Chandler', 'Chanel', 'Chanelle',\r\n    'Charity', 'Charlene', 'Charles', 'Charley', 'Charlie', 'Charlotte',\r\n    'Chase', 'Chasity', 'Chauncey', 'Chaya', 'Chaz', 'Chelsea', 'Chelsey',\r\n    'Chelsie', 'Chesley', 'Chester', 'Chet', 'Cheyanne', 'Cheyenne', 'Chloe',\r\n    'Chris', 'Christ', 'Christa', 'Christelle', 'Christian', 'Christiana',\r\n    'Christina', 'Christine', 'Christop', 'Christophe', 'Christopher',\r\n    'Christy', 'Chyna', 'Ciara', 'Cicero', 'Cielo', 'Cierra', 'Cindy',\r\n    'Citlalli', 'Clair', 'Claire', 'Clara', 'Clarabelle', 'Clare', 'Clarissa',\r\n    'Clark', 'Claud', 'Claude', 'Claudia', 'Claudie', 'Claudine', 'Clay',\r\n    'Clemens', 'Clement', 'Clementina', 'Clementine', 'Clemmie', 'Cleo',\r\n    'Cleora', 'Cleta', 'Cletus', 'Cleve', 'Cleveland', 'Clifford', 'Clifton',\r\n    'Clint', 'Clinton', 'Clotilde', 'Clovis', 'Cloyd', 'Clyde', 'Coby', 'Cody',\r\n    'Colby', 'Cole', 'Coleman', 'Colin', 'Colleen', 'Collin', 'Colt', 'Colten',\r\n    'Colton', 'Columbus', 'Concepcion', 'Conner', 'Connie', 'Connor', 'Conor',\r\n    'Conrad', 'Constance', 'Constantin', 'Consuelo', 'Cooper', 'Cora',\r\n    'Coralie', 'Corbin', 'Cordelia', 'Cordell', 'Cordia', 'Cordie', 'Corene',\r\n    'Corine', 'Cornelius', 'Cornell', 'Corrine', 'Cortez', 'Cortney', 'Cory',\r\n    'Coty', 'Courtney', 'Coy', 'Craig', 'Crawford', 'Creola', 'Cristal',\r\n    'Cristian', 'Cristina', 'Cristobal', 'Cristopher', 'Cruz', 'Crystal',\r\n    'Crystel', 'Cullen', 'Curt', 'Curtis', 'Cydney', 'Cynthia', 'Cyril',\r\n    'Cyrus', 'Dagmar', 'Dahlia', 'Daija', 'Daisha', 'Daisy', 'Dakota', 'Dale',\r\n    'Dallas', 'Dallin', 'Dalton', 'Damaris', 'Dameon', 'Damian', 'Damien',\r\n    'Damion', 'Damon', 'Dan', 'Dana', 'Dandre', 'Dane', 'D\\'angelo', 'Dangelo',\r\n    'Danial', 'Daniela', 'Daniella', 'Danielle', 'Danika', 'Dannie', 'Danny',\r\n    'Dante', 'Danyka', 'Daphne', 'Daphnee', 'Daphney', 'Darby', 'Daren',\r\n    'Darian', 'Dariana', 'Darien', 'Dario', 'Darion', 'Darius', 'Darlene',\r\n    'Daron', 'Darrel', 'Darrell', 'Darren', 'Darrick', 'Darrin', 'Darrion',\r\n    'Darron', 'Darryl', 'Darwin', 'Daryl', 'Dashawn', 'Dasia', 'Dave', 'David',\r\n    'Davin', 'Davion', 'Davon', 'Davonte', 'Dawn', 'Dawson', 'Dax', 'Dayana',\r\n    'Dayna', 'Dayne', 'Dayton', 'Dean', 'Deangelo', 'Deanna', 'Deborah',\r\n    'Declan', 'Dedric', 'Dedrick', 'Dee', 'Deion', 'Deja', 'Dejah', 'Dejon',\r\n    'Dejuan', 'Delaney', 'Delbert', 'Delfina', 'Delia', 'Delilah', 'Dell',\r\n    'Della', 'Delmer', 'Delores', 'Delpha', 'Delphia', 'Delphine', 'Delta',\r\n    'Demarco', 'Demarcus', 'Demario', 'Demetris', 'Demetrius', 'Demond', 'Dena',\r\n    'Denis', 'Dennis', 'Deon', 'Deondre', 'Deontae', 'Deonte', 'Dereck',\r\n    'Derek', 'Derick', 'Deron', 'Derrick', 'Deshaun', 'Deshawn', 'Desiree',\r\n    'Desmond', 'Dessie', 'Destany', 'Destin', 'Destinee', 'Destiney', 'Destini',\r\n    'Destiny', 'Devan', 'Devante', 'Deven', 'Devin', 'Devon', 'Devonte',\r\n    'Devyn', 'Dewayne', 'Dewitt', 'Dexter', 'Diamond', 'Diana', 'Dianna',\r\n    'Diego', 'Dillan', 'Dillon', 'Dimitri', 'Dina', 'Dino', 'Dion', 'Dixie',\r\n    'Dock', 'Dolly', 'Dolores', 'Domenic', 'Domenica', 'Domenick', 'Domenico',\r\n    'Domingo', 'Dominic', 'Dominique', 'Don', 'Donald', 'Donato', 'Donavon',\r\n    'Donna', 'Donnell', 'Donnie', 'Donny', 'Dora', 'Dorcas', 'Dorian', 'Doris',\r\n    'Dorothea', 'Dorothy', 'Dorris', 'Dortha', 'Dorthy', 'Doug', 'Douglas',\r\n    'Dovie', 'Doyle', 'Drake', 'Drew', 'Duane', 'Dudley', 'Dulce', 'Duncan',\r\n    'Durward', 'Dustin', 'Dusty', 'Dwight', 'Dylan', 'Earl', 'Earlene',\r\n    'Earline', 'Earnest', 'Earnestine', 'Easter', 'Easton', 'Ebba', 'Ebony',\r\n    'Ed', 'Eda', 'Edd', 'Eddie', 'Eden', 'Edgar', 'Edgardo', 'Edison', 'Edmond',\r\n    'Edmund', 'Edna', 'Eduardo', 'Edward', 'Edwardo', 'Edwin', 'Edwina',\r\n    'Edyth', 'Edythe', 'Effie', 'Efrain', 'Efren', 'Eileen', 'Einar', 'Eino',\r\n    'Eladio', 'Elaina', 'Elbert', 'Elda', 'Eldon', 'Eldora', 'Eldred',\r\n    'Eldridge', 'Eleanora', 'Eleanore', 'Eleazar', 'Electa', 'Elena', 'Elenor',\r\n    'Elenora', 'Eleonore', 'Elfrieda', 'Eli', 'Elian', 'Eliane', 'Elias',\r\n    'Eliezer', 'Elijah', 'Elinor', 'Elinore', 'Elisa', 'Elisabeth', 'Elise',\r\n    'Eliseo', 'Elisha', 'Elissa', 'Eliza', 'Elizabeth', 'Ella', 'Ellen',\r\n    'Ellie', 'Elliot', 'Elliott', 'Ellis', 'Ellsworth', 'Elmer', 'Elmira',\r\n    'Elmo', 'Elmore', 'Elna', 'Elnora', 'Elody', 'Eloisa', 'Eloise', 'Elouise',\r\n    'Eloy', 'Elroy', 'Elsa', 'Else', 'Elsie', 'Elta', 'Elton', 'Elva', 'Elvera',\r\n    'Elvie', 'Elvis', 'Elwin', 'Elwyn', 'Elyse', 'Elyssa', 'Elza', 'Emanuel',\r\n    'Emelia', 'Emelie', 'Emely', 'Emerald', 'Emerson', 'Emery', 'Emie', 'Emil',\r\n    'Emile', 'Emilia', 'Emiliano', 'Emilie', 'Emilio', 'Emily', 'Emma',\r\n    'Emmalee', 'Emmanuel', 'Emmanuelle', 'Emmet', 'Emmett', 'Emmie', 'Emmitt',\r\n    'Emmy', 'Emory', 'Ena', 'Enid', 'Enoch', 'Enola', 'Enos', 'Enrico',\r\n    'Enrique', 'Ephraim', 'Era', 'Eriberto', 'Eric', 'Erica', 'Erich', 'Erick',\r\n    'Ericka', 'Erik', 'Erika', 'Erin', 'Erling', 'Erna', 'Ernest', 'Ernestina',\r\n    'Ernestine', 'Ernesto', 'Ernie', 'Ervin', 'Erwin', 'Eryn', 'Esmeralda',\r\n    'Esperanza', 'Esta', 'Esteban', 'Estefania', 'Estel', 'Estell', 'Estella',\r\n    'Estelle', 'Estevan', 'Esther', 'Estrella', 'Etha', 'Ethan', 'Ethel',\r\n    'Ethelyn', 'Ethyl', 'Ettie', 'Eudora', 'Eugene', 'Eugenia', 'Eula', 'Eulah',\r\n    'Eulalia', 'Euna', 'Eunice', 'Eusebio', 'Eva', 'Evalyn', 'Evan',\r\n    'Evangeline', 'Evans', 'Eve', 'Eveline', 'Evelyn', 'Everardo', 'Everett',\r\n    'Everette', 'Evert', 'Evie', 'Ewald', 'Ewell', 'Ezekiel', 'Ezequiel',\r\n    'Ezra', 'Fabian', 'Fabiola', 'Fae', 'Fannie', 'Fanny', 'Fatima', 'Faustino',\r\n    'Fausto', 'Favian', 'Fay', 'Faye', 'Federico', 'Felicia', 'Felicita',\r\n    'Felicity', 'Felipa', 'Felipe', 'Felix', 'Felton', 'Fermin', 'Fern',\r\n    'Fernando', 'Ferne', 'Fidel', 'Filiberto', 'Filomena', 'Finn', 'Fiona',\r\n    'Flavie', 'Flavio', 'Fleta', 'Fletcher', 'Flo', 'Florence', 'Florencio',\r\n    'Florian', 'Florida', 'Florine', 'Flossie', 'Floy', 'Floyd', 'Ford',\r\n    'Forest', 'Forrest', 'Foster', 'Frances', 'Francesca', 'Francesco',\r\n    'Francis', 'Francisca', 'Francisco', 'Franco', 'Frank', 'Frankie', 'Franz',\r\n    'Fred', 'Freda', 'Freddie', 'Freddy', 'Frederic', 'Frederick', 'Frederik',\r\n    'Frederique', 'Fredrick', 'Fredy', 'Freeda', 'Freeman', 'Freida', 'Frida',\r\n    'Frieda', 'Friedrich', 'Fritz', 'Furman', 'Gabe', 'Gabriel', 'Gabriella',\r\n    'Gabrielle', 'Gaetano', 'Gage', 'Gail', 'Gardner', 'Garett', 'Garfield',\r\n    'Garland', 'Garnet', 'Garnett', 'Garret', 'Garrett', 'Garrick', 'Garrison',\r\n    'Garry', 'Garth', 'Gaston', 'Gavin', 'Gay', 'Gayle', 'Gaylord', 'Gene',\r\n    'General', 'Genesis', 'Genevieve', 'Gennaro', 'Genoveva', 'Geo', 'Geoffrey',\r\n    'George', 'Georgette', 'Georgiana', 'Georgianna', 'Geovanni', 'Geovanny',\r\n    'Geovany', 'Gerald', 'Geraldine', 'Gerard', 'Gerardo', 'Gerda', 'Gerhard',\r\n    'Germaine', 'German', 'Gerry', 'Gerson', 'Gertrude', 'Gia', 'Gianni',\r\n    'Gideon', 'Gilbert', 'Gilberto', 'Gilda', 'Giles', 'Gillian', 'Gina',\r\n    'Gino', 'Giovani', 'Giovanna', 'Giovanni', 'Giovanny', 'Gisselle',\r\n    'Giuseppe', 'Gladyce', 'Gladys', 'Glen', 'Glenda', 'Glenna', 'Glennie',\r\n    'Gloria', 'Godfrey', 'Golda', 'Golden', 'Gonzalo', 'Gordon', 'Grace',\r\n    'Gracie', 'Graciela', 'Grady', 'Graham', 'Grant', 'Granville', 'Grayce',\r\n    'Grayson', 'Green', 'Greg', 'Gregg', 'Gregoria', 'Gregorio', 'Gregory',\r\n    'Greta', 'Gretchen', 'Greyson', 'Griffin', 'Grover', 'Guadalupe', 'Gudrun',\r\n    'Guido', 'Guillermo', 'Guiseppe', 'Gunnar', 'Gunner', 'Gus', 'Gussie',\r\n    'Gust', 'Gustave', 'Guy', 'Gwen', 'Gwendolyn', 'Hadley', 'Hailee', 'Hailey',\r\n    'Hailie', 'Hal', 'Haleigh', 'Haley', 'Halie', 'Halle', 'Hallie', 'Hank',\r\n    'Hanna', 'Hannah', 'Hans', 'Hardy', 'Harley', 'Harmon', 'Harmony', 'Harold',\r\n    'Harrison', 'Harry', 'Harvey', 'Haskell', 'Hassan', 'Hassie', 'Hattie',\r\n    'Haven', 'Hayden', 'Haylee', 'Hayley', 'Haylie', 'Hazel', 'Hazle', 'Heath',\r\n    'Heather', 'Heaven', 'Heber', 'Hector', 'Heidi', 'Helen', 'Helena',\r\n    'Helene', 'Helga', 'Hellen', 'Helmer', 'Heloise', 'Henderson', 'Henri',\r\n    'Henriette', 'Henry', 'Herbert', 'Herman', 'Hermann', 'Hermina', 'Herminia',\r\n    'Herminio', 'Hershel', 'Herta', 'Hertha', 'Hester', 'Hettie', 'Hilario',\r\n    'Hilbert', 'Hilda', 'Hildegard', 'Hillard', 'Hillary', 'Hilma', 'Hilton',\r\n    'Hipolito', 'Hiram', 'Hobart', 'Holden', 'Hollie', 'Hollis', 'Holly',\r\n    'Hope', 'Horace', 'Horacio', 'Hortense', 'Hosea', 'Houston', 'Howard',\r\n    'Howell', 'Hoyt', 'Hubert', 'Hudson', 'Hugh', 'Hulda', 'Humberto', 'Hunter',\r\n    'Hyman', 'Ian', 'Ibrahim', 'Icie', 'Ida', 'Idell', 'Idella', 'Ignacio',\r\n    'Ignatius', 'Ike', 'Ila', 'Ilene', 'Iliana', 'Ima', 'Imani', 'Imelda',\r\n    'Immanuel', 'Imogene', 'Ines', 'Irma', 'Irving', 'Irwin', 'Isaac', 'Isabel',\r\n    'Isabell', 'Isabella', 'Isabelle', 'Isac', 'Isadore', 'Isai', 'Isaiah',\r\n    'Isaias', 'Isidro', 'Ismael', 'Isobel', 'Isom', 'Israel', 'Issac', 'Itzel',\r\n    'Iva', 'Ivah', 'Ivory', 'Ivy', 'Izabella', 'Izaiah', 'Jabari', 'Jace',\r\n    'Jacey', 'Jacinthe', 'Jacinto', 'Jack', 'Jackeline', 'Jackie', 'Jacklyn',\r\n    'Jackson', 'Jacky', 'Jaclyn', 'Jacquelyn', 'Jacques', 'Jacynthe', 'Jada',\r\n    'Jade', 'Jaden', 'Jadon', 'Jadyn', 'Jaeden', 'Jaida', 'Jaiden', 'Jailyn',\r\n    'Jaime', 'Jairo', 'Jakayla', 'Jake', 'Jakob', 'Jaleel', 'Jalen', 'Jalon',\r\n    'Jalyn', 'Jamaal', 'Jamal', 'Jamar', 'Jamarcus', 'Jamel', 'Jameson',\r\n    'Jamey', 'Jamie', 'Jamil', 'Jamir', 'Jamison', 'Jammie', 'Jan', 'Jana',\r\n    'Janae', 'Jane', 'Janelle', 'Janessa', 'Janet', 'Janice', 'Janick', 'Janie',\r\n    'Janis', 'Janiya', 'Jannie', 'Jany', 'Jaquan', 'Jaquelin', 'Jaqueline',\r\n    'Jared', 'Jaren', 'Jarod', 'Jaron', 'Jarred', 'Jarrell', 'Jarret',\r\n    'Jarrett', 'Jarrod', 'Jarvis', 'Jasen', 'Jasmin', 'Jason', 'Jasper',\r\n    'Jaunita', 'Javier', 'Javon', 'Javonte', 'Jay', 'Jayce', 'Jaycee', 'Jayda',\r\n    'Jayde', 'Jayden', 'Jaydon', 'Jaylan', 'Jaylen', 'Jaylin', 'Jaylon',\r\n    'Jayme', 'Jayne', 'Jayson', 'Jazlyn', 'Jazmin', 'Jazmyn', 'Jazmyne', 'Jean',\r\n    'Jeanette', 'Jeanie', 'Jeanne', 'Jed', 'Jedediah', 'Jedidiah', 'Jeff',\r\n    'Jefferey', 'Jeffery', 'Jeffrey', 'Jeffry', 'Jena', 'Jenifer', 'Jennie',\r\n    'Jennifer', 'Jennings', 'Jennyfer', 'Jensen', 'Jerad', 'Jerald', 'Jeramie',\r\n    'Jeramy', 'Jerel', 'Jeremie', 'Jeremy', 'Jermain', 'Jermaine', 'Jermey',\r\n    'Jerod', 'Jerome', 'Jeromy', 'Jerrell', 'Jerrod', 'Jerrold', 'Jerry',\r\n    'Jess', 'Jesse', 'Jessica', 'Jessie', 'Jessika', 'Jessy', 'Jessyca',\r\n    'Jesus', 'Jett', 'Jettie', 'Jevon', 'Jewel', 'Jewell', 'Jillian', 'Jimmie',\r\n    'Jimmy', 'Jo', 'Joan', 'Joana', 'Joanie', 'Joanne', 'Joannie', 'Joanny',\r\n    'Joany', 'Joaquin', 'Jocelyn', 'Jodie', 'Jody', 'Joe', 'Joel', 'Joelle',\r\n    'Joesph', 'Joey', 'Johan', 'Johann', 'Johanna', 'Johathan', 'John',\r\n    'Johnathan', 'Johnathon', 'Johnnie', 'Johnny', 'Johnpaul', 'Johnson',\r\n    'Jolie', 'Jon', 'Jonas', 'Jonatan', 'Jonathan', 'Jonathon', 'Jordan',\r\n    'Jordane', 'Jordi', 'Jordon', 'Jordy', 'Jordyn', 'Jorge', 'Jose', 'Josefa',\r\n    'Josefina', 'Joseph', 'Josephine', 'Josh', 'Joshua', 'Joshuah', 'Josiah',\r\n    'Josiane', 'Josianne', 'Josie', 'Josue', 'Jovan', 'Jovani', 'Jovanny',\r\n    'Jovany', 'Joy', 'Joyce', 'Juana', 'Juanita', 'Judah', 'Judd', 'Jude',\r\n    'Judge', 'Judson', 'Judy', 'Jules', 'Julia', 'Julian', 'Juliana',\r\n    'Julianne', 'Julie', 'Julien', 'Juliet', 'Julio', 'Julius', 'June',\r\n    'Junior', 'Junius', 'Justen', 'Justice', 'Justina', 'Justine', 'Juston',\r\n    'Justus', 'Justyn', 'Juvenal', 'Juwan', 'Kacey', 'Kaci', 'Kacie', 'Kade',\r\n    'Kaden', 'Kadin', 'Kaela', 'Kaelyn', 'Kaia', 'Kailee', 'Kailey', 'Kailyn',\r\n    'Kaitlin', 'Kaitlyn', 'Kale', 'Kaleb', 'Kaleigh', 'Kaley', 'Kali', 'Kallie',\r\n    'Kameron', 'Kamille', 'Kamren', 'Kamron', 'Kamryn', 'Kane', 'Kara',\r\n    'Kareem', 'Karelle', 'Karen', 'Kari', 'Kariane', 'Karianne', 'Karina',\r\n    'Karine', 'Karl', 'Karlee', 'Karley', 'Karli', 'Karlie', 'Karolann',\r\n    'Karson', 'Kasandra', 'Kasey', 'Kassandra', 'Katarina', 'Katelin',\r\n    'Katelyn', 'Katelynn', 'Katharina', 'Katherine', 'Katheryn', 'Kathleen',\r\n    'Kathlyn', 'Kathryn', 'Kathryne', 'Katlyn', 'Katlynn', 'Katrina', 'Katrine',\r\n    'Kattie', 'Kavon', 'Kay', 'Kaya', 'Kaycee', 'Kayden', 'Kayla', 'Kaylah',\r\n    'Kaylee', 'Kayleigh', 'Kayley', 'Kayli', 'Kaylie', 'Kaylin', 'Keagan',\r\n    'Keanu', 'Keara', 'Keaton', 'Keegan', 'Keeley', 'Keely', 'Keenan', 'Keira',\r\n    'Keith', 'Kellen', 'Kelley', 'Kelli', 'Kellie', 'Kelly', 'Kelsi', 'Kelsie',\r\n    'Kelton', 'Kelvin', 'Ken', 'Kendall', 'Kendra', 'Kendrick', 'Kenna',\r\n    'Kennedi', 'Kennedy', 'Kenneth', 'Kennith', 'Kenny', 'Kenton', 'Kenya',\r\n    'Kenyatta', 'Kenyon', 'Keon', 'Keshaun', 'Keshawn', 'Keven', 'Kevin',\r\n    'Kevon', 'Keyon', 'Keyshawn', 'Khalid', 'Khalil', 'Kian', 'Kiana', 'Kianna',\r\n    'Kiara', 'Kiarra', 'Kiel', 'Kiera', 'Kieran', 'Kiley', 'Kim', 'Kimberly',\r\n    'King', 'Kip', 'Kira', 'Kirk', 'Kirsten', 'Kirstin', 'Kitty', 'Kobe',\r\n    'Koby', 'Kody', 'Kolby', 'Kole', 'Korbin', 'Korey', 'Kory', 'Kraig', 'Kris',\r\n    'Krista', 'Kristian', 'Kristin', 'Kristina', 'Kristofer', 'Kristoffer',\r\n    'Kristopher', 'Kristy', 'Krystal', 'Krystel', 'Krystina', 'Kurt', 'Kurtis',\r\n    'Kyla', 'Kyle', 'Kylee', 'Kyleigh', 'Kyler', 'Kylie', 'Kyra', 'Lacey',\r\n    'Lacy', 'Ladarius', 'Lafayette', 'Laila', 'Laisha', 'Lamar', 'Lambert',\r\n    'Lamont', 'Lance', 'Landen', 'Lane', 'Laney', 'Larissa', 'Laron', 'Larry',\r\n    'Larue', 'Laura', 'Laurel', 'Lauren', 'Laurence', 'Lauretta', 'Lauriane',\r\n    'Laurianne', 'Laurie', 'Laurine', 'Laury', 'Lauryn', 'Lavada', 'Lavern',\r\n    'Laverna', 'Laverne', 'Lavina', 'Lavinia', 'Lavon', 'Lavonne', 'Lawrence',\r\n    'Lawson', 'Layla', 'Layne', 'Lazaro', 'Lea', 'Leann', 'Leanna', 'Leanne',\r\n    'Leatha', 'Leda', 'Lee', 'Leif', 'Leila', 'Leilani', 'Lela', 'Lelah',\r\n    'Leland', 'Lelia', 'Lempi', 'Lemuel', 'Lenna', 'Lennie', 'Lenny', 'Lenora',\r\n    'Lenore', 'Leo', 'Leola', 'Leon', 'Leonard', 'Leonardo', 'Leone', 'Leonel',\r\n    'Leonie', 'Leonor', 'Leonora', 'Leopold', 'Leopoldo', 'Leora', 'Lera',\r\n    'Lesley', 'Leslie', 'Lesly', 'Lessie', 'Lester', 'Leta', 'Letha', 'Letitia',\r\n    'Levi', 'Lew', 'Lewis', 'Lexi', 'Lexie', 'Lexus', 'Lia', 'Liam', 'Liana',\r\n    'Libbie', 'Libby', 'Lila', 'Lilian', 'Liliana', 'Liliane', 'Lilla',\r\n    'Lillian', 'Lilliana', 'Lillie', 'Lilly', 'Lily', 'Lilyan', 'Lina',\r\n    'Lincoln', 'Linda', 'Lindsay', 'Lindsey', 'Linnea', 'Linnie', 'Linwood',\r\n    'Lionel', 'Lisa', 'Lisandro', 'Lisette', 'Litzy', 'Liza', 'Lizeth',\r\n    'Lizzie', 'Llewellyn', 'Lloyd', 'Logan', 'Lois', 'Lola', 'Lolita', 'Loma',\r\n    'Lon', 'London', 'Lonie', 'Lonnie', 'Lonny', 'Lonzo', 'Lora', 'Loraine',\r\n    'Loren', 'Lorena', 'Lorenz', 'Lorenza', 'Lorenzo', 'Lori', 'Lorine',\r\n    'Lorna', 'Lottie', 'Lou', 'Louie', 'Louisa', 'Lourdes', 'Louvenia',\r\n    'Lowell', 'Loy', 'Loyal', 'Loyce', 'Lucas', 'Luciano', 'Lucie', 'Lucienne',\r\n    'Lucile', 'Lucinda', 'Lucio', 'Lucious', 'Lucius', 'Lucy', 'Ludie',\r\n    'Ludwig', 'Lue', 'Luella', 'Luigi', 'Luis', 'Luisa', 'Lukas', 'Lula',\r\n    'Lulu', 'Luna', 'Lupe', 'Lura', 'Lurline', 'Luther', 'Luz', 'Lyda', 'Lydia',\r\n    'Lyla', 'Lynn', 'Lyric', 'Lysanne', 'Mabel', 'Mabelle', 'Mable', 'Mac',\r\n    'Macey', 'Maci', 'Macie', 'Mack', 'Mackenzie', 'Macy', 'Madaline',\r\n    'Madalyn', 'Maddison', 'Madeline', 'Madelyn', 'Madelynn', 'Madge', 'Madie',\r\n    'Madilyn', 'Madisen', 'Madison', 'Madisyn', 'Madonna', 'Madyson', 'Mae',\r\n    'Maegan', 'Maeve', 'Mafalda', 'Magali', 'Magdalen', 'Magdalena', 'Maggie',\r\n    'Magnolia', 'Magnus', 'Maia', 'Maida', 'Maiya', 'Major', 'Makayla',\r\n    'Makenna', 'Makenzie', 'Malachi', 'Malcolm', 'Malika', 'Malinda', 'Mallie',\r\n    'Mallory', 'Malvina', 'Mandy', 'Manley', 'Manuel', 'Manuela', 'Mara',\r\n    'Marc', 'Marcel', 'Marcelina', 'Marcelino', 'Marcella', 'Marcelle',\r\n    'Marcellus', 'Marcelo', 'Marcia', 'Marco', 'Marcos', 'Marcus', 'Margaret',\r\n    'Margarete', 'Margarett', 'Margaretta', 'Margarette', 'Margarita', 'Marge',\r\n    'Margie', 'Margot', 'Margret', 'Marguerite', 'Maria', 'Mariah', 'Mariam',\r\n    'Marian', 'Mariana', 'Mariane', 'Marianna', 'Marianne', 'Mariano',\r\n    'Maribel', 'Marie', 'Mariela', 'Marielle', 'Marietta', 'Marilie', 'Marilou',\r\n    'Marilyne', 'Marina', 'Mario', 'Marion', 'Marisa', 'Marisol', 'Maritza',\r\n    'Marjolaine', 'Marjorie', 'Marjory', 'Mark', 'Markus', 'Marlee', 'Marlen',\r\n    'Marlene', 'Marley', 'Marlin', 'Marlon', 'Marques', 'Marquis', 'Marquise',\r\n    'Marshall', 'Marta', 'Martin', 'Martina', 'Martine', 'Marty', 'Marvin',\r\n    'Mary', 'Maryam', 'Maryjane', 'Maryse', 'Mason', 'Mateo', 'Mathew',\r\n    'Mathias', 'Mathilde', 'Matilda', 'Matilde', 'Matt', 'Matteo', 'Mattie',\r\n    'Maud', 'Maude', 'Maudie', 'Maureen', 'Maurice', 'Mauricio', 'Maurine',\r\n    'Maverick', 'Mavis', 'Max', 'Maxie', 'Maxime', 'Maximilian', 'Maximillia',\r\n    'Maximillian', 'Maximo', 'Maximus', 'Maxine', 'Maxwell', 'May', 'Maya',\r\n    'Maybell', 'Maybelle', 'Maye', 'Maymie', 'Maynard', 'Mayra', 'Mazie',\r\n    'Mckayla', 'Mckenna', 'Mckenzie', 'Meagan', 'Meaghan', 'Meda', 'Megane',\r\n    'Meggie', 'Meghan', 'Mekhi', 'Melany', 'Melba', 'Melisa', 'Melissa',\r\n    'Mellie', 'Melody', 'Melvin', 'Melvina', 'Melyna', 'Melyssa', 'Mercedes',\r\n    'Meredith', 'Merl', 'Merle', 'Merlin', 'Merritt', 'Mertie', 'Mervin',\r\n    'Meta', 'Mia', 'Micaela', 'Micah', 'Michael', 'Michaela', 'Michale',\r\n    'Micheal', 'Michel', 'Michele', 'Michelle', 'Miguel', 'Mikayla', 'Mike',\r\n    'Mikel', 'Milan', 'Miles', 'Milford', 'Miller', 'Millie', 'Milo', 'Milton',\r\n    'Mina', 'Minerva', 'Minnie', 'Miracle', 'Mireille', 'Mireya', 'Misael',\r\n    'Missouri', 'Misty', 'Mitchel', 'Mitchell', 'Mittie', 'Modesta', 'Modesto',\r\n    'Mohamed', 'Mohammad', 'Mohammed', 'Moises', 'Mollie', 'Molly', 'Mona',\r\n    'Monica', 'Monique', 'Monroe', 'Monserrat', 'Monserrate', 'Montana',\r\n    'Monte', 'Monty', 'Morgan', 'Moriah', 'Morris', 'Mortimer', 'Morton',\r\n    'Mose', 'Moses', 'Moshe', 'Mossie', 'Mozell', 'Mozelle', 'Muhammad',\r\n    'Muriel', 'Murl', 'Murphy', 'Murray', 'Mustafa', 'Mya', 'Myah', 'Mylene',\r\n    'Myles', 'Myra', 'Myriam', 'Myrl', 'Myrna', 'Myron', 'Myrtice', 'Myrtie',\r\n    'Myrtis', 'Myrtle', 'Nadia', 'Nakia', 'Name', 'Nannie', 'Naomi', 'Naomie',\r\n    'Napoleon', 'Narciso', 'Nash', 'Nasir', 'Nat', 'Natalia', 'Natalie',\r\n    'Natasha', 'Nathan', 'Nathanael', 'Nathanial', 'Nathaniel', 'Nathen',\r\n    'Nayeli', 'Neal', 'Ned', 'Nedra', 'Neha', 'Neil', 'Nelda', 'Nella', 'Nelle',\r\n    'Nellie', 'Nels', 'Nelson', 'Neoma', 'Nestor', 'Nettie', 'Neva', 'Newell',\r\n    'Newton', 'Nia', 'Nicholas', 'Nicholaus', 'Nichole', 'Nick', 'Nicklaus',\r\n    'Nickolas', 'Nico', 'Nicola', 'Nicolas', 'Nicole', 'Nicolette', 'Nigel',\r\n    'Nikita', 'Nikki', 'Nikko', 'Niko', 'Nikolas', 'Nils', 'Nina', 'Noah',\r\n    'Noble', 'Noe', 'Noel', 'Noelia', 'Noemi', 'Noemie', 'Noemy', 'Nola',\r\n    'Nolan', 'Nona', 'Nora', 'Norbert', 'Norberto', 'Norene', 'Norma', 'Norris',\r\n    'Norval', 'Norwood', 'Nova', 'Novella', 'Nya', 'Nyah', 'Nyasia', 'Obie',\r\n    'Oceane', 'Ocie', 'Octavia', 'Oda', 'Odell', 'Odessa', 'Odie', 'Ofelia',\r\n    'Okey', 'Ola', 'Olaf', 'Ole', 'Olen', 'Oleta', 'Olga', 'Olin', 'Oliver',\r\n    'Ollie', 'Oma', 'Omari', 'Omer', 'Ona', 'Onie', 'Opal', 'Ophelia', 'Ora',\r\n    'Oral', 'Oran', 'Oren', 'Orie', 'Orin', 'Orion', 'Orland', 'Orlando',\r\n    'Orlo', 'Orpha', 'Orrin', 'Orval', 'Orville', 'Osbaldo', 'Osborne', 'Oscar',\r\n    'Osvaldo', 'Oswald', 'Oswaldo', 'Otha', 'Otho', 'Otilia', 'Otis', 'Ottilie',\r\n    'Ottis', 'Otto', 'Ova', 'Owen', 'Ozella', 'Pablo', 'Paige', 'Palma',\r\n    'Pamela', 'Pansy', 'Paolo', 'Paris', 'Parker', 'Pascale', 'Pasquale', 'Pat',\r\n    'Patience', 'Patricia', 'Patrick', 'Patsy', 'Pattie', 'Paul', 'Paula',\r\n    'Pauline', 'Paxton', 'Payton', 'Pearl', 'Pearlie', 'Pearline', 'Pedro',\r\n    'Peggie', 'Penelope', 'Percival', 'Percy', 'Perry', 'Pete', 'Peter',\r\n    'Petra', 'Peyton', 'Philip', 'Phoebe', 'Phyllis', 'Pierce', 'Pierre',\r\n    'Pietro', 'Pink', 'Pinkie', 'Piper', 'Polly', 'Porter', 'Precious',\r\n    'Presley', 'Preston', 'Price', 'Prince', 'Princess', 'Priscilla',\r\n    'Providenci', 'Prudence', 'Queen', 'Queenie', 'Quentin', 'Quincy', 'Quinn',\r\n    'Quinten', 'Quinton', 'Rachael', 'Rachel', 'Rachelle', 'Rae', 'Raegan',\r\n    'Rafael', 'Rafaela', 'Raheem', 'Rahsaan', 'Rahul', 'Raina', 'Raleigh',\r\n    'Ralph', 'Ramiro', 'Ramon', 'Ramona', 'Randal', 'Randall', 'Randi', 'Randy',\r\n    'Ransom', 'Raoul', 'Raphael', 'Raphaelle', 'Raquel', 'Rashad', 'Rashawn',\r\n    'Rasheed', 'Raul', 'Raven', 'Ray', 'Raymond', 'Raymundo', 'Reagan',\r\n    'Reanna', 'Reba', 'Rebeca', 'Rebecca', 'Rebeka', 'Rebekah', 'Reece', 'Reed',\r\n    'Reese', 'Regan', 'Reggie', 'Reginald', 'Reid', 'Reilly', 'Reina',\r\n    'Reinhold', 'Remington', 'Rene', 'Renee', 'Ressie', 'Reta', 'Retha',\r\n    'Retta', 'Reuben', 'Reva', 'Rex', 'Rey', 'Reyes', 'Reymundo', 'Reyna',\r\n    'Reynold', 'Rhea', 'Rhett', 'Rhianna', 'Rhiannon', 'Rhoda', 'Ricardo',\r\n    'Richard', 'Richie', 'Richmond', 'Rick', 'Rickey', 'Rickie', 'Ricky',\r\n    'Rico', 'Rigoberto', 'Riley', 'Rita', 'River', 'Robb', 'Robbie', 'Robert',\r\n    'Roberta', 'Roberto', 'Robin', 'Robyn', 'Rocio', 'Rocky', 'Rod', 'Roderick',\r\n    'Rodger', 'Rodolfo', 'Rodrick', 'Rodrigo', 'Roel', 'Rogelio', 'Roger',\r\n    'Rogers', 'Rolando', 'Rollin', 'Roma', 'Romaine', 'Roman', 'Ron', 'Ronaldo',\r\n    'Ronny', 'Roosevelt', 'Rory', 'Rosa', 'Rosalee', 'Rosalia', 'Rosalind',\r\n    'Rosalinda', 'Rosalyn', 'Rosamond', 'Rosanna', 'Rosario', 'Roscoe', 'Rose',\r\n    'Rosella', 'Roselyn', 'Rosemarie', 'Rosemary', 'Rosendo', 'Rosetta',\r\n    'Rosie', 'Rosina', 'Roslyn', 'Ross', 'Rossie', 'Rowan', 'Rowena', 'Rowland',\r\n    'Roxane', 'Roxanne', 'Roy', 'Royal', 'Royce', 'Rozella', 'Ruben', 'Rubie',\r\n    'Ruby', 'Rubye', 'Rudolph', 'Rudy', 'Rupert', 'Russ', 'Russel', 'Russell',\r\n    'Rusty', 'Ruth', 'Ruthe', 'Ruthie', 'Ryan', 'Ryann', 'Ryder', 'Rylan',\r\n    'Rylee', 'Ryleigh', 'Ryley', 'Sabina', 'Sabrina', 'Sabryna', 'Sadie',\r\n    'Sadye', 'Sage', 'Saige', 'Sallie', 'Sally', 'Salma', 'Salvador',\r\n    'Salvatore', 'Sam', 'Samanta', 'Samantha', 'Samara', 'Samir', 'Sammie',\r\n    'Sammy', 'Samson', 'Sandra', 'Sandrine', 'Sandy', 'Sanford', 'Santa',\r\n    'Santiago', 'Santina', 'Santino', 'Santos', 'Sarah', 'Sarai', 'Sarina',\r\n    'Sasha', 'Saul', 'Savanah', 'Savanna', 'Savannah', 'Savion', 'Scarlett',\r\n    'Schuyler', 'Scot', 'Scottie', 'Scotty', 'Seamus', 'Sean', 'Sebastian',\r\n    'Sedrick', 'Selena', 'Selina', 'Selmer', 'Serena', 'Serenity', 'Seth',\r\n    'Shad', 'Shaina', 'Shakira', 'Shana', 'Shane', 'Shanel', 'Shanelle',\r\n    'Shania', 'Shanie', 'Shaniya', 'Shanna', 'Shannon', 'Shanny', 'Shanon',\r\n    'Shany', 'Sharon', 'Shaun', 'Shawn', 'Shawna', 'Shaylee', 'Shayna',\r\n    'Shayne', 'Shea', 'Sheila', 'Sheldon', 'Shemar', 'Sheridan', 'Sherman',\r\n    'Sherwood', 'Shirley', 'Shyann', 'Shyanne', 'Sibyl', 'Sid', 'Sidney',\r\n    'Sienna', 'Sierra', 'Sigmund', 'Sigrid', 'Sigurd', 'Silas', 'Sim', 'Simeon',\r\n    'Simone', 'Sincere', 'Sister', 'Skye', 'Skyla', 'Skylar', 'Sofia',\r\n    'Soledad', 'Solon', 'Sonia', 'Sonny', 'Sonya', 'Sophia', 'Sophie',\r\n    'Spencer', 'Stacey', 'Stacy', 'Stan', 'Stanford', 'Stanley', 'Stanton',\r\n    'Stefan', 'Stefanie', 'Stella', 'Stephan', 'Stephania', 'Stephanie',\r\n    'Stephany', 'Stephen', 'Stephon', 'Sterling', 'Steve', 'Stevie', 'Stewart',\r\n    'Stone', 'Stuart', 'Summer', 'Sunny', 'Susan', 'Susana', 'Susanna', 'Susie',\r\n    'Suzanne', 'Sven', 'Syble', 'Sydnee', 'Sydney', 'Sydni', 'Sydnie', 'Sylvan',\r\n    'Sylvester', 'Sylvia', 'Tabitha', 'Tad', 'Talia', 'Talon', 'Tamara',\r\n    'Tamia', 'Tania', 'Tanner', 'Tanya', 'Tara', 'Taryn', 'Tate', 'Tatum',\r\n    'Tatyana', 'Taurean', 'Tavares', 'Taya', 'Taylor', 'Teagan', 'Ted', 'Telly',\r\n    'Terence', 'Teresa', 'Terrance', 'Terrell', 'Terrence', 'Terrill', 'Terry',\r\n    'Tess', 'Tessie', 'Tevin', 'Thad', 'Thaddeus', 'Thalia', 'Thea', 'Thelma',\r\n    'Theo', 'Theodora', 'Theodore', 'Theresa', 'Therese', 'Theresia', 'Theron',\r\n    'Thomas', 'Thora', 'Thurman', 'Tia', 'Tiana', 'Tianna', 'Tiara', 'Tierra',\r\n    'Tiffany', 'Tillman', 'Timmothy', 'Timmy', 'Timothy', 'Tina', 'Tito',\r\n    'Titus', 'Tobin', 'Toby', 'Tod', 'Tom', 'Tomas', 'Tomasa', 'Tommie',\r\n    'Toney', 'Toni', 'Tony', 'Torey', 'Torrance', 'Torrey', 'Toy', 'Trace',\r\n    'Tracey', 'Tracy', 'Travis', 'Travon', 'Tre', 'Tremaine', 'Tremayne',\r\n    'Trent', 'Trenton', 'Tressa', 'Tressie', 'Treva', 'Trever', 'Trevion',\r\n    'Trevor', 'Trey', 'Trinity', 'Trisha', 'Tristian', 'Tristin', 'Triston',\r\n    'Troy', 'Trudie', 'Trycia', 'Trystan', 'Turner', 'Twila', 'Tyler', 'Tyra',\r\n    'Tyree', 'Tyreek', 'Tyrel', 'Tyrell', 'Tyrese', 'Tyrique', 'Tyshawn',\r\n    'Tyson', 'Ubaldo', 'Ulices', 'Ulises', 'Una', 'Unique', 'Urban', 'Uriah',\r\n    'Uriel', 'Ursula', 'Vada', 'Valentin', 'Valentina', 'Valentine', 'Valerie',\r\n    'Vallie', 'Van', 'Vance', 'Vanessa', 'Vaughn', 'Veda', 'Velda', 'Vella',\r\n    'Velma', 'Velva', 'Vena', 'Verda', 'Verdie', 'Vergie', 'Verla', 'Verlie',\r\n    'Vern', 'Verna', 'Verner', 'Vernice', 'Vernie', 'Vernon', 'Verona',\r\n    'Veronica', 'Vesta', 'Vicenta', 'Vicente', 'Vickie', 'Vicky', 'Victor',\r\n    'Victoria', 'Vida', 'Vidal', 'Vilma', 'Vince', 'Vincent', 'Vincenza',\r\n    'Vincenzo', 'Vinnie', 'Viola', 'Violet', 'Violette', 'Virgie', 'Virgil',\r\n    'Virginia', 'Virginie', 'Vita', 'Vito', 'Viva', 'Vivian', 'Viviane',\r\n    'Vivianne', 'Vivien', 'Vivienne', 'Vladimir', 'Wade', 'Waino', 'Waldo',\r\n    'Walker', 'Wallace', 'Walter', 'Walton', 'Wanda', 'Ward', 'Warren',\r\n    'Watson', 'Wava', 'Waylon', 'Wayne', 'Webster', 'Weldon', 'Wellington',\r\n    'Wendell', 'Wendy', 'Werner', 'Westley', 'Weston', 'Whitney', 'Wilber',\r\n    'Wilbert', 'Wilburn', 'Wiley', 'Wilford', 'Wilfred', 'Wilfredo', 'Wilfrid',\r\n    'Wilhelm', 'Wilhelmine', 'Will', 'Willa', 'Willard', 'William', 'Willie',\r\n    'Willis', 'Willow', 'Willy', 'Wilma', 'Wilmer', 'Wilson', 'Wilton',\r\n    'Winfield', 'Winifred', 'Winnifred', 'Winona', 'Winston', 'Woodrow',\r\n    'Wyatt', 'Wyman', 'Xander', 'Xavier', 'Xzavier', 'Yadira', 'Yasmeen',\r\n    'Yasmin', 'Yasmine', 'Yazmin', 'Yesenia', 'Yessenia', 'Yolanda', 'Yoshiko',\r\n    'Yvette', 'Yvonne', 'Zachariah', 'Zachary', 'Zachery', 'Zack', 'Zackary',\r\n    'Zackery', 'Zakary', 'Zander', 'Zane', 'Zaria', 'Zechariah', 'Zelda',\r\n    'Zella', 'Zelma', 'Zena', 'Zetta', 'Zion', 'Zita', 'Zoe', 'Zoey', 'Zoie',\r\n    'Zoila', 'Zola', 'Zora', 'Zula'\r\n];\r\n\r\n/**\r\n * Generate random username.\r\n * @returns {string} random username\r\n */\r\nfunction generateUsername() {\r\n    const name = RandomUtil.randomElement(names);\r\n    const suffix = RandomUtil.randomAlphanumStr(3);\r\n\r\n    return `${name}-${suffix}`;\r\n}\r\n\r\nmodule.exports = {\r\n    generateUsername\r\n};\r\n","import Statistics from '../statistics/statistics';\r\n\r\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\r\n\r\n/**\r\n * Creates new instance of <tt>ComponentsVersions</tt> which will be discovering\r\n * the versions of conferencing system components in given\r\n * <tt>JitsiConference</tt>.\r\n * @param conference <tt>JitsiConference</tt> instance which will be used to\r\n *        listen for focus presence updates.\r\n * @constructor\r\n */\r\nexport default function ComponentsVersions(conference) {\r\n\r\n    this.versions = {};\r\n\r\n    this.conference = conference;\r\n    this.conference.addCommandListener(\r\n        'versions', this.processVersions.bind(this));\r\n}\r\n\r\nComponentsVersions.prototype.processVersions\r\n    = function(versions, mucResource, mucJid) {\r\n        if (!this.conference._isFocus(mucJid)) {\r\n            logger.warn(\r\n                `Received versions not from the focus user: ${versions}`,\r\n                mucJid);\r\n\r\n            return;\r\n        }\r\n\r\n        const log = [];\r\n\r\n        versions.children.forEach(component => {\r\n\r\n            const name = component.attributes.name;\r\n            const version = component.value;\r\n\r\n            if (this.versions[name] !== version) {\r\n                this.versions[name] = version;\r\n                logger.info(`Got ${name} version: ${version}`);\r\n\r\n                log.push({\r\n                    id: 'component_version',\r\n                    component: name,\r\n                    version\r\n                });\r\n            }\r\n        });\r\n\r\n        // logs versions to stats\r\n        if (log.length > 0) {\r\n            Statistics.sendLog(JSON.stringify(log));\r\n        }\r\n    };\r\n\r\n/**\r\n * Obtains the version of conferencing system component.\r\n * @param componentName the name of the component for which we want to obtain\r\n *        the version.\r\n * @returns {String} which describes the version of the component identified by\r\n *          given <tt>componentName</tt> or <tt>undefined</tt> if not found.\r\n */\r\nComponentsVersions.prototype.getComponentVersion = function(componentName) {\r\n    return this.versions[componentName];\r\n};\r\n","import { getLogger } from 'jitsi-meet-logger';\r\nimport { $iq } from 'strophe.js';\r\n\r\nimport Listenable from '../util/Listenable';\r\n\r\nimport * as VideoSIPGWConstants from './VideoSIPGWConstants';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * The event name for current sip video session state changed.\r\n * @type {string} event name for sip video session state changed.\r\n */\r\nconst STATE_CHANGED = 'STATE_CHANGED';\r\n\r\n/**\r\n * Jitsi video SIP GW session. Holding its state and able to start/stop it.\r\n * When session is in OFF or FAILED stated it cannot be used anymore.\r\n */\r\nexport default class JitsiVideoSIPGWSession extends Listenable {\r\n\r\n    /**\r\n     * Creates new session with the desired sip address and display name.\r\n     *\r\n     * @param {string} sipAddress - The sip address to use when\r\n     * starting the session.\r\n     * @param {string} displayName - The display name to use for\r\n     * that participant.\r\n     * @param {ChatRoom} chatRoom - The chat room this session is bound to.\r\n     */\r\n    constructor(sipAddress, displayName, chatRoom) {\r\n        super();\r\n\r\n        this.sipAddress = sipAddress;\r\n        this.displayName = displayName;\r\n        this.chatRoom = chatRoom;\r\n\r\n        /*\r\n         * The initial state is undefined. Initial state cannot be STATE_OFF,\r\n         * the session enters this state when it was in STATE_ON and was stopped\r\n         * and such session cannot be used anymore.\r\n         *\r\n         * @type {VideoSIPGWConstants|undefined}\r\n         */\r\n        this.state = undefined;\r\n    }\r\n\r\n    /**\r\n     * Stops the current session.\r\n     */\r\n    stop() {\r\n        if (this.state === VideoSIPGWConstants.STATE_OFF\r\n            || this.state === VideoSIPGWConstants.STATE_FAILED) {\r\n            logger.warn('Video SIP GW session already stopped or failed!');\r\n\r\n            return;\r\n        }\r\n\r\n        this._sendJibriIQ('stop');\r\n    }\r\n\r\n    /**\r\n     * Starts a new session. Sends an iq to the focus.\r\n     */\r\n    start() {\r\n        // if state is off, this session was active for some reason\r\n        // and we should create new one, rather than reusing it\r\n        if (this.state === VideoSIPGWConstants.STATE_ON\r\n            || this.state === VideoSIPGWConstants.STATE_OFF\r\n            || this.state === VideoSIPGWConstants.STATE_PENDING\r\n            || this.state === VideoSIPGWConstants.STATE_RETRYING) {\r\n            logger.warn('Video SIP GW session already started!');\r\n\r\n            return;\r\n        }\r\n\r\n        this._sendJibriIQ('start');\r\n    }\r\n\r\n    /**\r\n     * Changes the state of this session.\r\n     *\r\n     * @param {string} newState - The new {VideoSIPGWConstants} state to set.\r\n     * @param {string} [optional] failureReason - The reason why a failure state\r\n     * was entered.\r\n     * @returns {void}\r\n     */\r\n    setState(newState, failureReason) {\r\n        if (newState === this.state) {\r\n            return;\r\n        }\r\n\r\n        const oldState = this.state;\r\n\r\n        this.state = newState;\r\n        this.eventEmitter.emit(STATE_CHANGED,\r\n            {\r\n                address: this.sipAddress,\r\n                failureReason,\r\n                oldState,\r\n                newState: this.state,\r\n                displayName: this.displayName\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Subscribes the passed listener to the event for state change of this\r\n     * session.\r\n     *\r\n     * @param {Function} listener - The function that will receive the event.\r\n     */\r\n    addStateListener(listener) {\r\n        this.addListener(STATE_CHANGED, listener);\r\n    }\r\n\r\n    /**\r\n     * Unsubscribes the passed handler.\r\n     *\r\n     * @param {Function} listener - The function to be removed.\r\n     */\r\n    removeStateListener(listener) {\r\n        this.removeListener(STATE_CHANGED, listener);\r\n    }\r\n\r\n    /**\r\n     * Sends a jibri command using an iq.\r\n     *\r\n     * @private\r\n     * @param {string} action - The action to send ('start' or 'stop').\r\n     */\r\n    _sendJibriIQ(action) {\r\n        const attributes = {\r\n            'xmlns': 'http://jitsi.org/protocol/jibri',\r\n            'action': action,\r\n            sipaddress: this.sipAddress\r\n        };\r\n\r\n        attributes.displayname = this.displayName;\r\n\r\n        const iq = $iq({\r\n            to: this.chatRoom.focusMucJid,\r\n            type: 'set' })\r\n            .c('jibri', attributes)\r\n            .up();\r\n\r\n        logger.debug(`${action} video SIP GW session`, iq.nodeTree);\r\n        this.chatRoom.connection.sendIQ(\r\n            iq,\r\n            () => {}, // eslint-disable-line no-empty-function\r\n            error => {\r\n                logger.error(\r\n                    `Failed to ${action} video SIP GW session, error: `, error);\r\n                this.setState(VideoSIPGWConstants.STATE_FAILED);\r\n            });\r\n    }\r\n}\r\n","import { getLogger } from 'jitsi-meet-logger';\r\nconst logger = getLogger(__filename);\r\n\r\nimport JitsiVideoSIPGWSession from './JitsiVideoSIPGWSession';\r\nimport * as Constants from './VideoSIPGWConstants';\r\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\r\n\r\n/**\r\n * Main video SIP GW handler. Stores references of all created sessions.\r\n */\r\nexport default class VideoSIPGW {\r\n\r\n    /**\r\n     * Creates new handler.\r\n     *\r\n     * @param {ChatRoom} chatRoom - Tha chat room to handle.\r\n     */\r\n    constructor(chatRoom) {\r\n        this.chatRoom = chatRoom;\r\n        this.eventEmitter = chatRoom.eventEmitter;\r\n        logger.debug('creating VideoSIPGW');\r\n        this.sessions = {};\r\n\r\n        this.sessionStateChangeListener = this.sessionStateChanged.bind(this);\r\n\r\n        // VideoSIPGW, JitsiConference and ChatRoom are not reusable and no\r\n        // more than one VideoSIPGW can be created per JitsiConference,\r\n        // so we don't bother to cleanup\r\n        chatRoom.addPresenceListener('jibri-sip-call-state',\r\n            this.handleJibriSIPState.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Handles presence nodes with name: jibri-sip-call-state.\r\n     *\r\n     * @param {Object} node the presence node Object to handle.\r\n     * Object representing part of the presence received over xmpp.\r\n     */\r\n    handleJibriSIPState(node) {\r\n        const attributes = node.attributes;\r\n\r\n        if (!attributes) {\r\n            return;\r\n        }\r\n\r\n        logger.debug('Handle video sip gw state : ', attributes);\r\n\r\n        const newState = attributes.state;\r\n\r\n        if (newState === this.state) {\r\n            return;\r\n        }\r\n\r\n        switch (newState) {\r\n        case Constants.STATE_ON:\r\n        case Constants.STATE_OFF:\r\n        case Constants.STATE_PENDING:\r\n        case Constants.STATE_RETRYING:\r\n        case Constants.STATE_FAILED: {\r\n            const address = attributes.sipaddress;\r\n\r\n            if (!address) {\r\n                return;\r\n            }\r\n\r\n            // find the corresponding session and set its state\r\n            const session = this.sessions[address];\r\n\r\n            if (session) {\r\n                session.setState(newState, attributes.failure_reason);\r\n            } else {\r\n                logger.warn('Video SIP GW session not found:', address);\r\n            }\r\n        }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates new session and stores its reference if it does not exist or\r\n     * returns an error otherwise.\r\n     *\r\n     * @param {string} sipAddress - The sip address to use.\r\n     * @param {string} displayName - The display name to use.\r\n     * @returns {JitsiVideoSIPGWSession|Error}\r\n     */\r\n    createVideoSIPGWSession(sipAddress, displayName) {\r\n        if (this.sessions[sipAddress]) {\r\n            logger.warn('There was already a Video SIP GW session for address',\r\n                sipAddress);\r\n\r\n            return new Error(Constants.ERROR_SESSION_EXISTS);\r\n        }\r\n\r\n        const session = new JitsiVideoSIPGWSession(\r\n            sipAddress, displayName, this.chatRoom);\r\n\r\n        session.addStateListener(this.sessionStateChangeListener);\r\n\r\n        this.sessions[sipAddress] = session;\r\n\r\n        return session;\r\n    }\r\n\r\n    /**\r\n     * Listener for session state changed. When a session goes to off or failed\r\n     * we delete its reference.\r\n     *\r\n     * @param {options} event - { address, oldState, newState, displayName }\r\n     */\r\n    sessionStateChanged(event) {\r\n        const address = event.address;\r\n\r\n        if (event.newState === Constants.STATE_OFF\r\n            || event.newState === Constants.STATE_FAILED) {\r\n            const session = this.sessions[address];\r\n\r\n            if (!session) {\r\n                logger.error('Missing Video SIP GW session with address:',\r\n                    address);\r\n\r\n                return;\r\n            }\r\n\r\n            session.removeStateListener(this.sessionStateChangeListener);\r\n            delete this.sessions[address];\r\n        }\r\n\r\n        this.eventEmitter.emit(\r\n            XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\r\n            event);\r\n    }\r\n}\r\n","/**\r\n * Status that video SIP GW service is available.\r\n * @type {string}\r\n */\r\nexport const STATUS_AVAILABLE = 'available';\r\n\r\n/**\r\n * Status that video SIP GW service is not available.\r\n * @type {string}\r\n */\r\nexport const STATUS_UNDEFINED = 'undefined';\r\n\r\n/**\r\n * Status that video SIP GW service is available but there are no free nodes\r\n * at the moment to serve new requests.\r\n * @type {string}\r\n */\r\nexport const STATUS_BUSY = 'busy';\r\n\r\n/**\r\n * Video SIP GW session state, currently running.\r\n * @type {string}\r\n */\r\nexport const STATE_ON = 'on';\r\n\r\n/**\r\n * Video SIP GW session state, currently stopped and not running.\r\n * @type {string}\r\n */\r\nexport const STATE_OFF = 'off';\r\n\r\n/**\r\n * Video SIP GW session state, currently is starting.\r\n * @type {string}\r\n */\r\nexport const STATE_PENDING = 'pending';\r\n\r\n/**\r\n * Video SIP GW session state, has observed some issues and is retrying at the\r\n * moment.\r\n * @type {string}\r\n */\r\nexport const STATE_RETRYING = 'retrying';\r\n\r\n/**\r\n * Video SIP GW session state, tried to start but it failed.\r\n * @type {string}\r\n */\r\nexport const STATE_FAILED = 'failed';\r\n\r\n/**\r\n * Error on trying to create video SIP GW session in conference where\r\n * there is no room connection (hasn't joined or has left the room).\r\n * @type {string}\r\n */\r\nexport const ERROR_NO_CONNECTION = 'error_no_connection';\r\n\r\n/**\r\n * Error on trying to create video SIP GW session with address for which\r\n * there is an already created session.\r\n * @type {string}\r\n */\r\nexport const ERROR_SESSION_EXISTS = 'error_session_already_exists';\r\n","/* global\r\n    __filename\r\n*/\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { createAudioContext } from './WebAudioUtils';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * The AudioMixer, as the name implies, mixes a number of MediaStreams containing audio tracks into a single\r\n * MediaStream.\r\n */\r\nexport default class AudioMixer {\r\n    /**\r\n     * Create AudioMixer instance.\r\n     */\r\n    constructor() {\r\n        this._started = false;\r\n        this._streamsToMix = [];\r\n        this._streamMSSArray = [];\r\n    }\r\n\r\n    /**\r\n     * Add audio MediaStream to be mixed, if the stream doesn't contain any audio tracks it will be ignored.\r\n     *\r\n     * @param {MediaStream} stream - MediaStream to be mixed.\r\n     */\r\n    addMediaStream(stream) {\r\n        if (!stream.getAudioTracks()) {\r\n            logger.warn('Added MediaStream doesn\\'t contain audio tracks.');\r\n        }\r\n\r\n        this._streamsToMix.push(stream);\r\n    }\r\n\r\n    /**\r\n     * At this point a WebAudio ChannelMergerNode is created and and the two associated MediaStreams are connected to\r\n     * it; the resulting mixed MediaStream is returned.\r\n     *\r\n     * @returns {MediaStream} - MediaStream containing added streams mixed together, or null if no MediaStream\r\n     * is added.\r\n     */\r\n    start() {\r\n        // If the mixer was already started just return the existing mixed stream.\r\n        if (this._started) {\r\n            return this._mixedMSD.stream;\r\n        }\r\n\r\n        this._audioContext = createAudioContext();\r\n\r\n        if (!this._streamsToMix.length) {\r\n            logger.warn('No MediaStream\\'s added to AudioMixer, nothing will happen.');\r\n\r\n            return null;\r\n        }\r\n\r\n        this._started = true;\r\n\r\n        this._mixedMSD = this._audioContext.createMediaStreamDestination();\r\n\r\n        for (const stream of this._streamsToMix) {\r\n            const streamMSS = this._audioContext.createMediaStreamSource(stream);\r\n\r\n            streamMSS.connect(this._mixedMSD);\r\n\r\n            // Maintain a list of MediaStreamAudioSourceNode so we can disconnect them on reset.\r\n            this._streamMSSArray.push(streamMSS);\r\n        }\r\n\r\n        return this._mixedMSD.stream;\r\n    }\r\n\r\n    /**\r\n     * Disconnect MediaStreamAudioSourceNode and clear references.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    reset() {\r\n        this._started = false;\r\n        this._streamsToMix = [];\r\n\r\n        // Clean up created MediaStreamAudioSourceNode.\r\n        for (const streamMSS of this._streamMSSArray) {\r\n            streamMSS.disconnect();\r\n        }\r\n\r\n        this._streamMSSArray = [];\r\n\r\n        if (this._audioContext) {\r\n            this._audioContext = undefined;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Adapter that creates AudioContext objects depending on the browser.\r\n *\r\n * @returns {AudioContext} - Return a new AudioContext or undefined if the browser does not support it.\r\n */\r\nexport function createAudioContext(options) {\r\n    const AudioContextImpl = window.AudioContext || window.webkitAudioContext;\r\n\r\n    if (!AudioContextImpl) {\r\n        return undefined;\r\n    }\r\n\r\n    return new AudioContextImpl(options);\r\n}\r\n","/* global $ */\r\n\r\nimport { b64_sha1, Strophe } from 'strophe.js'; // eslint-disable-line camelcase\r\n\r\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\r\nimport Listenable from '../util/Listenable';\r\n\r\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\r\n\r\n/**\r\n * The property\r\n */\r\nconst IDENTITY_PROPERTIES = [ 'category', 'type', 'lang', 'name' ];\r\nconst IDENTITY_PROPERTIES_FOR_COMPARE = [ 'category', 'type', 'lang' ];\r\nconst HASH = 'sha-1';\r\n\r\nexport const ERROR_FEATURE_VERSION_MISMATCH = 'Feature version mismatch';\r\n\r\n/**\r\n *\r\n * @param a\r\n * @param b\r\n */\r\nfunction compareIdentities(a, b) {\r\n    let res = 0;\r\n\r\n    IDENTITY_PROPERTIES_FOR_COMPARE.some(key =>\r\n        (res = ((a[key] > b[key]) && 1) || ((a[key] < b[key]) && -1)) !== 0\r\n    );\r\n\r\n    return res;\r\n}\r\n\r\n/**\r\n * Produces a sha-1 from provided identity and features values.\r\n *\r\n * @param {Array<Object>} identities - The identity objects.\r\n * @param {Array<string>} features - The features.\r\n * @returns {string}\r\n */\r\nfunction generateSha(identities, features) {\r\n    const sortedIdentities = identities.sort(compareIdentities).reduce(\r\n        (accumulatedValue, identity) => `${\r\n            IDENTITY_PROPERTIES.reduce(\r\n                (tmp, key, idx) =>\r\n                    tmp\r\n                        + (idx === 0 ? '' : '/')\r\n                        + (identity[key] ? identity[key] : ''),\r\n                '')\r\n        }<`, '');\r\n    const sortedFeatures = features.sort().reduce(\r\n        (tmp, feature) => `${tmp + feature}<`, '');\r\n\r\n    return b64_sha1(sortedIdentities + sortedFeatures);\r\n}\r\n\r\n/**\r\n * Implements xep-0115 ( http://xmpp.org/extensions/xep-0115.html )\r\n */\r\nexport default class Caps extends Listenable {\r\n    /**\r\n     * Constructs new Caps instance.\r\n     * @param {Strophe.Connection} connection the strophe connection object\r\n     * @param {String} node the value of the node attribute of the \"c\" xml node\r\n     * that will be sent to the other participants\r\n     */\r\n    constructor(connection = {}, node = 'http://jitsi.org/jitsimeet') {\r\n        super();\r\n        this.node = node;\r\n        this.disco = connection.disco;\r\n        if (!this.disco) {\r\n            throw new Error(\r\n                'Missing strophe-plugins '\r\n                + '(disco plugin is required)!');\r\n        }\r\n\r\n        this.versionToCapabilities = Object.create(null);\r\n        this.jidToVersion = Object.create(null);\r\n        this.version = '';\r\n        this.rooms = new Set();\r\n\r\n        const emuc = connection.emuc;\r\n\r\n        emuc.addListener(XMPPEvents.EMUC_ROOM_ADDED,\r\n            room => this._addChatRoom(room));\r\n        emuc.addListener(XMPPEvents.EMUC_ROOM_REMOVED,\r\n            room => this._removeChatRoom(room));\r\n        Object.keys(emuc.rooms).forEach(jid => {\r\n            this._addChatRoom(emuc.rooms[jid]);\r\n        });\r\n\r\n        Strophe.addNamespace('CAPS', 'http://jabber.org/protocol/caps');\r\n        this.disco.addFeature(Strophe.NS.CAPS);\r\n        connection.addHandler(this._handleCaps.bind(this), Strophe.NS.CAPS);\r\n\r\n        this._onMucMemberLeft = this._removeJidToVersionEntry.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Adds new feature to the list of supported features for the local\r\n     * participant\r\n     * @param {String} feature the name of the feature.\r\n     * @param {boolean} submit if true - new presence with updated \"c\" node\r\n     * will be sent.\r\n     */\r\n    addFeature(feature, submit = false) {\r\n        this.disco.addFeature(feature);\r\n        this._generateVersion();\r\n        if (submit) {\r\n            this.submit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes a feature from the list of supported features for the local\r\n     * participant\r\n     * @param {String} feature the name of the feature.\r\n     * @param {boolean} submit if true - new presence with updated \"c\" node\r\n     * will be sent.\r\n     */\r\n    removeFeature(feature, submit = false) {\r\n        this.disco.removeFeature(feature);\r\n        this._generateVersion();\r\n        if (submit) {\r\n            this.submit();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends new presence stanza for every room from the list of rooms.\r\n     */\r\n    submit() {\r\n        this.rooms.forEach(room => room.sendPresence());\r\n    }\r\n\r\n    /**\r\n     * Returns a set with the features for a participant.\r\n     * @param {String} jid the jid of the participant\r\n     * @param {int} timeout the timeout in ms for reply from the participant.\r\n     * @returns {Promise<Set<String>, Error>}\r\n     */\r\n    getFeatures(jid, timeout = 5000) {\r\n        const user\r\n            = jid in this.jidToVersion ? this.jidToVersion[jid] : null;\r\n\r\n        if (!user || !(user.version in this.versionToCapabilities)) {\r\n            const node = user ? `${user.node}#${user.version}` : null;\r\n\r\n            return this._getDiscoInfo(jid, node, timeout)\r\n                .then(({ features, identities }) => {\r\n                    if (user) {\r\n                        const sha = generateSha(\r\n                            Array.from(identities),\r\n                            Array.from(features)\r\n                        );\r\n                        const receivedNode = `${user.node}#${sha}`;\r\n\r\n                        if (receivedNode === node) {\r\n                            this.versionToCapabilities[receivedNode] = features;\r\n\r\n                            return features;\r\n                        }\r\n\r\n                        // Check once if it has been cached asynchronously.\r\n                        if (this.versionToCapabilities[receivedNode]) {\r\n                            return this.versionToCapabilities[receivedNode];\r\n                        }\r\n\r\n                        logger.error(`Expected node ${node} but received ${\r\n                            receivedNode}`);\r\n\r\n                        return Promise.reject(ERROR_FEATURE_VERSION_MISMATCH);\r\n                    }\r\n                });\r\n        }\r\n\r\n        return Promise.resolve(this.versionToCapabilities[user.version]);\r\n    }\r\n\r\n    /**\r\n     * Returns a set with the features for a host.\r\n     * @param {String} jid the jid of the host\r\n     * @param {int} timeout the timeout in ms for reply from the host.\r\n     * @returns {Promise<Set<String>, Error>}\r\n     */\r\n    getFeaturesAndIdentities(jid, timeout = 5000) {\r\n        return this._getDiscoInfo(jid, null, timeout);\r\n    }\r\n\r\n    /**\r\n     * Returns a set with the features and identities for a host.\r\n     * @param {String} jid the jid of the host\r\n     * @param {String|null} node the node to query\r\n     * @param {int} timeout the timeout in ms for reply from the host.\r\n     * @returns {Promise<Object>}\r\n     * @private\r\n     */\r\n    _getDiscoInfo(jid, node, timeout) {\r\n        return new Promise((resolve, reject) =>\r\n            this.disco.info(jid, node, response => {\r\n                const features = new Set();\r\n                const identities = new Set();\r\n\r\n                $(response)\r\n                    .find('>query>feature')\r\n                    .each(\r\n                        (_, el) => features.add(el.getAttribute('var')));\r\n                $(response)\r\n                    .find('>query>identity')\r\n                    .each(\r\n                        (_, el) => identities.add({\r\n                            type: el.getAttribute('type'),\r\n                            name: el.getAttribute('name'),\r\n                            category: el.getAttribute('category')\r\n                        }));\r\n                resolve({\r\n                    features,\r\n                    identities });\r\n            }, reject, timeout)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Adds ChatRoom instance to the list of rooms. Adds listeners to the room\r\n     * and adds \"c\" element to the presences of the room.\r\n     * @param {ChatRoom} room the room.\r\n     */\r\n    _addChatRoom(room) {\r\n        this.rooms.add(room);\r\n        room.addListener(XMPPEvents.MUC_MEMBER_LEFT, this._onMucMemberLeft);\r\n        this._fixChatRoomPresenceMap(room);\r\n    }\r\n\r\n    /**\r\n     * Removes ChatRoom instance from the list of rooms. Removes listeners\r\n     * added from the Caps class.\r\n     * @param {ChatRoom} room the room.\r\n     */\r\n    _removeChatRoom(room) {\r\n        this.rooms.delete(room);\r\n        room.removeListener(XMPPEvents.MUC_MEMBER_LEFT, this._onMucMemberLeft);\r\n    }\r\n\r\n    /**\r\n     * Creates/updates the \"c\" xml node into the presence of the passed room.\r\n     * @param {ChatRoom} room the room.\r\n     */\r\n    _fixChatRoomPresenceMap(room) {\r\n        room.addToPresence('c', {\r\n            attributes: {\r\n                xmlns: Strophe.NS.CAPS,\r\n                hash: HASH,\r\n                node: this.node,\r\n                ver: this.version\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles this.version changes.\r\n     */\r\n    _notifyVersionChanged() {\r\n        // update the version for all rooms\r\n        this.rooms.forEach(room => this._fixChatRoomPresenceMap(room));\r\n    }\r\n\r\n    /**\r\n     * Generates the value for the \"ver\" attribute.\r\n     */\r\n    _generateVersion() {\r\n        this.version\r\n            = generateSha(this.disco._identities, this.disco._features);\r\n\r\n        this._notifyVersionChanged();\r\n    }\r\n\r\n    /**\r\n     * Parses the \"c\" xml node from presence.\r\n     * @param {DOMElement} stanza the presence packet\r\n     */\r\n    _handleCaps(stanza) {\r\n        const from = stanza.getAttribute('from');\r\n        const caps = stanza.querySelector('c');\r\n        const version = caps.getAttribute('ver');\r\n        const node = caps.getAttribute('node');\r\n        const oldVersion = this.jidToVersion[from];\r\n\r\n        this.jidToVersion[from] = { version,\r\n            node };\r\n        if (oldVersion && oldVersion.version !== version) {\r\n            this.eventEmitter.emit(XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\r\n                from);\r\n        }\r\n\r\n        // return true to not remove the handler from Strophe\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Removes entry from this.jidToVersion map.\r\n     * @param {String} jid the jid to be removed.\r\n     */\r\n    _removeJidToVersionEntry(jid) {\r\n        if (jid in this.jidToVersion) {\r\n            delete this.jidToVersion[jid];\r\n        }\r\n    }\r\n}\r\n","/* global $, __filename */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { $iq, $msg, $pres, Strophe } from 'strophe.js';\r\n\r\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\r\nimport * as JitsiTranscriptionStatus from '../../JitsiTranscriptionStatus';\r\nimport Listenable from '../util/Listenable';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\r\n\r\nimport Moderator from './moderator';\r\nimport XmppConnection from './XmppConnection';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\nexport const parser = {\r\n    packet2JSON(xmlElement, nodes) {\r\n        for (const child of Array.from(xmlElement.children)) {\r\n            const node = {\r\n                attributes: {},\r\n                children: [],\r\n                tagName: child.tagName\r\n            };\r\n\r\n            for (const attr of Array.from(child.attributes)) {\r\n                node.attributes[attr.name] = attr.value;\r\n            }\r\n            const text = Strophe.getText(child);\r\n\r\n            if (text) {\r\n                // Using Strophe.getText will do work for traversing all direct\r\n                // child text nodes but returns an escaped value, which is not\r\n                // desirable at this point.\r\n                node.value = Strophe.xmlunescape(text);\r\n            }\r\n            nodes.push(node);\r\n            this.packet2JSON(child, node.children);\r\n        }\r\n    },\r\n    json2packet(nodes, packet) {\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n\r\n            if (node) {\r\n                packet.c(node.tagName, node.attributes);\r\n                if (node.value) {\r\n                    packet.t(node.value);\r\n                }\r\n                if (node.children) {\r\n                    this.json2packet(node.children, packet);\r\n                }\r\n                packet.up();\r\n            }\r\n        }\r\n\r\n        // packet.up();\r\n    }\r\n};\r\n\r\n/**\r\n * Returns array of JS objects from the presence JSON associated with the passed\r\n / nodeName\r\n * @param pres the presence JSON\r\n * @param nodeName the name of the node (videomuted, audiomuted, etc)\r\n */\r\nfunction filterNodeFromPresenceJSON(pres, nodeName) {\r\n    const res = [];\r\n\r\n    for (let i = 0; i < pres.length; i++) {\r\n        if (pres[i].tagName === nodeName) {\r\n            res.push(pres[i]);\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\n// XXX As ChatRoom constructs XMPP stanzas and Strophe is build around the idea\r\n// of chaining function calls, allow long function call chains.\r\n/* eslint-disable newline-per-chained-call */\r\n\r\n/**\r\n *\r\n */\r\nexport default class ChatRoom extends Listenable {\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    /**\r\n     *\r\n     * @param {XmppConnection} connection - The XMPP connection instance.\r\n     * @param jid\r\n     * @param password\r\n     * @param XMPP\r\n     * @param options\r\n     * @param {boolean} options.disableFocus - when set to {@code false} will\r\n     * not invite Jicofo into the room. This is intended to be used only by\r\n     * jitsi-meet-spot.\r\n     */\r\n    constructor(connection, jid, password, XMPP, options) {\r\n        super();\r\n        this.xmpp = XMPP;\r\n        this.connection = connection;\r\n        this.roomjid = Strophe.getBareJidFromJid(jid);\r\n        this.myroomjid = jid;\r\n        this.password = password;\r\n        logger.info(`Joined MUC as ${this.myroomjid}`);\r\n        this.members = {};\r\n        this.presMap = {};\r\n        this.presHandlers = {};\r\n        this._removeConnListeners = [];\r\n        this.joined = false;\r\n        this.role = null;\r\n        this.focusMucJid = null;\r\n        this.noBridgeAvailable = false;\r\n        this.options = options || {};\r\n        this.moderator\r\n            = new Moderator(this.roomjid, this.xmpp, this.eventEmitter, {\r\n                connection: this.xmpp.options,\r\n                conference: this.options\r\n            });\r\n        this.initPresenceMap(options);\r\n        this.lastPresences = {};\r\n        this.phoneNumber = null;\r\n        this.phonePin = null;\r\n        this.connectionTimes = {};\r\n        this.participantPropertyListener = null;\r\n\r\n        this.locked = false;\r\n        this.transcriptionStatus = JitsiTranscriptionStatus.OFF;\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     *\r\n     */\r\n    initPresenceMap(options = {}) {\r\n        this.presMap.to = this.myroomjid;\r\n        this.presMap.xns = 'http://jabber.org/protocol/muc';\r\n        this.presMap.nodes = [];\r\n\r\n        if (options.statsId) {\r\n            this.presMap.nodes.push({\r\n                'tagName': 'stats-id',\r\n                'value': options.statsId\r\n            });\r\n        }\r\n\r\n        // We need to broadcast 'videomuted' status from the beginning, cause\r\n        // Jicofo makes decisions based on that. Initialize it with 'false'\r\n        // here.\r\n        this.addVideoInfoToPresence(false);\r\n\r\n        if (options.deploymentInfo && options.deploymentInfo.userRegion) {\r\n            this.presMap.nodes.push({\r\n                'tagName': 'region',\r\n                'attributes': {\r\n                    id: options.deploymentInfo.userRegion,\r\n                    xmlns: 'http://jitsi.org/jitsi-meet'\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Joins the chat room.\r\n     * @param password\r\n     * @returns {Promise} - resolved when join completes. At the time of this\r\n     * writing it's never rejected.\r\n     */\r\n    join(password) {\r\n        this.password = password;\r\n\r\n        return new Promise(resolve => {\r\n            this.options.disableFocus\r\n                && logger.info('Conference focus disabled');\r\n\r\n            const preJoin\r\n                = this.options.disableFocus\r\n                    ? Promise.resolve()\r\n                    : this.moderator.allocateConferenceFocus();\r\n\r\n            preJoin.then(() => {\r\n                this.sendPresence(true);\r\n                this._removeConnListeners.push(\r\n                    this.connection.addEventListener(\r\n                        XmppConnection.Events.CONN_STATUS_CHANGED,\r\n                        this.onConnStatusChanged.bind(this))\r\n                );\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param fromJoin\r\n     */\r\n    sendPresence(fromJoin) {\r\n        const to = this.presMap.to;\r\n\r\n        if (!this.connection || !this.connection.connected || !to || (!this.joined && !fromJoin)) {\r\n            // Too early to send presence - not initialized\r\n            return;\r\n        }\r\n\r\n        const pres = $pres({ to });\r\n\r\n        // xep-0045 defines: \"including in the initial presence stanza an empty\r\n        // <x/> element qualified by the 'http://jabber.org/protocol/muc'\r\n        // namespace\" and subsequent presences should not include that or it can\r\n        // be considered as joining, and server can send us the message history\r\n        // for the room on every presence\r\n        if (fromJoin) {\r\n            pres.c('x', { xmlns: this.presMap.xns });\r\n\r\n            if (this.password) {\r\n                pres.c('password').t(this.password).up();\r\n            }\r\n            pres.up();\r\n        }\r\n\r\n        parser.json2packet(this.presMap.nodes, pres);\r\n        this.connection.send(pres);\r\n        if (fromJoin) {\r\n            // XXX We're pressed for time here because we're beginning a complex\r\n            // and/or lengthy conference-establishment process which supposedly\r\n            // involves multiple RTTs. We don't have the time to wait for\r\n            // Strophe to decide to send our IQ.\r\n            this.connection.flush();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends the presence unavailable, signaling the server\r\n     * we want to leave the room.\r\n     */\r\n    doLeave() {\r\n        logger.log('do leave', this.myroomjid);\r\n        const pres = $pres({ to: this.myroomjid,\r\n            type: 'unavailable' });\r\n\r\n        this.presMap.length = 0;\r\n\r\n        // XXX Strophe is asynchronously sending by default. Unfortunately, that\r\n        // means that there may not be enough time to send the unavailable\r\n        // presence. Switching Strophe to synchronous sending is not much of an\r\n        // option because it may lead to a noticeable delay in navigating away\r\n        // from the current location. As a compromise, we will try to increase\r\n        // the chances of sending the unavailable presence within the short time\r\n        // span that we have upon unloading by invoking flush() on the\r\n        // connection. We flush() once before sending/queuing the unavailable\r\n        // presence in order to attemtp to have the unavailable presence at the\r\n        // top of the send queue. We flush() once more after sending/queuing the\r\n        // unavailable presence in order to attempt to have it sent as soon as\r\n        // possible.\r\n        // FIXME do not use Strophe.Connection in the ChatRoom directly\r\n        !this.connection.isUsingWebSocket && this.connection.flush();\r\n        this.connection.send(pres);\r\n        this.connection.flush();\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    discoRoomInfo() {\r\n        // https://xmpp.org/extensions/xep-0045.html#disco-roominfo\r\n\r\n        const getInfo\r\n            = $iq({\r\n                type: 'get',\r\n                to: this.roomjid\r\n            })\r\n                .c('query', { xmlns: Strophe.NS.DISCO_INFO });\r\n\r\n        this.connection.sendIQ(getInfo, result => {\r\n            const locked\r\n                = $(result).find('>query>feature[var=\"muc_passwordprotected\"]')\r\n                    .length\r\n                    === 1;\r\n\r\n            if (locked !== this.locked) {\r\n                this.eventEmitter.emit(XMPPEvents.MUC_LOCK_CHANGED, locked);\r\n                this.locked = locked;\r\n            }\r\n\r\n            const meetingIdValEl\r\n                = $(result).find('>query>x[type=\"result\"]>field[var=\"muc#roominfo_meetingId\"]>value');\r\n\r\n            if (meetingIdValEl.length) {\r\n                this.setMeetingId(meetingIdValEl.text());\r\n            } else {\r\n                logger.trace('No meeting ID from backend');\r\n            }\r\n        }, error => {\r\n            GlobalOnErrorHandler.callErrorHandler(error);\r\n            logger.error('Error getting room info: ', error);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets the meeting unique Id (received from the backend).\r\n     *\r\n     * @param {string} meetingId - The new meetings id.\r\n     * @returns {void}\r\n     */\r\n    setMeetingId(meetingId) {\r\n        if (this.meetingId !== meetingId) {\r\n            if (this.meetingId) {\r\n                logger.warn(`Meeting Id changed from:${this.meetingId} to:${meetingId}`);\r\n            }\r\n            this.meetingId = meetingId;\r\n            this.eventEmitter.emit(XMPPEvents.MEETING_ID_SET, meetingId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    createNonAnonymousRoom() {\r\n        // http://xmpp.org/extensions/xep-0045.html#createroom-reserved\r\n\r\n        const getForm = $iq({ type: 'get',\r\n            to: this.roomjid })\r\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' })\r\n            .c('x', { xmlns: 'jabber:x:data',\r\n                type: 'submit' });\r\n\r\n        const self = this;\r\n\r\n        this.connection.sendIQ(getForm, form => {\r\n            if (!$(form).find(\r\n                    '>query>x[xmlns=\"jabber:x:data\"]'\r\n                    + '>field[var=\"muc#roomconfig_whois\"]').length) {\r\n                const errmsg = 'non-anonymous rooms not supported';\r\n\r\n                GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\r\n                logger.error(errmsg);\r\n\r\n                return;\r\n            }\r\n\r\n            const formSubmit = $iq({ to: self.roomjid,\r\n                type: 'set' })\r\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' });\r\n\r\n            formSubmit.c('x', { xmlns: 'jabber:x:data',\r\n                type: 'submit' });\r\n\r\n            formSubmit.c('field', { 'var': 'FORM_TYPE' })\r\n                .c('value')\r\n                .t('http://jabber.org/protocol/muc#roomconfig').up().up();\r\n\r\n            formSubmit.c('field', { 'var': 'muc#roomconfig_whois' })\r\n                .c('value').t('anyone').up().up();\r\n\r\n            self.connection.sendIQ(formSubmit);\r\n\r\n        }, error => {\r\n            GlobalOnErrorHandler.callErrorHandler(error);\r\n            logger.error('Error getting room configuration form: ', error);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles Xmpp Connection status updates.\r\n     *\r\n     * @param {Strophe.Status} status - The Strophe connection status.\r\n     */\r\n    onConnStatusChanged(status) {\r\n        // Send cached presence when the XMPP connection is re-established.\r\n        if (status === XmppConnection.Status.CONNECTED) {\r\n            this.sendPresence();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param pres\r\n     */\r\n    onPresence(pres) {\r\n        const from = pres.getAttribute('from');\r\n        const member = {};\r\n        const statusEl = pres.getElementsByTagName('status')[0];\r\n\r\n        if (statusEl) {\r\n            member.status = statusEl.textContent || '';\r\n        }\r\n        let hasStatusUpdate = false;\r\n        let hasVersionUpdate = false;\r\n        const xElement\r\n            = pres.getElementsByTagNameNS(\r\n                'http://jabber.org/protocol/muc#user', 'x')[0];\r\n        const mucUserItem\r\n            = xElement && xElement.getElementsByTagName('item')[0];\r\n\r\n        member.affiliation\r\n            = mucUserItem && mucUserItem.getAttribute('affiliation');\r\n        member.role = mucUserItem && mucUserItem.getAttribute('role');\r\n\r\n        // Focus recognition\r\n        const jid = mucUserItem && mucUserItem.getAttribute('jid');\r\n\r\n        member.jid = jid;\r\n        member.isFocus\r\n            = jid && jid.indexOf(`${this.moderator.getFocusUserJid()}/`) === 0;\r\n        member.isHiddenDomain\r\n            = jid && jid.indexOf('@') > 0\r\n                && this.options.hiddenDomain\r\n                    === jid.substring(jid.indexOf('@') + 1, jid.indexOf('/'));\r\n\r\n        this.eventEmitter.emit(XMPPEvents.PRESENCE_RECEIVED, {\r\n            fromHiddenDomain: member.isHiddenDomain,\r\n            presence: pres\r\n        });\r\n\r\n        const xEl = pres.querySelector('x');\r\n\r\n        if (xEl) {\r\n            xEl.remove();\r\n        }\r\n\r\n        const nodes = [];\r\n\r\n        parser.packet2JSON(pres, nodes);\r\n        this.lastPresences[from] = nodes;\r\n\r\n        // process nodes to extract data needed for MUC_JOINED and\r\n        // MUC_MEMBER_JOINED events\r\n        const extractIdentityInformation = node => {\r\n            const identity = {};\r\n            const userInfo = node.children.find(c => c.tagName === 'user');\r\n\r\n            if (userInfo) {\r\n                identity.user = {};\r\n                for (const tag of [ 'id', 'name', 'avatar' ]) {\r\n                    const child\r\n                        = userInfo.children.find(c => c.tagName === tag);\r\n\r\n                    if (child) {\r\n                        identity.user[tag] = child.value;\r\n                    }\r\n                }\r\n            }\r\n            const groupInfo = node.children.find(c => c.tagName === 'group');\r\n\r\n            if (groupInfo) {\r\n                identity.group = groupInfo.value;\r\n            }\r\n\r\n            return identity;\r\n        };\r\n\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n\r\n            switch (node.tagName) {\r\n            case 'bot': {\r\n                const { attributes } = node;\r\n\r\n                if (!attributes) {\r\n                    break;\r\n                }\r\n                const { type } = attributes;\r\n\r\n                member.botType = type;\r\n                break;\r\n            }\r\n            case 'nick':\r\n                member.nick = node.value;\r\n                break;\r\n            case 'userId':\r\n                member.id = node.value;\r\n                break;\r\n            case 'stats-id':\r\n                member.statsID = node.value;\r\n                break;\r\n            case 'identity':\r\n                member.identity = extractIdentityInformation(node);\r\n                break;\r\n            case 'stat': {\r\n                const { attributes } = node;\r\n\r\n                if (!attributes) {\r\n                    break;\r\n                }\r\n                const { name } = attributes;\r\n\r\n                if (name === 'version') {\r\n                    member.version = attributes.value;\r\n                }\r\n                break;\r\n            }\r\n            }\r\n        }\r\n\r\n        if (from === this.myroomjid) {\r\n            const newRole\r\n                = member.affiliation === 'owner' ? member.role : 'none';\r\n\r\n            if (this.role !== newRole) {\r\n                this.role = newRole;\r\n                this.eventEmitter.emit(\r\n                    XMPPEvents.LOCAL_ROLE_CHANGED,\r\n                    this.role);\r\n            }\r\n            if (!this.joined) {\r\n                this.joined = true;\r\n                const now = this.connectionTimes['muc.joined']\r\n                    = window.performance.now();\r\n\r\n                logger.log('(TIME) MUC joined:\\t', now);\r\n\r\n                // set correct initial state of locked\r\n                if (this.password) {\r\n                    this.locked = true;\r\n                }\r\n\r\n                // Re-send presence in case any presence updates were added,\r\n                // but blocked from sending, during the join process.\r\n                this.sendPresence();\r\n\r\n                this.eventEmitter.emit(XMPPEvents.MUC_JOINED);\r\n\r\n                // Now let's check the disco-info to retrieve the\r\n                // meeting Id if any\r\n                this.discoRoomInfo();\r\n            }\r\n        } else if (jid === undefined) {\r\n            logger.info('Ignoring member with undefined JID');\r\n        } else if (this.members[from] === undefined) {\r\n            // new participant\r\n            this.members[from] = member;\r\n            logger.log('entered', from, member);\r\n            hasStatusUpdate = member.status !== undefined;\r\n            hasVersionUpdate = member.version !== undefined;\r\n            if (member.isFocus) {\r\n                this._initFocus(from, jid);\r\n            } else {\r\n                // identity is being added to member joined, so external\r\n                // services can be notified for that (currently identity is\r\n                // not used inside library)\r\n                this.eventEmitter.emit(\r\n                    XMPPEvents.MUC_MEMBER_JOINED,\r\n                    from,\r\n                    member.nick,\r\n                    member.role,\r\n                    member.isHiddenDomain,\r\n                    member.statsID,\r\n                    member.status,\r\n                    member.identity,\r\n                    member.botType);\r\n\r\n                // we are reporting the status with the join\r\n                // so we do not want a second event about status update\r\n                hasStatusUpdate = false;\r\n            }\r\n        } else {\r\n            // Presence update for existing participant\r\n            // Watch role change:\r\n            const memberOfThis = this.members[from];\r\n\r\n            if (memberOfThis.role !== member.role) {\r\n                memberOfThis.role = member.role;\r\n                this.eventEmitter.emit(\r\n                    XMPPEvents.MUC_ROLE_CHANGED, from, member.role);\r\n            }\r\n\r\n            // fire event that botType had changed\r\n            if (memberOfThis.botType !== member.botType) {\r\n                memberOfThis.botType = member.botType;\r\n                this.eventEmitter.emit(\r\n                    XMPPEvents.MUC_MEMBER_BOT_TYPE_CHANGED,\r\n                    from,\r\n                    member.botType);\r\n            }\r\n\r\n            if (member.isFocus) {\r\n                // From time to time first few presences of the focus are not\r\n                // containing it's jid. That way we can mark later the focus\r\n                // member instead of not marking it at all and not starting the\r\n                // conference.\r\n                // FIXME: Maybe there is a better way to handle this issue. It\r\n                // seems there is some period of time in prosody that the\r\n                // configuration form is received but not applied. And if any\r\n                // participant joins during that period of time the first\r\n                // presence from the focus won't contain\r\n                // <item jid=\"focus...\" />.\r\n                memberOfThis.isFocus = true;\r\n                this._initFocus(from, jid);\r\n            }\r\n\r\n            // store the new display name\r\n            if (member.displayName) {\r\n                memberOfThis.displayName = member.displayName;\r\n            }\r\n\r\n            // update stored status message to be able to detect changes\r\n            if (memberOfThis.status !== member.status) {\r\n                hasStatusUpdate = true;\r\n                memberOfThis.status = member.status;\r\n            }\r\n\r\n            if (memberOfThis.version !== member.version) {\r\n                hasVersionUpdate = true;\r\n                memberOfThis.version = member.version;\r\n            }\r\n        }\r\n\r\n        // after we had fired member or room joined events, lets fire events\r\n        // for the rest info we got in presence\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n\r\n            switch (node.tagName) {\r\n            case 'nick':\r\n                if (!member.isFocus) {\r\n                    const displayName\r\n                        = this.xmpp.options.displayJids\r\n                            ? Strophe.getResourceFromJid(from)\r\n                            : member.nick;\r\n\r\n                    this.eventEmitter.emit(\r\n                        XMPPEvents.DISPLAY_NAME_CHANGED,\r\n                        from,\r\n                        displayName);\r\n                }\r\n                break;\r\n            case 'bridgeNotAvailable':\r\n                if (member.isFocus && !this.noBridgeAvailable) {\r\n                    this.noBridgeAvailable = true;\r\n                    this.eventEmitter.emit(XMPPEvents.BRIDGE_DOWN);\r\n                }\r\n                break;\r\n            case 'conference-properties':\r\n                if (member.isFocus) {\r\n                    const properties = {};\r\n\r\n                    for (let j = 0; j < node.children.length; j++) {\r\n                        const { attributes } = node.children[j];\r\n\r\n                        if (attributes && attributes.key) {\r\n                            properties[attributes.key] = attributes.value;\r\n                        }\r\n                    }\r\n\r\n                    this.eventEmitter.emit(\r\n                        XMPPEvents.CONFERENCE_PROPERTIES_CHANGED, properties);\r\n                }\r\n                break;\r\n            case 'transcription-status': {\r\n                const { attributes } = node;\r\n\r\n                if (!attributes) {\r\n                    break;\r\n                }\r\n\r\n                const { status } = attributes;\r\n\r\n                if (status && status !== this.transcriptionStatus) {\r\n                    this.transcriptionStatus = status;\r\n                    this.eventEmitter.emit(\r\n                        XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\r\n                        status\r\n                    );\r\n                }\r\n\r\n\r\n                break;\r\n            }\r\n            case 'call-control': {\r\n                const att = node.attributes;\r\n\r\n                if (!att) {\r\n                    break;\r\n                }\r\n                this.phoneNumber = att.phone || null;\r\n                this.phonePin = att.pin || null;\r\n                this.eventEmitter.emit(XMPPEvents.PHONE_NUMBER_CHANGED);\r\n                break;\r\n            }\r\n            default:\r\n                this.processNode(node, from);\r\n            }\r\n        }\r\n\r\n        // Trigger status message update if necessary\r\n        if (hasStatusUpdate) {\r\n            this.eventEmitter.emit(\r\n                XMPPEvents.PRESENCE_STATUS,\r\n                from,\r\n                member.status);\r\n        }\r\n\r\n        if (hasVersionUpdate) {\r\n            logger.info(`Received version for ${jid}: ${member.version}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize some properties when the focus participant is verified.\r\n     * @param from jid of the focus\r\n     * @param mucJid the jid of the focus in the muc\r\n     */\r\n    _initFocus(from, mucJid) {\r\n        this.focusMucJid = from;\r\n\r\n        logger.info(`Ignore focus: ${from}, real JID: ${mucJid}`);\r\n    }\r\n\r\n    /**\r\n     * Sets the special listener to be used for \"command\"s whose name starts\r\n     * with \"jitsi_participant_\".\r\n     */\r\n    setParticipantPropertyListener(listener) {\r\n        this.participantPropertyListener = listener;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param node\r\n     * @param from\r\n     */\r\n    processNode(node, from) {\r\n        // make sure we catch all errors coming from any handler\r\n        // otherwise we can remove the presence handler from strophe\r\n        try {\r\n            let tagHandlers = this.presHandlers[node.tagName];\r\n\r\n            if (node.tagName.startsWith('jitsi_participant_')) {\r\n                tagHandlers = [ this.participantPropertyListener ];\r\n            }\r\n\r\n            if (tagHandlers) {\r\n                tagHandlers.forEach(handler => {\r\n                    handler(node, Strophe.getResourceFromJid(from), from);\r\n                });\r\n            }\r\n        } catch (e) {\r\n            GlobalOnErrorHandler.callErrorHandler(e);\r\n            logger.error(`Error processing:${node.tagName} node.`, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send text message to the other participants in the conference\r\n     * @param message\r\n     * @param elementName\r\n     * @param nickname\r\n     */\r\n    sendMessage(message, elementName, nickname) {\r\n        const msg = $msg({ to: this.roomjid,\r\n            type: 'groupchat' });\r\n\r\n        // We are adding the message in a packet extension. If this element\r\n        // is different from 'body', we add a custom namespace.\r\n        // e.g. for 'json-message' extension of message stanza.\r\n        if (elementName === 'body') {\r\n            msg.c(elementName, message).up();\r\n        } else {\r\n            msg.c(elementName, { xmlns: 'http://jitsi.org/jitmeet' }, message)\r\n                .up();\r\n        }\r\n        if (nickname) {\r\n            msg.c('nick', { xmlns: 'http://jabber.org/protocol/nick' })\r\n                .t(nickname)\r\n                .up()\r\n                .up();\r\n        }\r\n        this.connection.send(msg);\r\n        this.eventEmitter.emit(XMPPEvents.SENDING_CHAT_MESSAGE, message);\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n    /**\r\n     * Send private text message to another participant of the conference\r\n     * @param id id/muc resource of the receiver\r\n     * @param message\r\n     * @param elementName\r\n     * @param nickname\r\n     */\r\n    sendPrivateMessage(id, message, elementName, nickname) {\r\n        const msg = $msg({ to: `${this.roomjid}/${id}`,\r\n            type: 'chat' });\r\n\r\n        // We are adding the message in packet. If this element is different\r\n        // from 'body', we add our custom namespace for the same.\r\n        // e.g. for 'json-message' message extension.\r\n        if (elementName === 'body') {\r\n            msg.c(elementName, message).up();\r\n        } else {\r\n            msg.c(elementName, { xmlns: 'http://jitsi.org/jitmeet' }, message)\r\n                .up();\r\n        }\r\n        if (nickname) {\r\n            msg.c('nick', { xmlns: 'http://jabber.org/protocol/nick' })\r\n                .t(nickname)\r\n                .up()\r\n                .up();\r\n        }\r\n\r\n        this.connection.send(msg);\r\n        this.eventEmitter.emit(\r\n            XMPPEvents.SENDING_PRIVATE_CHAT_MESSAGE, message);\r\n    }\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     *\r\n     * @param subject\r\n     */\r\n    setSubject(subject) {\r\n        const msg = $msg({ to: this.roomjid,\r\n            type: 'groupchat' });\r\n\r\n        msg.c('subject', subject);\r\n        this.connection.send(msg);\r\n    }\r\n\r\n    /**\r\n     * Called when participant leaves.\r\n     * @param jid the jid of the participant that leaves\r\n     * @param skipEvents optional params to skip any events, including check\r\n     * whether this is the focus that left\r\n     */\r\n    onParticipantLeft(jid, skipEvents) {\r\n        delete this.lastPresences[jid];\r\n\r\n        if (skipEvents) {\r\n            return;\r\n        }\r\n\r\n        this.eventEmitter.emit(XMPPEvents.MUC_MEMBER_LEFT, jid);\r\n\r\n        this.moderator.onMucMemberLeft(jid);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param pres\r\n     * @param from\r\n     */\r\n    onPresenceUnavailable(pres, from) {\r\n        // ignore presence\r\n        if ($(pres).find('>ignore[xmlns=\"http://jitsi.org/jitmeet/\"]').length) {\r\n            return true;\r\n        }\r\n\r\n        // room destroyed ?\r\n        if ($(pres).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\r\n            + '>destroy').length) {\r\n            let reason;\r\n            const reasonSelect\r\n                = $(pres).find(\r\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\r\n                        + '>destroy>reason');\r\n\r\n            if (reasonSelect.length) {\r\n                reason = reasonSelect.text();\r\n            }\r\n\r\n            this.eventEmitter.emit(XMPPEvents.MUC_DESTROYED, reason);\r\n            this.connection.emuc.doLeave(this.roomjid);\r\n\r\n            return true;\r\n        }\r\n\r\n        // Status code 110 indicates that this notification is \"self-presence\".\r\n        const isSelfPresence\r\n            = $(pres)\r\n                .find(\r\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>'\r\n                        + 'status[code=\"110\"]')\r\n                .length;\r\n        const isKick\r\n            = $(pres)\r\n                .find(\r\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\r\n                        + '>status[code=\"307\"]')\r\n                .length;\r\n        const membersKeys = Object.keys(this.members);\r\n\r\n        if (isKick) {\r\n            const actorSelect\r\n                = $(pres)\r\n                .find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>item>actor');\r\n\r\n            let actorNick;\r\n\r\n            if (actorSelect.length) {\r\n                actorNick = actorSelect.attr('nick');\r\n            }\r\n\r\n            // if no member is found this is the case we had kicked someone\r\n            // and we are not in the list of members\r\n            if (membersKeys.find(jid => Strophe.getResourceFromJid(jid) === actorNick)) {\r\n                // we first fire the kicked so we can show the participant\r\n                // who kicked, before notifying that participant left\r\n                // we fire kicked for us and for any participant kicked\r\n                this.eventEmitter.emit(\r\n                    XMPPEvents.KICKED,\r\n                    isSelfPresence,\r\n                    actorNick,\r\n                    Strophe.getResourceFromJid(from));\r\n            }\r\n        }\r\n\r\n        if (!isSelfPresence) {\r\n            delete this.members[from];\r\n            this.onParticipantLeft(from, false);\r\n        } else if (membersKeys.length > 0) {\r\n            // If the status code is 110 this means we're leaving and we would\r\n            // like to remove everyone else from our view, so we trigger the\r\n            // event.\r\n            membersKeys.forEach(jid => {\r\n                const member = this.members[jid];\r\n\r\n                delete this.members[jid];\r\n                this.onParticipantLeft(jid, member.isFocus);\r\n            });\r\n            this.connection.emuc.doLeave(this.roomjid);\r\n\r\n            // we fire muc_left only if this is not a kick,\r\n            // kick has both statuses 110 and 307.\r\n            if (!isKick) {\r\n                this.eventEmitter.emit(XMPPEvents.MUC_LEFT);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param msg\r\n     * @param from\r\n     */\r\n    onMessage(msg, from) {\r\n        const nick\r\n            = $(msg).find('>nick[xmlns=\"http://jabber.org/protocol/nick\"]')\r\n                .text()\r\n            || Strophe.getResourceFromJid(from);\r\n\r\n        const type = msg.getAttribute('type');\r\n\r\n        if (type === 'error') {\r\n            const errorMsg = $(msg).find('>error>text').text();\r\n\r\n            this.eventEmitter.emit(XMPPEvents.CHAT_ERROR_RECEIVED, errorMsg);\r\n\r\n            return true;\r\n        }\r\n\r\n        const txt = $(msg).find('>body').text();\r\n        const subject = $(msg).find('>subject');\r\n\r\n        if (subject.length) {\r\n            const subjectText = subject.text();\r\n\r\n            if (subjectText || subjectText === '') {\r\n                this.eventEmitter.emit(XMPPEvents.SUBJECT_CHANGED, subjectText);\r\n                logger.log(`Subject is changed to ${subjectText}`);\r\n            }\r\n        }\r\n\r\n        // xep-0203 delay\r\n        let stamp = $(msg).find('>delay').attr('stamp');\r\n\r\n        if (!stamp) {\r\n            // or xep-0091 delay, UTC timestamp\r\n            stamp = $(msg).find('>[xmlns=\"jabber:x:delay\"]').attr('stamp');\r\n\r\n            if (stamp) {\r\n                // the format is CCYYMMDDThh:mm:ss\r\n                const dateParts\r\n                    = stamp.match(/(\\d{4})(\\d{2})(\\d{2}T\\d{2}:\\d{2}:\\d{2})/);\r\n\r\n                stamp = `${dateParts[1]}-${dateParts[2]}-${dateParts[3]}Z`;\r\n            }\r\n        }\r\n\r\n        if (from === this.roomjid\r\n                && $(msg).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>status[code=\"104\"]').length) {\r\n            this.discoRoomInfo();\r\n        }\r\n        const jsonMessage = $(msg).find('>json-message').text();\r\n        const parsedJson = this.xmpp.tryParseJSONAndVerify(jsonMessage);\r\n\r\n        // We emit this event if the message is a valid json, and is not\r\n        // delivered after a delay, i.e. stamp is undefined.\r\n        // e.g. - subtitles should not be displayed if delayed.\r\n        if (parsedJson && stamp === undefined) {\r\n            this.eventEmitter.emit(XMPPEvents.JSON_MESSAGE_RECEIVED,\r\n                from, parsedJson);\r\n\r\n            return;\r\n        }\r\n\r\n        if (txt) {\r\n            if (type === 'chat') {\r\n                this.eventEmitter.emit(XMPPEvents.PRIVATE_MESSAGE_RECEIVED,\r\n                        from, nick, txt, this.myroomjid, stamp);\r\n            } else if (type === 'groupchat') {\r\n                this.eventEmitter.emit(XMPPEvents.MESSAGE_RECEIVED,\r\n                        from, nick, txt, this.myroomjid, stamp);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param pres\r\n     * @param from\r\n     */\r\n    onPresenceError(pres, from) {\r\n        if ($(pres)\r\n                .find(\r\n                    '>error[type=\"auth\"]'\r\n                        + '>not-authorized['\r\n                        + 'xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]')\r\n                .length) {\r\n            logger.log('on password required', from);\r\n            this.eventEmitter.emit(XMPPEvents.PASSWORD_REQUIRED);\r\n        } else if ($(pres)\r\n                .find(\r\n                    '>error[type=\"cancel\"]'\r\n                        + '>not-allowed['\r\n                        + 'xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]')\r\n                .length) {\r\n            const toDomain = Strophe.getDomainFromJid(pres.getAttribute('to'));\r\n\r\n            if (toDomain === this.xmpp.options.hosts.anonymousdomain) {\r\n                // enter the room by replying with 'not-authorized'. This would\r\n                // result in reconnection from authorized domain.\r\n                // We're either missing Jicofo/Prosody config for anonymous\r\n                // domains or something is wrong.\r\n                this.eventEmitter.emit(XMPPEvents.ROOM_JOIN_ERROR);\r\n\r\n            } else {\r\n                logger.warn('onPresError ', pres);\r\n                this.eventEmitter.emit(\r\n                    XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR);\r\n            }\r\n        } else if ($(pres).find('>error>service-unavailable').length) {\r\n            logger.warn('Maximum users limit for the room has been reached',\r\n                pres);\r\n            this.eventEmitter.emit(XMPPEvents.ROOM_MAX_USERS_ERROR);\r\n        } else {\r\n            logger.warn('onPresError ', pres);\r\n            this.eventEmitter.emit(XMPPEvents.ROOM_CONNECT_ERROR);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param jid\r\n     */\r\n    kick(jid) {\r\n        const kickIQ = $iq({ to: this.roomjid,\r\n            type: 'set' })\r\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#admin' })\r\n            .c('item', { nick: Strophe.getResourceFromJid(jid),\r\n                role: 'none' })\r\n            .c('reason').t('You have been kicked.').up().up().up();\r\n\r\n        this.connection.sendIQ(\r\n            kickIQ,\r\n            result => logger.log('Kick participant with jid: ', jid, result),\r\n            error => logger.log('Kick participant error: ', error));\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    /**\r\n     *\r\n     * @param key\r\n     * @param onSuccess\r\n     * @param onError\r\n     * @param onNotSupported\r\n     */\r\n    lockRoom(key, onSuccess, onError, onNotSupported) {\r\n        // http://xmpp.org/extensions/xep-0045.html#roomconfig\r\n        this.connection.sendIQ(\r\n            $iq({\r\n                to: this.roomjid,\r\n                type: 'get'\r\n            })\r\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' }),\r\n            res => {\r\n                if ($(res)\r\n                        .find(\r\n                            '>query>x[xmlns=\"jabber:x:data\"]'\r\n                                + '>field[var=\"muc#roomconfig_roomsecret\"]')\r\n                        .length) {\r\n                    const formsubmit\r\n                        = $iq({\r\n                            to: this.roomjid,\r\n                            type: 'set'\r\n                        })\r\n                            .c('query', {\r\n                                xmlns: 'http://jabber.org/protocol/muc#owner'\r\n                            });\r\n\r\n                    formsubmit.c('x', {\r\n                        xmlns: 'jabber:x:data',\r\n                        type: 'submit'\r\n                    });\r\n                    formsubmit\r\n                        .c('field', { 'var': 'FORM_TYPE' })\r\n                        .c('value')\r\n                        .t('http://jabber.org/protocol/muc#roomconfig')\r\n                        .up()\r\n                        .up();\r\n                    formsubmit\r\n                        .c('field', { 'var': 'muc#roomconfig_roomsecret' })\r\n                        .c('value')\r\n                        .t(key)\r\n                        .up()\r\n                        .up();\r\n                    formsubmit\r\n                        .c('field',\r\n                             { 'var': 'muc#roomconfig_passwordprotectedroom' })\r\n                        .c('value')\r\n                        .t(key === null || key.length === 0 ? '0' : '1')\r\n                        .up()\r\n                        .up();\r\n\r\n                    // Fixes a bug in prosody 0.9.+\r\n                    // https://prosody.im/issues/issue/373\r\n                    formsubmit\r\n                        .c('field', { 'var': 'muc#roomconfig_whois' })\r\n                        .c('value')\r\n                        .t('anyone')\r\n                        .up()\r\n                        .up();\r\n\r\n                    this.connection.sendIQ(formsubmit, onSuccess, onError);\r\n                } else {\r\n                    onNotSupported();\r\n                }\r\n            },\r\n            onError);\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     *\r\n     * @param key\r\n     * @param values\r\n     */\r\n    addToPresence(key, values) {\r\n        values.tagName = key;\r\n        this.removeFromPresence(key);\r\n        this.presMap.nodes.push(values);\r\n    }\r\n\r\n    /**\r\n     * Retreives a value from the presence map.\r\n     *\r\n     * @param {string} key - The key to find the value for.\r\n     * @returns {Object?}\r\n     */\r\n    getFromPresence(key) {\r\n        return this.presMap.nodes.find(node => key === node.tagName);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param key\r\n     */\r\n    removeFromPresence(key) {\r\n        const nodes = this.presMap.nodes.filter(node => key !== node.tagName);\r\n\r\n        this.presMap.nodes = nodes;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param name\r\n     * @param handler\r\n     */\r\n    addPresenceListener(name, handler) {\r\n        if (typeof handler !== 'function') {\r\n            throw new Error('\"handler\" is not a function');\r\n        }\r\n        let tagHandlers = this.presHandlers[name];\r\n\r\n        if (!tagHandlers) {\r\n            this.presHandlers[name] = tagHandlers = [];\r\n        }\r\n        if (tagHandlers.indexOf(handler) === -1) {\r\n            tagHandlers.push(handler);\r\n        } else {\r\n            logger.warn(\r\n                `Trying to add the same handler more than once for: ${name}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param name\r\n     * @param handler\r\n     */\r\n    removePresenceListener(name, handler) {\r\n        const tagHandlers = this.presHandlers[name];\r\n        const handlerIdx = tagHandlers ? tagHandlers.indexOf(handler) : -1;\r\n\r\n        // eslint-disable-next-line no-negated-condition\r\n        if (handlerIdx !== -1) {\r\n            tagHandlers.splice(handlerIdx, 1);\r\n        } else {\r\n            logger.warn(`Handler for: ${name} was not registered`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if the user identified by given <tt>mucJid</tt> is the conference\r\n     * focus.\r\n     * @param mucJid the full MUC address of the user to be checked.\r\n     * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus\r\n     * or <tt>false</tt> if is not. When given <tt>mucJid</tt> does not exist in\r\n     * the MUC then <tt>null</tt> is returned.\r\n     */\r\n    isFocus(mucJid) {\r\n        const member = this.members[mucJid];\r\n\r\n        if (member) {\r\n            return member.isFocus;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    isModerator() {\r\n        return this.role === 'moderator';\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param peerJid\r\n     */\r\n    getMemberRole(peerJid) {\r\n        if (this.members[peerJid]) {\r\n            return this.members[peerJid].role;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param mute\r\n     * @param callback\r\n     */\r\n    setVideoMute(mute, callback) {\r\n        this.sendVideoInfoPresence(mute);\r\n        if (callback) {\r\n            callback(mute);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param mute\r\n     * @param callback\r\n     */\r\n    setAudioMute(mute, callback) {\r\n        return this.sendAudioInfoPresence(mute, callback);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param mute\r\n     */\r\n    addAudioInfoToPresence(mute) {\r\n        this.removeFromPresence('audiomuted');\r\n        this.addToPresence(\r\n            'audiomuted',\r\n            {\r\n                attributes: { 'xmlns': 'http://jitsi.org/jitmeet/audio' },\r\n                value: mute.toString()\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param mute\r\n     * @param callback\r\n     */\r\n    sendAudioInfoPresence(mute, callback) {\r\n        this.addAudioInfoToPresence(mute);\r\n\r\n        // FIXME resend presence on CONNECTED\r\n        this.sendPresence();\r\n        if (callback) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param mute\r\n     */\r\n    addVideoInfoToPresence(mute) {\r\n        this.removeFromPresence('videomuted');\r\n        this.addToPresence(\r\n            'videomuted',\r\n            {\r\n                attributes: { 'xmlns': 'http://jitsi.org/jitmeet/video' },\r\n                value: mute.toString()\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param mute\r\n     */\r\n    sendVideoInfoPresence(mute) {\r\n        this.addVideoInfoToPresence(mute);\r\n        this.sendPresence();\r\n    }\r\n\r\n    /**\r\n     * Obtains the info about given media advertised in the MUC presence of\r\n     * the participant identified by the given endpoint JID.\r\n     * @param {string} endpointId the endpoint ID mapped to the participant\r\n     * which corresponds to MUC nickname.\r\n     * @param {MediaType} mediaType the type of the media for which presence\r\n     * info will be obtained.\r\n     * @return {PeerMediaInfo} presenceInfo an object with media presence\r\n     * info or <tt>null</tt> either if there is no presence available or if\r\n     * the media type given is invalid.\r\n     */\r\n    getMediaPresenceInfo(endpointId, mediaType) {\r\n        // Will figure out current muted status by looking up owner's presence\r\n        const pres = this.lastPresences[`${this.roomjid}/${endpointId}`];\r\n\r\n        if (!pres) {\r\n            // No presence available\r\n            return null;\r\n        }\r\n        const data = {\r\n            muted: false, // unmuted by default\r\n            videoType: undefined // no video type by default\r\n        };\r\n        let mutedNode = null;\r\n\r\n        if (mediaType === MediaType.AUDIO) {\r\n            mutedNode = filterNodeFromPresenceJSON(pres, 'audiomuted');\r\n        } else if (mediaType === MediaType.VIDEO) {\r\n            mutedNode = filterNodeFromPresenceJSON(pres, 'videomuted');\r\n            const videoTypeNode = filterNodeFromPresenceJSON(pres, 'videoType');\r\n\r\n            if (videoTypeNode.length > 0) {\r\n                data.videoType = videoTypeNode[0].value;\r\n            }\r\n        } else {\r\n            logger.error(`Unsupported media type: ${mediaType}`);\r\n\r\n            return null;\r\n        }\r\n\r\n        data.muted = mutedNode.length > 0 && mutedNode[0].value === 'true';\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the SIP calls are supported and false otherwise\r\n     */\r\n    isSIPCallingSupported() {\r\n        if (this.moderator) {\r\n            return this.moderator.isSipGatewayEnabled();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Dials a number.\r\n     * @param number the number\r\n     */\r\n    dial(number) {\r\n        return this.connection.rayo.dial(number, 'fromnumber',\r\n            Strophe.getBareJidFromJid(this.myroomjid), this.password,\r\n            this.focusMucJid);\r\n    }\r\n\r\n    /**\r\n     * Hangup an existing call\r\n     */\r\n    hangup() {\r\n        return this.connection.rayo.hangup();\r\n    }\r\n\r\n    /**\r\n     * Returns the phone number for joining the conference.\r\n     */\r\n    getPhoneNumber() {\r\n        return this.phoneNumber;\r\n    }\r\n\r\n    /**\r\n     * Returns the pin for joining the conference with phone.\r\n     */\r\n    getPhonePin() {\r\n        return this.phonePin;\r\n    }\r\n\r\n    /**\r\n     * Returns the meeting unique ID if any came from backend.\r\n     *\r\n     * @returns {string} - The meeting ID.\r\n     */\r\n    getMeetingId() {\r\n        return this.meetingId;\r\n    }\r\n\r\n    /**\r\n     * Mutes remote participant.\r\n     * @param jid of the participant\r\n     * @param mute\r\n     */\r\n    muteParticipant(jid, mute) {\r\n        logger.info('set mute', mute);\r\n        const iqToFocus = $iq(\r\n            { to: this.focusMucJid,\r\n                type: 'set' })\r\n            .c('mute', {\r\n                xmlns: 'http://jitsi.org/jitmeet/audio',\r\n                jid\r\n            })\r\n            .t(mute.toString())\r\n            .up();\r\n\r\n        this.connection.sendIQ(\r\n            iqToFocus,\r\n            result => logger.log('set mute', result),\r\n            error => logger.log('set mute error', error));\r\n    }\r\n\r\n    /**\r\n     * TODO: Document\r\n     * @param iq\r\n     */\r\n    onMute(iq) {\r\n        const from = iq.getAttribute('from');\r\n\r\n        if (from !== this.focusMucJid) {\r\n            logger.warn('Ignored mute from non focus peer');\r\n\r\n            return;\r\n        }\r\n        const mute = $(iq).find('mute');\r\n\r\n        if (mute.length && mute.text() === 'true') {\r\n            this.eventEmitter.emit(XMPPEvents.AUDIO_MUTED_BY_FOCUS, mute.attr('actor'));\r\n        } else {\r\n            // XXX Why do we support anything but muting? Why do we encode the\r\n            // value in the text of the element? Why do we use a separate XML\r\n            // namespace?\r\n            logger.warn('Ignoring a mute request which does not explicitly '\r\n                + 'specify a positive mute command.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Leaves the room. Closes the jingle session.\r\n     * @returns {Promise} which is resolved if XMPPEvents.MUC_LEFT is received\r\n     * less than 5s after sending presence unavailable. Otherwise the promise is\r\n     * rejected.\r\n     */\r\n    leave() {\r\n        return new Promise((resolve, reject) => {\r\n            const timeout = setTimeout(() => onMucLeft(true), 5000);\r\n            const eventEmitter = this.eventEmitter;\r\n\r\n            this._removeConnListeners.forEach(remove => remove());\r\n            this._removeConnListeners = [];\r\n\r\n            /**\r\n             *\r\n             * @param doReject\r\n             */\r\n            function onMucLeft(doReject = false) {\r\n                eventEmitter.removeListener(XMPPEvents.MUC_LEFT, onMucLeft);\r\n                clearTimeout(timeout);\r\n                if (doReject) {\r\n                    // the timeout expired\r\n                    reject(new Error('The timeout for the confirmation about '\r\n                        + 'leaving the room expired.'));\r\n                } else {\r\n                    resolve();\r\n                }\r\n            }\r\n            eventEmitter.on(XMPPEvents.MUC_LEFT, onMucLeft);\r\n            this.doLeave();\r\n        });\r\n    }\r\n}\r\n\r\n/* eslint-enable newline-per-chained-call */\r\n","import Listenable from '../util/Listenable';\r\n\r\n/**\r\n * Creates ConnectionPlugin class that extends the passed class.\r\n * @param {Class} base the definition of the class that will be extended by\r\n * ConnectionPlugin\r\n */\r\nfunction getConnectionPluginDefinition(base = class {}) {\r\n    /**\r\n     * Base class for strophe connection plugins.\r\n     */\r\n    return class extends base {\r\n        /**\r\n         *\r\n         */\r\n        constructor(...args) {\r\n            super(...args);\r\n            this.connection = null;\r\n        }\r\n\r\n        /**\r\n         *\r\n         * @param connection\r\n         */\r\n        init(connection) {\r\n            this.connection = connection;\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * ConnectionPlugin class.\r\n */\r\nexport default getConnectionPluginDefinition();\r\n\r\n/**\r\n * ConnectionPlugin class that extends Listenable.\r\n */\r\nexport const ConnectionPluginListenable\r\n    = getConnectionPluginDefinition(Listenable);\r\n","/* global __filename */\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport * as JingleSessionState from './JingleSessionState';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * JingleSession provides an API to manage a single Jingle session. We will\r\n * have different implementations depending on the underlying interface used\r\n * (i.e. WebRTC and ORTC) and here we hold the code common to all of them.\r\n */\r\nexport default class JingleSession {\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    /**\r\n     * Creates new <tt>JingleSession</tt>.\r\n     * @param {string} sid the Jingle session identifier\r\n     * @param {string} localJid our JID\r\n     * @param {string} remoteJid the JID of the remote peer\r\n     * @param {Strophe.Connection} connection the XMPP connection\r\n     * @param {Object} mediaConstraints the media constraints object passed to\r\n     * the PeerConnection onCreateAnswer/Offer as defined by the WebRTC.\r\n     * @param {Object} iceConfig the ICE servers config object as defined by\r\n     * the WebRTC. Passed to the PeerConnection's constructor.\r\n     * @param {boolean} isInitiator indicates if it will be the side which\r\n     * initiates the session.\r\n     */\r\n    constructor(\r\n            sid,\r\n            localJid,\r\n            remoteJid,\r\n            connection,\r\n            mediaConstraints,\r\n            iceConfig,\r\n            isInitiator) {\r\n        this.sid = sid;\r\n        this.localJid = localJid;\r\n        this.remoteJid = remoteJid;\r\n        this.connection = connection;\r\n        this.mediaConstraints = mediaConstraints;\r\n        this.iceConfig = iceConfig;\r\n\r\n        /**\r\n         * Indicates whether this instance is an initiator or an answerer of\r\n         * the Jingle session.\r\n         * @type {boolean}\r\n         */\r\n        this.isInitiator = isInitiator;\r\n\r\n        /**\r\n         * Whether to use dripping or not. Dripping is sending trickle\r\n         * candidates not one-by-one.\r\n         */\r\n        this.usedrip = true;\r\n\r\n        /**\r\n         *  When dripping is used, stores ICE candidates which are to be sent.\r\n         */\r\n        this.dripContainer = [];\r\n\r\n        /**\r\n         * The chat room instance associated with the session.\r\n         * @type {ChatRoom}\r\n         */\r\n        this.room = null;\r\n\r\n        /**\r\n         * Jingle session state - uninitialized until {@link initialize} is\r\n         * called @type {JingleSessionState}\r\n         */\r\n        this.state = null;\r\n\r\n        /**\r\n         * The RTC service instance\r\n         * @type {RTC}\r\n         */\r\n        this.rtc = null;\r\n    }\r\n\r\n    /**\r\n     * Returns XMPP address of this session's initiator.\r\n     * @return {string}\r\n     */\r\n    get initiatorJid() {\r\n        return this.isInitiator ? this.localJid : this.remoteJid;\r\n    }\r\n\r\n    /**\r\n     * Returns XMPP address of this session's responder.\r\n     * @return {string}\r\n     */\r\n    get responderJid() {\r\n        return this.isInitiator ? this.remoteJid : this.localJid;\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Prepares this object to initiate a session.\r\n     * @param {ChatRoom} room the chat room for the conference associated with\r\n     * this session\r\n     * @param {RTC} rtc the RTC service instance\r\n     * @param {object} options - the options, see implementing class's\r\n     * {@link #doInitialize} description for more details.\r\n     */\r\n    initialize(room, rtc, options) {\r\n        if (this.state !== null) {\r\n            const errmsg\r\n                = `attempt to initiate on session ${this.sid}\r\n                   in state ${this.state}`;\r\n\r\n            logger.error(errmsg);\r\n            throw new Error(errmsg);\r\n        }\r\n        this.room = room;\r\n        this.rtc = rtc;\r\n        this.state = JingleSessionState.PENDING;\r\n        this.doInitialize(options);\r\n    }\r\n\r\n    /**\r\n     * The implementing class finishes initialization here. Called at the end of\r\n     * {@link initialize}.\r\n     * @param {Object} options - The options specific to the implementing class.\r\n     * @protected\r\n     */\r\n    doInitialize(options) { } // eslint-disable-line no-unused-vars, no-empty-function, max-len\r\n\r\n    /* eslint-disable no-unused-vars, no-empty-function */\r\n\r\n    /**\r\n     * Adds the ICE candidates found in the 'contents' array as remote\r\n     * candidates?\r\n     * Note: currently only used on transport-info\r\n     *\r\n     * @param contents\r\n     */\r\n    addIceCandidates(contents) {}\r\n\r\n    /* eslint-enable no-unused-vars, no-empty-function */\r\n\r\n    /**\r\n     * Returns current state of this <tt>JingleSession</tt> instance.\r\n     * @returns {JingleSessionState} the current state of this session instance.\r\n     */\r\n    getState() {\r\n        return this.state;\r\n    }\r\n\r\n    /* eslint-disable no-unused-vars, no-empty-function */\r\n\r\n    /**\r\n     * Handles an 'add-source' event.\r\n     *\r\n     * @param contents an array of Jingle 'content' elements.\r\n     */\r\n    addSources(contents) {}\r\n\r\n    /**\r\n     * Handles a 'remove-source' event.\r\n     *\r\n     * @param contents an array of Jingle 'content' elements.\r\n     */\r\n    removeSources(contents) {}\r\n\r\n    /**\r\n     * Terminates this Jingle session by sending session-terminate\r\n     * @param success a callback called once the 'session-terminate' packet has\r\n     * been acknowledged with RESULT.\r\n     * @param failure a callback called when either timeout occurs or ERROR\r\n     * response is received.\r\n     * @param {Object} options\r\n     * @param {string} [options.reason] XMPP Jingle error condition\r\n     * @param {string} [options.reasonDescription] some meaningful error message\r\n     * @param {boolean} [options.sendSessionTerminate=true] set to false to skip\r\n     * sending session-terminate. It may not make sense to send it if the XMPP\r\n     * connection has been closed already or if the remote peer has disconnected\r\n     */\r\n    terminate(success, failure, options) {}\r\n\r\n    /**\r\n     * Handles an offer from the remote peer (prepares to accept a session).\r\n     * @param jingle the 'jingle' XML element.\r\n     * @param success callback called when we the incoming session has been\r\n     * accepted\r\n     * @param failure callback called when we fail for any reason, will supply\r\n     * error object with details(which is meant more to be printed to the logger\r\n     * than analysed in the code, as the error is unrecoverable anyway)\r\n     */\r\n    acceptOffer(jingle, success, failure) {}\r\n\r\n    /**\r\n     * Returns the JID of the initiator of the jingle session.\r\n     */\r\n    _getInitiatorJid() {\r\n        return this.isInitiator ? this.localJid : this.remoteJid;\r\n    }\r\n\r\n    /* eslint-enable no-unused-vars, no-empty-function */\r\n}\r\n","/* global __filename, $ */\r\n\r\nimport {\r\n    ICE_DURATION,\r\n    ICE_STATE_CHANGED\r\n} from '../../service/statistics/AnalyticsEvents';\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { $iq, Strophe } from 'strophe.js';\r\nimport { integerHash } from '../util/StringUtils';\r\n\r\nimport browser from './../browser';\r\nimport JingleSession from './JingleSession';\r\nimport * as JingleSessionState from './JingleSessionState';\r\nimport SDP from './SDP';\r\nimport SDPDiffer from './SDPDiffer';\r\nimport SDPUtil from './SDPUtil';\r\nimport SignalingLayerImpl from './SignalingLayerImpl';\r\n\r\nimport RTCEvents from '../../service/RTC/RTCEvents';\r\nimport Statistics from '../statistics/statistics';\r\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\r\nimport AsyncQueue from '../util/AsyncQueue';\r\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\r\nimport XmppConnection from './XmppConnection';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Constant tells how long we're going to wait for IQ response, before timeout\r\n * error is  triggered.\r\n * @type {number}\r\n */\r\nconst IQ_TIMEOUT = 10000;\r\n\r\n/*\r\n * The default number of samples (per stat) to keep when webrtc stats gathering\r\n * is enabled in TraceablePeerConnection.\r\n */\r\nconst DEFAULT_MAX_STATS = 300;\r\n\r\n/**\r\n * @typedef {Object} JingleSessionPCOptions\r\n * @property {Object} abTesting - A/B testing related options (ask George).\r\n * @property {boolean} abTesting.enableSuspendVideoTest - enables the suspend\r\n * video test ?(ask George).\r\n * @property {boolean} disableH264 - Described in the config.js[1].\r\n * @property {boolean} disableRtx - Described in the config.js[1].\r\n * @property {boolean} disableSimulcast - Described in the config.js[1].\r\n * @property {boolean} enableLayerSuspension - Described in the config.js[1].\r\n * @property {boolean} failICE - it's an option used in the tests. Set to\r\n * <tt>true</tt> to block any real candidates and make the ICE fail.\r\n * @property {boolean} gatherStats - Described in the config.js[1].\r\n * @property {object} p2p - Peer to peer related options (FIXME those could be\r\n * fetched from config.p2p on the upper level).\r\n * @property {boolean} p2p.disableH264 - Described in the config.js[1].\r\n * @property {boolean} p2p.preferH264 - Described in the config.js[1].\r\n * @property {boolean} preferH264 - Described in the config.js[1].\r\n * @property {Object} testing - Testing and/or experimental options.\r\n * @property {boolean} webrtcIceUdpDisable - Described in the config.js[1].\r\n * @property {boolean} webrtcIceTcpDisable - Described in the config.js[1].\r\n *\r\n * [1]: https://github.com/jitsi/jitsi-meet/blob/master/config.js\r\n */\r\n/**\r\n *\r\n */\r\nexport default class JingleSessionPC extends JingleSession {\r\n    /**\r\n     * Parses 'senders' attribute of the video content.\r\n     * @param {jQuery} jingleContents\r\n     * @return {string|null} one of the values of content \"senders\" attribute\r\n     * defined by Jingle. If there is no \"senders\" attribute or if the value is\r\n     * invalid then <tt>null</tt> will be returned.\r\n     * @private\r\n     */\r\n    static parseVideoSenders(jingleContents) {\r\n        const videoContents = jingleContents.find('>content[name=\"video\"]');\r\n\r\n        if (videoContents.length) {\r\n            const senders = videoContents[0].getAttribute('senders');\r\n\r\n            if (senders === 'both'\r\n                || senders === 'initiator'\r\n                || senders === 'responder'\r\n                || senders === 'none') {\r\n                return senders;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    /**\r\n     * Creates new <tt>JingleSessionPC</tt>\r\n     * @param {string} sid the Jingle Session ID - random string which\r\n     * identifies the session\r\n     * @param {string} localJid our JID\r\n     * @param {string} remoteJid remote peer JID\r\n     * @param {XmppConnection} connection - The XMPP connection instance.\r\n     * @param mediaConstraints the media constraints object passed to\r\n     * createOffer/Answer, as defined by the WebRTC standard\r\n     * @param iceConfig the ICE servers config object as defined by the WebRTC\r\n     * standard.\r\n     * @param {boolean} isP2P indicates whether this instance is\r\n     * meant to be used in a direct, peer to peer connection or <tt>false</tt>\r\n     * if it's a JVB connection.\r\n     * @param {boolean} isInitiator indicates if it will be the side which\r\n     * initiates the session.\r\n     * @constructor\r\n     *\r\n     * @implements {SignalingLayer}\r\n     */\r\n    constructor(\r\n            sid,\r\n            localJid,\r\n            remoteJid,\r\n            connection,\r\n            mediaConstraints,\r\n            iceConfig,\r\n            isP2P,\r\n            isInitiator) {\r\n        super(\r\n            sid,\r\n            localJid,\r\n            remoteJid, connection, mediaConstraints, iceConfig, isInitiator);\r\n\r\n        /**\r\n         * The bridge session's identifier. One Jingle session can during\r\n         * it's lifetime participate in multiple bridge sessions managed by\r\n         * Jicofo. A new bridge session is started whenever Jicofo sends\r\n         * 'session-initiate' or 'transport-replace'.\r\n         *\r\n         * @type {?string}\r\n         * @private\r\n         */\r\n        this._bridgeSessionId = null;\r\n\r\n        /**\r\n         * The oldest SDP passed to {@link notifyMySSRCUpdate} while the XMPP connection was offline that will be\r\n         * used to update Jicofo once the XMPP connection goes back online.\r\n         * @type {SDP|undefined}\r\n         * @private\r\n         */\r\n        this._cachedOldLocalSdp = undefined;\r\n\r\n        /**\r\n         * The latest SDP passed to {@link notifyMySSRCUpdate} while the XMPP connection was offline that will be\r\n         * used to update Jicofo once the XMPP connection goes back online.\r\n         * @type {SDP|undefined}\r\n         * @private\r\n         */\r\n        this._cachedNewLocalSdp = undefined;\r\n\r\n        /**\r\n         * Stores result of {@link window.performance.now()} at the time when\r\n         * ICE enters 'checking' state.\r\n         * @type {number|null} null if no value has been stored yet\r\n         * @private\r\n         */\r\n        this._iceCheckingStartedTimestamp = null;\r\n\r\n        /**\r\n         * Stores result of {@link window.performance.now()} at the time when\r\n         * first ICE candidate is spawned by the peerconnection to mark when\r\n         * ICE gathering started. That's, because ICE gathering state changed\r\n         * events are not supported by most of the browsers, so we try something\r\n         * that will work everywhere. It may not be as accurate, but given that\r\n         * 'host' candidate usually comes first, the delay should be minimal.\r\n         * @type {number|null} null if no value has been stored yet\r\n         * @private\r\n         */\r\n        this._gatheringStartedTimestamp = null;\r\n\r\n        /**\r\n         * Indicates whether or not this session is willing to send/receive\r\n         * video media. When set to <tt>false</tt> the underlying peer\r\n         * connection will disable local video transfer and the remote peer will\r\n         * be will be asked to stop sending video via 'content-modify' IQ\r\n         * (the senders attribute of video contents will be adjusted\r\n         * accordingly). Note that this notification is sent only in P2P\r\n         * session, because Jicofo does not support it yet. Obviously when\r\n         * the value is changed from <tt>false</tt> to <tt>true</tt> another\r\n         * notification will be sent to resume video transfer on the remote\r\n         * side.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._localVideoActive = true;\r\n\r\n        /**\r\n         * Indicates whether or not the remote peer has video transfer active.\r\n         * When set to <tt>true</tt> it means that remote peer is neither\r\n         * sending nor willing to receive video. In such case we'll ask\r\n         * our peerconnection to stop sending video by calling\r\n         * {@link TraceablePeerConnection.setVideoTransferActive} with\r\n         * <tt>false</tt>.\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._remoteVideoActive = true;\r\n\r\n        /**\r\n         * Marks that ICE gathering duration has been reported already. That\r\n         * prevents reporting it again, after eventual 'transport-replace' (JVB\r\n         * conference migration/ICE restart).\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._gatheringReported = false;\r\n\r\n        this.lasticecandidate = false;\r\n        this.closed = false;\r\n\r\n        /**\r\n         * Indicates whether or not this <tt>JingleSessionPC</tt> is used in\r\n         * a peer to peer type of session.\r\n         * @type {boolean} <tt>true</tt> if it's a peer to peer\r\n         * session or <tt>false</tt> if it's a JVB session\r\n         */\r\n        this.isP2P = isP2P;\r\n\r\n        /**\r\n         * The signaling layer implementation.\r\n         * @type {SignalingLayerImpl}\r\n         */\r\n        this.signalingLayer = new SignalingLayerImpl();\r\n\r\n        /**\r\n         * The queue used to serialize operations done on the peerconnection.\r\n         *\r\n         * @type {AsyncQueue}\r\n         */\r\n        this.modificationQueue = new AsyncQueue();\r\n\r\n        /**\r\n         * Flag used to guarantee that the connection established event is\r\n         * triggered just once.\r\n         * @type {boolean}\r\n         */\r\n        this.wasConnected = false;\r\n\r\n        /**\r\n         * Keeps track of how long (in ms) it took from ICE start to ICE\r\n         * connect.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.establishmentDuration = undefined;\r\n\r\n        this._xmppListeners = [];\r\n        this._xmppListeners.push(\r\n            connection.addEventListener(\r\n                XmppConnection.Events.CONN_STATUS_CHANGED,\r\n                this.onXmppStatusChanged.bind(this))\r\n        );\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Checks whether or not this session instance is still operational.\r\n     * @private\r\n     * @returns {boolean} {@code true} if operation or {@code false} otherwise.\r\n     */\r\n    _assertNotEnded() {\r\n        return this.state !== JingleSessionState.ENDED;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @param {JingleSessionPCOptions} options  - a set of config options.\r\n     */\r\n    doInitialize(options) {\r\n        this.failICE = Boolean(options.failICE);\r\n        this.lasticecandidate = false;\r\n        this.options = options;\r\n\r\n        /**\r\n         * {@code true} if reconnect is in progress.\r\n         * @type {boolean}\r\n         */\r\n        this.isReconnect = false;\r\n\r\n        /**\r\n         * Set to {@code true} if the connection was ever stable\r\n         * @type {boolean}\r\n         */\r\n        this.wasstable = false;\r\n        this.webrtcIceUdpDisable = Boolean(options.webrtcIceUdpDisable);\r\n        this.webrtcIceTcpDisable = Boolean(options.webrtcIceTcpDisable);\r\n\r\n        const pcOptions = { disableRtx: options.disableRtx };\r\n\r\n        if (options.gatherStats) {\r\n            pcOptions.maxstats = DEFAULT_MAX_STATS;\r\n        }\r\n        pcOptions.capScreenshareBitrate = false;\r\n        if (this.isP2P) {\r\n            // simulcast needs to be disabled for P2P (121) calls\r\n            pcOptions.disableSimulcast = true;\r\n            pcOptions.disableH264 = options.p2p && options.p2p.disableH264;\r\n            pcOptions.preferH264 = options.p2p && options.p2p.preferH264;\r\n\r\n            const abtestSuspendVideo = this._abtestSuspendVideoEnabled(options);\r\n\r\n            if (typeof abtestSuspendVideo !== 'undefined') {\r\n                pcOptions.abtestSuspendVideo = abtestSuspendVideo;\r\n            }\r\n        } else {\r\n            // H264 does not support simulcast, so it needs to be disabled.\r\n            pcOptions.disableSimulcast\r\n                = options.disableSimulcast\r\n                    || (options.preferH264 && !options.disableH264);\r\n            pcOptions.preferH264 = options.preferH264;\r\n            pcOptions.enableLayerSuspension = options.enableLayerSuspension;\r\n\r\n            // disable simulcast for screenshare and set the max bitrate to\r\n            // 500Kbps if the testing flag is present in config.js.\r\n            if (options.testing\r\n                && options.testing.capScreenshareBitrate\r\n                && typeof options.testing.capScreenshareBitrate === 'number') {\r\n                pcOptions.capScreenshareBitrate\r\n                    = Math.random()\r\n                    < options.testing.capScreenshareBitrate;\r\n\r\n                // add the capScreenshareBitrate to the permanent properties so\r\n                // that it's included with every event that we send to the\r\n                // analytics backend.\r\n                Statistics.analytics.addPermanentProperties({ capScreenshareBitrate: pcOptions.capScreenshareBitrate });\r\n            }\r\n        }\r\n\r\n        if (options.startSilent) {\r\n            pcOptions.startSilent = true;\r\n        }\r\n\r\n        this.peerconnection\r\n            = this.rtc.createPeerConnection(\r\n                    this.signalingLayer,\r\n                    this.iceConfig,\r\n                    this.isP2P,\r\n                    pcOptions);\r\n\r\n        this.peerconnection.onicecandidate = ev => {\r\n            if (!ev) {\r\n                // There was an incomplete check for ev before which left\r\n                // the last line of the function unprotected from a potential\r\n                // throw of an exception. Consequently, it may be argued that\r\n                // the check is unnecessary. Anyway, I'm leaving it and making\r\n                // the check complete.\r\n                return;\r\n            }\r\n\r\n            // XXX this is broken, candidate is not parsed.\r\n            const candidate = ev.candidate;\r\n            const now = window.performance.now();\r\n\r\n            if (candidate) {\r\n                if (this._gatheringStartedTimestamp === null) {\r\n                    this._gatheringStartedTimestamp = now;\r\n                }\r\n\r\n                // Discard candidates of disabled protocols.\r\n                let protocol = candidate.protocol;\r\n\r\n                if (typeof protocol === 'string') {\r\n                    protocol = protocol.toLowerCase();\r\n                    if (protocol === 'tcp' || protocol === 'ssltcp') {\r\n                        if (this.webrtcIceTcpDisable) {\r\n                            return;\r\n                        }\r\n                    } else if (protocol === 'udp') {\r\n                        if (this.webrtcIceUdpDisable) {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            } else if (!this._gatheringReported) {\r\n                // End of gathering\r\n                Statistics.sendAnalytics(\r\n                    ICE_DURATION,\r\n                    {\r\n                        phase: 'gathering',\r\n                        value: now - this._gatheringStartedTimestamp,\r\n                        p2p: this.isP2P,\r\n                        initiator: this.isInitiator\r\n                    });\r\n                this._gatheringReported = true;\r\n            }\r\n            this.sendIceCandidate(candidate);\r\n        };\r\n\r\n        // Note there is a change in the spec about closed:\r\n        // This value moved into the RTCPeerConnectionState enum in\r\n        // the May 13, 2016 draft of the specification, as it reflects the state\r\n        // of the RTCPeerConnection, not the signaling connection. You now\r\n        // detect a closed connection by checking for connectionState to be\r\n        // \"closed\" instead.\r\n        // I suppose at some point this will be moved to onconnectionstatechange\r\n        this.peerconnection.onsignalingstatechange = () => {\r\n            if (this.peerconnection.signalingState === 'stable') {\r\n                this.wasstable = true;\r\n            } else if (this.peerconnection.signalingState === 'closed'\r\n                || this.peerconnection.connectionState === 'closed') {\r\n                this.room.eventEmitter.emit(XMPPEvents.SUSPEND_DETECTED, this);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * The oniceconnectionstatechange event handler contains the code to\r\n         * execute when the iceconnectionstatechange event, of type Event,\r\n         * is received by this RTCPeerConnection. Such an event is sent when\r\n         * the value of RTCPeerConnection.iceConnectionState changes.\r\n         */\r\n        this.peerconnection.oniceconnectionstatechange = () => {\r\n            const now = window.performance.now();\r\n\r\n            if (!this.isP2P) {\r\n                this.room.connectionTimes[\r\n                    `ice.state.${this.peerconnection.iceConnectionState}`]\r\n                    = now;\r\n            }\r\n            logger.log(\r\n                `(TIME) ICE ${this.peerconnection.iceConnectionState}`\r\n                    + ` P2P? ${this.isP2P}:\\t`,\r\n                now);\r\n\r\n            Statistics.sendAnalytics(\r\n                ICE_STATE_CHANGED,\r\n                {\r\n                    p2p: this.isP2P,\r\n                    state: this.peerconnection.iceConnectionState,\r\n                    'signaling_state': this.peerconnection.signalingState,\r\n                    reconnect: this.isReconnect,\r\n                    value: now\r\n                });\r\n\r\n            this.room.eventEmitter.emit(\r\n                XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\r\n                this,\r\n                this.peerconnection.iceConnectionState);\r\n            switch (this.peerconnection.iceConnectionState) {\r\n            case 'checking':\r\n                this._iceCheckingStartedTimestamp = now;\r\n                break;\r\n            case 'connected':\r\n                // Informs interested parties that the connection has been\r\n                // restored.\r\n                if (this.peerconnection.signalingState === 'stable') {\r\n                    if (this.isReconnect) {\r\n                        this.room.eventEmitter.emit(\r\n                            XMPPEvents.CONNECTION_RESTORED, this);\r\n                    }\r\n                }\r\n\r\n                if (!this.wasConnected && this.wasstable) {\r\n\r\n                    Statistics.sendAnalytics(\r\n                        ICE_DURATION,\r\n                        {\r\n                            phase: 'checking',\r\n                            value: now - this._iceCheckingStartedTimestamp,\r\n                            p2p: this.isP2P,\r\n                            initiator: this.isInitiator\r\n                        });\r\n\r\n                    // Switch between ICE gathering and ICE checking whichever\r\n                    // started first (scenarios are different for initiator\r\n                    // vs responder)\r\n                    const iceStarted\r\n                        = Math.min(\r\n                            this._iceCheckingStartedTimestamp,\r\n                            this._gatheringStartedTimestamp);\r\n\r\n                    this.establishmentDuration = now - iceStarted;\r\n\r\n                    Statistics.sendAnalytics(\r\n                        ICE_DURATION,\r\n                        {\r\n                            phase: 'establishment',\r\n                            value: this.establishmentDuration,\r\n                            p2p: this.isP2P,\r\n                            initiator: this.isInitiator\r\n                        });\r\n\r\n                    this.wasConnected = true;\r\n                    this.room.eventEmitter.emit(\r\n                        XMPPEvents.CONNECTION_ESTABLISHED, this);\r\n                }\r\n                this.isReconnect = false;\r\n                break;\r\n            case 'disconnected':\r\n                this.isReconnect = true;\r\n\r\n                // Informs interested parties that the connection has been\r\n                // interrupted.\r\n                if (this.wasstable) {\r\n                    this.room.eventEmitter.emit(\r\n                        XMPPEvents.CONNECTION_INTERRUPTED, this);\r\n                }\r\n                break;\r\n            case 'failed':\r\n                this.room.eventEmitter.emit(\r\n                    XMPPEvents.CONNECTION_ICE_FAILED, this);\r\n                break;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * The negotiationneeded event is fired whenever we shake the media on the\r\n         * RTCPeerConnection object.\r\n         */\r\n        this.peerconnection.onnegotiationneeded = () => {\r\n            const state = this.peerconnection.signalingState;\r\n            const remoteDescription = this.peerconnection.remoteDescription;\r\n\r\n            this.room.eventEmitter.emit(XMPPEvents.PEERCONNECTION_READY, this);\r\n            if (browser.usesUnifiedPlan() && state === 'stable'\r\n                && remoteDescription && typeof remoteDescription.sdp === 'string') {\r\n                logger.debug(`onnegotiationneeded fired on ${this.peerconnection} in state: ${state}`);\r\n                const workFunction = finishedCallback => {\r\n                    const oldSdp = new SDP(this.peerconnection.localDescription.sdp);\r\n\r\n                    this._renegotiate()\r\n                        .then(() => {\r\n                            const newSdp = new SDP(this.peerconnection.localDescription.sdp);\r\n\r\n                            this.notifyMySSRCUpdate(oldSdp, newSdp);\r\n                            finishedCallback();\r\n                        },\r\n                        finishedCallback /* will be called with en error */);\r\n                };\r\n\r\n                this.modificationQueue.push(\r\n                    workFunction,\r\n                    error => {\r\n                        if (error) {\r\n                            logger.error('onnegotiationneeded error', error);\r\n                        } else {\r\n                            logger.debug('onnegotiationneeded executed - OK');\r\n                        }\r\n                    });\r\n            }\r\n        };\r\n\r\n        // The signaling layer will bind it's listeners at this point\r\n        this.signalingLayer.setChatRoom(this.room);\r\n\r\n        if (!this.isP2P && options.enableLayerSuspension) {\r\n            // If this is the bridge session, we'll listen for\r\n            // IS_SELECTED_CHANGED events and notify the peer connection\r\n            this.rtc.addListener(RTCEvents.IS_SELECTED_CHANGED,\r\n                isSelected => {\r\n                    this.peerconnection.setIsSelected(isSelected);\r\n                    logger.info('Doing local O/A due to '\r\n                        + 'IS_SELECTED_CHANGED event');\r\n                    this.modificationQueue.push(finishedCallback => {\r\n                        this._renegotiate()\r\n                            .then(finishedCallback)\r\n                            .catch(finishedCallback);\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends given candidate in Jingle 'transport-info' message.\r\n     * @param {RTCIceCandidate} candidate the WebRTC ICE candidate instance\r\n     * @private\r\n     */\r\n    sendIceCandidate(candidate) {\r\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\r\n\r\n        if (candidate && candidate.candidate.length && !this.lasticecandidate) {\r\n            const ice\r\n                = SDPUtil.iceparams(\r\n                    localSDP.media[candidate.sdpMLineIndex], localSDP.session);\r\n            const jcand = SDPUtil.candidateToJingle(candidate.candidate);\r\n\r\n            if (!(ice && jcand)) {\r\n                const errorMesssage = 'failed to get ice && jcand';\r\n\r\n                GlobalOnErrorHandler.callErrorHandler(new Error(errorMesssage));\r\n                logger.error(errorMesssage);\r\n\r\n                return;\r\n            }\r\n            ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\r\n\r\n            if (this.usedrip) {\r\n                if (this.dripContainer.length === 0) {\r\n                    // start 20ms callout\r\n                    setTimeout(() => {\r\n                        if (this.dripContainer.length === 0) {\r\n                            return;\r\n                        }\r\n                        this.sendIceCandidates(this.dripContainer);\r\n                        this.dripContainer = [];\r\n                    }, 20);\r\n                }\r\n                this.dripContainer.push(candidate);\r\n            } else {\r\n                this.sendIceCandidates([ candidate ]);\r\n            }\r\n        } else {\r\n            logger.log('sendIceCandidate: last candidate.');\r\n\r\n            // FIXME: remember to re-think in ICE-restart\r\n            this.lasticecandidate = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends given candidates in Jingle 'transport-info' message.\r\n     * @param {Array<RTCIceCandidate>} candidates an array of the WebRTC ICE\r\n     * candidate instances\r\n     * @private\r\n     */\r\n    sendIceCandidates(candidates) {\r\n        if (!this._assertNotEnded('sendIceCandidates')) {\r\n\r\n            return;\r\n        }\r\n\r\n        logger.log('sendIceCandidates', candidates);\r\n        const cand = $iq({ to: this.remoteJid,\r\n            type: 'set' })\r\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\r\n                action: 'transport-info',\r\n                initiator: this.initiatorJid,\r\n                sid: this.sid });\r\n\r\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\r\n\r\n        for (let mid = 0; mid < localSDP.media.length; mid++) {\r\n            const cands = candidates.filter(el => el.sdpMLineIndex === mid);\r\n            const mline\r\n                = SDPUtil.parseMLine(localSDP.media[mid].split('\\r\\n')[0]);\r\n\r\n            if (cands.length > 0) {\r\n                const ice\r\n                    = SDPUtil.iceparams(localSDP.media[mid], localSDP.session);\r\n\r\n                ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\r\n                cand.c('content', {\r\n                    creator: this.initiatorJid === this.localJid\r\n                        ? 'initiator' : 'responder',\r\n                    name: cands[0].sdpMid ? cands[0].sdpMid : mline.media\r\n                }).c('transport', ice);\r\n                for (let i = 0; i < cands.length; i++) {\r\n                    const candidate\r\n                        = SDPUtil.candidateToJingle(cands[i].candidate);\r\n\r\n                    // Mangle ICE candidate if 'failICE' test option is enabled\r\n\r\n                    if (this.failICE) {\r\n                        candidate.ip = '1.1.1.1';\r\n                    }\r\n                    cand.c('candidate', candidate).up();\r\n                }\r\n\r\n                // add fingerprint\r\n                const fingerprintLine\r\n                    = SDPUtil.findLine(\r\n                        localSDP.media[mid],\r\n                        'a=fingerprint:', localSDP.session);\r\n\r\n                if (fingerprintLine) {\r\n                    const tmp = SDPUtil.parseFingerprint(fingerprintLine);\r\n\r\n                    tmp.required = true;\r\n                    cand.c(\r\n                        'fingerprint',\r\n                        { xmlns: 'urn:xmpp:jingle:apps:dtls:0' })\r\n                        .t(tmp.fingerprint);\r\n                    delete tmp.fingerprint;\r\n                    cand.attrs(tmp);\r\n                    cand.up();\r\n                }\r\n                cand.up(); // transport\r\n                cand.up(); // content\r\n            }\r\n        }\r\n\r\n        // might merge last-candidate notification into this, but it is called\r\n        // a lot later. See webrtc issue #2340\r\n        // logger.log('was this the last candidate', this.lasticecandidate);\r\n        this.connection.sendIQ(\r\n            cand, null, this.newJingleErrorHandler(cand), IQ_TIMEOUT);\r\n    }\r\n\r\n    /**\r\n     * Sends Jingle 'session-info' message which includes custom Jitsi Meet\r\n     * 'ice-state' element with the text value 'failed' to let Jicofo know\r\n     * that the ICE connection has entered the failed state. It can then\r\n     * choose to re-create JVB channels and send 'transport-replace' to\r\n     * retry the connection.\r\n     */\r\n    sendIceFailedNotification() {\r\n        const sessionInfo\r\n            = $iq({\r\n                to: this.remoteJid,\r\n                type: 'set' })\r\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\r\n                action: 'session-info',\r\n                initiator: this.initiatorJid,\r\n                sid: this.sid })\r\n            .c('ice-state', { xmlns: 'http://jitsi.org/protocol/focus' })\r\n            .t('failed')\r\n            .up();\r\n\r\n        this._bridgeSessionId\r\n            && sessionInfo.c(\r\n                'bridge-session', {\r\n                    xmlns: 'http://jitsi.org/protocol/focus',\r\n                    id: this._bridgeSessionId\r\n                });\r\n\r\n        this.connection.sendIQ(\r\n            sessionInfo,\r\n            null,\r\n            this.newJingleErrorHandler(sessionInfo),\r\n            /*\r\n             * This message will be often sent when there are connectivity\r\n             * issues, so make it slightly longer than Prosody's default BOSH\r\n             * inactivity timeout of 60 seconds.\r\n             */ 65);\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n     */\r\n    addIceCandidates(elem) {\r\n        if (this.peerconnection.signalingState === 'closed') {\r\n            logger.warn('Ignored add ICE candidate when in closed state');\r\n\r\n            return;\r\n        }\r\n\r\n        const iceCandidates = [];\r\n\r\n        elem.find('>content>transport>candidate')\r\n            .each((idx, candidate) => {\r\n                let line = SDPUtil.candidateFromJingle(candidate);\r\n\r\n                line = line.replace('\\r\\n', '').replace('a=', '');\r\n\r\n                // FIXME this code does not care to handle\r\n                // non-bundle transport\r\n                const rtcCandidate = new RTCIceCandidate({\r\n                    sdpMLineIndex: 0,\r\n\r\n                    // FF comes up with more complex names like audio-23423,\r\n                    // Given that it works on both Chrome and FF without\r\n                    // providing it, let's leave it like this for the time\r\n                    // being...\r\n                    // sdpMid: 'audio',\r\n                    sdpMid: '',\r\n                    candidate: line\r\n                });\r\n\r\n                iceCandidates.push(rtcCandidate);\r\n            });\r\n\r\n        if (!iceCandidates.length) {\r\n            logger.error(\r\n                'No ICE candidates to add ?', elem[0] && elem[0].outerHTML);\r\n\r\n            return;\r\n        }\r\n\r\n        // We want to have this task queued, so that we know it is executed,\r\n        // after the initial sRD/sLD offer/answer cycle was done (based on\r\n        // the assumption that candidates are spawned after the offer/answer\r\n        // and XMPP preserves order).\r\n        const workFunction = finishedCallback => {\r\n            for (const iceCandidate of iceCandidates) {\r\n                this.peerconnection.addIceCandidate(iceCandidate)\r\n                    .then(\r\n                        () => logger.debug('addIceCandidate ok!'),\r\n                        err => logger.error('addIceCandidate failed!', err));\r\n            }\r\n\r\n            finishedCallback();\r\n        };\r\n\r\n        logger.debug(\r\n            `Queued add (${iceCandidates.length}) ICE candidates task...`);\r\n        this.modificationQueue.push(workFunction);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param contents\r\n     */\r\n    readSsrcInfo(contents) {\r\n        const ssrcs\r\n            = $(contents).find(\r\n                '>description>'\r\n                    + 'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\r\n\r\n        ssrcs.each((i, ssrcElement) => {\r\n            const ssrc = Number(ssrcElement.getAttribute('ssrc'));\r\n\r\n            if (this.isP2P) {\r\n                // In P2P all SSRCs are owner by the remote peer\r\n                this.signalingLayer.setSSRCOwner(\r\n                    ssrc, Strophe.getResourceFromJid(this.remoteJid));\r\n            } else {\r\n                $(ssrcElement)\r\n                    .find('>ssrc-info[xmlns=\"http://jitsi.org/jitmeet\"]')\r\n                    .each((i3, ssrcInfoElement) => {\r\n                        const owner = ssrcInfoElement.getAttribute('owner');\r\n\r\n                        if (owner && owner.length) {\r\n                            if (isNaN(ssrc) || ssrc < 0) {\r\n                                logger.warn(\r\n                                    `Invalid SSRC ${ssrc} value received`\r\n                                        + ` for ${owner}`);\r\n                            } else {\r\n                                this.signalingLayer.setSSRCOwner(\r\n                                    ssrc,\r\n                                    Strophe.getResourceFromJid(owner));\r\n                            }\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Makes the underlying TraceablePeerConnection generate new SSRC for\r\n     * the recvonly video stream.\r\n     * @deprecated\r\n     */\r\n    generateRecvonlySsrc() {\r\n        if (this.peerconnection) {\r\n            this.peerconnection.generateRecvonlySsrc();\r\n        } else {\r\n            logger.error(\r\n                'Unable to generate recvonly SSRC - no peerconnection');\r\n        }\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n    /**\r\n     * Accepts incoming Jingle 'session-initiate' and should send\r\n     * 'session-accept' in result.\r\n     * @param jingleOffer jQuery selector pointing to the jingle element of\r\n     * the offer IQ\r\n     * @param success callback called when we accept incoming session\r\n     * successfully and receive RESULT packet to 'session-accept' sent.\r\n     * @param failure function(error) called if for any reason we fail to accept\r\n     * the incoming offer. 'error' argument can be used to log some details\r\n     * about the error.\r\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\r\n     * the local tracks that will be added, before the offer/answer cycle\r\n     * executes. We allow the localTracks to optionally be passed in so that\r\n     * the addition of the local tracks and the processing of the initial offer\r\n     * can all be done atomically. We want to make sure that any other\r\n     * operations which originate in the XMPP Jingle messages related with\r\n     * this session to be executed with an assumption that the initial\r\n     * offer/answer cycle has been executed already.\r\n     */\r\n    acceptOffer(jingleOffer, success, failure, localTracks) {\r\n        this.setOfferAnswerCycle(\r\n            jingleOffer,\r\n            () => {\r\n                // FIXME we may not care about RESULT packet for session-accept\r\n                // then we should either call 'success' here immediately or\r\n                // modify sendSessionAccept method to do that\r\n                this.sendSessionAccept(success, failure);\r\n            },\r\n            failure,\r\n            localTracks);\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Creates an offer and sends Jingle 'session-initiate' to the remote peer.\r\n     * @param {Array<JitsiLocalTrack>} localTracks the local tracks that will be\r\n     * added, before the offer/answer cycle executes (for the local track\r\n     * addition to be an atomic operation together with the offer/answer).\r\n     */\r\n    invite(localTracks) {\r\n        if (!this.isInitiator) {\r\n            throw new Error('Trying to invite from the responder session');\r\n        }\r\n        const workFunction = finishedCallback => {\r\n            for (const localTrack of localTracks) {\r\n                this.peerconnection.addTrack(localTrack, true /* isInitiator */);\r\n            }\r\n            this.peerconnection.createOffer(this.mediaConstraints)\r\n                .then(offerSdp => {\r\n                    this.peerconnection.setLocalDescription(offerSdp)\r\n                        .then(() => {\r\n                            // NOTE that the offer is obtained from\r\n                            // the localDescription getter as it needs to go\r\n                            // though the transformation chain.\r\n                            this.sendSessionInitiate(\r\n                                this.peerconnection.localDescription.sdp);\r\n                            finishedCallback();\r\n                        }, error => {\r\n                            logger.error(\r\n                                'Failed to set local SDP', error, offerSdp);\r\n                            finishedCallback(error);\r\n                        });\r\n                }, error => {\r\n                    logger.error(\r\n                        'Failed to create an offer',\r\n                        error,\r\n                        this.mediaConstraints);\r\n                    finishedCallback(error);\r\n                });\r\n        };\r\n\r\n        this.modificationQueue.push(\r\n            workFunction,\r\n            error => {\r\n                if (error) {\r\n                    logger.error('invite error', error);\r\n                } else {\r\n                    logger.debug('invite executed - OK');\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Sends 'session-initiate' to the remote peer.\r\n     *\r\n     * NOTE this method is synchronous and we're not waiting for the RESULT\r\n     * response which would delay the startup process.\r\n     *\r\n     * @param {string} offerSdp  - The local session description which will be\r\n     * used to generate an offer.\r\n     * @private\r\n     */\r\n    sendSessionInitiate(offerSdp) {\r\n        let init = $iq({\r\n            to: this.remoteJid,\r\n            type: 'set'\r\n        }).c('jingle', {\r\n            xmlns: 'urn:xmpp:jingle:1',\r\n            action: 'session-initiate',\r\n            initiator: this.initiatorJid,\r\n            sid: this.sid\r\n        });\r\n\r\n        new SDP(offerSdp).toJingle(\r\n            init,\r\n            this.isInitiator ? 'initiator' : 'responder');\r\n        init = init.tree();\r\n        logger.info('Session-initiate: ', init);\r\n        this.connection.sendIQ(init,\r\n            () => {\r\n                logger.info('Got RESULT for \"session-initiate\"');\r\n            },\r\n            error => {\r\n                logger.error('\"session-initiate\" error', error);\r\n            },\r\n            IQ_TIMEOUT);\r\n    }\r\n\r\n    /**\r\n     * Sets the answer received from the remote peer.\r\n     * @param jingleAnswer\r\n     */\r\n    setAnswer(jingleAnswer) {\r\n        if (!this.isInitiator) {\r\n            throw new Error('Trying to set an answer on the responder session');\r\n        }\r\n        this.setOfferAnswerCycle(\r\n            jingleAnswer,\r\n            () => {\r\n                logger.info('setAnswer - succeeded');\r\n            },\r\n            error => {\r\n                logger.error('setAnswer failed: ', error);\r\n            });\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n    /**\r\n     * This is a setRemoteDescription/setLocalDescription cycle which starts at\r\n     * converting Strophe Jingle IQ into remote offer SDP. Once converted\r\n     * setRemoteDescription, createAnswer and setLocalDescription calls follow.\r\n     * @param jingleOfferAnswerIq jQuery selector pointing to the jingle element\r\n     *        of the offer (or answer) IQ\r\n     * @param success callback called when sRD/sLD cycle finishes successfully.\r\n     * @param failure callback called with an error object as an argument if we\r\n     *        fail at any point during setRD, createAnswer, setLD.\r\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\r\n     * the local tracks that will be added, before the offer/answer cycle\r\n     * executes (for the local track addition to be an atomic operation together\r\n     * with the offer/answer).\r\n     */\r\n    setOfferAnswerCycle(jingleOfferAnswerIq, success, failure, localTracks) {\r\n        const workFunction = finishedCallback => {\r\n\r\n            if (localTracks) {\r\n                for (const track of localTracks) {\r\n                    this.peerconnection.addTrack(track);\r\n                }\r\n            }\r\n\r\n            const newRemoteSdp\r\n                = this._processNewJingleOfferIq(jingleOfferAnswerIq);\r\n            const oldLocalSdp\r\n                = this.peerconnection.localDescription.sdp;\r\n\r\n            const bridgeSession\r\n                = $(jingleOfferAnswerIq)\r\n                    .find('>bridge-session['\r\n                        + 'xmlns=\"http://jitsi.org/protocol/focus\"]');\r\n            const bridgeSessionId = bridgeSession.attr('id');\r\n\r\n            if (bridgeSessionId !== this._bridgeSessionId) {\r\n                this._bridgeSessionId = bridgeSessionId;\r\n            }\r\n\r\n            this._renegotiate(newRemoteSdp.raw)\r\n                .then(() => {\r\n                    if (this.state === JingleSessionState.PENDING) {\r\n                        this.state = JingleSessionState.ACTIVE;\r\n\r\n                        // Sync up video transfer active/inactive only after\r\n                        // the initial O/A cycle. We want to adjust the video\r\n                        // media direction only in the local SDP and the Jingle\r\n                        // contents direction included in the initial\r\n                        // offer/answer is mapped to the remote SDP. Jingle\r\n                        // 'content-modify' IQ is processed in a way that it\r\n                        // will only modify local SDP when remote peer is no\r\n                        // longer interested in receiving video content.\r\n                        // Changing media direction in the remote SDP will mess\r\n                        // up our SDP translation chain (simulcast, video mute,\r\n                        // RTX etc.)\r\n                        if (this.isP2P && !this._localVideoActive) {\r\n                            this.sendContentModify(this._localVideoActive);\r\n                        }\r\n                    }\r\n\r\n                    // Old local SDP will be available when we're setting answer\r\n                    // for the first time, but not when offer and it's fine\r\n                    // since we're generating an answer now it will contain all\r\n                    // our SSRCs\r\n                    if (oldLocalSdp) {\r\n                        const newLocalSdp\r\n                            = new SDP(this.peerconnection.localDescription.sdp);\r\n\r\n                        this.notifyMySSRCUpdate(\r\n                            new SDP(oldLocalSdp), newLocalSdp);\r\n                    }\r\n\r\n                    finishedCallback();\r\n                }, error => {\r\n                    logger.error(\r\n                        `Error renegotiating after setting new remote ${\r\n                            this.isInitiator ? 'answer: ' : 'offer: '}${error}`,\r\n                        newRemoteSdp);\r\n\r\n                    finishedCallback(error);\r\n                });\r\n        };\r\n\r\n        this.modificationQueue.push(\r\n            workFunction,\r\n            error => {\r\n                error ? failure(error) : success();\r\n            });\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Although it states \"replace transport\" it does accept full Jingle offer\r\n     * which should contain new ICE transport details.\r\n     * @param jingleOfferElem an element Jingle IQ that contains new offer and\r\n     *        transport info.\r\n     * @param success callback called when we succeed to accept new offer.\r\n     * @param failure function(error) called when we fail to accept new offer.\r\n     */\r\n    replaceTransport(jingleOfferElem, success, failure) {\r\n        this.room.eventEmitter.emit(XMPPEvents.ICE_RESTARTING, this);\r\n\r\n        // We need to first reject the 'data' section to have the SCTP stack\r\n        // cleaned up to signal the known data channel is now invalid. After\r\n        // that the original offer is set to have the SCTP connection\r\n        // established with the new bridge.\r\n        const originalOffer = jingleOfferElem.clone();\r\n\r\n        jingleOfferElem\r\n            .find('>content[name=\\'data\\']')\r\n            .attr('senders', 'rejected');\r\n\r\n        // Remove all remote sources in order to reset the client's state\r\n        // for the remote MediaStreams. When a conference is moved to\r\n        // another bridge it will start streaming with a sequence number\r\n        // that is not in sync with the most recently seen by the client.\r\n        // The symptoms include frozen or black video and lots of \"failed to\r\n        // unprotect SRTP packets\" in Chrome logs.\r\n        jingleOfferElem\r\n            .find('>content>description>source')\r\n            .remove();\r\n        jingleOfferElem\r\n            .find('>content>description>ssrc-group')\r\n            .remove();\r\n\r\n        // On the JVB it's not a real ICE restart and all layers are re-initialized from scratch as Jicofo does\r\n        // the restart by re-allocating new channels. Chrome (or WebRTC stack) needs to have the DTLS transport layer\r\n        // reset to start a new handshake with fresh DTLS transport on the bridge. Make it think that the DTLS\r\n        // fingerprint has changed by setting an all zeros key.\r\n        const newFingerprint = jingleOfferElem.find('>content>transport>fingerprint');\r\n\r\n        newFingerprint.attr('hash', 'sha-1');\r\n        newFingerprint.text('00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00');\r\n\r\n        // First set an offer with a rejected 'data' section\r\n        this.setOfferAnswerCycle(\r\n            jingleOfferElem,\r\n            () => {\r\n                // Now set the original offer(with the 'data' section)\r\n                this.setOfferAnswerCycle(\r\n                    originalOffer,\r\n                    () => {\r\n                        const localSDP\r\n                            = new SDP(this.peerconnection.localDescription.sdp);\r\n\r\n                        this.sendTransportAccept(localSDP, success, failure);\r\n\r\n                        this.room.eventEmitter.emit(\r\n                            XMPPEvents.ICE_RESTART_SUCCESS,\r\n                            this,\r\n                            originalOffer);\r\n                    },\r\n                    failure);\r\n            },\r\n            failure\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Sends Jingle 'session-accept' message.\r\n     * @param {function()} success callback called when we receive 'RESULT'\r\n     *        packet for the 'session-accept'\r\n     * @param {function(error)} failure called when we receive an error response\r\n     *        or when the request has timed out.\r\n     * @private\r\n     */\r\n    sendSessionAccept(success, failure) {\r\n        // NOTE: since we're just reading from it, we don't need to be within\r\n        //  the modification queue to access the local description\r\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\r\n        let accept = $iq({ to: this.remoteJid,\r\n            type: 'set' })\r\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\r\n                action: 'session-accept',\r\n                initiator: this.initiatorJid,\r\n                responder: this.responderJid,\r\n                sid: this.sid });\r\n\r\n        if (this.webrtcIceTcpDisable) {\r\n            localSDP.removeTcpCandidates = true;\r\n        }\r\n        if (this.webrtcIceUdpDisable) {\r\n            localSDP.removeUdpCandidates = true;\r\n        }\r\n        if (this.failICE) {\r\n            localSDP.failICE = true;\r\n        }\r\n        localSDP.toJingle(\r\n            accept,\r\n            this.initiatorJid === this.localJid ? 'initiator' : 'responder',\r\n            null);\r\n\r\n        // Calling tree() to print something useful\r\n        accept = accept.tree();\r\n        logger.info('Sending session-accept', accept);\r\n        this.connection.sendIQ(accept,\r\n            success,\r\n            this.newJingleErrorHandler(accept, error => {\r\n                failure(error);\r\n\r\n                // 'session-accept' is a critical timeout and we'll\r\n                // have to restart\r\n                this.room.eventEmitter.emit(\r\n                    XMPPEvents.SESSION_ACCEPT_TIMEOUT, this);\r\n            }),\r\n            IQ_TIMEOUT);\r\n\r\n        // XXX Videobridge needs WebRTC's answer (ICE ufrag and pwd, DTLS\r\n        // fingerprint and setup) ASAP in order to start the connection\r\n        // establishment.\r\n        //\r\n        // FIXME Flushing the connection at this point triggers an issue with\r\n        // BOSH request handling in Prosody on slow connections.\r\n        //\r\n        // The problem is that this request will be quite large and it may take\r\n        // time before it reaches Prosody. In the meantime Strophe may decide\r\n        // to send the next one. And it was observed that a small request with\r\n        // 'transport-info' usually follows this one. It does reach Prosody\r\n        // before the previous one was completely received. 'rid' on the server\r\n        // is increased and Prosody ignores the request with 'session-accept'.\r\n        // It will never reach Jicofo and everything in the request table is\r\n        // lost. Removing the flush does not guarantee it will never happen, but\r\n        // makes it much less likely('transport-info' is bundled with\r\n        // 'session-accept' and any immediate requests).\r\n        //\r\n        // this.connection.flush();\r\n    }\r\n\r\n    /**\r\n     * Will send 'content-modify' IQ in order to ask the remote peer to\r\n     * either stop or resume sending video media.\r\n     * @param {boolean} videoTransferActive <tt>false</tt> to let the other peer\r\n     * know that we're not sending nor interested in receiving video contents.\r\n     * When set to <tt>true</tt> remote peer will be asked to resume video\r\n     * transfer.\r\n     * @private\r\n     */\r\n    sendContentModify(videoTransferActive) {\r\n        const newSendersValue = videoTransferActive ? 'both' : 'none';\r\n\r\n        const sessionModify\r\n            = $iq({\r\n                to: this.remoteJid,\r\n                type: 'set'\r\n            })\r\n                .c('jingle', {\r\n                    xmlns: 'urn:xmpp:jingle:1',\r\n                    action: 'content-modify',\r\n                    initiator: this.initiatorJid,\r\n                    sid: this.sid\r\n                })\r\n                .c('content', {\r\n                    name: 'video',\r\n                    senders: newSendersValue\r\n                });\r\n\r\n        logger.info(\r\n            `Sending content-modify, video senders: ${newSendersValue}`);\r\n\r\n        this.connection.sendIQ(\r\n            sessionModify,\r\n            null,\r\n            this.newJingleErrorHandler(sessionModify),\r\n            IQ_TIMEOUT);\r\n    }\r\n\r\n    /**\r\n     * Sends Jingle 'transport-accept' message which is a response to\r\n     * 'transport-replace'.\r\n     * @param localSDP the 'SDP' object with local session description\r\n     * @param success callback called when we receive 'RESULT' packet for\r\n     *        'transport-replace'\r\n     * @param failure function(error) called when we receive an error response\r\n     *        or when the request has timed out.\r\n     * @private\r\n     */\r\n    sendTransportAccept(localSDP, success, failure) {\r\n        let transportAccept = $iq({ to: this.remoteJid,\r\n            type: 'set' })\r\n            .c('jingle', {\r\n                xmlns: 'urn:xmpp:jingle:1',\r\n                action: 'transport-accept',\r\n                initiator: this.initiatorJid,\r\n                sid: this.sid\r\n            });\r\n\r\n        localSDP.media.forEach((medialines, idx) => {\r\n            const mline = SDPUtil.parseMLine(medialines.split('\\r\\n')[0]);\r\n\r\n            transportAccept.c('content',\r\n                {\r\n                    creator:\r\n                        this.initiatorJid === this.localJid\r\n                            ? 'initiator'\r\n                            : 'responder',\r\n                    name: mline.media\r\n                }\r\n            );\r\n            localSDP.transportToJingle(idx, transportAccept);\r\n            transportAccept.up();\r\n        });\r\n\r\n        // Calling tree() to print something useful to the logger\r\n        transportAccept = transportAccept.tree();\r\n        logger.info('Sending transport-accept: ', transportAccept);\r\n\r\n        this.connection.sendIQ(transportAccept,\r\n            success,\r\n            this.newJingleErrorHandler(transportAccept, failure),\r\n            IQ_TIMEOUT);\r\n    }\r\n\r\n    /**\r\n     * Sends Jingle 'transport-reject' message which is a response to\r\n     * 'transport-replace'.\r\n     * @param success callback called when we receive 'RESULT' packet for\r\n     *        'transport-replace'\r\n     * @param failure function(error) called when we receive an error response\r\n     *        or when the request has timed out.\r\n     *\r\n     * FIXME method should be marked as private, but there's some spaghetti that\r\n     *       needs to be fixed prior doing that\r\n     */\r\n    sendTransportReject(success, failure) {\r\n        // Send 'transport-reject', so that the focus will\r\n        // know that we've failed\r\n        let transportReject = $iq({ to: this.remoteJid,\r\n            type: 'set' })\r\n            .c('jingle', {\r\n                xmlns: 'urn:xmpp:jingle:1',\r\n                action: 'transport-reject',\r\n                initiator: this.initiatorJid,\r\n                sid: this.sid\r\n            });\r\n\r\n        transportReject = transportReject.tree();\r\n        logger.info('Sending \\'transport-reject', transportReject);\r\n\r\n        this.connection.sendIQ(transportReject,\r\n            success,\r\n            this.newJingleErrorHandler(transportReject, failure),\r\n            IQ_TIMEOUT);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    terminate(success, failure, options) {\r\n        if (this.state === JingleSessionState.ENDED) {\r\n            return;\r\n        }\r\n\r\n        if (!options || Boolean(options.sendSessionTerminate)) {\r\n            let sessionTerminate\r\n                = $iq({\r\n                    to: this.remoteJid,\r\n                    type: 'set'\r\n                })\r\n                    .c('jingle', {\r\n                        xmlns: 'urn:xmpp:jingle:1',\r\n                        action: 'session-terminate',\r\n                        initiator: this.initiatorJid,\r\n                        sid: this.sid\r\n                    })\r\n                    .c('reason')\r\n                    .c((options && options.reason) || 'success');\r\n\r\n            if (options && options.reasonDescription) {\r\n                sessionTerminate.up()\r\n                    .c('text')\r\n                    .t(options.reasonDescription);\r\n            }\r\n\r\n            // Calling tree() to print something useful\r\n            sessionTerminate = sessionTerminate.tree();\r\n            logger.info('Sending session-terminate', sessionTerminate);\r\n            this.connection.sendIQ(\r\n                sessionTerminate,\r\n                success,\r\n                this.newJingleErrorHandler(sessionTerminate, failure),\r\n                IQ_TIMEOUT);\r\n        } else {\r\n            logger.info(`Skipped sending session-terminate for ${this}`);\r\n        }\r\n\r\n        // this should result in 'onTerminated' being called by strope.jingle.js\r\n        this.connection.jingle.terminate(this.sid);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param reasonCondition\r\n     * @param reasonText\r\n     */\r\n    onTerminated(reasonCondition, reasonText) {\r\n        // Do something with reason and reasonCondition when we start to care\r\n        // this.reasonCondition = reasonCondition;\r\n        // this.reasonText = reasonText;\r\n        logger.info(`Session terminated ${this}`, reasonCondition, reasonText);\r\n\r\n        this._xmppListeners.forEach(removeListener => removeListener());\r\n        this._xmppListeners = [];\r\n\r\n        this.close();\r\n    }\r\n\r\n    /**\r\n     * Handles XMPP connection state changes.\r\n     *\r\n     * @param {XmppConnection.Status} status - The new status.\r\n     */\r\n    onXmppStatusChanged(status) {\r\n        if (status === XmppConnection.Status.CONNECTED && this._cachedOldLocalSdp) {\r\n            logger.info('Sending SSRC update on reconnect');\r\n            this.notifyMySSRCUpdate(\r\n                this._cachedOldLocalSdp,\r\n                this._cachedNewLocalSdp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parse the information from the xml sourceAddElem and translate it\r\n     *  into sdp lines\r\n     * @param {jquery xml element} sourceAddElem the source-add\r\n     *  element from jingle\r\n     * @param {SDP object} currentRemoteSdp the current remote\r\n     *  sdp (as of this new source-add)\r\n     * @returns {list} a list of SDP line strings that should\r\n     *  be added to the remote SDP\r\n     */\r\n    _parseSsrcInfoFromSourceAdd(sourceAddElem, currentRemoteSdp) {\r\n        const addSsrcInfo = [];\r\n\r\n        $(sourceAddElem).each((i1, content) => {\r\n            const name = $(content).attr('name');\r\n            let lines = '';\r\n\r\n            $(content)\r\n                .find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\r\n                .each(function() {\r\n                    // eslint-disable-next-line no-invalid-this\r\n                    const semantics = this.getAttribute('semantics');\r\n                    const ssrcs\r\n                        = $(this) // eslint-disable-line no-invalid-this\r\n                            .find('>source')\r\n                            .map(function() {\r\n                                // eslint-disable-next-line no-invalid-this\r\n                                return this.getAttribute('ssrc');\r\n                            })\r\n                            .get();\r\n\r\n                    if (ssrcs.length) {\r\n                        lines\r\n                            += `a=ssrc-group:${semantics} ${\r\n                                ssrcs.join(' ')}\\r\\n`;\r\n                    }\r\n                });\r\n\r\n            // handles both >source and >description>source\r\n            const tmp\r\n                = $(content).find(\r\n                    'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\r\n\r\n            /* eslint-disable no-invalid-this */\r\n            tmp.each(function() {\r\n                const ssrc = $(this).attr('ssrc');\r\n\r\n                if (currentRemoteSdp.containsSSRC(ssrc)) {\r\n                    logger.warn(\r\n                        `Source-add request for existing SSRC: ${ssrc}`);\r\n\r\n                    return;\r\n                }\r\n\r\n                // eslint-disable-next-line newline-per-chained-call\r\n                $(this).find('>parameter').each(function() {\r\n                    lines += `a=ssrc:${ssrc} ${$(this).attr('name')}`;\r\n                    if ($(this).attr('value') && $(this).attr('value').length) {\r\n                        lines += `:${$(this).attr('value')}`;\r\n                    }\r\n                    lines += '\\r\\n';\r\n                });\r\n            });\r\n\r\n            /* eslint-enable no-invalid-this */\r\n            currentRemoteSdp.media.forEach((media, i2) => {\r\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\r\n                    return;\r\n                }\r\n                if (!addSsrcInfo[i2]) {\r\n                    addSsrcInfo[i2] = '';\r\n                }\r\n                addSsrcInfo[i2] += lines;\r\n            });\r\n        });\r\n\r\n        return addSsrcInfo;\r\n    }\r\n\r\n    /**\r\n     * Handles a Jingle source-add message for this Jingle session.\r\n     * @param elem An array of Jingle \"content\" elements.\r\n     */\r\n    addRemoteStream(elem) {\r\n        this._addOrRemoveRemoteStream(true /* add */, elem);\r\n    }\r\n\r\n    /**\r\n     * Handles a Jingle source-remove message for this Jingle session.\r\n     * @param elem An array of Jingle \"content\" elements.\r\n     */\r\n    removeRemoteStream(elem) {\r\n        this._addOrRemoveRemoteStream(false /* remove */, elem);\r\n    }\r\n\r\n    /**\r\n     * Handles either Jingle 'source-add' or 'source-remove' message for this\r\n     * Jingle session.\r\n     * @param {boolean} isAdd <tt>true</tt> for 'source-add' or <tt>false</tt>\r\n     * otherwise.\r\n     * @param {Array<Element>} elem an array of Jingle \"content\" elements.\r\n     * @private\r\n     */\r\n    _addOrRemoveRemoteStream(isAdd, elem) {\r\n        const logPrefix = isAdd ? 'addRemoteStream' : 'removeRemoteStream';\r\n\r\n        if (isAdd) {\r\n            this.readSsrcInfo(elem);\r\n        }\r\n\r\n        const workFunction = finishedCallback => {\r\n            if (!this.peerconnection.localDescription\r\n                || !this.peerconnection.localDescription.sdp) {\r\n                const errMsg = `${logPrefix} - localDescription not ready yet`;\r\n\r\n                logger.error(errMsg);\r\n                finishedCallback(errMsg);\r\n\r\n                return;\r\n            }\r\n\r\n            logger.log(`Processing ${logPrefix}`);\r\n            logger.log(\r\n                'ICE connection state: ',\r\n                this.peerconnection.iceConnectionState);\r\n\r\n            const oldLocalSdp\r\n                = new SDP(this.peerconnection.localDescription.sdp);\r\n            const sdp = new SDP(this.peerconnection.remoteDescription.sdp);\r\n            const addOrRemoveSsrcInfo\r\n                = isAdd\r\n                    ? this._parseSsrcInfoFromSourceAdd(elem, sdp)\r\n                    : this._parseSsrcInfoFromSourceRemove(elem, sdp);\r\n            const newRemoteSdp\r\n                = isAdd\r\n                    ? this._processRemoteAddSource(addOrRemoveSsrcInfo)\r\n                    : this._processRemoteRemoveSource(addOrRemoveSsrcInfo);\r\n\r\n            this._renegotiate(newRemoteSdp.raw)\r\n                .then(() => {\r\n                    const newLocalSdp\r\n                        = new SDP(this.peerconnection.localDescription.sdp);\r\n\r\n                    logger.log(\r\n                        `${logPrefix} - OK, SDPs: `, oldLocalSdp, newLocalSdp);\r\n                    this.notifyMySSRCUpdate(oldLocalSdp, newLocalSdp);\r\n                    finishedCallback();\r\n                }, error => {\r\n                    logger.error(`${logPrefix} failed:`, error);\r\n                    finishedCallback(error);\r\n                });\r\n        };\r\n\r\n        // Queue and execute\r\n        this.modificationQueue.push(workFunction);\r\n    }\r\n\r\n    /**\r\n     * Takes in a jingle offer iq, returns the new sdp offer\r\n     * @param {jquery xml element} offerIq the incoming offer\r\n     * @returns {SDP object} the jingle offer translated to SDP\r\n     */\r\n    _processNewJingleOfferIq(offerIq) {\r\n        const remoteSdp = new SDP('');\r\n\r\n        if (this.webrtcIceTcpDisable) {\r\n            remoteSdp.removeTcpCandidates = true;\r\n        }\r\n        if (this.webrtcIceUdpDisable) {\r\n            remoteSdp.removeUdpCandidates = true;\r\n        }\r\n        if (this.failICE) {\r\n            remoteSdp.failICE = true;\r\n        }\r\n\r\n        remoteSdp.fromJingle(offerIq);\r\n        this.readSsrcInfo($(offerIq).find('>content'));\r\n\r\n        return remoteSdp;\r\n    }\r\n\r\n    /**\r\n     * Remove the given ssrc lines from the current remote sdp\r\n     * @param {list} removeSsrcInfo a list of SDP line strings that\r\n     *  should be removed from the remote SDP\r\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\r\n     *  in removeSsrcInfo\r\n     */\r\n    _processRemoteRemoveSource(removeSsrcInfo) {\r\n        const remoteSdp = browser.usesPlanB()\r\n            ? new SDP(this.peerconnection.remoteDescription.sdp)\r\n            : new SDP(this.peerconnection.peerconnection.remoteDescription.sdp);\r\n\r\n        removeSsrcInfo.forEach((lines, idx) => {\r\n            // eslint-disable-next-line no-param-reassign\r\n            lines = lines.split('\\r\\n');\r\n            lines.pop(); // remove empty last element;\r\n            if (browser.usesPlanB()) {\r\n                lines.forEach(line => {\r\n                    remoteSdp.media[idx]\r\n                        = remoteSdp.media[idx].replace(`${line}\\r\\n`, '');\r\n                });\r\n            } else {\r\n                lines.forEach(line => {\r\n                    const mid = remoteSdp.media.findIndex(mLine => mLine.includes(line));\r\n\r\n                    if (mid > -1) {\r\n                        remoteSdp.media[mid] = remoteSdp.media[mid].replace(`${line}\\r\\n`, '');\r\n\r\n                        // Change the direction to \"inactive\".\r\n                        remoteSdp.media[mid] = remoteSdp.media[mid].replace('a=sendonly', 'a=inactive');\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\r\n\r\n        return remoteSdp;\r\n    }\r\n\r\n    /**\r\n     * Add the given ssrc lines to the current remote sdp\r\n     * @param {list} addSsrcInfo a list of SDP line strings that\r\n     *  should be added to the remote SDP\r\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\r\n     *  in removeSsrcInfo\r\n     */\r\n    _processRemoteAddSource(addSsrcInfo) {\r\n        const remoteSdp = new SDP(this.peerconnection.remoteDescription.sdp);\r\n\r\n        addSsrcInfo.forEach((lines, idx) => {\r\n            remoteSdp.media[idx] += lines;\r\n        });\r\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\r\n\r\n        return remoteSdp;\r\n    }\r\n\r\n    /**\r\n     * Do a new o/a flow using the existing remote description\r\n     * @param {string} [optionalRemoteSdp] optional, raw remote sdp\r\n     *  to use.  If not provided, the remote sdp from the\r\n     *  peerconnection will be used\r\n     * @returns {Promise} promise which resolves when the\r\n     *  o/a flow is complete with no arguments or\r\n     *  rejects with an error {string}\r\n     */\r\n    _renegotiate(optionalRemoteSdp) {\r\n        if (this.peerconnection.signalingState === 'closed') {\r\n            const error = new Error('Attempted to renegotiate in state closed');\r\n\r\n            this.room.eventEmitter.emit(XMPPEvents.RENEGOTIATION_FAILED, error, this);\r\n\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const remoteSdp\r\n            = optionalRemoteSdp || this.peerconnection.remoteDescription.sdp;\r\n\r\n        if (!remoteSdp) {\r\n            const error = new Error(`Can not renegotiate without remote description, current state: ${this.state}`);\r\n\r\n            this.room.eventEmitter.emit(XMPPEvents.RENEGOTIATION_FAILED, error, this);\r\n\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        const remoteDescription = new RTCSessionDescription({\r\n            type: this.isInitiator ? 'answer' : 'offer',\r\n            sdp: remoteSdp\r\n        });\r\n\r\n        if (this.isInitiator) {\r\n            return this._initiatorRenegotiate(remoteDescription);\r\n        }\r\n\r\n        return this._responderRenegotiate(remoteDescription);\r\n    }\r\n\r\n    /**\r\n     * Renegotiate cycle implementation for the responder case.\r\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\r\n     * which will be used as remote description in the cycle.\r\n     * @private\r\n     */\r\n    _responderRenegotiate(remoteDescription) {\r\n        logger.debug('Renegotiate: setting remote description');\r\n\r\n        return this.peerconnection.setRemoteDescription(remoteDescription)\r\n            .then(() => {\r\n                logger.debug('Renegotiate: creating answer');\r\n\r\n                return this.peerconnection.createAnswer(this.mediaConstraints)\r\n                    .then(answer => {\r\n                        logger.debug('Renegotiate: setting local description');\r\n\r\n                        return this.peerconnection.setLocalDescription(answer);\r\n                    });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Renegotiate cycle implementation for the initiator's case.\r\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\r\n     * which will be used as remote description in the cycle.\r\n     * @private\r\n     */\r\n    _initiatorRenegotiate(remoteDescription) {\r\n        logger.debug('Renegotiate: creating offer');\r\n\r\n        return this.peerconnection.createOffer(this.mediaConstraints)\r\n            .then(offer => {\r\n                logger.debug('Renegotiate: setting local description');\r\n\r\n                return this.peerconnection.setLocalDescription(offer)\r\n                    .then(() => {\r\n                        logger.debug(\r\n                            'Renegotiate: setting remote description');\r\n\r\n                        // eslint-disable-next-line max-len\r\n                        return this.peerconnection.setRemoteDescription(remoteDescription);\r\n                    });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Replaces <tt>oldTrack</tt> with <tt>newTrack</tt> and performs a single\r\n     * offer/answer cycle after both operations are done. Either\r\n     * <tt>oldTrack</tt> or <tt>newTrack</tt> can be null; replacing a valid\r\n     * <tt>oldTrack</tt> with a null <tt>newTrack</tt> effectively just removes\r\n     * <tt>oldTrack</tt>\r\n     * @param {JitsiLocalTrack|null} oldTrack the current track in use to be\r\n     * replaced\r\n     * @param {JitsiLocalTrack|null} newTrack the new track to use\r\n     * @returns {Promise} which resolves once the replacement is complete\r\n     *  with no arguments or rejects with an error {string}\r\n     */\r\n    replaceTrack(oldTrack, newTrack) {\r\n        const workFunction = finishedCallback => {\r\n            const oldLocalSdp = this.peerconnection.localDescription.sdp;\r\n\r\n            if (browser.usesPlanB()) {\r\n                // NOTE the code below assumes that no more than 1 video track\r\n                // can be added to the peer connection.\r\n                // Transition from camera to desktop share\r\n                // or transition from one camera source to another.\r\n                if (this.peerconnection.options.capScreenshareBitrate\r\n                    && oldTrack && newTrack && newTrack.isVideoTrack()) {\r\n                    // Clearing current primary SSRC will make\r\n                    // the SdpConsistency generate a new one which will result\r\n                    // with:\r\n                    // 1. source-remove for the old video stream.\r\n                    // 2. source-add for the new video stream.\r\n                    this.peerconnection.clearRecvonlySsrc();\r\n                }\r\n\r\n                // Transition from no video to video (unmute).\r\n                if (!oldTrack && newTrack && newTrack.isVideoTrack()) {\r\n                    // Clearing current primary SSRC will make\r\n                    // the SdpConsistency generate a new one which will result\r\n                    // with:\r\n                    // 1. source-remove for the recvonly\r\n                    // 2. source-add for the new video stream\r\n                    this.peerconnection.clearRecvonlySsrc();\r\n\r\n                // Transition from video to no video\r\n                } else if (oldTrack && oldTrack.isVideoTrack() && !newTrack) {\r\n                    // Clearing current primary SSRC and generating the recvonly\r\n                    // will result in:\r\n                    // 1. source-remove for the old video stream\r\n                    // 2. source-add for the recvonly stream\r\n                    this.peerconnection.clearRecvonlySsrc();\r\n                    this.peerconnection.generateRecvonlySsrc();\r\n                }\r\n            }\r\n\r\n            this.peerconnection.replaceTrack(oldTrack, newTrack)\r\n                .then(shouldRenegotiate => {\r\n                    let promise = Promise.resolve();\r\n\r\n                    if (shouldRenegotiate\r\n                        && (oldTrack || newTrack)\r\n                        && this.state === JingleSessionState.ACTIVE) {\r\n                        promise = this._renegotiate().then(() => {\r\n                            const newLocalSDP = new SDP(this.peerconnection.localDescription.sdp);\r\n\r\n                            this.notifyMySSRCUpdate(new SDP(oldLocalSdp), newLocalSDP);\r\n                        },\r\n                        finishedCallback /* will be called with en error */);\r\n                    }\r\n\r\n                    // Wait for the renegotation to be done if needed (plan-b) before adjusting\r\n                    // the max bitrates on the video sender.\r\n                    promise.then(() => {\r\n                        // configure max bitrate only when media is routed\r\n                        // through JVB. For p2p case, browser takes care of\r\n                        // adjusting the uplink based on the feedback it\r\n                        // gets from the peer.\r\n                        if (newTrack && !this.isP2P) {\r\n                            this.peerconnection.setMaxBitRate(newTrack);\r\n                        }\r\n                        finishedCallback();\r\n                    }, finishedCallback /* will be called with en error */);\r\n                })\r\n                .catch(err => {\r\n                    finishedCallback(err);\r\n                });\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.modificationQueue.push(\r\n                workFunction,\r\n                error => {\r\n                    if (error) {\r\n                        logger.error('Replace track error:', error);\r\n                        reject(error);\r\n                    } else {\r\n                        logger.info('Replace track done!');\r\n                        resolve();\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Parse the information from the xml sourceRemoveElem and translate it\r\n     *  into sdp lines\r\n     * @param {jquery xml element} sourceRemoveElem the source-remove\r\n     *  element from jingle\r\n     * @param {SDP object} currentRemoteSdp the current remote\r\n     *  sdp (as of this new source-remove)\r\n     * @returns {list} a list of SDP line strings that should\r\n     *  be removed from the remote SDP\r\n     */\r\n    _parseSsrcInfoFromSourceRemove(sourceRemoveElem, currentRemoteSdp) {\r\n        const removeSsrcInfo = [];\r\n\r\n        $(sourceRemoveElem).each((i1, content) => {\r\n            const name = $(content).attr('name');\r\n            let lines = '';\r\n\r\n            $(content)\r\n                .find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\r\n                .each(function() {\r\n                    /* eslint-disable no-invalid-this */\r\n                    const semantics = this.getAttribute('semantics');\r\n                    const ssrcs\r\n                        = $(this)\r\n                            .find('>source')\r\n                            .map(function() {\r\n                                return this.getAttribute('ssrc');\r\n                            })\r\n                            .get();\r\n\r\n                    if (ssrcs.length) {\r\n                        lines\r\n                            += `a=ssrc-group:${semantics} ${\r\n                                ssrcs.join(' ')}\\r\\n`;\r\n                    }\r\n\r\n                    /* eslint-enable no-invalid-this */\r\n                });\r\n            const ssrcs = [];\r\n\r\n            // handles both >source and >description>source versions\r\n            const tmp\r\n                = $(content).find(\r\n                    'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\r\n\r\n            tmp.each(function() {\r\n                // eslint-disable-next-line no-invalid-this\r\n                const ssrc = $(this).attr('ssrc');\r\n\r\n                ssrcs.push(ssrc);\r\n            });\r\n            currentRemoteSdp.media.forEach((media, i2) => {\r\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\r\n                    return;\r\n                }\r\n                if (!removeSsrcInfo[i2]) {\r\n                    removeSsrcInfo[i2] = '';\r\n                }\r\n                ssrcs.forEach(ssrc => {\r\n                    const ssrcLines\r\n                        = SDPUtil.findLines(media, `a=ssrc:${ssrc}`);\r\n\r\n                    if (ssrcLines.length) {\r\n                        removeSsrcInfo[i2] += `${ssrcLines.join('\\r\\n')}\\r\\n`;\r\n                    }\r\n                });\r\n                removeSsrcInfo[i2] += lines;\r\n            });\r\n        });\r\n\r\n        return removeSsrcInfo;\r\n    }\r\n\r\n    /**\r\n     * Will print an error if there is any difference, between the SSRCs given\r\n     * in the <tt>oldSDP</tt> and the ones currently described in\r\n     * the peerconnection's local description.\r\n     * @param {string} operationName the operation's name which will be printed\r\n     * in the error message.\r\n     * @param {SDP} oldSDP the old local SDP which will be compared with\r\n     * the current one.\r\n     * @return {boolean} <tt>true</tt> if there was any change or <tt>false</tt>\r\n     * otherwise.\r\n     * @private\r\n     */\r\n    _verifyNoSSRCChanged(operationName, oldSDP) {\r\n        const currentLocalSDP\r\n            = new SDP(this.peerconnection.localDescription.sdp);\r\n        let sdpDiff = new SDPDiffer(oldSDP, currentLocalSDP);\r\n        const addedMedia = sdpDiff.getNewMedia();\r\n\r\n        if (Object.keys(addedMedia).length) {\r\n            logger.error(\r\n                `${this} - some SSRC were added on ${operationName}`,\r\n                addedMedia);\r\n\r\n            return false;\r\n        }\r\n\r\n        sdpDiff = new SDPDiffer(currentLocalSDP, oldSDP);\r\n        const removedMedia = sdpDiff.getNewMedia();\r\n\r\n        if (Object.keys(removedMedia).length) {\r\n            logger.error(\r\n                `${this} - some SSRCs were removed on ${operationName}`,\r\n                removedMedia);\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Adds local track back to this session, as part of the unmute operation.\r\n     * @param {JitsiLocalTrack} track\r\n     * @return {Promise} a promise that will resolve once the local track is\r\n     * added back to this session and renegotiation succeeds. Will be rejected\r\n     * with a <tt>string</tt> that provides some error details in case something\r\n     * goes wrong.\r\n     */\r\n    addTrackAsUnmute(track) {\r\n        return this._addRemoveTrackAsMuteUnmute(\r\n            false /* add as unmute */, track);\r\n    }\r\n\r\n    /**\r\n     * Remove local track as part of the mute operation.\r\n     * @param {JitsiLocalTrack} track the local track to be removed\r\n     * @return {Promise} a promise which will be resolved once the local track\r\n     * is removed from this session and the renegotiation is performed.\r\n     * The promise will be rejected with a <tt>string</tt> that the describes\r\n     * the error if anything goes wrong.\r\n     */\r\n    removeTrackAsMute(track) {\r\n        return this._addRemoveTrackAsMuteUnmute(\r\n            true /* remove as mute */, track);\r\n    }\r\n\r\n    /**\r\n     * See {@link addTrackAsUnmute} and {@link removeTrackAsMute}.\r\n     * @param {boolean} isMute <tt>true</tt> for \"remove as mute\" or\r\n     * <tt>false</tt> for \"add as unmute\".\r\n     * @param {JitsiLocalTrack} track the track that will be added/removed\r\n     * @private\r\n     */\r\n    _addRemoveTrackAsMuteUnmute(isMute, track) {\r\n        if (!track) {\r\n            return Promise.reject('invalid \"track\" argument value');\r\n        }\r\n        const operationName = isMute ? 'removeTrackMute' : 'addTrackUnmute';\r\n        const workFunction = finishedCallback => {\r\n            const tpc = this.peerconnection;\r\n\r\n            if (!tpc) {\r\n                finishedCallback(\r\n                    `Error:  tried ${operationName} track with no active peer`\r\n                        + 'connection');\r\n\r\n                return;\r\n            }\r\n            const oldLocalSDP = tpc.localDescription.sdp;\r\n            const operationPromise\r\n                = isMute\r\n                    ? tpc.removeTrackMute(track)\r\n                    : tpc.addTrackUnmute(track);\r\n\r\n            operationPromise\r\n                .then(shouldRenegotiate => {\r\n                    if (shouldRenegotiate && oldLocalSDP && tpc.remoteDescription.sdp) {\r\n                        this._renegotiate()\r\n                            .then(() => {\r\n                                // The results are ignored, as this check failure is not\r\n                                // enough to fail the whole operation. It will log\r\n                                // an error inside.\r\n                                this._verifyNoSSRCChanged(\r\n                                    operationName, new SDP(oldLocalSDP));\r\n                                finishedCallback();\r\n                            });\r\n                    } else {\r\n                        finishedCallback();\r\n                    }\r\n                },\r\n                finishedCallback /* will be called with an error */);\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.modificationQueue.push(\r\n                workFunction,\r\n                error => {\r\n                    if (error) {\r\n                        reject(error);\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resumes or suspends media transfer over the underlying peer connection.\r\n     * @param {boolean} audioActive <tt>true</tt> to enable audio media\r\n     * transfer or <tt>false</tt> to suspend audio media transmission.\r\n     * @param {boolean} videoActive <tt>true</tt> to enable video media\r\n     * transfer or <tt>false</tt> to suspend video media transmission.\r\n     * @return {Promise} a <tt>Promise</tt> which will resolve once\r\n     * the operation is done. It will be rejected with an error description as\r\n     * a string in case anything goes wrong.\r\n     */\r\n    setMediaTransferActive(audioActive, videoActive) {\r\n        if (!this.peerconnection) {\r\n            return Promise.reject(\r\n                'Can not modify transfer active state,'\r\n                    + ' before \"initialize\" is called');\r\n        }\r\n\r\n        const logAudioStr = audioActive ? 'audio active' : 'audio inactive';\r\n        const logVideoStr = videoActive ? 'video active' : 'video inactive';\r\n\r\n        logger.info(`Queued make ${logVideoStr}, ${logAudioStr} task...`);\r\n\r\n        const workFunction = finishedCallback => {\r\n            const isSessionActive = this.state === JingleSessionState.ACTIVE;\r\n\r\n            // Because the value is modified on the queue it's impossible to\r\n            // check it's final value reliably prior to submitting the task.\r\n            // The rule here is that the last submitted state counts.\r\n            // Check the values here to avoid unnecessary renegotiation cycle.\r\n            const audioActiveChanged\r\n                = this.peerconnection.setAudioTransferActive(audioActive);\r\n\r\n            if (this._localVideoActive !== videoActive) {\r\n                this._localVideoActive = videoActive;\r\n\r\n                // Do only for P2P - Jicofo will reply with 'bad-request'\r\n                // We don't want to send 'content-modify', before the initial\r\n                // O/A (state === JingleSessionState.ACTIVE), because that will\r\n                // mess up video media direction in the remote SDP.\r\n                // 'content-modify' when processed only affects the media\r\n                // direction in the local SDP. We're doing that, because setting\r\n                // 'inactive' on video media in remote SDP will mess up our SDP\r\n                // translation chain (simulcast, RTX, video mute etc.).\r\n                if (this.isP2P && isSessionActive) {\r\n                    this.sendContentModify(videoActive);\r\n                }\r\n            }\r\n\r\n            const pcVideoActiveChanged\r\n                = this.peerconnection.setVideoTransferActive(\r\n                    this._localVideoActive && this._remoteVideoActive);\r\n\r\n            // Will do the sRD/sLD cycle to update SDPs and adjust the media\r\n            // direction\r\n            if (isSessionActive\r\n                    && (audioActiveChanged || pcVideoActiveChanged)) {\r\n                this._renegotiate()\r\n                    .then(\r\n                        finishedCallback,\r\n                        finishedCallback /* will be called with an error */);\r\n            } else {\r\n                finishedCallback();\r\n            }\r\n        };\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.modificationQueue.push(\r\n                workFunction,\r\n                error => {\r\n                    if (error) {\r\n                        reject(error);\r\n                    } else {\r\n                        resolve();\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Will put and execute on the queue a session modify task. Currently it\r\n     * only checks the senders attribute of the video content in order to figure\r\n     * out if the remote peer has video in the inactive state (stored locally\r\n     * in {@link _remoteVideoActive} - see field description for more info).\r\n     * @param {jQuery} jingleContents jQuery selector pointing to the jingle\r\n     * element of the session modify IQ.\r\n     * @see {@link _remoteVideoActive}\r\n     * @see {@link _localVideoActive}\r\n     */\r\n    modifyContents(jingleContents) {\r\n        const newVideoSenders\r\n            = JingleSessionPC.parseVideoSenders(jingleContents);\r\n\r\n        if (newVideoSenders === null) {\r\n            logger.error(\r\n                `${this} - failed to parse video \"senders\" attribute in`\r\n                    + '\"content-modify\" action');\r\n\r\n            return;\r\n        }\r\n\r\n        const workFunction = finishedCallback => {\r\n            if (this._assertNotEnded('content-modify')\r\n                    && this._modifyRemoteVideoActive(newVideoSenders)) {\r\n                // Will do the sRD/sLD cycle to update SDPs and adjust\r\n                // the media direction\r\n                this._renegotiate()\r\n                    .then(finishedCallback, finishedCallback /* (error) */);\r\n            } else {\r\n                finishedCallback();\r\n            }\r\n        };\r\n\r\n        logger.debug(\r\n            `${this} queued \"content-modify\" task`\r\n                + `(video senders=\"${newVideoSenders}\")`);\r\n\r\n        this.modificationQueue.push(\r\n            workFunction,\r\n            error => {\r\n                if (error) {\r\n                    logger.error('\"content-modify\" failed', error);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Processes new value of remote video \"senders\" Jingle attribute and tries\r\n     * to apply it for {@link _remoteVideoActive}.\r\n     * @param {string} remoteVideoSenders the value of \"senders\" attribute of\r\n     * Jingle video content element advertised by remote peer.\r\n     * @return {boolean} <tt>true</tt> if the change affected state of\r\n     * the underlying peerconnection and renegotiation is required for\r\n     * the changes to take effect.\r\n     * @private\r\n     */\r\n    _modifyRemoteVideoActive(remoteVideoSenders) {\r\n        const isRemoteVideoActive\r\n            = remoteVideoSenders === 'both'\r\n                || (remoteVideoSenders === 'initiator' && this.isInitiator)\r\n                || (remoteVideoSenders === 'responder' && !this.isInitiator);\r\n\r\n        if (isRemoteVideoActive !== this._remoteVideoActive) {\r\n            logger.debug(\r\n                `${this} new remote video active: ${isRemoteVideoActive}`);\r\n            this._remoteVideoActive = isRemoteVideoActive;\r\n        }\r\n\r\n        return this.peerconnection.setVideoTransferActive(\r\n            this._localVideoActive && this._remoteVideoActive);\r\n    }\r\n\r\n    /**\r\n     * Figures out added/removed ssrcs and send update IQs.\r\n     * @param oldSDP SDP object for old description.\r\n     * @param newSDP SDP object for new description.\r\n     */\r\n    notifyMySSRCUpdate(oldSDP, newSDP) {\r\n\r\n        if (this.state !== JingleSessionState.ACTIVE) {\r\n            logger.warn(`Skipping SSRC update in '${this.state} ' state.`);\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.connection.connected) {\r\n            // The goal is to compare the oldest SDP with the latest one upon reconnect\r\n            if (!this._cachedOldLocalSdp) {\r\n                this._cachedOldLocalSdp = oldSDP;\r\n            }\r\n            this._cachedNewLocalSdp = newSDP;\r\n            logger.warn('Not sending SSRC update while the signaling is disconnected');\r\n\r\n            return;\r\n        }\r\n\r\n        this._cachedOldLocalSdp = undefined;\r\n        this._cachedNewLocalSdp = undefined;\r\n\r\n        // send source-remove IQ.\r\n        let sdpDiffer = new SDPDiffer(newSDP, oldSDP);\r\n        const remove = $iq({ to: this.remoteJid,\r\n            type: 'set' })\r\n            .c('jingle', {\r\n                xmlns: 'urn:xmpp:jingle:1',\r\n                action: 'source-remove',\r\n                initiator: this.initiatorJid,\r\n                sid: this.sid\r\n            }\r\n            );\r\n        const removedAnySSRCs = sdpDiffer.toJingle(remove);\r\n\r\n        if (removedAnySSRCs) {\r\n            logger.info('Sending source-remove', remove.tree());\r\n            this.connection.sendIQ(\r\n                remove, null,\r\n                this.newJingleErrorHandler(remove), IQ_TIMEOUT);\r\n        } else {\r\n            logger.log('removal not necessary');\r\n        }\r\n\r\n        // send source-add IQ.\r\n        sdpDiffer = new SDPDiffer(oldSDP, newSDP);\r\n        const add = $iq({ to: this.remoteJid,\r\n            type: 'set' })\r\n            .c('jingle', {\r\n                xmlns: 'urn:xmpp:jingle:1',\r\n                action: 'source-add',\r\n                initiator: this.initiatorJid,\r\n                sid: this.sid\r\n            }\r\n            );\r\n\r\n        const containsNewSSRCs = sdpDiffer.toJingle(add);\r\n\r\n        if (containsNewSSRCs) {\r\n            logger.info('Sending source-add', add.tree());\r\n            this.connection.sendIQ(\r\n                add, null, this.newJingleErrorHandler(add), IQ_TIMEOUT);\r\n        } else {\r\n            logger.log('addition not necessary');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Method returns function(errorResponse) which is a callback to be passed\r\n     * to Strophe connection.sendIQ method. An 'error' structure is created that\r\n     * is passed as 1st argument to given <tt>failureCb</tt>. The format of this\r\n     * structure is as follows:\r\n     * {\r\n     *  code: {XMPP error response code}\r\n     *  reason: {the name of XMPP error reason element or 'timeout' if the\r\n      *          request has timed out within <tt>IQ_TIMEOUT</tt> milliseconds}\r\n     *  source: {request.tree() that provides original request}\r\n     *  session: {this JingleSessionPC.toString()}\r\n     * }\r\n     * @param request Strophe IQ instance which is the request to be dumped into\r\n     *        the error structure\r\n     * @param failureCb function(error) called when error response was returned\r\n     *        or when a timeout has occurred.\r\n     * @returns {function(this:JingleSessionPC)}\r\n     */\r\n    newJingleErrorHandler(request, failureCb) {\r\n        return errResponse => {\r\n\r\n            const error = {};\r\n\r\n            // Get XMPP error code and condition(reason)\r\n            const errorElSel = $(errResponse).find('error');\r\n\r\n            if (errorElSel.length) {\r\n                error.code = errorElSel.attr('code');\r\n                const errorReasonSel = $(errResponse).find('error :first');\r\n\r\n                if (errorReasonSel.length) {\r\n                    error.reason = errorReasonSel[0].tagName;\r\n                }\r\n\r\n                const errorMsgSel = errorElSel.find('>text');\r\n\r\n                if (errorMsgSel.length) {\r\n                    error.msg = errorMsgSel.text();\r\n                }\r\n            }\r\n\r\n            if (!errResponse) {\r\n                error.reason = 'timeout';\r\n            }\r\n\r\n            error.session = this.toString();\r\n\r\n            if (failureCb) {\r\n                failureCb(error);\r\n            } else if (this.state === JingleSessionState.ENDED\r\n                        && error.reason === 'item-not-found') {\r\n                // When remote peer decides to terminate the session, but it\r\n                // still have few messages on the queue for processing,\r\n                // it will first send us 'session-terminate' (we enter ENDED)\r\n                // and then follow with 'item-not-found' for the queued requests\r\n                // We don't want to have that logged on error level.\r\n                logger.debug(`Jingle error: ${JSON.stringify(error)}`);\r\n            } else {\r\n                GlobalOnErrorHandler.callErrorHandler(\r\n                    new Error(\r\n                        `Jingle error: ${JSON.stringify(error)}`));\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns the ice connection state for the peer connection.\r\n     * @returns the ice connection state for the peer connection.\r\n     */\r\n    getIceConnectionState() {\r\n        return this.peerconnection.iceConnectionState;\r\n    }\r\n\r\n    /**\r\n     * Closes the peerconnection.\r\n     */\r\n    close() {\r\n        this.state = JingleSessionState.ENDED;\r\n        this.establishmentDuration = undefined;\r\n\r\n        if (this.peerconnection) {\r\n            this.peerconnection.onicecandidate = null;\r\n            this.peerconnection.oniceconnectionstatechange = null;\r\n            this.peerconnection.onnegotiationneeded = null;\r\n            this.peerconnection.onsignalingstatechange = null;\r\n        }\r\n\r\n        // Remove any pending tasks from the queue\r\n        this.modificationQueue.clear();\r\n\r\n        this.modificationQueue.push(finishCallback => {\r\n            // The signaling layer will remove it's listeners\r\n            this.signalingLayer.setChatRoom(null);\r\n\r\n            // do not try to close if already closed.\r\n            this.peerconnection && this.peerconnection.close();\r\n            finishCallback();\r\n        });\r\n\r\n        // No more tasks can go in after the close task\r\n        this.modificationQueue.shutdown();\r\n    }\r\n\r\n    /**\r\n     * Converts to string with minor summary.\r\n     * @return {string}\r\n     */\r\n    toString() {\r\n        return `JingleSessionPC[p2p=${this.isP2P},`\r\n                    + `initiator=${this.isInitiator},sid=${this.sid}]`;\r\n    }\r\n\r\n    /**\r\n     * If the A/B test for suspend video is disabled according to the room's\r\n     * configuration, returns undefined. Otherwise returns a boolean which\r\n     * indicates whether the suspend video option should be enabled or disabled.\r\n     * @param {JingleSessionPCOptions} options - The config options.\r\n     */\r\n    _abtestSuspendVideoEnabled({ abTesting }) {\r\n        if (!abTesting || !abTesting.enableSuspendVideoTest) {\r\n            return;\r\n        }\r\n\r\n        // We want the two participants in a P2P call to agree on the value of\r\n        // the \"suspend\" option. We use the JID of the initiator, because it is\r\n        // both randomly selected and agreed upon by both participants.\r\n        const jid = this._getInitiatorJid();\r\n\r\n        return integerHash(jid) % 2 === 0;\r\n    }\r\n}\r\n","/**\r\n * The pending Jingle session state which means the session as defined in\r\n * XEP-0166(before 'session-invite/session-accept' took place).\r\n *\r\n * @type {string}\r\n */\r\nexport const PENDING = 'pending';\r\n\r\n/**\r\n * The active Jingle session state as defined in XEP-0166\r\n * (after 'session-invite'/'session-accept').\r\n *\r\n * @type {string}\r\n */\r\nexport const ACTIVE = 'active';\r\n\r\n/**\r\n * The ended Jingle session state as defined in XEP-0166\r\n * (after 'session-terminate').\r\n * @type {string}\r\n */\r\nexport const ENDED = 'ended';\r\n","/* global __filename */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { parseSecondarySSRC, SdpTransformWrap } from './SdpTransformUtil';\r\nimport SDPUtil from './SDPUtil';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Begin helper functions\r\n */\r\n/**\r\n * Updates or inserts the appropriate rtx information for primarySsrc with\r\n *  the given rtxSsrc.  If no rtx ssrc for primarySsrc currently exists, it will\r\n *  add the appropriate ssrc and ssrc group lines.  If primarySsrc already has\r\n *  an rtx ssrc, the appropriate ssrc and group lines will be updated\r\n * @param {MLineWrap} mLine\r\n * @param {object} primarySsrcInfo the info (ssrc, msid & cname) for the\r\n *  primary ssrc\r\n * @param {number} rtxSsrc the rtx ssrc to associate with the primary ssrc\r\n */\r\nfunction updateAssociatedRtxStream(mLine, primarySsrcInfo, rtxSsrc) {\r\n    logger.debug(\r\n        `Updating mline to associate ${rtxSsrc}`\r\n        + `rtx ssrc with primary stream, ${primarySsrcInfo.id}`);\r\n    const primarySsrc = primarySsrcInfo.id;\r\n    const primarySsrcMsid = primarySsrcInfo.msid;\r\n    const primarySsrcCname = primarySsrcInfo.cname;\r\n\r\n    const previousRtxSSRC = mLine.getRtxSSRC(primarySsrc);\r\n\r\n    if (previousRtxSSRC === rtxSsrc) {\r\n        logger.debug(`${rtxSsrc} was already associated with ${primarySsrc}`);\r\n\r\n        return;\r\n    }\r\n    if (previousRtxSSRC) {\r\n        logger.debug(\r\n            `${primarySsrc} was previously associated with rtx`\r\n            + `${previousRtxSSRC}, removing all references to it`);\r\n\r\n        // Stream already had an rtx ssrc that is different than the one given,\r\n        //  remove all trace of the old one\r\n        mLine.removeSSRC(previousRtxSSRC);\r\n\r\n        logger.debug(`groups before filtering for ${previousRtxSSRC}`);\r\n        logger.debug(mLine.dumpSSRCGroups());\r\n\r\n        mLine.removeGroupsWithSSRC(previousRtxSSRC);\r\n    }\r\n    mLine.addSSRCAttribute({\r\n        id: rtxSsrc,\r\n        attribute: 'cname',\r\n        value: primarySsrcCname\r\n    });\r\n    mLine.addSSRCAttribute({\r\n        id: rtxSsrc,\r\n        attribute: 'msid',\r\n        value: primarySsrcMsid\r\n    });\r\n    mLine.addSSRCGroup({\r\n        semantics: 'FID',\r\n        ssrcs: `${primarySsrc} ${rtxSsrc}`\r\n    });\r\n}\r\n\r\n/**\r\n * End helper functions\r\n */\r\n\r\n/**\r\n * Adds any missing RTX streams for video streams\r\n *  and makes sure that they remain consistent\r\n */\r\nexport default class RtxModifier {\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor() {\r\n        /**\r\n         * Map of video ssrc to corresponding RTX\r\n         *  ssrc\r\n         */\r\n        this.correspondingRtxSsrcs = new Map();\r\n    }\r\n\r\n    /**\r\n     * Clear the cached map of primary video ssrcs to\r\n     *  their corresponding rtx ssrcs so that they will\r\n     *  not be used for the next call to modifyRtxSsrcs\r\n     */\r\n    clearSsrcCache() {\r\n        this.correspondingRtxSsrcs.clear();\r\n    }\r\n\r\n    /**\r\n     * Explicitly set the primary video ssrc -> rtx ssrc\r\n     *  mapping to be used in modifyRtxSsrcs\r\n     * @param {Map} ssrcMapping a mapping of primary video\r\n     *  ssrcs to their corresponding rtx ssrcs\r\n     */\r\n    setSsrcCache(ssrcMapping) {\r\n        logger.debug('Setting ssrc cache to ', ssrcMapping);\r\n        this.correspondingRtxSsrcs = ssrcMapping;\r\n    }\r\n\r\n    /**\r\n     * Adds RTX ssrcs for any video ssrcs that don't\r\n     *  already have them.  If the video ssrc has been\r\n     *  seen before, and already had an RTX ssrc generated,\r\n     *  the same RTX ssrc will be used again.\r\n     * @param {string} sdpStr sdp in raw string format\r\n     */\r\n    modifyRtxSsrcs(sdpStr) {\r\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\r\n        const videoMLine = sdpTransformer.selectMedia('video');\r\n\r\n        if (!videoMLine) {\r\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\r\n\r\n            return sdpStr;\r\n        }\r\n\r\n        return this.modifyRtxSsrcs2(videoMLine)\r\n            ? sdpTransformer.toRawSDP() : sdpStr;\r\n    }\r\n\r\n    /**\r\n     * Does the same thing as {@link modifyRtxSsrcs}, but takes the\r\n     *  {@link MLineWrap} instance wrapping video media as an argument.\r\n     * @param {MLineWrap} videoMLine\r\n     * @return {boolean} <tt>true</tt> if the SDP wrapped by\r\n     *  {@link SdpTransformWrap} has been modified or <tt>false</tt> otherwise.\r\n     */\r\n    modifyRtxSsrcs2(videoMLine) {\r\n        if (videoMLine.direction === 'recvonly') {\r\n            logger.debug('RtxModifier doing nothing, video m line is recvonly');\r\n\r\n            return false;\r\n        }\r\n        if (videoMLine.getSSRCCount() < 1) {\r\n            logger.debug('RtxModifier doing nothing, no video ssrcs present');\r\n\r\n            return false;\r\n        }\r\n        logger.debug('Current ssrc mapping: ', this.correspondingRtxSsrcs);\r\n        const primaryVideoSsrcs = videoMLine.getPrimaryVideoSSRCs();\r\n\r\n        logger.debug('Parsed primary video ssrcs ', primaryVideoSsrcs,\r\n            ' making sure all have rtx streams');\r\n        for (const ssrc of primaryVideoSsrcs) {\r\n            const msid = videoMLine.getSSRCAttrValue(ssrc, 'msid');\r\n            const cname = videoMLine.getSSRCAttrValue(ssrc, 'cname');\r\n            let correspondingRtxSsrc = this.correspondingRtxSsrcs.get(ssrc);\r\n\r\n            if (correspondingRtxSsrc) {\r\n                logger.debug(\r\n                    'Already have an associated rtx ssrc for'\r\n                    + `video ssrc ${ssrc}: ${correspondingRtxSsrc}`);\r\n            } else {\r\n                logger.debug(\r\n                    `No previously associated rtx ssrc for video ssrc ${ssrc}`);\r\n\r\n                // If there's one in the sdp already for it, we'll just set\r\n                //  that as the corresponding one\r\n                const previousAssociatedRtxStream = videoMLine.getRtxSSRC(ssrc);\r\n\r\n                if (previousAssociatedRtxStream) {\r\n                    logger.debug(\r\n                        `Rtx stream ${previousAssociatedRtxStream} `\r\n                        + 'already existed in the sdp as an rtx stream for '\r\n                        + `${ssrc}`);\r\n                    correspondingRtxSsrc = previousAssociatedRtxStream;\r\n                } else {\r\n                    correspondingRtxSsrc = SDPUtil.generateSsrc();\r\n                    logger.debug(`Generated rtx ssrc ${correspondingRtxSsrc} `\r\n                                 + `for ssrc ${ssrc}`);\r\n                }\r\n                logger.debug(`Caching rtx ssrc ${correspondingRtxSsrc} `\r\n                             + `for video ssrc ${ssrc}`);\r\n                this.correspondingRtxSsrcs.set(ssrc, correspondingRtxSsrc);\r\n            }\r\n            updateAssociatedRtxStream(\r\n                videoMLine,\r\n                {\r\n                    id: ssrc,\r\n                    cname,\r\n                    msid\r\n                },\r\n                correspondingRtxSsrc);\r\n        }\r\n\r\n        // FIXME we're not looking into much details whether the SDP has been\r\n        // modified or not once the precondition requirements are met.\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Strip all rtx streams from the given sdp\r\n     * @param {string} sdpStr sdp in raw string format\r\n     * @returns {string} sdp string with all rtx streams stripped\r\n     */\r\n    stripRtx(sdpStr) {\r\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\r\n        const videoMLine = sdpTransformer.selectMedia('video');\r\n\r\n        if (!videoMLine) {\r\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\r\n\r\n            return sdpStr;\r\n        }\r\n        if (videoMLine.direction === 'recvonly') {\r\n            logger.debug('RtxModifier doing nothing, video m line is recvonly');\r\n\r\n            return sdpStr;\r\n        }\r\n        if (videoMLine.getSSRCCount() < 1) {\r\n            logger.debug('RtxModifier doing nothing, no video ssrcs present');\r\n\r\n            return sdpStr;\r\n        }\r\n        if (!videoMLine.containsAnySSRCGroups()) {\r\n            logger.debug('RtxModifier doing nothing, '\r\n              + 'no video ssrcGroups present');\r\n\r\n            return sdpStr;\r\n        }\r\n        const fidGroups = videoMLine.findGroups('FID');\r\n\r\n        // Remove the fid groups from the mline\r\n\r\n        videoMLine.removeGroupsBySemantics('FID');\r\n\r\n        // Get the rtx ssrcs and remove them from the mline\r\n        for (const fidGroup of fidGroups) {\r\n            const rtxSsrc = parseSecondarySSRC(fidGroup);\r\n\r\n            videoMLine.removeSSRC(rtxSsrc);\r\n        }\r\n\r\n        return sdpTransformer.toRawSDP();\r\n    }\r\n}\r\n","/* global $ */\r\n\r\nimport browser from '../browser';\r\nimport SDPUtil from './SDPUtil';\r\n\r\n/**\r\n *\r\n * @param sdp\r\n */\r\nexport default function SDP(sdp) {\r\n    const media = sdp.split('\\r\\nm=');\r\n\r\n    for (let i = 1, length = media.length; i < length; i++) {\r\n        let mediaI = `m=${media[i]}`;\r\n\r\n        if (i !== length - 1) {\r\n            mediaI += '\\r\\n';\r\n        }\r\n        media[i] = mediaI;\r\n    }\r\n    const session = `${media.shift()}\\r\\n`;\r\n\r\n    this.media = media;\r\n    this.raw = session + media.join('');\r\n    this.session = session;\r\n}\r\n\r\n/**\r\n * A flag will make {@link transportToJingle} and {@link jingle2media} replace\r\n * ICE candidates IPs with invalid value of '1.1.1.1' which will cause ICE\r\n * failure. The flag is used in the automated testing.\r\n * @type {boolean}\r\n */\r\nSDP.prototype.failICE = false;\r\n\r\n/**\r\n * Whether or not to remove TCP ice candidates when translating from/to jingle.\r\n * @type {boolean}\r\n */\r\nSDP.prototype.removeTcpCandidates = false;\r\n\r\n/**\r\n * Whether or not to remove UDP ice candidates when translating from/to jingle.\r\n * @type {boolean}\r\n */\r\nSDP.prototype.removeUdpCandidates = false;\r\n\r\n/**\r\n * Returns map of MediaChannel mapped per channel idx.\r\n */\r\nSDP.prototype.getMediaSsrcMap = function() {\r\n    const self = this;\r\n    const mediaSSRCs = {};\r\n    let tmp;\r\n\r\n    for (let mediaindex = 0; mediaindex < self.media.length; mediaindex++) {\r\n        tmp = SDPUtil.findLines(self.media[mediaindex], 'a=ssrc:');\r\n        const mid\r\n            = SDPUtil.parseMID(\r\n                SDPUtil.findLine(self.media[mediaindex], 'a=mid:'));\r\n        const media = {\r\n            mediaindex,\r\n            mid,\r\n            ssrcs: {},\r\n            ssrcGroups: []\r\n        };\r\n\r\n        mediaSSRCs[mediaindex] = media;\r\n        tmp.forEach(line => {\r\n            const linessrc = line.substring(7).split(' ')[0];\r\n\r\n            // allocate new ChannelSsrc\r\n\r\n            if (!media.ssrcs[linessrc]) {\r\n                media.ssrcs[linessrc] = {\r\n                    ssrc: linessrc,\r\n                    lines: []\r\n                };\r\n            }\r\n            media.ssrcs[linessrc].lines.push(line);\r\n        });\r\n        tmp = SDPUtil.findLines(self.media[mediaindex], 'a=ssrc-group:');\r\n        tmp.forEach(line => {\r\n            const idx = line.indexOf(' ');\r\n            const semantics = line.substr(0, idx).substr(13);\r\n            const ssrcs = line.substr(14 + semantics.length).split(' ');\r\n\r\n            if (ssrcs.length) {\r\n                media.ssrcGroups.push({\r\n                    semantics,\r\n                    ssrcs\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    return mediaSSRCs;\r\n};\r\n\r\n/**\r\n * Returns <tt>true</tt> if this SDP contains given SSRC.\r\n * @param ssrc the ssrc to check.\r\n * @returns {boolean} <tt>true</tt> if this SDP contains given SSRC.\r\n */\r\nSDP.prototype.containsSSRC = function(ssrc) {\r\n    // FIXME this code is really strange - improve it if you can\r\n    const medias = this.getMediaSsrcMap();\r\n    let result = false;\r\n\r\n    Object.keys(medias).forEach(mediaindex => {\r\n        if (result) {\r\n            return;\r\n        }\r\n        if (medias[mediaindex].ssrcs[ssrc]) {\r\n            result = true;\r\n        }\r\n    });\r\n\r\n    return result;\r\n};\r\n\r\n// remove iSAC and CN from SDP\r\nSDP.prototype.mangle = function() {\r\n    let i, j, lines, mline, newdesc, rtpmap;\r\n\r\n    for (i = 0; i < this.media.length; i++) {\r\n        lines = this.media[i].split('\\r\\n');\r\n        lines.pop(); // remove empty last element\r\n        mline = SDPUtil.parseMLine(lines.shift());\r\n        if (mline.media !== 'audio') {\r\n            continue; // eslint-disable-line no-continue\r\n        }\r\n        newdesc = '';\r\n        mline.fmt.length = 0;\r\n        for (j = 0; j < lines.length; j++) {\r\n            if (lines[j].substr(0, 9) === 'a=rtpmap:') {\r\n                rtpmap = SDPUtil.parseRTPMap(lines[j]);\r\n                if (rtpmap.name === 'CN' || rtpmap.name === 'ISAC') {\r\n                    continue; // eslint-disable-line no-continue\r\n                }\r\n                mline.fmt.push(rtpmap.id);\r\n            }\r\n            newdesc += `${lines[j]}\\r\\n`;\r\n        }\r\n        this.media[i] = `${SDPUtil.buildMLine(mline)}\\r\\n${newdesc}`;\r\n    }\r\n    this.raw = this.session + this.media.join('');\r\n};\r\n\r\n// remove lines matching prefix from session section\r\nSDP.prototype.removeSessionLines = function(prefix) {\r\n    const self = this;\r\n    const lines = SDPUtil.findLines(this.session, prefix);\r\n\r\n    lines.forEach(line => {\r\n        self.session = self.session.replace(`${line}\\r\\n`, '');\r\n    });\r\n    this.raw = this.session + this.media.join('');\r\n\r\n    return lines;\r\n};\r\n\r\n// remove lines matching prefix from a media section specified by mediaindex\r\n// TODO: non-numeric mediaindex could match mid\r\nSDP.prototype.removeMediaLines = function(mediaindex, prefix) {\r\n    const self = this;\r\n    const lines = SDPUtil.findLines(this.media[mediaindex], prefix);\r\n\r\n    lines.forEach(line => {\r\n        self.media[mediaindex]\r\n            = self.media[mediaindex].replace(`${line}\\r\\n`, '');\r\n    });\r\n    this.raw = this.session + this.media.join('');\r\n\r\n    return lines;\r\n};\r\n\r\n// add content's to a jingle element\r\nSDP.prototype.toJingle = function(elem, thecreator) {\r\n    let i, j, k, lines, mline, rtpmap, ssrc, tmp;\r\n\r\n    // new bundle plan\r\n\r\n    lines = SDPUtil.findLines(this.session, 'a=group:');\r\n    if (lines.length) {\r\n        for (i = 0; i < lines.length; i++) {\r\n            tmp = lines[i].split(' ');\r\n            const semantics = tmp.shift().substr(8);\r\n\r\n            elem.c('group', { xmlns: 'urn:xmpp:jingle:apps:grouping:0',\r\n                semantics });\r\n            for (j = 0; j < tmp.length; j++) {\r\n                elem.c('content', { name: tmp[j] }).up();\r\n            }\r\n            elem.up();\r\n        }\r\n    }\r\n    for (i = 0; i < this.media.length; i++) {\r\n        mline = SDPUtil.parseMLine(this.media[i].split('\\r\\n')[0]);\r\n        if (!(mline.media === 'audio'\r\n              || mline.media === 'video'\r\n              || mline.media === 'application')) {\r\n            continue; // eslint-disable-line no-continue\r\n        }\r\n        const assrcline = SDPUtil.findLine(this.media[i], 'a=ssrc:');\r\n\r\n        if (assrcline) {\r\n            ssrc = assrcline.substring(7).split(' ')[0]; // take the first\r\n        } else {\r\n            ssrc = false;\r\n        }\r\n\r\n        elem.c('content', { creator: thecreator,\r\n            name: mline.media });\r\n        const amidline = SDPUtil.findLine(this.media[i], 'a=mid:');\r\n\r\n        if (amidline) {\r\n            // prefer identifier from a=mid if present\r\n            const mid = SDPUtil.parseMID(amidline);\r\n\r\n            elem.attrs({ name: mid });\r\n        }\r\n\r\n        if (SDPUtil.findLine(this.media[i], 'a=rtpmap:').length) {\r\n            elem.c('description',\r\n                { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\r\n                    media: mline.media });\r\n            if (ssrc) {\r\n                elem.attrs({ ssrc });\r\n            }\r\n            for (j = 0; j < mline.fmt.length; j++) {\r\n                rtpmap\r\n                    = SDPUtil.findLine(\r\n                        this.media[i],\r\n                        `a=rtpmap:${mline.fmt[j]}`);\r\n                elem.c('payload-type', SDPUtil.parseRTPMap(rtpmap));\r\n\r\n                // put any 'a=fmtp:' + mline.fmt[j] lines into <param name=foo\r\n                // value=bar/>\r\n                const afmtpline\r\n                    = SDPUtil.findLine(\r\n                        this.media[i],\r\n                        `a=fmtp:${mline.fmt[j]}`);\r\n\r\n                if (afmtpline) {\r\n                    tmp = SDPUtil.parseFmtp(afmtpline);\r\n\r\n                    // eslint-disable-next-line max-depth\r\n                    for (k = 0; k < tmp.length; k++) {\r\n                        elem.c('parameter', tmp[k]).up();\r\n                    }\r\n                }\r\n\r\n                // XEP-0293 -- map a=rtcp-fb\r\n                this.rtcpFbToJingle(i, elem, mline.fmt[j]);\r\n\r\n                elem.up();\r\n            }\r\n            const crypto\r\n                = SDPUtil.findLines(this.media[i], 'a=crypto:', this.session);\r\n\r\n            if (crypto.length) {\r\n                elem.c('encryption', { required: 1 });\r\n                crypto.forEach(\r\n                    line => elem.c('crypto', SDPUtil.parseCrypto(line)).up());\r\n                elem.up(); // end of encryption\r\n            }\r\n\r\n            if (ssrc) {\r\n                const ssrcMap = SDPUtil.parseSSRC(this.media[i]);\r\n\r\n                for (const [ availableSsrc, ssrcParameters ] of ssrcMap) {\r\n                    elem.c('source', {\r\n                        ssrc: availableSsrc,\r\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\r\n                    });\r\n\r\n                    ssrcParameters.forEach(ssrcSdpLine => {\r\n                        // get everything after first space\r\n                        const idx = ssrcSdpLine.indexOf(' ');\r\n                        const kv = ssrcSdpLine.substr(idx + 1);\r\n\r\n                        elem.c('parameter');\r\n                        if (kv.indexOf(':') === -1) {\r\n                            elem.attrs({ name: kv });\r\n                        } else {\r\n                            const name = kv.split(':', 2)[0];\r\n\r\n                            elem.attrs({ name });\r\n\r\n                            let v = kv.split(':', 2)[1];\r\n\r\n                            v = SDPUtil.filterSpecialChars(v);\r\n                            elem.attrs({ value: v });\r\n                        }\r\n                        elem.up();\r\n                    });\r\n\r\n                    elem.up();\r\n                }\r\n\r\n                // XEP-0339 handle ssrc-group attributes\r\n                const ssrcGroupLines\r\n                    = SDPUtil.findLines(this.media[i], 'a=ssrc-group:');\r\n\r\n                ssrcGroupLines.forEach(line => {\r\n                    const idx = line.indexOf(' ');\r\n                    const semantics = line.substr(0, idx).substr(13);\r\n                    const ssrcs = line.substr(14 + semantics.length).split(' ');\r\n\r\n                    if (ssrcs.length) {\r\n                        elem.c('ssrc-group', { semantics,\r\n                            xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\r\n                        ssrcs.forEach(s => elem.c('source', { ssrc: s }).up());\r\n                        elem.up();\r\n                    }\r\n                });\r\n            }\r\n\r\n            const ridLines = SDPUtil.findLines(this.media[i], 'a=rid');\r\n\r\n            if (ridLines.length && browser.usesRidsForSimulcast()) {\r\n                // Map a line which looks like \"a=rid:2 send\" to just\r\n                // the rid (\"2\")\r\n                const rids = ridLines\r\n                    .map(ridLine => ridLine.split(':')[1])\r\n                    .map(ridInfo => ridInfo.split(' ')[0]);\r\n\r\n                rids.forEach(rid => {\r\n                    elem.c('source', {\r\n                        rid,\r\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\r\n                    });\r\n                    elem.up();\r\n                });\r\n                const unifiedSimulcast\r\n                    = SDPUtil.findLine(this.media[i], 'a=simulcast');\r\n\r\n                if (unifiedSimulcast) {\r\n                    elem.c('rid-group', {\r\n                        semantics: 'SIM',\r\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\r\n                    });\r\n                    rids.forEach(rid => {\r\n                        elem.c('source', { rid }).up();\r\n                    });\r\n                    elem.up();\r\n                }\r\n            }\r\n\r\n            if (SDPUtil.findLine(this.media[i], 'a=rtcp-mux')) {\r\n                elem.c('rtcp-mux').up();\r\n            }\r\n\r\n            // XEP-0293 -- map a=rtcp-fb:*\r\n            this.rtcpFbToJingle(i, elem, '*');\r\n\r\n            // XEP-0294\r\n            lines = SDPUtil.findLines(this.media[i], 'a=extmap:');\r\n            if (lines.length) {\r\n                for (j = 0; j < lines.length; j++) {\r\n                    tmp = SDPUtil.parseExtmap(lines[j]);\r\n                    elem.c('rtp-hdrext', {\r\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:rtp-hdrext:0',\r\n                        uri: tmp.uri,\r\n                        id: tmp.value\r\n                    });\r\n\r\n                    // eslint-disable-next-line max-depth\r\n                    if (tmp.hasOwnProperty('direction')) {\r\n\r\n                        // eslint-disable-next-line max-depth\r\n                        switch (tmp.direction) {\r\n                        case 'sendonly':\r\n                            elem.attrs({ senders: 'responder' });\r\n                            break;\r\n                        case 'recvonly':\r\n                            elem.attrs({ senders: 'initiator' });\r\n                            break;\r\n                        case 'sendrecv':\r\n                            elem.attrs({ senders: 'both' });\r\n                            break;\r\n                        case 'inactive':\r\n                            elem.attrs({ senders: 'none' });\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // TODO: handle params\r\n                    elem.up();\r\n                }\r\n            }\r\n            elem.up(); // end of description\r\n        }\r\n\r\n        // map ice-ufrag/pwd, dtls fingerprint, candidates\r\n        this.transportToJingle(i, elem);\r\n\r\n        const m = this.media[i];\r\n\r\n        if (SDPUtil.findLine(m, 'a=sendrecv', this.session)) {\r\n            elem.attrs({ senders: 'both' });\r\n        } else if (SDPUtil.findLine(m, 'a=sendonly', this.session)) {\r\n            elem.attrs({ senders: 'initiator' });\r\n        } else if (SDPUtil.findLine(m, 'a=recvonly', this.session)) {\r\n            elem.attrs({ senders: 'responder' });\r\n        } else if (SDPUtil.findLine(m, 'a=inactive', this.session)) {\r\n            elem.attrs({ senders: 'none' });\r\n        }\r\n\r\n        // Reject an m-line only when port is 0 and a=bundle-only is not present in the section.\r\n        // The port is automatically set to 0 when bundle-only is used.\r\n        if (mline.port === '0' && !SDPUtil.findLine(m, 'a=bundle-only', this.session)) {\r\n            // estos hack to reject an m-line\r\n            elem.attrs({ senders: 'rejected' });\r\n        }\r\n        elem.up(); // end of content\r\n    }\r\n    elem.up();\r\n\r\n    return elem;\r\n};\r\n\r\nSDP.prototype.transportToJingle = function(mediaindex, elem) {\r\n    let tmp;\r\n    const self = this;\r\n\r\n    elem.c('transport');\r\n\r\n    // XEP-0343 DTLS/SCTP\r\n    const sctpmap\r\n        = SDPUtil.findLine(this.media[mediaindex], 'a=sctpmap:', self.session);\r\n\r\n    if (sctpmap) {\r\n        const sctpAttrs = SDPUtil.parseSCTPMap(sctpmap);\r\n\r\n        elem.c('sctpmap', {\r\n            xmlns: 'urn:xmpp:jingle:transports:dtls-sctp:1',\r\n            number: sctpAttrs[0], /* SCTP port */\r\n            protocol: sctpAttrs[1] /* protocol */\r\n        });\r\n\r\n        // Optional stream count attribute\r\n        if (sctpAttrs.length > 2) {\r\n            elem.attrs({ streams: sctpAttrs[2] });\r\n        }\r\n        elem.up();\r\n    }\r\n\r\n    // XEP-0320\r\n    const fingerprints\r\n        = SDPUtil.findLines(\r\n            this.media[mediaindex],\r\n            'a=fingerprint:',\r\n            this.session);\r\n\r\n    fingerprints.forEach(line => {\r\n        tmp = SDPUtil.parseFingerprint(line);\r\n        tmp.xmlns = 'urn:xmpp:jingle:apps:dtls:0';\r\n        elem.c('fingerprint').t(tmp.fingerprint);\r\n        delete tmp.fingerprint;\r\n\r\n        // eslint-disable-next-line no-param-reassign\r\n        line\r\n            = SDPUtil.findLine(\r\n                self.media[mediaindex],\r\n                'a=setup:',\r\n                self.session);\r\n        if (line) {\r\n            tmp.setup = line.substr(8);\r\n        }\r\n        elem.attrs(tmp);\r\n        elem.up(); // end of fingerprint\r\n    });\r\n    tmp = SDPUtil.iceparams(this.media[mediaindex], this.session);\r\n    if (tmp) {\r\n        tmp.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\r\n        elem.attrs(tmp);\r\n\r\n        // XEP-0176\r\n        const lines\r\n            = SDPUtil.findLines(\r\n                this.media[mediaindex],\r\n                'a=candidate:',\r\n                this.session);\r\n\r\n        if (lines.length) { // add any a=candidate lines\r\n            lines.forEach(line => {\r\n                const candidate = SDPUtil.candidateToJingle(line);\r\n\r\n                if (self.failICE) {\r\n                    candidate.ip = '1.1.1.1';\r\n                }\r\n                const protocol\r\n                    = candidate && typeof candidate.protocol === 'string'\r\n                        ? candidate.protocol.toLowerCase()\r\n                        : '';\r\n\r\n                if ((self.removeTcpCandidates\r\n                        && (protocol === 'tcp' || protocol === 'ssltcp'))\r\n                    || (self.removeUdpCandidates && protocol === 'udp')) {\r\n                    return;\r\n                }\r\n                elem.c('candidate', candidate).up();\r\n            });\r\n        }\r\n    }\r\n    elem.up(); // end of transport\r\n};\r\n\r\n// XEP-0293\r\nSDP.prototype.rtcpFbToJingle = function(mediaindex, elem, payloadtype) {\r\n    const lines\r\n        = SDPUtil.findLines(\r\n            this.media[mediaindex],\r\n            `a=rtcp-fb:${payloadtype}`);\r\n\r\n    lines.forEach(line => {\r\n        const tmp = SDPUtil.parseRTCPFB(line);\r\n\r\n        if (tmp.type === 'trr-int') {\r\n            elem.c('rtcp-fb-trr-int', {\r\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\r\n                value: tmp.params[0]\r\n            });\r\n            elem.up();\r\n        } else {\r\n            elem.c('rtcp-fb', {\r\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\r\n                type: tmp.type\r\n            });\r\n            if (tmp.params.length > 0) {\r\n                elem.attrs({ 'subtype': tmp.params[0] });\r\n            }\r\n            elem.up();\r\n        }\r\n    });\r\n};\r\n\r\nSDP.prototype.rtcpFbFromJingle = function(elem, payloadtype) { // XEP-0293\r\n    let media = '';\r\n    let tmp\r\n        = elem.find(\r\n            '>rtcp-fb-trr-int[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]');\r\n\r\n    if (tmp.length) {\r\n        media += 'a=rtcp-fb:* trr-int ';\r\n        if (tmp.attr('value')) {\r\n            media += tmp.attr('value');\r\n        } else {\r\n            media += '0';\r\n        }\r\n        media += '\\r\\n';\r\n    }\r\n    tmp = elem.find('>rtcp-fb[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]');\r\n    tmp.each(function() {\r\n        /* eslint-disable no-invalid-this */\r\n        media += `a=rtcp-fb:${payloadtype} ${$(this).attr('type')}`;\r\n        if ($(this).attr('subtype')) {\r\n            media += ` ${$(this).attr('subtype')}`;\r\n        }\r\n        media += '\\r\\n';\r\n\r\n        /* eslint-enable no-invalid-this */\r\n    });\r\n\r\n    return media;\r\n};\r\n\r\n// construct an SDP from a jingle stanza\r\nSDP.prototype.fromJingle = function(jingle) {\r\n    const self = this;\r\n    const sessionId = Date.now();\r\n\r\n    // Use a unique session id for every TPC.\r\n    this.raw = 'v=0\\r\\n'\r\n        + `o=- ${sessionId} 2 IN IP4 0.0.0.0\\r\\n`\r\n        + 's=-\\r\\n'\r\n        + 't=0 0\\r\\n';\r\n\r\n    // http://tools.ietf.org/html/draft-ietf-mmusic-sdp-bundle-negotiation-04\r\n    // #section-8\r\n    const groups\r\n        = $(jingle).find('>group[xmlns=\"urn:xmpp:jingle:apps:grouping:0\"]');\r\n\r\n    if (groups.length) {\r\n        groups.each((idx, group) => {\r\n            const contents\r\n                = $(group)\r\n                    .find('>content')\r\n                    .map((_, content) => content.getAttribute('name'))\r\n                    .get();\r\n\r\n            if (contents.length > 0) {\r\n                self.raw\r\n                    += `a=group:${\r\n                        group.getAttribute('semantics')\r\n                            || group.getAttribute('type')} ${\r\n                        contents.join(' ')}\\r\\n`;\r\n            }\r\n        });\r\n    }\r\n\r\n    this.session = this.raw;\r\n    jingle.find('>content').each(function() {\r\n        // eslint-disable-next-line no-invalid-this\r\n        const m = self.jingle2media($(this));\r\n\r\n        self.media.push(m);\r\n    });\r\n\r\n    // reconstruct msid-semantic -- apparently not necessary\r\n    /*\r\n     var msid = SDPUtil.parseSSRC(this.raw);\r\n     if (msid.hasOwnProperty('mslabel')) {\r\n     this.session += \"a=msid-semantic: WMS \" + msid.mslabel + \"\\r\\n\";\r\n     }\r\n     */\r\n\r\n    this.raw = this.session + this.media.join('');\r\n};\r\n\r\n// translate a jingle content element into an an SDP media part\r\nSDP.prototype.jingle2media = function(content) {\r\n    const desc = content.find('description');\r\n    let media = '';\r\n    const self = this;\r\n    const sctp = content.find(\r\n        '>transport>sctpmap[xmlns=\"urn:xmpp:jingle:transports:dtls-sctp:1\"]');\r\n\r\n    let tmp = { media: desc.attr('media') };\r\n\r\n    tmp.port = '1';\r\n    if (content.attr('senders') === 'rejected') {\r\n        // estos hack to reject an m-line.\r\n        tmp.port = '0';\r\n    }\r\n    if (content.find('>transport>fingerprint').length\r\n            || desc.find('encryption').length) {\r\n        tmp.proto = sctp.length ? 'DTLS/SCTP' : 'RTP/SAVPF';\r\n    } else {\r\n        tmp.proto = 'RTP/AVPF';\r\n    }\r\n    if (sctp.length) {\r\n        media += `m=application ${tmp.port} DTLS/SCTP ${\r\n            sctp.attr('number')}\\r\\n`;\r\n        media += `a=sctpmap:${sctp.attr('number')} ${sctp.attr('protocol')}`;\r\n\r\n        const streamCount = sctp.attr('streams');\r\n\r\n        if (streamCount) {\r\n            media += ` ${streamCount}\\r\\n`;\r\n        } else {\r\n            media += '\\r\\n';\r\n        }\r\n    } else {\r\n        tmp.fmt\r\n            = desc\r\n                .find('payload-type')\r\n                .map(function() {\r\n                    // eslint-disable-next-line no-invalid-this\r\n                    return this.getAttribute('id');\r\n                })\r\n                .get();\r\n        media += `${SDPUtil.buildMLine(tmp)}\\r\\n`;\r\n    }\r\n\r\n    media += 'c=IN IP4 0.0.0.0\\r\\n';\r\n    if (!sctp.length) {\r\n        media += 'a=rtcp:1 IN IP4 0.0.0.0\\r\\n';\r\n    }\r\n    tmp\r\n        = content.find(\r\n            '>transport[xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\"]');\r\n    if (tmp.length) {\r\n        if (tmp.attr('ufrag')) {\r\n            media += `${SDPUtil.buildICEUfrag(tmp.attr('ufrag'))}\\r\\n`;\r\n        }\r\n        if (tmp.attr('pwd')) {\r\n            media += `${SDPUtil.buildICEPwd(tmp.attr('pwd'))}\\r\\n`;\r\n        }\r\n        tmp.find('>fingerprint').each(function() {\r\n            /* eslint-disable no-invalid-this */\r\n            // FIXME: check namespace at some point\r\n            media += `a=fingerprint:${this.getAttribute('hash')}`;\r\n            media += ` ${$(this).text()}`;\r\n            media += '\\r\\n';\r\n            if (this.getAttribute('setup')) {\r\n                media += `a=setup:${this.getAttribute('setup')}\\r\\n`;\r\n            }\r\n\r\n            /* eslint-enable no-invalid-this */\r\n        });\r\n    }\r\n    switch (content.attr('senders')) {\r\n    case 'initiator':\r\n        media += 'a=sendonly\\r\\n';\r\n        break;\r\n    case 'responder':\r\n        media += 'a=recvonly\\r\\n';\r\n        break;\r\n    case 'none':\r\n        media += 'a=inactive\\r\\n';\r\n        break;\r\n    case 'both':\r\n        media += 'a=sendrecv\\r\\n';\r\n        break;\r\n    }\r\n    media += `a=mid:${content.attr('name')}\\r\\n`;\r\n\r\n    // <description><rtcp-mux/></description>\r\n    // see http://code.google.com/p/libjingle/issues/detail?id=309 -- no spec\r\n    // though\r\n    // and http://mail.jabber.org/pipermail/jingle/2011-December/001761.html\r\n    if (desc.find('rtcp-mux').length) {\r\n        media += 'a=rtcp-mux\\r\\n';\r\n    }\r\n\r\n    if (desc.find('encryption').length) {\r\n        desc.find('encryption>crypto').each(function() {\r\n            /* eslint-disable no-invalid-this */\r\n            media += `a=crypto:${this.getAttribute('tag')}`;\r\n            media += ` ${this.getAttribute('crypto-suite')}`;\r\n            media += ` ${this.getAttribute('key-params')}`;\r\n            if (this.getAttribute('session-params')) {\r\n                media += ` ${this.getAttribute('session-params')}`;\r\n            }\r\n            media += '\\r\\n';\r\n\r\n            /* eslint-enable no-invalid-this */\r\n        });\r\n    }\r\n    desc.find('payload-type').each(function() {\r\n        /* eslint-disable no-invalid-this */\r\n        media += `${SDPUtil.buildRTPMap(this)}\\r\\n`;\r\n        if ($(this).find('>parameter').length) {\r\n            media += `a=fmtp:${this.getAttribute('id')} `;\r\n            media\r\n                += $(this)\r\n                    .find('parameter')\r\n                    .map(function() {\r\n                        const name = this.getAttribute('name');\r\n\r\n                        return (\r\n                            (name ? `${name}=` : '')\r\n                                + this.getAttribute('value'));\r\n                    })\r\n                    .get()\r\n                    .join('; ');\r\n            media += '\\r\\n';\r\n        }\r\n\r\n        // xep-0293\r\n        media += self.rtcpFbFromJingle($(this), this.getAttribute('id'));\r\n\r\n        /* eslint-enable no-invalid-this */\r\n    });\r\n\r\n    // xep-0293\r\n    media += self.rtcpFbFromJingle(desc, '*');\r\n\r\n    // xep-0294\r\n    tmp\r\n        = desc.find(\r\n            '>rtp-hdrext[xmlns=\"urn:xmpp:jingle:apps:rtp:rtp-hdrext:0\"]');\r\n    tmp.each(function() {\r\n        /* eslint-disable no-invalid-this */\r\n        media\r\n            += `a=extmap:${this.getAttribute('id')} ${\r\n                this.getAttribute('uri')}\\r\\n`;\r\n\r\n        /* eslint-enable no-invalid-this */\r\n    });\r\n\r\n    content\r\n        .find(\r\n            '>transport[xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\"]'\r\n                + '>candidate')\r\n        .each(function() {\r\n            /* eslint-disable no-invalid-this */\r\n            let protocol = this.getAttribute('protocol');\r\n\r\n            protocol\r\n                = typeof protocol === 'string' ? protocol.toLowerCase() : '';\r\n\r\n            if ((self.removeTcpCandidates\r\n                    && (protocol === 'tcp' || protocol === 'ssltcp'))\r\n                || (self.removeUdpCandidates && protocol === 'udp')) {\r\n                return;\r\n            } else if (self.failICE) {\r\n                this.setAttribute('ip', '1.1.1.1');\r\n            }\r\n\r\n            media += SDPUtil.candidateFromJingle(this);\r\n\r\n            /* eslint-enable no-invalid-this */\r\n        });\r\n\r\n    // XEP-0339 handle ssrc-group attributes\r\n    content\r\n        .find('description>ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\r\n        .each(function() {\r\n            /* eslint-disable no-invalid-this */\r\n            const semantics = this.getAttribute('semantics');\r\n            const ssrcs\r\n                = $(this)\r\n                    .find('>source')\r\n                    .map(function() {\r\n                        return this.getAttribute('ssrc');\r\n                    })\r\n                    .get();\r\n\r\n            if (ssrcs.length) {\r\n                media += `a=ssrc-group:${semantics} ${ssrcs.join(' ')}\\r\\n`;\r\n            }\r\n\r\n            /* eslint-enable no-invalid-this */\r\n        });\r\n\r\n    tmp\r\n        = content.find(\r\n            'description>source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\r\n    tmp.each(function() {\r\n        /* eslint-disable no-invalid-this */\r\n        const ssrc = this.getAttribute('ssrc');\r\n\r\n        // eslint-disable-next-line newline-per-chained-call\r\n        $(this).find('>parameter').each(function() {\r\n            const name = this.getAttribute('name');\r\n            let value = this.getAttribute('value');\r\n\r\n            value = SDPUtil.filterSpecialChars(value);\r\n            media += `a=ssrc:${ssrc} ${name}`;\r\n            if (value && value.length) {\r\n                media += `:${value}`;\r\n            }\r\n            media += '\\r\\n';\r\n        });\r\n\r\n        /* eslint-enable no-invalid-this */\r\n    });\r\n\r\n    return media;\r\n};\r\n","import SDPUtil from './SDPUtil';\r\n\r\n// this could be useful in Array.prototype.\r\n/**\r\n *\r\n * @param array1\r\n * @param array2\r\n */\r\nfunction arrayEquals(array1, array2) {\r\n    // if the other array is a falsy value, return\r\n    if (!array2) {\r\n        return false;\r\n    }\r\n\r\n    // compare lengths - can save a lot of time\r\n    if (array1.length !== array2.length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = 0, l = array1.length; i < l; i++) {\r\n        // Check if we have nested arrays\r\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\r\n            // recurse into the nested arrays\r\n            if (!array1[i].equals(array2[i])) {\r\n                return false;\r\n            }\r\n        } else if (array1[i] !== array2[i]) {\r\n            // Warning - two different object instances will never be\r\n            // equal: {x:20} != {x:20}\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n *\r\n * @param mySDP\r\n * @param otherSDP\r\n */\r\nexport default function SDPDiffer(mySDP, otherSDP) {\r\n    this.mySDP = mySDP;\r\n    this.otherSDP = otherSDP;\r\n    if (!mySDP) {\r\n        throw new Error('\"mySDP\" is undefined!');\r\n    } else if (!otherSDP) {\r\n        throw new Error('\"otherSDP\" is undefined!');\r\n    }\r\n}\r\n\r\n/**\r\n * Returns map of MediaChannel that contains media contained in\r\n * 'mySDP', but not contained in 'otherSdp'. Mapped by channel idx.\r\n */\r\nSDPDiffer.prototype.getNewMedia = function() {\r\n\r\n    const myMedias = this.mySDP.getMediaSsrcMap();\r\n    const othersMedias = this.otherSDP.getMediaSsrcMap();\r\n    const newMedia = {};\r\n\r\n    Object.keys(othersMedias).forEach(othersMediaIdx => {\r\n        const myMedia = myMedias[othersMediaIdx];\r\n        const othersMedia = othersMedias[othersMediaIdx];\r\n\r\n        if (!myMedia && othersMedia) {\r\n            // Add whole channel\r\n            newMedia[othersMediaIdx] = othersMedia;\r\n\r\n            return;\r\n        }\r\n\r\n        // Look for new ssrcs across the channel\r\n        Object.keys(othersMedia.ssrcs).forEach(ssrc => {\r\n            if (Object.keys(myMedia.ssrcs).indexOf(ssrc) === -1) {\r\n                // Allocate channel if we've found ssrc that doesn't exist in\r\n                // our channel\r\n                if (!newMedia[othersMediaIdx]) {\r\n                    newMedia[othersMediaIdx] = {\r\n                        mediaindex: othersMedia.mediaindex,\r\n                        mid: othersMedia.mid,\r\n                        ssrcs: {},\r\n                        ssrcGroups: []\r\n                    };\r\n                }\r\n                newMedia[othersMediaIdx].ssrcs[ssrc] = othersMedia.ssrcs[ssrc];\r\n            } else if (othersMedia.ssrcs[ssrc].lines\r\n                        && myMedia.ssrcs[ssrc].lines) {\r\n                // we want to detect just changes in adding/removing msid\r\n                const myContainMsid = myMedia.ssrcs[ssrc].lines.find(\r\n                    line => line.indexOf('msid') !== -1) !== undefined;\r\n                const newContainMsid = othersMedia.ssrcs[ssrc].lines.find(\r\n                    line => line.indexOf('msid') !== -1) !== undefined;\r\n\r\n                if (myContainMsid !== newContainMsid) {\r\n                    if (!newMedia[othersMediaIdx]) {\r\n                        newMedia[othersMediaIdx] = {\r\n                            mediaindex: othersMedia.mediaindex,\r\n                            mid: othersMedia.mid,\r\n                            ssrcs: {},\r\n                            ssrcGroups: []\r\n                        };\r\n                    }\r\n                    newMedia[othersMediaIdx].ssrcs[ssrc]\r\n                        = othersMedia.ssrcs[ssrc];\r\n                }\r\n            }\r\n        });\r\n\r\n        // Look for new ssrc groups across the channels\r\n        othersMedia.ssrcGroups.forEach(otherSsrcGroup => {\r\n\r\n            // try to match the other ssrc-group with an ssrc-group of ours\r\n            let matched = false;\r\n\r\n            for (let i = 0; i < myMedia.ssrcGroups.length; i++) {\r\n                const mySsrcGroup = myMedia.ssrcGroups[i];\r\n\r\n                if (otherSsrcGroup.semantics === mySsrcGroup.semantics\r\n                    && arrayEquals(otherSsrcGroup.ssrcs, mySsrcGroup.ssrcs)) {\r\n\r\n                    matched = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!matched) {\r\n                // Allocate channel if we've found an ssrc-group that doesn't\r\n                // exist in our channel\r\n\r\n                if (!newMedia[othersMediaIdx]) {\r\n                    newMedia[othersMediaIdx] = {\r\n                        mediaindex: othersMedia.mediaindex,\r\n                        mid: othersMedia.mid,\r\n                        ssrcs: {},\r\n                        ssrcGroups: []\r\n                    };\r\n                }\r\n                newMedia[othersMediaIdx].ssrcGroups.push(otherSsrcGroup);\r\n            }\r\n        });\r\n    });\r\n\r\n    return newMedia;\r\n};\r\n\r\n/**\r\n * TODO: document!\r\n */\r\nSDPDiffer.prototype.toJingle = function(modify) {\r\n    const sdpMediaSsrcs = this.getNewMedia();\r\n\r\n    let modified = false;\r\n\r\n    Object.keys(sdpMediaSsrcs).forEach(mediaindex => {\r\n        modified = true;\r\n        const media = sdpMediaSsrcs[mediaindex];\r\n\r\n        modify.c('content', { name: media.mid });\r\n\r\n        modify.c('description',\r\n            { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\r\n                media: media.mid });\r\n\r\n        // FIXME: not completely sure this operates on blocks and / or handles\r\n        // different ssrcs correctly\r\n        // generate sources from lines\r\n        Object.keys(media.ssrcs).forEach(ssrcNum => {\r\n            const mediaSsrc = media.ssrcs[ssrcNum];\r\n\r\n            modify.c('source', { xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\r\n            modify.attrs({ ssrc: mediaSsrc.ssrc });\r\n\r\n            // iterate over ssrc lines\r\n            mediaSsrc.lines.forEach(line => {\r\n                const idx = line.indexOf(' ');\r\n                const kv = line.substr(idx + 1);\r\n\r\n                modify.c('parameter');\r\n                if (kv.indexOf(':') === -1) {\r\n                    modify.attrs({ name: kv });\r\n                } else {\r\n                    const nv = kv.split(':', 2);\r\n                    const name = nv[0];\r\n                    const value = SDPUtil.filterSpecialChars(nv[1]);\r\n\r\n                    modify.attrs({ name });\r\n                    modify.attrs({ value });\r\n                }\r\n                modify.up(); // end of parameter\r\n            });\r\n            modify.up(); // end of source\r\n        });\r\n\r\n        // generate source groups from lines\r\n        media.ssrcGroups.forEach(ssrcGroup => {\r\n            if (ssrcGroup.ssrcs.length) {\r\n\r\n                modify.c('ssrc-group', {\r\n                    semantics: ssrcGroup.semantics,\r\n                    xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\r\n                });\r\n\r\n                ssrcGroup.ssrcs.forEach(ssrc => {\r\n                    modify.c('source', { ssrc })\r\n                        .up(); // end of source\r\n                });\r\n                modify.up(); // end of ssrc-group\r\n            }\r\n        });\r\n\r\n        modify.up(); // end of description\r\n        modify.up(); // end of content\r\n    });\r\n\r\n    return modified;\r\n};\r\n","import { getLogger } from 'jitsi-meet-logger';\r\nconst logger = getLogger(__filename);\r\n\r\nimport RandomUtil from '../util/RandomUtil';\r\nimport browser from '../browser';\r\n\r\nconst SDPUtil = {\r\n    filterSpecialChars(text) {\r\n        // XXX Neither one of the falsy values (e.g. null, undefined, false,\r\n        // \"\", etc.) \"contain\" special chars.\r\n        // eslint-disable-next-line no-useless-escape\r\n        return text ? text.replace(/[\\\\\\/\\{,\\}\\+]/g, '') : text;\r\n    },\r\n    iceparams(mediadesc, sessiondesc) {\r\n        let data = null;\r\n        let pwd, ufrag;\r\n\r\n        if ((ufrag = SDPUtil.findLine(mediadesc, 'a=ice-ufrag:', sessiondesc))\r\n                && (pwd\r\n                    = SDPUtil.findLine(\r\n                        mediadesc,\r\n                        'a=ice-pwd:',\r\n                        sessiondesc))) {\r\n            data = {\r\n                ufrag: SDPUtil.parseICEUfrag(ufrag),\r\n                pwd: SDPUtil.parseICEPwd(pwd)\r\n            };\r\n        }\r\n\r\n        return data;\r\n    },\r\n    parseICEUfrag(line) {\r\n        return line.substring(12);\r\n    },\r\n    buildICEUfrag(frag) {\r\n        return `a=ice-ufrag:${frag}`;\r\n    },\r\n    parseICEPwd(line) {\r\n        return line.substring(10);\r\n    },\r\n    buildICEPwd(pwd) {\r\n        return `a=ice-pwd:${pwd}`;\r\n    },\r\n    parseMID(line) {\r\n        return line.substring(6);\r\n    },\r\n    parseMLine(line) {\r\n        const data = {};\r\n        const parts = line.substring(2).split(' ');\r\n\r\n        data.media = parts.shift();\r\n        data.port = parts.shift();\r\n        data.proto = parts.shift();\r\n        if (parts[parts.length - 1] === '') { // trailing whitespace\r\n            parts.pop();\r\n        }\r\n        data.fmt = parts;\r\n\r\n        return data;\r\n    },\r\n    buildMLine(mline) {\r\n        return (\r\n            `m=${mline.media} ${mline.port} ${mline.proto} ${\r\n                mline.fmt.join(' ')}`);\r\n    },\r\n    parseRTPMap(line) {\r\n        const data = {};\r\n        let parts = line.substring(9).split(' ');\r\n\r\n        data.id = parts.shift();\r\n        parts = parts[0].split('/');\r\n        data.name = parts.shift();\r\n        data.clockrate = parts.shift();\r\n        data.channels = parts.length ? parts.shift() : '1';\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Parses SDP line \"a=sctpmap:...\" and extracts SCTP port from it.\r\n     * @param line eg. \"a=sctpmap:5000 webrtc-datachannel\"\r\n     * @returns [SCTP port number, protocol, streams]\r\n     */\r\n    parseSCTPMap(line) {\r\n        const parts = line.substring(10).split(' ');\r\n        const sctpPort = parts[0];\r\n        const protocol = parts[1];\r\n\r\n        // Stream count is optional\r\n        const streamCount = parts.length > 2 ? parts[2] : null;\r\n\r\n\r\n        return [ sctpPort, protocol, streamCount ];// SCTP port\r\n    },\r\n    buildRTPMap(el) {\r\n        let line\r\n            = `a=rtpmap:${el.getAttribute('id')} ${el.getAttribute('name')}/${\r\n                el.getAttribute('clockrate')}`;\r\n\r\n        if (el.getAttribute('channels')\r\n            && el.getAttribute('channels') !== '1') {\r\n            line += `/${el.getAttribute('channels')}`;\r\n        }\r\n\r\n        return line;\r\n    },\r\n    parseCrypto(line) {\r\n        const data = {};\r\n        const parts = line.substring(9).split(' ');\r\n\r\n        data.tag = parts.shift();\r\n        data['crypto-suite'] = parts.shift();\r\n        data['key-params'] = parts.shift();\r\n        if (parts.length) {\r\n            data['session-params'] = parts.join(' ');\r\n        }\r\n\r\n        return data;\r\n    },\r\n    parseFingerprint(line) { // RFC 4572\r\n        const data = {};\r\n        const parts = line.substring(14).split(' ');\r\n\r\n        data.hash = parts.shift();\r\n        data.fingerprint = parts.shift();\r\n\r\n        // TODO assert that fingerprint satisfies 2UHEX *(\":\" 2UHEX) ?\r\n        return data;\r\n    },\r\n    parseFmtp(line) {\r\n        const data = [];\r\n        let parts = line.split(' ');\r\n\r\n        parts.shift();\r\n        parts = parts.join(' ').split(';');\r\n        for (let i = 0; i < parts.length; i++) {\r\n            let key = parts[i].split('=')[0];\r\n\r\n            while (key.length && key[0] === ' ') {\r\n                key = key.substring(1);\r\n            }\r\n            const value = parts[i].split('=')[1];\r\n\r\n            if (key && value) {\r\n                data.push({ name: key,\r\n                    value });\r\n            } else if (key) {\r\n                // rfc 4733 (DTMF) style stuff\r\n                data.push({ name: '',\r\n                    value: key });\r\n            }\r\n        }\r\n\r\n        return data;\r\n    },\r\n    parseICECandidate(line) {\r\n        const candidate = {};\r\n        const elems = line.split(' ');\r\n\r\n        candidate.foundation = elems[0].substring(12);\r\n        candidate.component = elems[1];\r\n        candidate.protocol = elems[2].toLowerCase();\r\n        candidate.priority = elems[3];\r\n        candidate.ip = elems[4];\r\n        candidate.port = elems[5];\r\n\r\n        // elems[6] => \"typ\"\r\n        candidate.type = elems[7];\r\n        candidate.generation = 0; // default value, may be overwritten below\r\n        for (let i = 8; i < elems.length; i += 2) {\r\n            switch (elems[i]) {\r\n            case 'raddr':\r\n                candidate['rel-addr'] = elems[i + 1];\r\n                break;\r\n            case 'rport':\r\n                candidate['rel-port'] = elems[i + 1];\r\n                break;\r\n            case 'generation':\r\n                candidate.generation = elems[i + 1];\r\n                break;\r\n            case 'tcptype':\r\n                candidate.tcptype = elems[i + 1];\r\n                break;\r\n            default: // TODO\r\n                logger.log(\r\n                    `parseICECandidate not translating \"${\r\n                        elems[i]}\" = \"${elems[i + 1]}\"`);\r\n            }\r\n        }\r\n        candidate.network = '1';\r\n\r\n        // not applicable to SDP -- FIXME: should be unique, not just random\r\n        // eslint-disable-next-line newline-per-chained-call\r\n        candidate.id = Math.random().toString(36).substr(2, 10);\r\n\r\n        return candidate;\r\n    },\r\n    buildICECandidate(cand) {\r\n        let line = [\r\n            `a=candidate:${cand.foundation}`,\r\n            cand.component,\r\n            cand.protocol,\r\n            cand.priority,\r\n            cand.ip,\r\n            cand.port,\r\n            'typ',\r\n            cand.type\r\n        ].join(' ');\r\n\r\n        line += ' ';\r\n        switch (cand.type) {\r\n        case 'srflx':\r\n        case 'prflx':\r\n        case 'relay':\r\n            if (cand.hasOwnAttribute('rel-addr')\r\n                    && cand.hasOwnAttribute('rel-port')) {\r\n                line += 'raddr';\r\n                line += ' ';\r\n                line += cand['rel-addr'];\r\n                line += ' ';\r\n                line += 'rport';\r\n                line += ' ';\r\n                line += cand['rel-port'];\r\n                line += ' ';\r\n            }\r\n            break;\r\n        }\r\n        if (cand.hasOwnAttribute('tcptype')) {\r\n            line += 'tcptype';\r\n            line += ' ';\r\n            line += cand.tcptype;\r\n            line += ' ';\r\n        }\r\n        line += 'generation';\r\n        line += ' ';\r\n        line += cand.hasOwnAttribute('generation') ? cand.generation : '0';\r\n\r\n        return line;\r\n    },\r\n    parseSSRC(desc) {\r\n        // proprietary mapping of a=ssrc lines\r\n        // TODO: see \"Jingle RTP Source Description\" by Juberti and P. Thatcher\r\n        // on google docs and parse according to that\r\n        const data = new Map();\r\n        const lines = desc.split('\\r\\n');\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            if (lines[i].substring(0, 7) === 'a=ssrc:') {\r\n                // FIXME: Use regex to smartly find the ssrc.\r\n                const ssrc = lines[i].split('a=ssrc:')[1].split(' ')[0];\r\n\r\n                if (!data.get(ssrc)) {\r\n                    data.set(ssrc, []);\r\n                }\r\n\r\n                data.get(ssrc).push(lines[i]);\r\n            }\r\n        }\r\n\r\n        return data;\r\n    },\r\n    parseRTCPFB(line) {\r\n        const parts = line.substr(10).split(' ');\r\n        const data = {};\r\n\r\n        data.pt = parts.shift();\r\n        data.type = parts.shift();\r\n        data.params = parts;\r\n\r\n        return data;\r\n    },\r\n    parseExtmap(line) {\r\n        const parts = line.substr(9).split(' ');\r\n        const data = {};\r\n\r\n        data.value = parts.shift();\r\n        if (data.value.indexOf('/') === -1) {\r\n            data.direction = 'both';\r\n        } else {\r\n            data.direction = data.value.substr(data.value.indexOf('/') + 1);\r\n            data.value = data.value.substr(0, data.value.indexOf('/'));\r\n        }\r\n        data.uri = parts.shift();\r\n        data.params = parts;\r\n\r\n        return data;\r\n    },\r\n    findLine(haystack, needle, sessionpart) {\r\n        let lines = haystack.split('\\r\\n');\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            if (lines[i].substring(0, needle.length) === needle) {\r\n                return lines[i];\r\n            }\r\n        }\r\n        if (!sessionpart) {\r\n            return false;\r\n        }\r\n\r\n        // search session part\r\n        lines = sessionpart.split('\\r\\n');\r\n        for (let j = 0; j < lines.length; j++) {\r\n            if (lines[j].substring(0, needle.length) === needle) {\r\n                return lines[j];\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    findLines(haystack, needle, sessionpart) {\r\n        let lines = haystack.split('\\r\\n');\r\n        const needles = [];\r\n\r\n        for (let i = 0; i < lines.length; i++) {\r\n            if (lines[i].substring(0, needle.length) === needle) {\r\n                needles.push(lines[i]);\r\n            }\r\n        }\r\n        if (needles.length || !sessionpart) {\r\n            return needles;\r\n        }\r\n\r\n        // search session part\r\n        lines = sessionpart.split('\\r\\n');\r\n        for (let j = 0; j < lines.length; j++) {\r\n            if (lines[j].substring(0, needle.length) === needle) {\r\n                needles.push(lines[j]);\r\n            }\r\n        }\r\n\r\n        return needles;\r\n    },\r\n    candidateToJingle(line) {\r\n        // a=candidate:2979166662 1 udp 2113937151 192.168.2.100 57698 typ host\r\n        // generation 0\r\n        //      <candidate component=... foundation=... generation=... id=...\r\n        // ip=... network=... port=... priority=... protocol=... type=.../>\r\n        if (line.indexOf('candidate:') === 0) {\r\n            // eslint-disable-next-line no-param-reassign\r\n            line = `a=${line}`;\r\n        } else if (line.substring(0, 12) !== 'a=candidate:') {\r\n            logger.log(\r\n                'parseCandidate called with a line that is not a candidate'\r\n                    + ' line');\r\n            logger.log(line);\r\n\r\n            return null;\r\n        }\r\n        if (line.substring(line.length - 2) === '\\r\\n') { // chomp it\r\n            // eslint-disable-next-line no-param-reassign\r\n            line = line.substring(0, line.length - 2);\r\n        }\r\n        const candidate = {};\r\n        const elems = line.split(' ');\r\n\r\n        if (elems[6] !== 'typ') {\r\n            logger.log('did not find typ in the right place');\r\n            logger.log(line);\r\n\r\n            return null;\r\n        }\r\n        candidate.foundation = elems[0].substring(12);\r\n        candidate.component = elems[1];\r\n        candidate.protocol = elems[2].toLowerCase();\r\n        candidate.priority = elems[3];\r\n        candidate.ip = elems[4];\r\n        candidate.port = elems[5];\r\n\r\n        // elems[6] => \"typ\"\r\n        candidate.type = elems[7];\r\n\r\n        candidate.generation = '0'; // default, may be overwritten below\r\n        for (let i = 8; i < elems.length; i += 2) {\r\n            switch (elems[i]) {\r\n            case 'raddr':\r\n                candidate['rel-addr'] = elems[i + 1];\r\n                break;\r\n            case 'rport':\r\n                candidate['rel-port'] = elems[i + 1];\r\n                break;\r\n            case 'generation':\r\n                candidate.generation = elems[i + 1];\r\n                break;\r\n            case 'tcptype':\r\n                candidate.tcptype = elems[i + 1];\r\n                break;\r\n            default: // TODO\r\n                logger.log(`not translating \"${elems[i]}\" = \"${elems[i + 1]}\"`);\r\n            }\r\n        }\r\n        candidate.network = '1';\r\n\r\n        // not applicable to SDP -- FIXME: should be unique, not just random\r\n        // eslint-disable-next-line newline-per-chained-call\r\n        candidate.id = Math.random().toString(36).substr(2, 10);\r\n\r\n        return candidate;\r\n    },\r\n    candidateFromJingle(cand) {\r\n        let line = 'a=candidate:';\r\n\r\n        line += cand.getAttribute('foundation');\r\n        line += ' ';\r\n        line += cand.getAttribute('component');\r\n        line += ' ';\r\n\r\n        let protocol = cand.getAttribute('protocol');\r\n\r\n        // use tcp candidates for FF\r\n\r\n        if (browser.isFirefox() && protocol.toLowerCase() === 'ssltcp') {\r\n            protocol = 'tcp';\r\n        }\r\n\r\n        line += protocol; // .toUpperCase(); // chrome M23 doesn't like this\r\n        line += ' ';\r\n        line += cand.getAttribute('priority');\r\n        line += ' ';\r\n        line += cand.getAttribute('ip');\r\n        line += ' ';\r\n        line += cand.getAttribute('port');\r\n        line += ' ';\r\n        line += 'typ';\r\n        line += ` ${cand.getAttribute('type')}`;\r\n        line += ' ';\r\n        switch (cand.getAttribute('type')) {\r\n        case 'srflx':\r\n        case 'prflx':\r\n        case 'relay':\r\n            if (cand.getAttribute('rel-addr')\r\n                    && cand.getAttribute('rel-port')) {\r\n                line += 'raddr';\r\n                line += ' ';\r\n                line += cand.getAttribute('rel-addr');\r\n                line += ' ';\r\n                line += 'rport';\r\n                line += ' ';\r\n                line += cand.getAttribute('rel-port');\r\n                line += ' ';\r\n            }\r\n            break;\r\n        }\r\n        if (protocol.toLowerCase() === 'tcp') {\r\n            line += 'tcptype';\r\n            line += ' ';\r\n            line += cand.getAttribute('tcptype');\r\n            line += ' ';\r\n        }\r\n        line += 'generation';\r\n        line += ' ';\r\n        line += cand.getAttribute('generation') || '0';\r\n\r\n        return `${line}\\r\\n`;\r\n    },\r\n\r\n    /**\r\n     * Parse the 'most' primary video ssrc from the given m line\r\n     * @param {object} mLine object as parsed from transform.parse\r\n     * @return {number} the primary video ssrc from the given m line\r\n     */\r\n    parsePrimaryVideoSsrc(videoMLine) {\r\n        const numSsrcs = videoMLine.ssrcs\r\n            .map(ssrcInfo => ssrcInfo.id)\r\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\r\n            .length;\r\n        const numGroups\r\n            = (videoMLine.ssrcGroups && videoMLine.ssrcGroups.length) || 0;\r\n\r\n        if (numSsrcs > 1 && numGroups === 0) {\r\n            // Ambiguous, can't figure out the primary\r\n            return;\r\n        }\r\n        let primarySsrc = null;\r\n\r\n        if (numSsrcs === 1) {\r\n            primarySsrc = videoMLine.ssrcs[0].id;\r\n        } else if (numSsrcs === 2) {\r\n            // Can figure it out if there's an FID group\r\n            const fidGroup\r\n                = videoMLine.ssrcGroups.find(\r\n                    group => group.semantics === 'FID');\r\n\r\n            if (fidGroup) {\r\n                primarySsrc = fidGroup.ssrcs.split(' ')[0];\r\n            }\r\n        } else if (numSsrcs >= 3) {\r\n            // Can figure it out if there's a sim group\r\n            const simGroup\r\n                = videoMLine.ssrcGroups.find(\r\n                    group => group.semantics === 'SIM');\r\n\r\n            if (simGroup) {\r\n                primarySsrc = simGroup.ssrcs.split(' ')[0];\r\n            }\r\n        }\r\n\r\n        return primarySsrc;\r\n    },\r\n\r\n    /**\r\n     * Generate an ssrc\r\n     * @returns {number} an ssrc\r\n     */\r\n    generateSsrc() {\r\n        return RandomUtil.randomInt(1, 0xffffffff);\r\n    },\r\n\r\n    /**\r\n     * Get an attribute for the given ssrc with the given attributeName\r\n     *  from the given mline\r\n     * @param {object} mLine an mLine object as parsed from transform.parse\r\n     * @param {number} ssrc the ssrc for which an attribute is desired\r\n     * @param {string} attributeName the name of the desired attribute\r\n     * @returns {string} the value corresponding to the given ssrc\r\n     *  and attributeName\r\n     */\r\n    getSsrcAttribute(mLine, ssrc, attributeName) {\r\n        for (let i = 0; i < mLine.ssrcs.length; ++i) {\r\n            const ssrcLine = mLine.ssrcs[i];\r\n\r\n            if (ssrcLine.id === ssrc\r\n                && ssrcLine.attribute === attributeName) {\r\n                return ssrcLine.value;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Parses the ssrcs from the group sdp line and\r\n     *  returns them as a list of numbers\r\n     * @param {object} the ssrcGroup object as parsed from\r\n     *  sdp-transform\r\n     * @returns {list<number>} a list of the ssrcs in the group\r\n     *  parsed as numbers\r\n     */\r\n    parseGroupSsrcs(ssrcGroup) {\r\n        return ssrcGroup\r\n            .ssrcs\r\n            .split(' ')\r\n            .map(ssrcStr => parseInt(ssrcStr, 10));\r\n    },\r\n\r\n    /**\r\n     * Get the mline of the given type from the given sdp\r\n     * @param {object} sdp sdp as parsed from transform.parse\r\n     * @param {string} type the type of the desired mline (e.g. \"video\")\r\n     * @returns {object} a media object\r\n     */\r\n    getMedia(sdp, type) {\r\n        return sdp.media.find(m => m.type === type);\r\n    },\r\n\r\n    /**\r\n     * Extracts the ICE username fragment from an SDP string.\r\n     * @param {string} sdp the SDP in raw text format\r\n     */\r\n    getUfrag(sdp) {\r\n        const ufragLines\r\n            = sdp.split('\\n').filter(line => line.startsWith('a=ice-ufrag:'));\r\n\r\n        if (ufragLines.length > 0) {\r\n            return ufragLines[0].substr('a=ice-ufrag:'.length);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the given codecName as the preferred codec by\r\n     *  moving it to the beginning of the payload types\r\n     *  list (modifies the given mline in place).  If there\r\n     *  are multiple options within the same codec (multiple h264\r\n     *  profiles, for instance), this will prefer the first one\r\n     *  that is found.\r\n     * @param {object} videoMLine the video mline object from\r\n     *  an sdp as parsed by transform.parse\r\n     * @param {string} codecName the name of the preferred codec\r\n     */\r\n    preferVideoCodec(videoMLine, codecName) {\r\n        let payloadType = null;\r\n\r\n        if (!videoMLine || !codecName) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < videoMLine.rtp.length; ++i) {\r\n            const rtp = videoMLine.rtp[i];\r\n\r\n            if (rtp.codec\r\n                && rtp.codec.toLowerCase() === codecName.toLowerCase()) {\r\n                payloadType = rtp.payload;\r\n                break;\r\n            }\r\n        }\r\n        if (payloadType) {\r\n            // Call toString() on payloads to get around an issue within\r\n            // SDPTransform that sets payloads as a number, instead of a string,\r\n            // when there is only one payload.\r\n            const payloadTypes\r\n                = videoMLine.payloads\r\n                    .toString()\r\n                    .split(' ')\r\n                    .map(p => parseInt(p, 10));\r\n            const payloadIndex = payloadTypes.indexOf(payloadType);\r\n\r\n            payloadTypes.splice(payloadIndex, 1);\r\n            payloadTypes.unshift(payloadType);\r\n            videoMLine.payloads = payloadTypes.join(' ');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Strips the given codec from the given mline. All related RTX payload\r\n     * types are also stripped. If the resulting mline would have no codecs,\r\n     * it's disabled.\r\n     *\r\n     * @param {object} videoMLine the video mline object from an sdp as parsed\r\n     * by transform.parse.\r\n     * @param {string} codecName the name of the codec which will be stripped.\r\n     */\r\n    stripVideoCodec(videoMLine, codecName) {\r\n        if (!videoMLine || !codecName) {\r\n            return;\r\n        }\r\n\r\n        const removePts = [];\r\n\r\n        for (const rtp of videoMLine.rtp) {\r\n            if (rtp.codec\r\n                && rtp.codec.toLowerCase() === codecName.toLowerCase()) {\r\n                removePts.push(rtp.payload);\r\n            }\r\n        }\r\n\r\n        if (removePts.length > 0) {\r\n            // We also need to remove the payload types that are related to RTX\r\n            // for the codecs we want to disable.\r\n            const rtxApts = removePts.map(item => `apt=${item}`);\r\n            const rtxPts = videoMLine.fmtp.filter(\r\n                item => rtxApts.indexOf(item.config) !== -1);\r\n\r\n            removePts.push(...rtxPts.map(item => item.payload));\r\n\r\n            // Call toString() on payloads to get around an issue within\r\n            // SDPTransform that sets payloads as a number, instead of a string,\r\n            // when there is only one payload.\r\n            const allPts = videoMLine.payloads\r\n                .toString()\r\n                .split(' ')\r\n                .map(Number);\r\n            const keepPts = allPts.filter(pt => removePts.indexOf(pt) === -1);\r\n\r\n            if (keepPts.length === 0) {\r\n                // There are no other video codecs, disable the stream.\r\n                videoMLine.port = 0;\r\n                videoMLine.direction = 'inactive';\r\n                videoMLine.payloads = '*';\r\n            } else {\r\n                videoMLine.payloads = keepPts.join(' ');\r\n            }\r\n\r\n            videoMLine.rtp = videoMLine.rtp.filter(\r\n                item => keepPts.indexOf(item.payload) !== -1);\r\n            videoMLine.fmtp = videoMLine.fmtp.filter(\r\n                item => keepPts.indexOf(item.payload) !== -1);\r\n            if (videoMLine.rtcpFb) {\r\n                videoMLine.rtcpFb = videoMLine.rtcpFb.filter(\r\n                    item => keepPts.indexOf(item.payload) !== -1);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default SDPUtil;\r\n","/* global __filename */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport {\r\n    parsePrimarySSRC,\r\n    parseSecondarySSRC,\r\n    SdpTransformWrap\r\n} from './SdpTransformUtil';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Handles the work of keeping video ssrcs consistent across multiple\r\n * o/a cycles, making it such that all stream operations can be\r\n * kept local and do not need to be signaled.\r\n * NOTE: This only keeps the 'primary' video ssrc consistent: meaning\r\n * the primary video stream\r\n */\r\nexport default class SdpConsistency {\r\n    /**\r\n     * Constructor\r\n     * @param {string} logPrefix the log prefix appended to every logged\r\n     * message, currently used to distinguish for which\r\n     * <tt>TraceablePeerConnection</tt> the instance works.\r\n     */\r\n    constructor(logPrefix) {\r\n        this.clearVideoSsrcCache();\r\n        this.logPrefix = logPrefix;\r\n    }\r\n\r\n    /**\r\n     * Clear the cached video primary and primary rtx ssrcs so that\r\n     *  they will not be used for the next call to\r\n     *  makeVideoPrimarySsrcsConsistent\r\n     */\r\n    clearVideoSsrcCache() {\r\n        this.cachedPrimarySsrc = null;\r\n        this.injectRecvOnly = false;\r\n    }\r\n\r\n    /**\r\n     * Explicitly set the primary ssrc to be used in\r\n     *  makeVideoPrimarySsrcsConsistent\r\n     * @param {number} primarySsrc the primarySsrc to be used\r\n     *  in future calls to makeVideoPrimarySsrcsConsistent\r\n     * @throws Error if <tt>primarySsrc</tt> is not a number\r\n     */\r\n    setPrimarySsrc(primarySsrc) {\r\n        if (typeof primarySsrc !== 'number') {\r\n            throw new Error('Primary SSRC must be a number!');\r\n        }\r\n        this.cachedPrimarySsrc = primarySsrc;\r\n    }\r\n\r\n    /**\r\n     * Checks whether or not there is a primary video SSRC cached already.\r\n     * @return {boolean}\r\n     */\r\n    hasPrimarySsrcCached() {\r\n        return Boolean(this.cachedPrimarySsrc);\r\n    }\r\n\r\n    /**\r\n     * Given an sdp string, either:\r\n     *  1) record the primary video and primary rtx ssrcs to be\r\n     *   used in future calls to makeVideoPrimarySsrcsConsistent or\r\n     *  2) change the primary and primary rtx ssrcs in the given sdp\r\n     *   to match the ones previously cached\r\n     * @param {string} sdpStr the sdp string to (potentially)\r\n     *  change to make the video ssrcs consistent\r\n     * @returns {string} a (potentially) modified sdp string\r\n     *  with ssrcs consistent with this class' cache\r\n     */\r\n    makeVideoPrimarySsrcsConsistent(sdpStr) {\r\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\r\n        const videoMLine = sdpTransformer.selectMedia('video');\r\n\r\n        if (!videoMLine) {\r\n            logger.debug(\r\n                `${this.logPrefix} no 'video' media found in the sdp: `\r\n                    + `${sdpStr}`);\r\n\r\n            return sdpStr;\r\n        }\r\n\r\n        if (videoMLine.direction === 'recvonly') {\r\n            // If the mline is recvonly, we'll add the primary\r\n            //  ssrc as a recvonly ssrc\r\n            if (this.cachedPrimarySsrc && this.injectRecvOnly) {\r\n                videoMLine.addSSRCAttribute({\r\n                    id: this.cachedPrimarySsrc,\r\n                    attribute: 'cname',\r\n                    value: `recvonly-${this.cachedPrimarySsrc}`\r\n                });\r\n            } else {\r\n                logger.info(\r\n                    `${this.logPrefix} no SSRC found for the recvonly video`\r\n                        + 'stream!');\r\n            }\r\n        } else {\r\n            const newPrimarySsrc = videoMLine.getPrimaryVideoSsrc();\r\n\r\n            if (!newPrimarySsrc) {\r\n                logger.info(\r\n                    `${this.logPrefix} sdp-consistency couldn't`\r\n                        + ' parse new primary ssrc');\r\n\r\n                return sdpStr;\r\n            }\r\n            if (this.cachedPrimarySsrc) {\r\n                logger.info(\r\n                    `${this.logPrefix} sdp-consistency replacing new ssrc`\r\n                        + `${newPrimarySsrc} with cached `\r\n                        + `${this.cachedPrimarySsrc}`);\r\n                videoMLine.replaceSSRC(newPrimarySsrc, this.cachedPrimarySsrc);\r\n                for (const group of videoMLine.ssrcGroups) {\r\n                    if (group.semantics === 'FID') {\r\n                        const primarySsrc = parsePrimarySSRC(group);\r\n                        const rtxSsrc = parseSecondarySSRC(group);\r\n\r\n                        // eslint-disable-next-line max-depth\r\n                        if (primarySsrc === newPrimarySsrc) {\r\n                            group.ssrcs\r\n                                = `${this.cachedPrimarySsrc} ${rtxSsrc}`;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.cachedPrimarySsrc = newPrimarySsrc;\r\n                logger.info(\r\n                    `${this.logPrefix} sdp-consistency caching primary ssrc`\r\n                        + `${this.cachedPrimarySsrc}`);\r\n            }\r\n\r\n            this.injectRecvOnly = true;\r\n        }\r\n\r\n        return sdpTransformer.toRawSDP();\r\n    }\r\n}\r\n","import * as transform from 'sdp-transform';\r\n\r\n/**\r\n * Parses the primary SSRC of given SSRC group.\r\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\r\n * @return {Number} the primary SSRC number\r\n */\r\nexport function parsePrimarySSRC(group) {\r\n    return parseInt(group.ssrcs.split(' ')[0], 10);\r\n}\r\n\r\n/**\r\n * Parses the secondary SSRC of given SSRC group.\r\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\r\n * @return {Number} the secondary SSRC number\r\n */\r\nexport function parseSecondarySSRC(group) {\r\n    return parseInt(group.ssrcs.split(' ')[1], 10);\r\n}\r\n\r\n/**\r\n * Tells how many distinct SSRCs are contained in given media line.\r\n * @param {Object} mLine the media line object as defined by 'sdp-transform' lib\r\n * @return {number}\r\n */\r\nfunction _getSSRCCount(mLine) {\r\n    if (!mLine.ssrcs) {\r\n        return 0;\r\n    }\r\n\r\n    return mLine.ssrcs\r\n        .map(ssrcInfo => ssrcInfo.id)\r\n        .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\r\n        .length;\r\n}\r\n\r\n/**\r\n * A wrapper around 'sdp-transform' media description object which provides\r\n * utility methods for common SDP/SSRC related operations.\r\n */\r\nclass MLineWrap {\r\n\r\n    /**\r\n     * Creates new <tt>MLineWrap</t>>\r\n     * @param {Object} mLine the media line object as defined by 'sdp-transform'\r\n     * lib.\r\n     */\r\n    constructor(mLine) {\r\n        if (!mLine) {\r\n            throw new Error('mLine is undefined');\r\n        }\r\n\r\n        this.mLine = mLine;\r\n    }\r\n\r\n    /**\r\n     * Getter for the mLine's \"ssrcs\" array. If the array was undefined an empty\r\n     * one will be preassigned.\r\n     *\r\n     * @return {Array<Object>} an array of 'sdp-transform' SSRC attributes\r\n     * objects.\r\n     */\r\n    get ssrcs() {\r\n        if (!this.mLine.ssrcs) {\r\n            this.mLine.ssrcs = [];\r\n        }\r\n\r\n        return this.mLine.ssrcs;\r\n    }\r\n\r\n    /**\r\n     * Setter for the mLine's \"ssrcs\" array.\r\n     *\r\n     * @param {Array<Object>} ssrcs an array of 'sdp-transform' SSRC attributes\r\n     * objects.\r\n     */\r\n    set ssrcs(ssrcs) {\r\n        this.mLine.ssrcs = ssrcs;\r\n    }\r\n\r\n    /**\r\n     * Returns the direction of the underlying media description.\r\n     * @return {string} the media direction name as defined in the SDP.\r\n     */\r\n    get direction() {\r\n        return this.mLine.direction;\r\n    }\r\n\r\n    /**\r\n     * Modifies the direction of the underlying media description.\r\n     * @param {string} direction the new direction to be set\r\n     */\r\n    set direction(direction) {\r\n        this.mLine.direction = direction;\r\n    }\r\n\r\n    /**\r\n     * Exposes the SSRC group array of the underlying media description object.\r\n     * @return {Array.<Object>}\r\n     */\r\n    get ssrcGroups() {\r\n        if (!this.mLine.ssrcGroups) {\r\n            this.mLine.ssrcGroups = [];\r\n        }\r\n\r\n        return this.mLine.ssrcGroups;\r\n    }\r\n\r\n    /**\r\n     * Modifies the SSRC groups array of the underlying media description\r\n     * object.\r\n     * @param {Array.<Object>} ssrcGroups\r\n     */\r\n    set ssrcGroups(ssrcGroups) {\r\n        this.mLine.ssrcGroups = ssrcGroups;\r\n    }\r\n\r\n    /**\r\n     * Obtains value from SSRC attribute.\r\n     * @param {number} ssrcNumber the SSRC number for which attribute is to be\r\n     * found\r\n     * @param {string} attrName the name of the SSRC attribute to be found.\r\n     * @return {string|undefined} the value of SSRC attribute or\r\n     * <tt>undefined</tt> if no such attribute exists.\r\n     */\r\n    getSSRCAttrValue(ssrcNumber, attrName) {\r\n        const attribute = this.ssrcs.find(\r\n            ssrcObj => ssrcObj.id === ssrcNumber\r\n            && ssrcObj.attribute === attrName);\r\n\r\n\r\n        return attribute && attribute.value;\r\n    }\r\n\r\n    /**\r\n     * Removes all attributes for given SSRC number.\r\n     * @param {number} ssrcNum the SSRC number for which all attributes will be\r\n     * removed.\r\n     */\r\n    removeSSRC(ssrcNum) {\r\n        if (!this.mLine.ssrcs || !this.mLine.ssrcs.length) {\r\n            return;\r\n        }\r\n\r\n        this.mLine.ssrcs\r\n            = this.mLine.ssrcs.filter(ssrcObj => ssrcObj.id !== ssrcNum);\r\n    }\r\n\r\n    /**\r\n     * Adds SSRC attribute\r\n     * @param {object} ssrcObj the SSRC attribute object as defined in\r\n     * the 'sdp-transform' lib.\r\n     */\r\n    addSSRCAttribute(ssrcObj) {\r\n        this.ssrcs.push(ssrcObj);\r\n    }\r\n\r\n    /**\r\n     * Finds a SSRC group matching both semantics and SSRCs in order.\r\n     * @param {string} semantics the name of the semantics\r\n     * @param {string} [ssrcs] group SSRCs as a string (like it's defined in\r\n     * SSRC group object of the 'sdp-transform' lib) e.g. \"1232546 342344 25434\"\r\n     * @return {object|undefined} the SSRC group object or <tt>undefined</tt> if\r\n     * not found.\r\n     */\r\n    findGroup(semantics, ssrcs) {\r\n        return this.ssrcGroups.find(\r\n            group =>\r\n                group.semantics === semantics\r\n                    && (!ssrcs || ssrcs === group.ssrcs));\r\n    }\r\n\r\n    /**\r\n     * Finds all groups matching given semantic's name.\r\n     * @param {string} semantics the name of the semantics\r\n     * @return {Array.<object>} an array of SSRC group objects as defined by\r\n     * the 'sdp-transform' lib.\r\n     */\r\n    findGroups(semantics) {\r\n        return this.ssrcGroups.filter(\r\n            group => group.semantics === semantics);\r\n    }\r\n\r\n    /**\r\n     * Finds all groups matching given semantic's name and group's primary SSRC.\r\n     * @param {string} semantics the name of the semantics\r\n     * @param {number} primarySSRC the primary SSRC number to be matched\r\n     * @return {Object} SSRC group object as defined by the 'sdp-transform' lib.\r\n     */\r\n    findGroupByPrimarySSRC(semantics, primarySSRC) {\r\n        return this.ssrcGroups.find(\r\n            group => group.semantics === semantics\r\n                && parsePrimarySSRC(group) === primarySSRC);\r\n    }\r\n\r\n    /**\r\n     * @param {string|null} msid the media stream id or <tt>null</tt> to match\r\n     * the first SSRC object with any 'msid' value.\r\n     * @return {Object|undefined} the SSRC object as defined by 'sdp-transform'\r\n     * lib.\r\n     */\r\n    findSSRCByMSID(msid) {\r\n        return this.ssrcs.find(\r\n            ssrcObj => ssrcObj.attribute === 'msid'\r\n                && (msid === null || ssrcObj.value === msid));\r\n    }\r\n\r\n    /**\r\n     * Gets the SSRC count for the underlying media description.\r\n     * @return {number}\r\n     */\r\n    getSSRCCount() {\r\n        return _getSSRCCount(this.mLine);\r\n    }\r\n\r\n    /**\r\n     * Checks whether the underlying media description contains any SSRC groups.\r\n     * @return {boolean} <tt>true</tt> if there are any SSRC groups or\r\n     * <tt>false</tt> otherwise.\r\n     */\r\n    containsAnySSRCGroups() {\r\n        return this.mLine.ssrcGroups !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Finds the primary video SSRC.\r\n     * @returns {number|undefined} the primary video ssrc\r\n     * @throws Error if the underlying media description is not a video\r\n     */\r\n    getPrimaryVideoSsrc() {\r\n        const mediaType = this.mLine.type;\r\n\r\n        if (mediaType !== 'video') {\r\n            throw new Error(\r\n                `getPrimarySsrc doesn't work with '${mediaType}'`);\r\n        }\r\n\r\n        const numSsrcs = _getSSRCCount(this.mLine);\r\n\r\n        if (numSsrcs === 1) {\r\n            // Not using \"ssrcs\" getter on purpose here\r\n            return this.mLine.ssrcs[0].id;\r\n        }\r\n\r\n        // Look for a SIM, FID, or FEC-FR group\r\n        if (this.mLine.ssrcGroups) {\r\n            const simGroup = this.findGroup('SIM');\r\n\r\n            if (simGroup) {\r\n                return parsePrimarySSRC(simGroup);\r\n            }\r\n            const fidGroup = this.findGroup('FID');\r\n\r\n            if (fidGroup) {\r\n                return parsePrimarySSRC(fidGroup);\r\n            }\r\n            const fecGroup = this.findGroup('FEC-FR');\r\n\r\n            if (fecGroup) {\r\n                return parsePrimarySSRC(fecGroup);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Obtains RTX SSRC from the underlying video description (the\r\n     * secondary SSRC of the first \"FID\" group found)\r\n     * @param {number} primarySsrc the video ssrc for which to find the\r\n     * corresponding rtx ssrc\r\n     * @returns {number|undefined} the rtx ssrc (or undefined if there isn't\r\n     * one)\r\n     */\r\n    getRtxSSRC(primarySsrc) {\r\n        const fidGroup = this.findGroupByPrimarySSRC('FID', primarySsrc);\r\n\r\n\r\n        return fidGroup && parseSecondarySSRC(fidGroup);\r\n    }\r\n\r\n    /**\r\n     * Obtains all SSRCs contained in the underlying media description.\r\n     * @return {Array.<number>} an array with all SSRC as numbers.\r\n     */\r\n    getSSRCs() {\r\n        return this.ssrcs\r\n            .map(ssrcInfo => ssrcInfo.id)\r\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index);\r\n    }\r\n\r\n    /**\r\n     * Obtains primary video SSRCs.\r\n     * @return {Array.<number>} an array of all primary video SSRCs as numbers.\r\n     * @throws Error if the wrapped media description is not a video.\r\n     */\r\n    getPrimaryVideoSSRCs() {\r\n        const mediaType = this.mLine.type;\r\n\r\n        if (mediaType !== 'video') {\r\n            throw new Error(\r\n                `getPrimaryVideoSSRCs doesn't work with ${mediaType}`);\r\n        }\r\n\r\n        const videoSSRCs = this.getSSRCs();\r\n\r\n        for (const ssrcGroupInfo of this.ssrcGroups) {\r\n            // Right now, FID and FEC-FR groups are the only ones we parse to\r\n            // disqualify streams.  If/when others arise we'll\r\n            // need to add support for them here\r\n            if (ssrcGroupInfo.semantics === 'FID'\r\n                    || ssrcGroupInfo.semantics === 'FEC-FR') {\r\n                // secondary streams should be filtered out\r\n                const secondarySsrc = parseSecondarySSRC(ssrcGroupInfo);\r\n\r\n                videoSSRCs.splice(\r\n                    videoSSRCs.indexOf(secondarySsrc), 1);\r\n            }\r\n        }\r\n\r\n        return videoSSRCs;\r\n    }\r\n\r\n    /**\r\n     * Dumps all SSRC groups of this media description to JSON.\r\n     */\r\n    dumpSSRCGroups() {\r\n        return JSON.stringify(this.mLine.ssrcGroups);\r\n    }\r\n\r\n    /**\r\n     * Removes all SSRC groups which contain given SSRC number at any position.\r\n     * @param {number} ssrc the SSRC for which all matching groups are to be\r\n     * removed.\r\n     */\r\n    removeGroupsWithSSRC(ssrc) {\r\n        if (!this.mLine.ssrcGroups) {\r\n            return;\r\n        }\r\n\r\n        this.mLine.ssrcGroups = this.mLine.ssrcGroups\r\n            .filter(groupInfo => groupInfo.ssrcs.indexOf(`${ssrc}`) === -1);\r\n    }\r\n\r\n    /**\r\n     * Removes groups that match given semantics.\r\n     * @param {string} semantics e.g. \"SIM\" or \"FID\"\r\n     */\r\n    removeGroupsBySemantics(semantics) {\r\n        if (!this.mLine.ssrcGroups) {\r\n            return;\r\n        }\r\n\r\n        this.mLine.ssrcGroups\r\n            = this.mLine.ssrcGroups\r\n                .filter(groupInfo => groupInfo.semantics !== semantics);\r\n    }\r\n\r\n    /**\r\n     * Replaces SSRC (does not affect SSRC groups, but only attributes).\r\n     * @param {number} oldSSRC the old SSRC number\r\n     * @param {number} newSSRC the new SSRC number\r\n     */\r\n    replaceSSRC(oldSSRC, newSSRC) {\r\n        if (this.mLine.ssrcs) {\r\n            this.mLine.ssrcs.forEach(ssrcInfo => {\r\n                if (ssrcInfo.id === oldSSRC) {\r\n                    ssrcInfo.id = newSSRC;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds given SSRC group to this media description.\r\n     * @param {object} group the SSRC group object as defined by\r\n     * the 'sdp-transform' lib.\r\n     */\r\n    addSSRCGroup(group) {\r\n        this.ssrcGroups.push(group);\r\n    }\r\n}\r\n\r\n/**\r\n * Utility class for SDP manipulation using the 'sdp-transform' library.\r\n *\r\n * Typical use usage scenario:\r\n *\r\n * const transformer = new SdpTransformWrap(rawSdp);\r\n * const videoMLine = transformer.selectMedia('video);\r\n * if (videoMLine) {\r\n *     videoMLiner.addSSRCAttribute({\r\n *         id: 2342343,\r\n *         attribute: \"cname\",\r\n *         value: \"someCname\"\r\n *     });\r\n *     rawSdp = transformer.toRawSdp();\r\n * }\r\n */\r\nexport class SdpTransformWrap {\r\n\r\n    /**\r\n     * Creates new instance and parses the raw SDP into objects using\r\n     * 'sdp-transform' lib.\r\n     * @param {string} rawSDP the SDP in raw text format.\r\n     */\r\n    constructor(rawSDP) {\r\n        this.parsedSDP = transform.parse(rawSDP);\r\n    }\r\n\r\n    /**\r\n     * Selects the first media SDP of given name.\r\n     * @param {string} mediaType the name of the media e.g. 'audio', 'video',\r\n     * 'data'.\r\n     * @return {MLineWrap|null} return {@link MLineWrap} instance for the media\r\n     * line or <tt>null</tt> if not found. The object returned references\r\n     * the underlying SDP state held by this <tt>SdpTransformWrap</tt> instance\r\n     * (it's not a copy).\r\n     */\r\n    selectMedia(mediaType) {\r\n        const selectedMLine\r\n            = this.parsedSDP.media.find(mLine => mLine.type === mediaType);\r\n\r\n        return selectedMLine ? new MLineWrap(selectedMLine) : null;\r\n    }\r\n\r\n    /**\r\n     * Converts the currently stored SDP state in this instance to raw text SDP\r\n     * format.\r\n     * @return {string}\r\n     */\r\n    toRawSDP() {\r\n        return transform.write(this.parsedSDP);\r\n    }\r\n}\r\n","/* global __filename */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport * as MediaType from '../../service/RTC/MediaType';\r\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\r\nimport SignalingLayer from '../../service/RTC/SignalingLayer';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Default XMPP implementation of the {@link SignalingLayer} interface. Obtains\r\n * the data from the MUC presence.\r\n */\r\nexport default class SignalingLayerImpl extends SignalingLayer {\r\n    /**\r\n     * Creates new instance.\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        /**\r\n         * A map that stores SSRCs of remote streams. And is used only locally\r\n         * We store the mapping when jingle is received, and later is used\r\n         * onaddstream webrtc event where we have only the ssrc\r\n         * FIXME: This map got filled and never cleaned and can grow during long\r\n         * conference\r\n         * @type {Map<number, string>} maps SSRC number to jid\r\n         */\r\n        this.ssrcOwners = new Map();\r\n\r\n        /**\r\n         *\r\n         * @type {ChatRoom|null}\r\n         */\r\n        this.chatRoom = null;\r\n    }\r\n\r\n    /**\r\n     * Sets the <tt>ChatRoom</tt> instance used and binds presence listeners.\r\n     * @param {ChatRoom} room\r\n     */\r\n    setChatRoom(room) {\r\n        const oldChatRoom = this.chatRoom;\r\n\r\n        this.chatRoom = room;\r\n        if (oldChatRoom) {\r\n            oldChatRoom.removePresenceListener(\r\n                'audiomuted', this._audioMuteHandler);\r\n            oldChatRoom.removePresenceListener(\r\n                'videomuted', this._videoMuteHandler);\r\n            oldChatRoom.removePresenceListener(\r\n                'videoType', this._videoTypeHandler);\r\n        }\r\n        if (room) {\r\n            // SignalingEvents\r\n            this._audioMuteHandler = (node, from) => {\r\n                this.eventEmitter.emit(\r\n                    SignalingEvents.PEER_MUTED_CHANGED,\r\n                    from, MediaType.AUDIO, node.value === 'true');\r\n            };\r\n            room.addPresenceListener('audiomuted', this._audioMuteHandler);\r\n\r\n            this._videoMuteHandler = (node, from) => {\r\n                this.eventEmitter.emit(\r\n                    SignalingEvents.PEER_MUTED_CHANGED,\r\n                    from, MediaType.VIDEO, node.value === 'true');\r\n            };\r\n            room.addPresenceListener('videomuted', this._videoMuteHandler);\r\n\r\n            this._videoTypeHandler = (node, from) => {\r\n                this.eventEmitter.emit(\r\n                    SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\r\n                    from, node.value);\r\n            };\r\n            room.addPresenceListener('videoType', this._videoTypeHandler);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    getPeerMediaInfo(owner, mediaType) {\r\n        if (this.chatRoom) {\r\n            return this.chatRoom.getMediaPresenceInfo(owner, mediaType);\r\n        }\r\n        logger.error('Requested peer media info, before room was set');\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    getSSRCOwner(ssrc) {\r\n        return this.ssrcOwners.get(ssrc);\r\n    }\r\n\r\n    /**\r\n     * Set an SSRC owner.\r\n     * @param {number} ssrc an SSRC to be owned\r\n     * @param {string} endpointId owner's ID (MUC nickname)\r\n     * @throws TypeError if <tt>ssrc</tt> is not a number\r\n     */\r\n    setSSRCOwner(ssrc, endpointId) {\r\n        if (typeof ssrc !== 'number') {\r\n            throw new TypeError(`SSRC(${ssrc}) must be a number`);\r\n        }\r\n        this.ssrcOwners.set(ssrc, endpointId);\r\n    }\r\n}\r\n","/**\r\n * Attaches to the {@link Strophe.Connection.rawInput} which is called whenever any data is received from the server.\r\n */\r\nexport default class LastRequestTracker {\r\n    /**\r\n     * Initializes new instance.\r\n     */\r\n    constructor() {\r\n        this._lastSuccess = null;\r\n    }\r\n\r\n    /**\r\n     * Starts tracking requests on the given connection.\r\n     *\r\n     * @param {Object} stropheConnection - Strophe connection instance.\r\n     */\r\n    startTracking(stropheConnection) {\r\n        const originalRawInput = stropheConnection.rawInput;\r\n\r\n        stropheConnection.rawInput = function(...args) {\r\n            this._lastSuccess = Date.now();\r\n            originalRawInput.apply(stropheConnection, args);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns how many milliseconds have passed since the last successful BOSH request.\r\n     *\r\n     * @returns {number|null}\r\n     */\r\n    getTimeSinceLastSuccess() {\r\n        return this._lastSuccess\r\n            ? Date.now() - this._lastSuccess\r\n            : null;\r\n    }\r\n}\r\n","import { getLogger } from 'jitsi-meet-logger';\r\nimport { $pres, Strophe } from 'strophe.js';\r\nimport 'strophejs-plugin-stream-management';\r\n\r\nimport Listenable from '../util/Listenable';\r\nimport { getJitterDelay } from '../util/Retry';\r\n\r\nimport LastSuccessTracker from './StropheLastSuccess';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * The lib-jitsi-meet layer for {@link Strophe.Connection}.\r\n */\r\nexport default class XmppConnection extends Listenable {\r\n    /**\r\n     * The list of {@link XmppConnection} events.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    static get Events() {\r\n        return {\r\n            CONN_STATUS_CHANGED: 'CONN_STATUS_CHANGED'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * The list of Xmpp connection statuses.\r\n     *\r\n     * @returns {Strophe.Status}\r\n     */\r\n    static get Status() {\r\n        return Strophe.Status;\r\n    }\r\n\r\n    /**\r\n     * Initializes new connection instance.\r\n     *\r\n     * @param {Object} options\r\n     * @param {String} options.serviceUrl - The BOSH or WebSocket service URL.\r\n     * @param {String} [options.enableWebsocketResume=true] - True/false to control the stream resumption functionality.\r\n     * It will enable automatically by default if supported by the XMPP server.\r\n     * @param {Number} [options.websocketKeepAlive=240000] - The websocket keep alive interval. It's 4 minutes by\r\n     * default with jitter. Pass -1 to disable. The actual interval equation is:\r\n     * jitterDelay = (interval * 0.2) + (0.8 * interval * Math.random())\r\n     * The keep alive is HTTP GET request to the {@link options.serviceUrl}.\r\n     */\r\n    constructor({ enableWebsocketResume, websocketKeepAlive, serviceUrl }) {\r\n        super();\r\n        this._options = {\r\n            enableWebsocketResume: typeof enableWebsocketResume === 'undefined' ? true : enableWebsocketResume,\r\n            websocketKeepAlive: typeof websocketKeepAlive === 'undefined' ? 4 * 60 * 1000 : Number(websocketKeepAlive)\r\n        };\r\n\r\n        /**\r\n         * The counter increased before each resume retry attempt, used to calculate exponential backoff.\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this._resumeRetryN = 0;\r\n        this._stropheConn = new Strophe.Connection(serviceUrl);\r\n        this._usesWebsocket = serviceUrl.startsWith('ws:') || serviceUrl.startsWith('wss:');\r\n\r\n        // The default maxRetries is 5, which is too long.\r\n        this._stropheConn.maxRetries = 3;\r\n\r\n        this._lastSuccessTracker = new LastSuccessTracker();\r\n        this._lastSuccessTracker.startTracking(this._stropheConn);\r\n    }\r\n\r\n    /**\r\n     * A getter for the connected state.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    get connected() {\r\n        return this._status === Strophe.Status.CONNECTED || this._status === Strophe.Status.ATTACHED;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the feature discovery plugin instance.\r\n     *\r\n     * @returns {Strophe.Connection.disco}\r\n     */\r\n    get disco() {\r\n        return this._stropheConn.disco;\r\n    }\r\n\r\n    /**\r\n     * A getter for the disconnecting state.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    get disconnecting() {\r\n        return this._stropheConn.disconnecting === true;\r\n    }\r\n\r\n    /**\r\n     * A getter for the domain.\r\n     *\r\n     * @returns {string|null}\r\n     */\r\n    get domain() {\r\n        return this._stropheConn.domain;\r\n    }\r\n\r\n    /**\r\n     * Tells if Websocket is used as the transport for the current XMPP connection. Returns true for Websocket or false\r\n     * for BOSH.\r\n     * @returns {boolean}\r\n     */\r\n    get isUsingWebSocket() {\r\n        return this._usesWebsocket;\r\n    }\r\n\r\n    /**\r\n     * A getter for the JID.\r\n     *\r\n     * @returns {string|null}\r\n     */\r\n    get jid() {\r\n        return this._stropheConn.jid;\r\n    }\r\n\r\n    /**\r\n     * Returns headers for the last BOSH response received.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    get lastResponseHeaders() {\r\n        return this._stropheConn._proto && this._stropheConn._proto.lastResponseHeaders;\r\n    }\r\n\r\n    /**\r\n     * A getter for the logger plugin instance.\r\n     *\r\n     * @returns {*}\r\n     */\r\n    get logger() {\r\n        return this._stropheConn.logger;\r\n    }\r\n\r\n    /**\r\n     * A getter for the connection options.\r\n     *\r\n     * @returns {*}\r\n     */\r\n    get options() {\r\n        return this._stropheConn.options;\r\n    }\r\n\r\n    /**\r\n     * A getter for the service URL.\r\n     *\r\n     * @returns {string}\r\n     */\r\n    get service() {\r\n        return this._stropheConn.service;\r\n    }\r\n\r\n    /**\r\n     * Returns the current connection status.\r\n     *\r\n     * @returns {Strophe.Status}\r\n     */\r\n    get status() {\r\n        return this._status;\r\n    }\r\n\r\n    /**\r\n     * Adds a connection plugin to this instance.\r\n     *\r\n     * @param {string} name - The name of the plugin or rather a key under which it will be stored on this connection\r\n     * instance.\r\n     * @param {ConnectionPluginListenable} plugin - The plugin to add.\r\n     */\r\n    addConnectionPlugin(name, plugin) {\r\n        this[name] = plugin;\r\n        plugin.init(this);\r\n    }\r\n\r\n    /**\r\n     * See {@link Strophe.Connection.addHandler}\r\n     *\r\n     * @returns {void}\r\n     */\r\n    addHandler(...args) {\r\n        this._stropheConn.addHandler(...args);\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n    /**\r\n     * Wraps {@link Strophe.Connection.attach} method in order to intercept the connection status updates.\r\n     * See {@link Strophe.Connection.attach} for the params description.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    attach(jid, sid, rid, callback, ...args) {\r\n        this._stropheConn.attach(jid, sid, rid, this._stropheConnectionCb.bind(this, callback), ...args);\r\n    }\r\n\r\n    /**\r\n     * Wraps Strophe.Connection.connect method in order to intercept the connection status updates.\r\n     * See {@link Strophe.Connection.connect} for the params description.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    connect(jid, pass, callback, ...args) {\r\n        this._stropheConn.connect(jid, pass, this._stropheConnectionCb.bind(this, callback), ...args);\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Handles {@link Strophe.Status} updates for the current connection.\r\n     *\r\n     * @param {function} targetCallback - The callback passed by the {@link XmppConnection} consumer to one of\r\n     * the connect methods.\r\n     * @param {Strophe.Status} status - The new connection status.\r\n     * @param {*} args - The rest of the arguments passed by Strophe.\r\n     * @private\r\n     */\r\n    _stropheConnectionCb(targetCallback, status, ...args) {\r\n        this._status = status;\r\n\r\n        let blockCallback = false;\r\n\r\n        if (status === Strophe.Status.CONNECTED) {\r\n            this._maybeEnableStreamResume();\r\n            this._maybeStartWSKeepAlive();\r\n            this._resumeRetryN = 0;\r\n        } else if (status === Strophe.Status.DISCONNECTED) {\r\n            // FIXME add RECONNECTING state instead of blocking the DISCONNECTED update\r\n            blockCallback = this._tryResumingConnection();\r\n            if (!blockCallback) {\r\n                clearTimeout(this._wsKeepAlive);\r\n            }\r\n        }\r\n\r\n        if (!blockCallback) {\r\n            targetCallback(status, ...args);\r\n            this.eventEmitter.emit(XmppConnection.Events.CONN_STATUS_CHANGED, status);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The method is meant to be used for testing. It's a shortcut for closing the WebSocket.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    closeWebsocket() {\r\n        this._stropheConn._proto && this._stropheConn._proto.socket && this._stropheConn._proto.socket.close();\r\n    }\r\n\r\n    /**\r\n     * See {@link Strophe.Connection.disconnect}.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    disconnect(...args) {\r\n        clearTimeout(this._resumeTimeout);\r\n        clearTimeout(this._wsKeepAlive);\r\n        this._stropheConn.disconnect(...args);\r\n    }\r\n\r\n    /**\r\n     * See {@link Strophe.Connection.flush}.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    flush(...args) {\r\n        this._stropheConn.flush(...args);\r\n    }\r\n\r\n    /**\r\n     * See {@link LastRequestTracker.getTimeSinceLastSuccess}.\r\n     *\r\n     * @returns {number|null}\r\n     */\r\n    getTimeSinceLastSuccess() {\r\n        return this._lastSuccessTracker.getTimeSinceLastSuccess();\r\n    }\r\n\r\n    /**\r\n     * Requests a resume token from the server if enabled and all requirements are met.\r\n     *\r\n     * @private\r\n     */\r\n    _maybeEnableStreamResume() {\r\n        if (!this._options.enableWebsocketResume) {\r\n\r\n            return;\r\n        }\r\n\r\n        const { streamManagement } = this._stropheConn;\r\n\r\n        if (!this.isUsingWebSocket) {\r\n            logger.warn('Stream resume enabled, but WebSockets are not enabled');\r\n        } else if (!streamManagement) {\r\n            logger.warn('Stream resume enabled, but Strophe streamManagement plugin is not installed');\r\n        } else if (!streamManagement.isSupported()) {\r\n            logger.warn('Stream resume enabled, but XEP-0198 is not supported by the server');\r\n        } else if (!streamManagement.getResumeToken()) {\r\n            logger.info('Enabling XEP-0198 stream management');\r\n            streamManagement.enable(/* resume */ true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts the Websocket keep alive if enabled.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _maybeStartWSKeepAlive() {\r\n        const { websocketKeepAlive } = this._options;\r\n\r\n        if (this._usesWebsocket && websocketKeepAlive > 0) {\r\n            this._wsKeepAlive || logger.info(`WebSocket keep alive interval: ${websocketKeepAlive}ms`);\r\n            clearTimeout(this._wsKeepAlive);\r\n\r\n            const intervalWithJitter\r\n                = /* base */ (websocketKeepAlive * 0.2) + /* jitter */ (Math.random() * 0.8 * websocketKeepAlive);\r\n\r\n            logger.debug(`Scheduling next WebSocket keep-alive in ${intervalWithJitter}ms`);\r\n\r\n            this._wsKeepAlive = setTimeout(() => {\r\n                const url = this.service.replace('wss://', 'https://').replace('ws://', 'http://');\r\n\r\n                fetch(url).catch(\r\n                    error => {\r\n                        logger.error(`Websocket Keep alive failed for url: ${url}`, { error });\r\n                    })\r\n                    .then(() => this._maybeStartWSKeepAlive());\r\n            }, intervalWithJitter);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Send a stanza. This function is called to push data onto the send queue to go out over the wire.\r\n     *\r\n     * @param {Element|Strophe.Builder} stanza - The stanza to send.\r\n     * @returns {void}\r\n     */\r\n    send(stanza) {\r\n        if (!this.connected) {\r\n            throw new Error('Not connected');\r\n        }\r\n        this._stropheConn.send(stanza);\r\n    }\r\n\r\n    /**\r\n     * Helper function to send IQ stanzas.\r\n     *\r\n     * @param {Element} elem - The stanza to send.\r\n     * @param {Function} callback - The callback function for a successful request.\r\n     * @param {Function} errback - The callback function for a failed or timed out request.  On timeout, the stanza will\r\n     * be null.\r\n     * @param {number} timeout - The time specified in milliseconds for a timeout to occur.\r\n     * @returns {number} - The id used to send the IQ.\r\n     */\r\n    sendIQ(elem, callback, errback, timeout) {\r\n        if (!this.connected) {\r\n            errback('Not connected');\r\n\r\n            return;\r\n        }\r\n\r\n        return this._stropheConn.sendIQ(elem, callback, errback, timeout);\r\n    }\r\n\r\n    /**\r\n     *  Helper function to send presence stanzas. The main benefit is for sending presence stanzas for which you expect\r\n     *  a responding presence stanza with the same id (for example when leaving a chat room).\r\n     *\r\n     * @param {Element} elem - The stanza to send.\r\n     * @param {Function} callback - The callback function for a successful request.\r\n     * @param {Function} errback - The callback function for a failed or timed out request. On timeout, the stanza will\r\n     * be null.\r\n     * @param {number} timeout - The time specified in milliseconds for a timeout to occur.\r\n     * @returns {number} - The id used to send the presence.\r\n     */\r\n    sendPresence(elem, callback, errback, timeout) {\r\n        if (!this.connected) {\r\n            errback('Not connected');\r\n\r\n            return;\r\n        }\r\n        this._stropheConn.sendPresence(elem, callback, errback, timeout);\r\n    }\r\n\r\n    /**\r\n     * The method gracefully closes the BOSH connection by using 'navigator.sendBeacon'.\r\n     *\r\n     * @returns {boolean} - true if the beacon was sent.\r\n     */\r\n    sendUnavailableBeacon() {\r\n        if (!navigator.sendBeacon || this._stropheConn.disconnecting || !this._stropheConn.connected) {\r\n            return false;\r\n        }\r\n\r\n        this._stropheConn._changeConnectStatus(Strophe.Status.DISCONNECTING);\r\n        this._stropheConn.disconnecting = true;\r\n\r\n        const body = this._stropheConn._proto._buildBody()\r\n            .attrs({\r\n                type: 'terminate'\r\n            });\r\n        const pres = $pres({\r\n            xmlns: Strophe.NS.CLIENT,\r\n            type: 'unavailable'\r\n        });\r\n\r\n        body.cnode(pres.tree());\r\n\r\n        const res = navigator.sendBeacon(\r\n            `https:${this.service}`,\r\n            Strophe.serialize(body.tree()));\r\n\r\n        logger.info(`Successfully send unavailable beacon ${res}`);\r\n\r\n        this._stropheConn._proto._abortAllRequests();\r\n        this._stropheConn._doDisconnect();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Tries to use stream management plugin to resume dropped XMPP connection. The streamManagement plugin clears\r\n     * the resume token if any connection error occurs which would put it in unrecoverable state, so as long as\r\n     * the token is present it means the connection can be resumed.\r\n     *\r\n     * @private\r\n     * @returns {boolean}\r\n     */\r\n    _tryResumingConnection() {\r\n        const { streamManagement } = this._stropheConn;\r\n        const resumeToken = streamManagement && streamManagement.getResumeToken();\r\n\r\n        if (resumeToken) {\r\n            clearTimeout(this._resumeTimeout);\r\n\r\n            // FIXME detect internet offline\r\n            // The retry delay will be:\r\n            //   1st retry: 1.5s - 3s\r\n            //   2nd retry: 3s - 9s\r\n            //   3rd retry: 3s - 27s\r\n            this._resumeRetryN = Math.min(3, this._resumeRetryN + 1);\r\n            const retryTimeout = getJitterDelay(this._resumeRetryN, 1500, 3);\r\n\r\n            logger.info(`Will try to resume the XMPP connection in ${retryTimeout}ms`);\r\n\r\n            this._resumeTimeout = setTimeout(() => {\r\n                logger.info('Trying to resume the XMPP connection');\r\n\r\n                const url = new URL(this._stropheConn.service);\r\n                let { search } = url;\r\n\r\n                search += search.indexOf('?') === -1 ? `?previd=${resumeToken}` : `&previd=${resumeToken}`;\r\n\r\n                url.search = search;\r\n\r\n                this._stropheConn.service = url.toString();\r\n\r\n                streamManagement.resume();\r\n            }, retryTimeout);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","/* global $, Promise */\r\n\r\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\r\n\r\nimport { $iq, Strophe } from 'strophe.js';\r\n\r\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\r\nconst AuthenticationEvents\r\n    = require('../../service/authentication/AuthenticationEvents');\r\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\r\n\r\nimport Settings from '../settings/Settings';\r\n\r\n/**\r\n *\r\n * @param step\r\n */\r\nfunction createExpBackoffTimer(step) {\r\n    let count = 1;\r\n\r\n    return function(reset) {\r\n        // Reset call\r\n        if (reset) {\r\n            count = 1;\r\n\r\n            return;\r\n        }\r\n\r\n        // Calculate next timeout\r\n        const timeout = Math.pow(2, count - 1);\r\n\r\n        count += 1;\r\n\r\n        return timeout * step;\r\n    };\r\n}\r\n\r\n/* eslint-disable max-params */\r\n\r\n/**\r\n *\r\n * @param roomName\r\n * @param xmpp\r\n * @param emitter\r\n * @param options\r\n */\r\nexport default function Moderator(roomName, xmpp, emitter, options) {\r\n    this.roomName = roomName;\r\n    this.xmppService = xmpp;\r\n    this.getNextTimeout = createExpBackoffTimer(1000);\r\n    this.getNextErrorTimeout = createExpBackoffTimer(1000);\r\n\r\n    // External authentication stuff\r\n    this.externalAuthEnabled = false;\r\n    this.options = options;\r\n\r\n    // Sip gateway can be enabled by configuring Jigasi host in config.js or\r\n    // it will be enabled automatically if focus detects the component through\r\n    // service discovery.\r\n    this.sipGatewayEnabled\r\n        = this.options.connection.hosts\r\n            && this.options.connection.hosts.call_control !== undefined;\r\n\r\n    this.eventEmitter = emitter;\r\n\r\n    this.connection = this.xmppService.connection;\r\n\r\n    // FIXME: Message listener that talks to POPUP window\r\n    /**\r\n     *\r\n     * @param event\r\n     */\r\n    function listener(event) {\r\n        if (event.data && event.data.sessionId) {\r\n            if (event.origin !== window.location.origin) {\r\n                logger.warn(\r\n                    `Ignoring sessionId from different origin: ${\r\n                        event.origin}`);\r\n\r\n                return;\r\n            }\r\n            Settings.sessionId = event.data.sessionId;\r\n\r\n            // After popup is closed we will authenticate\r\n        }\r\n    }\r\n\r\n    // Register\r\n    if (window.addEventListener) {\r\n        window.addEventListener('message', listener, false);\r\n    } else {\r\n        window.attachEvent('onmessage', listener);\r\n    }\r\n}\r\n\r\n/* eslint-enable max-params */\r\n\r\nModerator.prototype.isExternalAuthEnabled = function() {\r\n    return this.externalAuthEnabled;\r\n};\r\n\r\nModerator.prototype.isSipGatewayEnabled = function() {\r\n    return this.sipGatewayEnabled;\r\n};\r\n\r\nModerator.prototype.onMucMemberLeft = function(jid) {\r\n    logger.info(`Someone left is it focus ? ${jid}`);\r\n    const resource = Strophe.getResourceFromJid(jid);\r\n\r\n    if (resource === 'focus') {\r\n        logger.info(\r\n            'Focus has left the room - leaving conference');\r\n        this.eventEmitter.emit(XMPPEvents.FOCUS_LEFT);\r\n    }\r\n};\r\n\r\nModerator.prototype.setFocusUserJid = function(focusJid) {\r\n    if (!this.focusUserJid) {\r\n        this.focusUserJid = focusJid;\r\n        logger.info(`Focus jid set to:  ${this.focusUserJid}`);\r\n    }\r\n};\r\n\r\nModerator.prototype.getFocusUserJid = function() {\r\n    return this.focusUserJid;\r\n};\r\n\r\nModerator.prototype.getFocusComponent = function() {\r\n    // Get focus component address\r\n    let focusComponent = this.options.connection.hosts.focus;\r\n\r\n    // If not specified use default:  'focus.domain'\r\n\r\n    if (!focusComponent) {\r\n        focusComponent = `focus.${this.options.connection.hosts.domain}`;\r\n    }\r\n\r\n    return focusComponent;\r\n};\r\n\r\nModerator.prototype.createConferenceIq = function() {\r\n    // Generate create conference IQ\r\n    const elem = $iq({ to: this.getFocusComponent(),\r\n        type: 'set' });\r\n\r\n    // Session Id used for authentication\r\n    const { sessionId } = Settings;\r\n    const machineUID = Settings.machineId;\r\n    const config = this.options.conference;\r\n\r\n    logger.info(`Session ID: ${sessionId} machine UID: ${machineUID}`);\r\n\r\n    elem.c('conference', {\r\n        xmlns: 'http://jitsi.org/protocol/focus',\r\n        room: this.roomName,\r\n        'machine-uid': machineUID\r\n    });\r\n\r\n    if (sessionId) {\r\n        elem.attrs({ 'session-id': sessionId });\r\n    }\r\n    if (this.options.connection.enforcedBridge !== undefined) {\r\n        elem.c(\r\n            'property', {\r\n                name: 'enforcedBridge',\r\n                value: this.options.connection.enforcedBridge\r\n            }).up();\r\n    }\r\n\r\n    // Tell the focus we have Jigasi configured\r\n    if (this.options.connection.hosts !== undefined\r\n        && this.options.connection.hosts.call_control !== undefined) {\r\n        elem.c(\r\n            'property', {\r\n                name: 'call_control',\r\n                value: this.options.connection.hosts.call_control\r\n            }).up();\r\n    }\r\n    if (config.channelLastN !== undefined) {\r\n        elem.c(\r\n            'property', {\r\n                name: 'channelLastN',\r\n                value: config.channelLastN\r\n            }).up();\r\n    }\r\n    elem.c(\r\n        'property', {\r\n            name: 'disableRtx',\r\n            value: Boolean(config.disableRtx)\r\n        }).up();\r\n\r\n    if (config.enableTcc !== undefined) {\r\n        elem.c(\r\n                'property', {\r\n                    name: 'enableTcc',\r\n                    value: Boolean(config.enableTcc)\r\n                }).up();\r\n    }\r\n    if (config.enableRemb !== undefined) {\r\n        elem.c(\r\n                'property', {\r\n                    name: 'enableRemb',\r\n                    value: Boolean(config.enableRemb)\r\n                }).up();\r\n    }\r\n    if (config.minParticipants !== undefined) {\r\n        elem.c(\r\n                'property', {\r\n                    name: 'minParticipants',\r\n                    value: config.minParticipants\r\n                }).up();\r\n    }\r\n\r\n    elem.c(\r\n        'property', {\r\n            name: 'enableLipSync',\r\n            value: this.options.connection.enableLipSync === true\r\n        }).up();\r\n    if (config.audioPacketDelay !== undefined) {\r\n        elem.c(\r\n            'property', {\r\n                name: 'audioPacketDelay',\r\n                value: config.audioPacketDelay\r\n            }).up();\r\n    }\r\n    if (config.startBitrate) {\r\n        elem.c(\r\n            'property', {\r\n                name: 'startBitrate',\r\n                value: config.startBitrate\r\n            }).up();\r\n    }\r\n    if (config.minBitrate) {\r\n        elem.c(\r\n            'property', {\r\n                name: 'minBitrate',\r\n                value: config.minBitrate\r\n            }).up();\r\n    }\r\n    if (config.testing && config.testing.octo\r\n        && typeof config.testing.octo.probability === 'number') {\r\n        if (Math.random() < config.testing.octo.probability) {\r\n            elem.c(\r\n                'property', {\r\n                    name: 'octo',\r\n                    value: true\r\n                }).up();\r\n        }\r\n    }\r\n\r\n    let openSctp;\r\n\r\n    switch (this.options.conference.openBridgeChannel) {\r\n    case 'datachannel':\r\n    case true:\r\n    case undefined:\r\n        openSctp = true;\r\n        break;\r\n    case 'websocket':\r\n        openSctp = false;\r\n        break;\r\n    }\r\n\r\n    elem.c(\r\n        'property', {\r\n            name: 'openSctp',\r\n            value: openSctp\r\n        }).up();\r\n\r\n    if (this.options.conference.startAudioMuted !== undefined) {\r\n        elem.c(\r\n            'property', {\r\n                name: 'startAudioMuted',\r\n                value: this.options.conference.startAudioMuted\r\n            }).up();\r\n    }\r\n    if (this.options.conference.startVideoMuted !== undefined) {\r\n        elem.c(\r\n            'property', {\r\n                name: 'startVideoMuted',\r\n                value: this.options.conference.startVideoMuted\r\n            }).up();\r\n    }\r\n    if (this.options.conference.stereo !== undefined) {\r\n        elem.c(\r\n            'property', {\r\n                name: 'stereo',\r\n                value: this.options.conference.stereo\r\n            }).up();\r\n    }\r\n    if (this.options.conference.useRoomAsSharedDocumentName !== undefined) {\r\n        elem.c(\r\n            'property', {\r\n                name: 'useRoomAsSharedDocumentName',\r\n                value: this.options.conference.useRoomAsSharedDocumentName\r\n            }).up();\r\n    }\r\n    elem.up();\r\n\r\n    return elem;\r\n};\r\n\r\n\r\nModerator.prototype.parseSessionId = function(resultIq) {\r\n    // eslint-disable-next-line newline-per-chained-call\r\n    const sessionId = $(resultIq).find('conference').attr('session-id');\r\n\r\n    if (sessionId) {\r\n        logger.info(`Received sessionId:  ${sessionId}`);\r\n        Settings.sessionId = sessionId;\r\n    }\r\n};\r\n\r\nModerator.prototype.parseConfigOptions = function(resultIq) {\r\n    // eslint-disable-next-line newline-per-chained-call\r\n    this.setFocusUserJid($(resultIq).find('conference').attr('focusjid'));\r\n\r\n    const authenticationEnabled\r\n        = $(resultIq).find(\r\n            '>conference>property'\r\n            + '[name=\\'authentication\\'][value=\\'true\\']').length > 0;\r\n\r\n    logger.info(`Authentication enabled: ${authenticationEnabled}`);\r\n\r\n    this.externalAuthEnabled = $(resultIq).find(\r\n        '>conference>property'\r\n            + '[name=\\'externalAuth\\'][value=\\'true\\']').length > 0;\r\n\r\n    logger.info(\r\n        `External authentication enabled: ${this.externalAuthEnabled}`);\r\n\r\n    if (!this.externalAuthEnabled) {\r\n        // We expect to receive sessionId in 'internal' authentication mode\r\n        this.parseSessionId(resultIq);\r\n    }\r\n\r\n    // eslint-disable-next-line newline-per-chained-call\r\n    const authIdentity = $(resultIq).find('>conference').attr('identity');\r\n\r\n    this.eventEmitter.emit(AuthenticationEvents.IDENTITY_UPDATED,\r\n        authenticationEnabled, authIdentity);\r\n\r\n    // Check if focus has auto-detected Jigasi component(this will be also\r\n    // included if we have passed our host from the config)\r\n    if ($(resultIq).find(\r\n        '>conference>property'\r\n        + '[name=\\'sipGatewayEnabled\\'][value=\\'true\\']').length) {\r\n        this.sipGatewayEnabled = true;\r\n    }\r\n\r\n    logger.info(`Sip gateway enabled:  ${this.sipGatewayEnabled}`);\r\n};\r\n\r\n// FIXME We need to show the fact that we're waiting for the focus to the user\r\n// (or that the focus is not available)\r\n/**\r\n * Allocates the conference focus.\r\n *\r\n * @param {Function} callback - the function to be called back upon the\r\n * successful allocation of the conference focus\r\n * @returns {Promise} - Resolved when Jicofo allows to join the room. It's never\r\n * rejected and it'll keep on pinging Jicofo forever.\r\n */\r\nModerator.prototype.allocateConferenceFocus = function() {\r\n    return new Promise(resolve => {\r\n        // Try to use focus user JID from the config\r\n        this.setFocusUserJid(this.options.connection.focusUserJid);\r\n\r\n        // Send create conference IQ\r\n        this.connection.sendIQ(\r\n            this.createConferenceIq(),\r\n            result => this._allocateConferenceFocusSuccess(result, resolve),\r\n            error => this._allocateConferenceFocusError(error, resolve));\r\n\r\n        // XXX We're pressed for time here because we're beginning a complex\r\n        // and/or lengthy conference-establishment process which supposedly\r\n        // involves multiple RTTs. We don't have the time to wait for Strophe to\r\n        // decide to send our IQ.\r\n        this.connection.flush();\r\n    });\r\n};\r\n\r\n/**\r\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving an\r\n * error result.\r\n *\r\n * @param error - the error result of the request that\r\n * {@link #allocateConferenceFocus} sent\r\n * @param {Function} callback - the function to be called back upon the\r\n * successful allocation of the conference focus\r\n */\r\nModerator.prototype._allocateConferenceFocusError = function(error, callback) {\r\n    // If the session is invalid, remove and try again without session ID to get\r\n    // a new one\r\n    const invalidSession\r\n        = $(error).find('>error>session-invalid').length\r\n            || $(error).find('>error>not-acceptable').length;\r\n\r\n    if (invalidSession) {\r\n        logger.info('Session expired! - removing');\r\n        Settings.sessionId = undefined;\r\n    }\r\n    if ($(error).find('>error>graceful-shutdown').length) {\r\n        this.eventEmitter.emit(XMPPEvents.GRACEFUL_SHUTDOWN);\r\n\r\n        return;\r\n    }\r\n\r\n    // Check for error returned by the reservation system\r\n    const reservationErr = $(error).find('>error>reservation-error');\r\n\r\n    if (reservationErr.length) {\r\n        // Trigger error event\r\n        const errorCode = reservationErr.attr('error-code');\r\n        const errorTextNode = $(error).find('>error>text');\r\n        let errorMsg;\r\n\r\n        if (errorTextNode) {\r\n            errorMsg = errorTextNode.text();\r\n        }\r\n        this.eventEmitter.emit(\r\n            XMPPEvents.RESERVATION_ERROR,\r\n            errorCode,\r\n            errorMsg);\r\n\r\n        return;\r\n    }\r\n\r\n    // Not authorized to create new room\r\n    if ($(error).find('>error>not-authorized').length) {\r\n        logger.warn('Unauthorized to start the conference', error);\r\n        const toDomain = Strophe.getDomainFromJid(error.getAttribute('to'));\r\n\r\n        if (toDomain !== this.options.connection.hosts.anonymousdomain) {\r\n            // FIXME \"is external\" should come either from the focus or\r\n            // config.js\r\n            this.externalAuthEnabled = true;\r\n        }\r\n        this.eventEmitter.emit(XMPPEvents.AUTHENTICATION_REQUIRED);\r\n\r\n        return;\r\n    }\r\n    const waitMs = this.getNextErrorTimeout();\r\n    const errmsg = `Focus error, retry after ${waitMs}`;\r\n\r\n    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\r\n    logger.error(errmsg, error);\r\n\r\n    // Show message\r\n    const focusComponent = this.getFocusComponent();\r\n    const retrySec = waitMs / 1000;\r\n\r\n    // FIXME: message is duplicated ? Do not show in case of session invalid\r\n    // which means just a retry\r\n\r\n    if (!invalidSession) {\r\n        this.eventEmitter.emit(\r\n            XMPPEvents.FOCUS_DISCONNECTED,\r\n            focusComponent,\r\n            retrySec);\r\n    }\r\n\r\n    // Reset response timeout\r\n    this.getNextTimeout(true);\r\n    window.setTimeout(\r\n        () => this.allocateConferenceFocus().then(callback),\r\n        waitMs);\r\n};\r\n\r\n/**\r\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving a\r\n * success (i.e. non-error) result.\r\n *\r\n * @param result - the success (i.e. non-error) result of the request that\r\n * {@link #allocateConferenceFocus} sent\r\n * @param {Function} callback - the function to be called back upon the\r\n * successful allocation of the conference focus\r\n */\r\nModerator.prototype._allocateConferenceFocusSuccess = function(\r\n        result,\r\n        callback) {\r\n    // Setup config options\r\n    this.parseConfigOptions(result);\r\n\r\n    // Reset the error timeout (because we haven't failed here).\r\n    this.getNextErrorTimeout(true);\r\n\r\n    // eslint-disable-next-line newline-per-chained-call\r\n    if ($(result).find('conference').attr('ready') === 'true') {\r\n        // Reset the non-error timeout (because we've succeeded here).\r\n        this.getNextTimeout(true);\r\n\r\n        // Exec callback\r\n        callback();\r\n    } else {\r\n        const waitMs = this.getNextTimeout();\r\n\r\n        logger.info(`Waiting for the focus... ${waitMs}`);\r\n        window.setTimeout(\r\n            () => this.allocateConferenceFocus().then(callback),\r\n            waitMs);\r\n    }\r\n};\r\n\r\nModerator.prototype.authenticate = function() {\r\n    return new Promise((resolve, reject) => {\r\n        this.connection.sendIQ(\r\n            this.createConferenceIq(),\r\n            result => {\r\n                this.parseSessionId(result);\r\n                resolve();\r\n            },\r\n            errorIq => reject({\r\n                error: $(errorIq).find('iq>error :first')\r\n                    .prop('tagName'),\r\n                message: $(errorIq).find('iq>error>text')\r\n                    .text()\r\n            })\r\n        );\r\n    });\r\n};\r\n\r\nModerator.prototype.getLoginUrl = function(urlCallback, failureCallback) {\r\n    this._getLoginUrl(/* popup */ false, urlCallback, failureCallback);\r\n};\r\n\r\n/**\r\n *\r\n * @param {boolean} popup false for {@link Moderator#getLoginUrl} or true for\r\n * {@link Moderator#getPopupLoginUrl}\r\n * @param urlCb\r\n * @param failureCb\r\n */\r\nModerator.prototype._getLoginUrl = function(popup, urlCb, failureCb) {\r\n    const iq = $iq({ to: this.getFocusComponent(),\r\n        type: 'get' });\r\n    const attrs = {\r\n        xmlns: 'http://jitsi.org/protocol/focus',\r\n        room: this.roomName,\r\n        'machine-uid': Settings.machineId\r\n    };\r\n    let str = 'auth url'; // for logger\r\n\r\n    if (popup) {\r\n        attrs.popup = true;\r\n        str = `POPUP ${str}`;\r\n    }\r\n    iq.c('login-url', attrs);\r\n\r\n    /**\r\n     * Implements a failure callback which reports an error message and an error\r\n     * through (1) GlobalOnErrorHandler, (2) logger, and (3) failureCb.\r\n     *\r\n     * @param {string} errmsg the error messsage to report\r\n     * @param {*} error the error to report (in addition to errmsg)\r\n     */\r\n    function reportError(errmsg, err) {\r\n        GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\r\n        logger.error(errmsg, err);\r\n        failureCb(err);\r\n    }\r\n    this.connection.sendIQ(\r\n        iq,\r\n        result => {\r\n            // eslint-disable-next-line newline-per-chained-call\r\n            let url = $(result).find('login-url').attr('url');\r\n\r\n            url = decodeURIComponent(url);\r\n            if (url) {\r\n                logger.info(`Got ${str}: ${url}`);\r\n                urlCb(url);\r\n            } else {\r\n                reportError(`Failed to get ${str} from the focus`, result);\r\n            }\r\n        },\r\n        reportError.bind(undefined, `Get ${str} error`)\r\n    );\r\n};\r\n\r\nModerator.prototype.getPopupLoginUrl = function(urlCallback, failureCallback) {\r\n    this._getLoginUrl(/* popup */ true, urlCallback, failureCallback);\r\n};\r\n\r\nModerator.prototype.logout = function(callback) {\r\n    const iq = $iq({ to: this.getFocusComponent(),\r\n        type: 'set' });\r\n    const { sessionId } = Settings;\r\n\r\n    if (!sessionId) {\r\n        callback();\r\n\r\n        return;\r\n    }\r\n    iq.c('logout', {\r\n        xmlns: 'http://jitsi.org/protocol/focus',\r\n        'session-id': sessionId\r\n    });\r\n    this.connection.sendIQ(\r\n        iq,\r\n        result => {\r\n            // eslint-disable-next-line newline-per-chained-call\r\n            let logoutUrl = $(result).find('logout').attr('logout-url');\r\n\r\n            if (logoutUrl) {\r\n                logoutUrl = decodeURIComponent(logoutUrl);\r\n            }\r\n            logger.info(`Log out OK, url: ${logoutUrl}`, result);\r\n            Settings.sessionId = undefined;\r\n            callback(logoutUrl);\r\n        },\r\n        error => {\r\n            const errmsg = 'Logout error';\r\n\r\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\r\n            logger.error(errmsg, error);\r\n        }\r\n    );\r\n};\r\n","/* global $ */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { Strophe } from 'strophe.js';\r\n\r\nimport ChatRoom from './ChatRoom';\r\nimport { ConnectionPluginListenable } from './ConnectionPlugin';\r\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * MUC connection plugin.\r\n */\r\nexport default class MucConnectionPlugin extends ConnectionPluginListenable {\r\n    /**\r\n     *\r\n     * @param xmpp\r\n     */\r\n    constructor(xmpp) {\r\n        super();\r\n        this.xmpp = xmpp;\r\n        this.rooms = {};\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param connection\r\n     */\r\n    init(connection) {\r\n        super.init(connection);\r\n\r\n        // add handlers (just once)\r\n        this.connection.addHandler(this.onPresence.bind(this), null,\r\n            'presence', null, null, null, null);\r\n        this.connection.addHandler(this.onPresenceUnavailable.bind(this),\r\n            null, 'presence', 'unavailable', null);\r\n        this.connection.addHandler(this.onPresenceError.bind(this), null,\r\n            'presence', 'error', null);\r\n        this.connection.addHandler(this.onMessage.bind(this), null,\r\n            'message', null, null);\r\n        this.connection.addHandler(this.onMute.bind(this),\r\n            'http://jitsi.org/jitmeet/audio', 'iq', 'set', null, null);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param jid\r\n     * @param password\r\n     * @param options\r\n     */\r\n    createRoom(jid, password, options) {\r\n        const roomJid = Strophe.getBareJidFromJid(jid);\r\n\r\n        if (this.rooms[roomJid]) {\r\n            const errmsg = 'You are already in the room!';\r\n\r\n            logger.error(errmsg);\r\n            throw new Error(errmsg);\r\n        }\r\n        this.rooms[roomJid] = new ChatRoom(this.connection, jid,\r\n            password, this.xmpp, options);\r\n        this.eventEmitter.emit(\r\n            XMPPEvents.EMUC_ROOM_ADDED, this.rooms[roomJid]);\r\n\r\n        return this.rooms[roomJid];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param jid\r\n     */\r\n    doLeave(jid) {\r\n        this.eventEmitter.emit(\r\n            XMPPEvents.EMUC_ROOM_REMOVED, this.rooms[jid]);\r\n        delete this.rooms[jid];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param pres\r\n     */\r\n    onPresence(pres) {\r\n        const from = pres.getAttribute('from');\r\n\r\n        // What is this for? A workaround for something?\r\n        if (pres.getAttribute('type')) {\r\n            return true;\r\n        }\r\n\r\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\r\n\r\n        if (!room) {\r\n            return true;\r\n        }\r\n\r\n        // Parse status.\r\n        if ($(pres).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\r\n            + '>status[code=\"201\"]').length) {\r\n            room.createNonAnonymousRoom();\r\n        }\r\n\r\n        room.onPresence(pres);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param pres\r\n     */\r\n    onPresenceUnavailable(pres) {\r\n        const from = pres.getAttribute('from');\r\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\r\n\r\n        if (!room) {\r\n            return true;\r\n        }\r\n\r\n        room.onPresenceUnavailable(pres, from);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param pres\r\n     */\r\n    onPresenceError(pres) {\r\n        const from = pres.getAttribute('from');\r\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\r\n\r\n        if (!room) {\r\n            return true;\r\n        }\r\n\r\n        room.onPresenceError(pres, from);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param msg\r\n     */\r\n    onMessage(msg) {\r\n        // FIXME: this is a hack. but jingle on muc makes nickchanges hard\r\n        const from = msg.getAttribute('from');\r\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\r\n\r\n        if (!room) {\r\n            return true;\r\n        }\r\n\r\n        room.onMessage(msg, from);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * TODO: Document\r\n     * @param iq\r\n     */\r\n    onMute(iq) {\r\n        const from = iq.getAttribute('from');\r\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\r\n\r\n        // Returning false would result in the listener being deregistered by Strophe\r\n        if (!room) {\r\n            return true;\r\n        }\r\n\r\n        room.onMute(iq);\r\n\r\n        return true;\r\n    }\r\n}\r\n","/* global $, __filename */\r\n\r\nimport {\r\n    ACTION_JINGLE_TR_RECEIVED,\r\n    ACTION_JINGLE_TR_SUCCESS,\r\n    createJingleEvent\r\n} from '../../service/statistics/AnalyticsEvents';\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { $iq, Strophe } from 'strophe.js';\r\n\r\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\r\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\r\nimport RandomUtil from '../util/RandomUtil';\r\nimport Statistics from '../statistics/statistics';\r\n\r\nimport JingleSessionPC from './JingleSessionPC';\r\nimport ConnectionPlugin from './ConnectionPlugin';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n// XXX Strophe is build around the idea of chaining function calls so allow long\r\n// function call chains.\r\n/* eslint-disable newline-per-chained-call */\r\n\r\n/**\r\n *\r\n */\r\nexport default class JingleConnectionPlugin extends ConnectionPlugin {\r\n    /**\r\n     * Creates new <tt>JingleConnectionPlugin</tt>\r\n     * @param {XMPP} xmpp\r\n     * @param {EventEmitter} eventEmitter\r\n     * @param {Object} iceConfig an object that holds the iceConfig to be passed\r\n     * to the p2p and the jvb <tt>PeerConnection</tt>.\r\n     */\r\n    constructor(xmpp, eventEmitter, iceConfig) {\r\n        super();\r\n        this.xmpp = xmpp;\r\n        this.eventEmitter = eventEmitter;\r\n        this.sessions = {};\r\n        this.jvbIceConfig = iceConfig.jvb;\r\n        this.p2pIceConfig = iceConfig.p2p;\r\n        this.mediaConstraints = {\r\n            offerToReceiveAudio: true,\r\n            offerToReceiveVideo: true\r\n        };\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param connection\r\n     */\r\n    init(connection) {\r\n        super.init(connection);\r\n        this.connection.addHandler(this.onJingle.bind(this),\r\n            'urn:xmpp:jingle:1', 'iq', 'set', null, null);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param iq\r\n     */\r\n    onJingle(iq) {\r\n        const sid = $(iq).find('jingle').attr('sid');\r\n        const action = $(iq).find('jingle').attr('action');\r\n        const fromJid = iq.getAttribute('from');\r\n\r\n        // send ack first\r\n        const ack = $iq({ type: 'result',\r\n            to: fromJid,\r\n            id: iq.getAttribute('id')\r\n        });\r\n\r\n        logger.log(`on jingle ${action} from ${fromJid}`, iq);\r\n        let sess = this.sessions[sid];\r\n\r\n        if (action !== 'session-initiate') {\r\n            if (!sess) {\r\n                ack.attrs({ type: 'error' });\r\n                ack.c('error', { type: 'cancel' })\r\n                    .c('item-not-found', {\r\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\r\n                    })\r\n                    .up()\r\n                    .c('unknown-session', {\r\n                        xmlns: 'urn:xmpp:jingle:errors:1'\r\n                    });\r\n                logger.warn('invalid session id', iq);\r\n                this.connection.send(ack);\r\n\r\n                return true;\r\n            }\r\n\r\n            // local jid is not checked\r\n            if (fromJid !== sess.remoteJid) {\r\n                logger.warn(\r\n                    'jid mismatch for session id', sid, sess.remoteJid, iq);\r\n                ack.attrs({ type: 'error' });\r\n                ack.c('error', { type: 'cancel' })\r\n                    .c('item-not-found', {\r\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\r\n                    })\r\n                    .up()\r\n                    .c('unknown-session', {\r\n                        xmlns: 'urn:xmpp:jingle:errors:1'\r\n                    });\r\n                this.connection.send(ack);\r\n\r\n                return true;\r\n            }\r\n        } else if (sess !== undefined) {\r\n            // Existing session with same session id. This might be out-of-order\r\n            // if the sess.remoteJid is the same as from.\r\n            ack.attrs({ type: 'error' });\r\n            ack.c('error', { type: 'cancel' })\r\n                .c('service-unavailable', {\r\n                    xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\r\n                })\r\n                .up();\r\n            logger.warn('duplicate session id', sid, iq);\r\n            this.connection.send(ack);\r\n\r\n            return true;\r\n        }\r\n        const now = window.performance.now();\r\n\r\n        // FIXME that should work most of the time, but we'd have to\r\n        // think how secure it is to assume that user with \"focus\"\r\n        // nickname is Jicofo.\r\n        const isP2P = Strophe.getResourceFromJid(fromJid) !== 'focus';\r\n\r\n        // see http://xmpp.org/extensions/xep-0166.html#concepts-session\r\n\r\n        switch (action) {\r\n        case 'session-initiate': {\r\n            logger.log('(TIME) received session-initiate:\\t', now);\r\n            const startMuted = $(iq).find('jingle>startmuted');\r\n\r\n            if (startMuted && startMuted.length > 0) {\r\n                const audioMuted = startMuted.attr('audio');\r\n                const videoMuted = startMuted.attr('video');\r\n\r\n                this.eventEmitter.emit(\r\n                    XMPPEvents.START_MUTED_FROM_FOCUS,\r\n                    audioMuted === 'true',\r\n                    videoMuted === 'true');\r\n            }\r\n\r\n            logger.info(\r\n                `Marking session from ${fromJid\r\n                } as ${isP2P ? '' : '*not*'} P2P`);\r\n\r\n            const iceConfig = isP2P ? this.p2pIceConfig : this.jvbIceConfig;\r\n\r\n            sess\r\n                = new JingleSessionPC(\r\n                    $(iq).find('jingle').attr('sid'),\r\n                    $(iq).attr('to'),\r\n                    fromJid,\r\n                    this.connection,\r\n                    this.mediaConstraints,\r\n\r\n                    // Makes a copy in order to prevent exception thrown on RN when either this.p2pIceConfig or\r\n                    // this.jvbIceConfig is modified and there's a PeerConnection instance holding a reference\r\n                    JSON.parse(JSON.stringify(iceConfig)),\r\n                    isP2P,\r\n                    /* initiator */ false);\r\n\r\n            this.sessions[sess.sid] = sess;\r\n\r\n            this.eventEmitter.emit(XMPPEvents.CALL_INCOMING,\r\n                sess, $(iq).find('>jingle'), now);\r\n            break;\r\n        }\r\n        case 'session-accept': {\r\n            this.eventEmitter.emit(\r\n                XMPPEvents.CALL_ACCEPTED, sess, $(iq).find('>jingle'));\r\n            break;\r\n        }\r\n        case 'content-modify': {\r\n            sess.modifyContents($(iq).find('>jingle'));\r\n            break;\r\n        }\r\n        case 'transport-info': {\r\n            this.eventEmitter.emit(\r\n                XMPPEvents.TRANSPORT_INFO, sess, $(iq).find('>jingle'));\r\n            break;\r\n        }\r\n        case 'session-terminate': {\r\n            logger.log('terminating...', sess.sid);\r\n            let reasonCondition = null;\r\n            let reasonText = null;\r\n\r\n            if ($(iq).find('>jingle>reason').length) {\r\n                reasonCondition\r\n                    = $(iq).find('>jingle>reason>:first')[0].tagName;\r\n                reasonText = $(iq).find('>jingle>reason>text').text();\r\n            }\r\n            this.terminate(sess.sid, reasonCondition, reasonText);\r\n            this.eventEmitter.emit(XMPPEvents.CALL_ENDED,\r\n                sess, reasonCondition, reasonText);\r\n            break;\r\n        }\r\n        case 'transport-replace':\r\n            logger.info('(TIME) Start transport replace:\\t', now);\r\n            Statistics.sendAnalytics(createJingleEvent(\r\n                ACTION_JINGLE_TR_RECEIVED,\r\n                {\r\n                    p2p: isP2P,\r\n                    value: now\r\n                }));\r\n\r\n            sess.replaceTransport($(iq).find('>jingle'), () => {\r\n                const successTime = window.performance.now();\r\n\r\n                logger.info('(TIME) Transport replace success:\\t', successTime);\r\n                Statistics.sendAnalytics(createJingleEvent(\r\n                    ACTION_JINGLE_TR_SUCCESS,\r\n                    {\r\n                        p2p: isP2P,\r\n                        value: successTime\r\n                    }));\r\n            }, error => {\r\n                GlobalOnErrorHandler.callErrorHandler(error);\r\n                logger.error('Transport replace failed', error);\r\n                sess.sendTransportReject();\r\n            });\r\n            break;\r\n        case 'addsource': // FIXME: proprietary, un-jingleish\r\n        case 'source-add': // FIXME: proprietary\r\n            sess.addRemoteStream($(iq).find('>jingle>content'));\r\n            break;\r\n        case 'removesource': // FIXME: proprietary, un-jingleish\r\n        case 'source-remove': // FIXME: proprietary\r\n            sess.removeRemoteStream($(iq).find('>jingle>content'));\r\n            break;\r\n        default:\r\n            logger.warn('jingle action not implemented', action);\r\n            ack.attrs({ type: 'error' });\r\n            ack.c('error', { type: 'cancel' })\r\n                .c('bad-request',\r\n                    { xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas' })\r\n                .up();\r\n            break;\r\n        }\r\n        this.connection.send(ack);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Creates new <tt>JingleSessionPC</tt> meant to be used in a direct P2P\r\n     * connection, configured as 'initiator'.\r\n     * @param {string} me our JID\r\n     * @param {string} peer remote participant's JID\r\n     * @return {JingleSessionPC}\r\n     */\r\n    newP2PJingleSession(me, peer) {\r\n        const sess\r\n            = new JingleSessionPC(\r\n                RandomUtil.randomHexString(12),\r\n                me,\r\n                peer,\r\n                this.connection,\r\n                this.mediaConstraints,\r\n                this.p2pIceConfig,\r\n                /* P2P */ true,\r\n                /* initiator */ true);\r\n\r\n        this.sessions[sess.sid] = sess;\r\n\r\n        return sess;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param sid\r\n     * @param reasonCondition\r\n     * @param reasonText\r\n     */\r\n    terminate(sid, reasonCondition, reasonText) {\r\n        if (this.sessions.hasOwnProperty(sid)) {\r\n            if (this.sessions[sid].state !== 'ended') {\r\n                this.sessions[sid].onTerminated(reasonCondition, reasonText);\r\n            }\r\n            delete this.sessions[sid];\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    getStunAndTurnCredentials() {\r\n        // get stun and turn configuration from server via xep-0215\r\n        // uses time-limited credentials as described in\r\n        // http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00\r\n        //\r\n        // See https://modules.prosody.im/mod_turncredentials.html\r\n        // for a prosody module which implements this.\r\n        //\r\n        // Currently, this doesn't work with updateIce and therefore credentials\r\n        // with a long validity have to be fetched before creating the\r\n        // peerconnection.\r\n        // TODO: implement refresh via updateIce as described in\r\n        //      https://code.google.com/p/webrtc/issues/detail?id=1650\r\n        this.connection.sendIQ(\r\n            $iq({ type: 'get',\r\n                to: this.connection.domain })\r\n                .c('services', { xmlns: 'urn:xmpp:extdisco:1' }),\r\n            res => {\r\n                const iceservers = [];\r\n\r\n                $(res).find('>services>service').each((idx, el) => {\r\n                    // eslint-disable-next-line no-param-reassign\r\n                    el = $(el);\r\n                    const dict = {};\r\n                    const type = el.attr('type');\r\n\r\n                    switch (type) {\r\n                    case 'stun':\r\n                        dict.urls = `stun:${el.attr('host')}`;\r\n                        if (el.attr('port')) {\r\n                            dict.urls += `:${el.attr('port')}`;\r\n                        }\r\n                        iceservers.push(dict);\r\n                        break;\r\n                    case 'turn':\r\n                    case 'turns': {\r\n                        dict.urls = `${type}:`;\r\n                        const username = el.attr('username');\r\n\r\n                        // https://code.google.com/p/webrtc/issues/detail\r\n                        // ?id=1508\r\n\r\n                        if (username) {\r\n                            const match\r\n                                = navigator.userAgent.match(\r\n                                    /Chrom(e|ium)\\/([0-9]+)\\./);\r\n\r\n                            if (match && parseInt(match[2], 10) < 28) {\r\n                                dict.urls += `${username}@`;\r\n                            } else {\r\n                                // only works in M28\r\n                                dict.username = username;\r\n                            }\r\n                        }\r\n                        dict.urls += el.attr('host');\r\n                        const port = el.attr('port');\r\n\r\n                        if (port) {\r\n                            dict.urls += `:${el.attr('port')}`;\r\n                        }\r\n                        const transport = el.attr('transport');\r\n\r\n                        if (transport && transport !== 'udp') {\r\n                            dict.urls += `?transport=${transport}`;\r\n                        }\r\n\r\n                        dict.credential = el.attr('password')\r\n                                || dict.credential;\r\n                        iceservers.push(dict);\r\n                        break;\r\n                    }\r\n                    }\r\n                });\r\n\r\n                const options = this.xmpp.options;\r\n\r\n                if (options.useStunTurn) {\r\n                    // we want to filter and leave only tcp/turns candidates\r\n                    // which make sense for the jvb connections\r\n                    this.jvbIceConfig.iceServers\r\n                        = iceservers.filter(s => s.urls.startsWith('turns'));\r\n                }\r\n\r\n                if (options.p2p && options.p2p.useStunTurn) {\r\n                    this.p2pIceConfig.iceServers = iceservers;\r\n                }\r\n\r\n            }, err => {\r\n                logger.warn('getting turn credentials failed', err);\r\n                logger.warn('is mod_turncredentials or similar installed?');\r\n            });\r\n\r\n        // implement push?\r\n    }\r\n\r\n    /**\r\n     * Returns the data saved in 'updateLog' in a format to be logged.\r\n     */\r\n    getLog() {\r\n        const data = {};\r\n\r\n        Object.keys(this.sessions).forEach(sid => {\r\n            const session = this.sessions[sid];\r\n            const pc = session.peerconnection;\r\n\r\n            if (pc && pc.updateLog) {\r\n                // FIXME: should probably be a .dump call\r\n                data[`jingle_${sid}`] = {\r\n                    updateLog: pc.updateLog,\r\n                    stats: pc.stats,\r\n                    url: window.location.href\r\n                };\r\n            }\r\n        });\r\n\r\n        return data;\r\n    }\r\n}\r\n\r\n/* eslint-enable newline-per-chained-call */\r\n","import { Strophe } from 'strophe.js';\r\n\r\nimport ConnectionPlugin from './ConnectionPlugin';\r\n\r\n/**\r\n *  Logs raw stanzas and makes them available for download as JSON\r\n */\r\nclass StropheLogger extends ConnectionPlugin {\r\n    /**\r\n     *\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.log = [];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param connection\r\n     */\r\n    init(connection) {\r\n        super.init(connection);\r\n        this.connection.rawInput = this.logIncoming.bind(this);\r\n        this.connection.rawOutput = this.logOutgoing.bind(this);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param stanza\r\n     */\r\n    logIncoming(stanza) {\r\n        this.log.push([ new Date().getTime(), 'incoming', stanza ]);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param stanza\r\n     */\r\n    logOutgoing(stanza) {\r\n        this.log.push([ new Date().getTime(), 'outgoing', stanza ]);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport default function() {\r\n    Strophe.addConnectionPlugin('logger', new StropheLogger());\r\n}\r\n","import { getLogger } from 'jitsi-meet-logger';\r\nimport { $iq, Strophe } from 'strophe.js';\r\n\r\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\r\n\r\nimport ConnectionPlugin from './ConnectionPlugin';\r\n\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Ping every 10 sec\r\n */\r\nconst PING_INTERVAL = 10000;\r\n\r\n/**\r\n * Ping timeout error after 15 sec of waiting.\r\n */\r\nconst PING_TIMEOUT = 15000;\r\n\r\n/**\r\n * Will close the connection after 3 consecutive ping errors.\r\n */\r\nconst PING_THRESHOLD = 3;\r\n\r\n/**\r\n * The number of timestamps of send pings to keep.\r\n * The current value is 2 minutes.\r\n * @type {number} number of timestamps.\r\n */\r\nconst PING_TIMESTAMPS_TO_KEEP = 120000 / PING_INTERVAL;\r\n\r\n/**\r\n * XEP-0199 ping plugin.\r\n *\r\n * Registers \"urn:xmpp:ping\" namespace under Strophe.NS.PING.\r\n */\r\nexport default class PingConnectionPlugin extends ConnectionPlugin {\r\n    /**\r\n     * Contructs new object\r\n     * @param {XMPP} xmpp the xmpp module.\r\n     * @constructor\r\n     */\r\n    constructor(xmpp) {\r\n        super();\r\n        this.failedPings = 0;\r\n        this.xmpp = xmpp;\r\n        this.pingExecIntervals = new Array(PING_TIMESTAMPS_TO_KEEP);\r\n    }\r\n\r\n    /**\r\n     * Initializes the plugin. Method called by Strophe.\r\n     * @param connection Strophe connection instance.\r\n     */\r\n    init(connection) {\r\n        super.init(connection);\r\n        Strophe.addNamespace('PING', 'urn:xmpp:ping');\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    /**\r\n     * Sends \"ping\" to given <tt>jid</tt>\r\n     * @param jid the JID to which ping request will be sent.\r\n     * @param success callback called on success.\r\n     * @param error callback called on error.\r\n     * @param timeout ms how long are we going to wait for the response. On\r\n     * timeout <tt>error<//t> callback is called with undefined error argument.\r\n     */\r\n    ping(jid, success, error, timeout) {\r\n        this._addPingExecutionTimestamp();\r\n\r\n        const iq = $iq({\r\n            type: 'get',\r\n            to: jid\r\n        });\r\n\r\n        iq.c('ping', { xmlns: Strophe.NS.PING });\r\n        this.connection.sendIQ(iq, success, error, timeout);\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     * Starts to send ping in given interval to specified remote JID.\r\n     * This plugin supports only one such task and <tt>stopInterval</tt>\r\n     * must be called before starting a new one.\r\n     * @param remoteJid remote JID to which ping requests will be sent to.\r\n     * @param interval task interval in ms.\r\n     */\r\n    startInterval(remoteJid, interval = PING_INTERVAL) {\r\n        clearInterval(this.intervalId);\r\n        this.intervalId = window.setInterval(() => {\r\n            this.ping(remoteJid, () => {\r\n                this.failedPings = 0;\r\n            }, error => {\r\n                this.failedPings += 1;\r\n                const errmsg = `Ping ${error ? 'error' : 'timeout'}`;\r\n\r\n                if (this.failedPings >= PING_THRESHOLD) {\r\n                    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\r\n                    logger.error(errmsg, error);\r\n\r\n                    // FIXME it doesn't help to disconnect when 3rd PING\r\n                    // times out, it only stops Strophe from retrying.\r\n                    // Not really sure what's the right thing to do in that\r\n                    // situation, but just closing the connection makes no\r\n                    // sense.\r\n                    // self.connection.disconnect();\r\n                } else {\r\n                    logger.warn(errmsg, error);\r\n                }\r\n            }, PING_TIMEOUT);\r\n        }, interval);\r\n        logger.info(`XMPP pings will be sent every ${interval} ms`);\r\n    }\r\n\r\n    /**\r\n     * Stops current \"ping\"  interval task.\r\n     */\r\n    stopInterval() {\r\n        if (this.intervalId) {\r\n            window.clearInterval(this.intervalId);\r\n            this.intervalId = null;\r\n            this.failedPings = 0;\r\n            logger.info('Ping interval cleared');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds the current time to the array of send ping timestamps.\r\n     * @private\r\n     */\r\n    _addPingExecutionTimestamp() {\r\n        this.pingExecIntervals.push(new Date().getTime());\r\n\r\n        // keep array length to PING_TIMESTAMPS_TO_KEEP\r\n        if (this.pingExecIntervals.length > PING_TIMESTAMPS_TO_KEEP) {\r\n            this.pingExecIntervals.shift();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum time between the recent sent pings, if there is a\r\n     * big value it means the computer was inactive for some time(suspended).\r\n     * Checks the maximum gap between sending pings, considering and the\r\n     * current time. Trying to detect computer inactivity (sleep).\r\n     *\r\n     * @returns {int} the time ping was suspended, if it was not 0 is returned.\r\n     */\r\n    getPingSuspendTime() {\r\n        const pingIntervals = this.pingExecIntervals.slice();\r\n\r\n        // we need current time, as if ping was sent now\r\n        // if computer sleeps we will get correct interval after next\r\n        // scheduled ping, bet we sometimes need that interval before waiting\r\n        // for the next ping, on closing the connection on error.\r\n        pingIntervals.push(new Date().getTime());\r\n\r\n        let maxInterval = 0;\r\n        let previousTS = pingIntervals[0];\r\n\r\n        pingIntervals.forEach(e => {\r\n            const currentInterval = e - previousTS;\r\n\r\n            if (currentInterval > maxInterval) {\r\n                maxInterval = currentInterval;\r\n            }\r\n\r\n            previousTS = e;\r\n        });\r\n\r\n        // remove the interval between the ping sent\r\n        // this way in normal execution there is no suspend and the return\r\n        // will be 0 or close to 0.\r\n        maxInterval -= PING_INTERVAL;\r\n\r\n        // make sure we do not return less than 0\r\n        return Math.max(maxInterval, 0);\r\n    }\r\n}\r\n","/* global $ */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { $iq } from 'strophe.js';\r\n\r\nimport ConnectionPlugin from './ConnectionPlugin';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\nconst RAYO_XMLNS = 'urn:xmpp:rayo:1';\r\n\r\n/**\r\n *\r\n */\r\nexport default class RayoConnectionPlugin extends ConnectionPlugin {\r\n    /**\r\n     *\r\n     * @param connection\r\n     */\r\n    init(connection) {\r\n        super.init(connection);\r\n\r\n        this.connection.addHandler(\r\n            this.onRayo.bind(this), RAYO_XMLNS, 'iq', 'set', null, null);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param iq\r\n     */\r\n    onRayo(iq) {\r\n        logger.info('Rayo IQ', iq);\r\n    }\r\n\r\n    /* eslint-disable max-params */\r\n\r\n    /**\r\n     *\r\n     * @param to\r\n     * @param from\r\n     * @param roomName\r\n     * @param roomPass\r\n     * @param focusMucJid\r\n     */\r\n    dial(to, from, roomName, roomPass, focusMucJid) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!focusMucJid) {\r\n                reject(new Error('Internal error!'));\r\n\r\n                return;\r\n            }\r\n            const req = $iq({\r\n                type: 'set',\r\n                to: focusMucJid\r\n            });\r\n\r\n            req.c('dial', {\r\n                xmlns: RAYO_XMLNS,\r\n                to,\r\n                from\r\n            });\r\n            req.c('header', {\r\n                name: 'JvbRoomName',\r\n                value: roomName\r\n            }).up();\r\n\r\n            if (roomPass && roomPass.length) {\r\n                req.c('header', {\r\n                    name: 'JvbRoomPassword',\r\n                    value: roomPass\r\n                }).up();\r\n            }\r\n\r\n            this.connection.sendIQ(\r\n                req,\r\n                result => {\r\n                    logger.info('Dial result ', result);\r\n\r\n                    // eslint-disable-next-line newline-per-chained-call\r\n                    const resource = $(result).find('ref').attr('uri');\r\n\r\n                    this.callResource = resource.substr('xmpp:'.length);\r\n                    logger.info(`Received call resource: ${this.callResource}`);\r\n                    resolve();\r\n                },\r\n                error => {\r\n                    logger.info('Dial error ', error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /* eslint-enable max-params */\r\n\r\n    /**\r\n     *\r\n     */\r\n    hangup() {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.callResource) {\r\n                reject(new Error('No call in progress'));\r\n                logger.warn('No call in progress');\r\n\r\n                return;\r\n            }\r\n\r\n            const req = $iq({\r\n                type: 'set',\r\n                to: this.callResource\r\n            });\r\n\r\n            req.c('hangup', {\r\n                xmlns: RAYO_XMLNS\r\n            });\r\n\r\n            this.connection.sendIQ(req, result => {\r\n                logger.info('Hangup result ', result);\r\n                this.callResource = null;\r\n                resolve();\r\n            }, error => {\r\n                logger.info('Hangup error ', error);\r\n                this.callResource = null;\r\n                reject(new Error('Hangup error '));\r\n            });\r\n        });\r\n    }\r\n}\r\n","/* global __filename */\r\n/**\r\n * Strophe logger implementation. Logs from level WARN and above.\r\n */\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { Strophe } from 'strophe.js';\r\n\r\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * This is the last HTTP error status captured from Strophe debug logs.\r\n * The purpose of storing it is to distinguish between the network and\r\n * infrastructure reason for connection being dropped (see connectionHandler in\r\n * xmpp.js). The value will be cleared (-1) if the subsequent request succeeds\r\n * which means that the failure could be transient.\r\n *\r\n * FIXME in the latest Strophe (not released on npm) there is API to handle\r\n * particular HTTP errors, but there is no way to learn if the subsequent\r\n * request succeeded in order to tell if the error was one time incident or if\r\n * it was the reason for dropping the connection by Strophe (the connection is\r\n * dropped after 5 subsequent failures). Ideally Strophe should provide more\r\n * details about the reason on why the connection stopped.\r\n *\r\n * @type {number}\r\n */\r\nlet lastErrorStatus = -1;\r\n\r\n/**\r\n * A regular expression used to catch Strophe's log message indicating that the\r\n * last BOSH request was successful. When there is such message seen the\r\n * {@link lastErrorStatus} will be set back to '-1'.\r\n * @type {RegExp}\r\n */\r\nconst resetLastErrorStatusRegExpr = /request id \\d+.\\d+ got 200/;\r\n\r\n/**\r\n * A regular expression used to capture the current value of the BOSH request\r\n * error status (HTTP error code or '0' or something else).\r\n * @type {RegExp}\r\n */\r\nconst lastErrorStatusRegExpr\r\n    = /request errored, status: (\\d+), number of errors: \\d+/;\r\n\r\n/**\r\n *\r\n */\r\nexport default function() {\r\n\r\n    Strophe.log = function(level, msg) {\r\n        // Our global handler reports uncaught errors to the stats which may\r\n        // interpret those as partial call failure.\r\n        // Strophe log entry about secondary request timeout does not mean that\r\n        // it's a final failure(the request will be restarted), so we lower it's\r\n        // level here to a warning.\r\n        logger.trace('Strophe', level, msg);\r\n        if (typeof msg === 'string'\r\n                && msg.indexOf('Request ') !== -1\r\n                && msg.indexOf('timed out (secondary), restarting') !== -1) {\r\n            // eslint-disable-next-line no-param-reassign\r\n            level = Strophe.LogLevel.WARN;\r\n        }\r\n\r\n        /* eslint-disable no-case-declarations */\r\n        switch (level) {\r\n        case Strophe.LogLevel.DEBUG:\r\n            // The log message which reports successful status is logged on\r\n            // Strophe's DEBUG level.\r\n            if (lastErrorStatus !== -1\r\n                    && resetLastErrorStatusRegExpr.test(msg)) {\r\n                logger.debug('Reset lastErrorStatus');\r\n                lastErrorStatus = -1;\r\n            }\r\n            break;\r\n        case Strophe.LogLevel.WARN:\r\n            logger.warn(`Strophe: ${msg}`);\r\n            const errStatusCapture = lastErrorStatusRegExpr.exec(msg);\r\n\r\n            if (errStatusCapture && errStatusCapture.length === 2) {\r\n                lastErrorStatus = parseInt(errStatusCapture[1], 10);\r\n                logger.debug(`lastErrorStatus set to: ${lastErrorStatus}`);\r\n            }\r\n            break;\r\n        case Strophe.LogLevel.ERROR:\r\n        case Strophe.LogLevel.FATAL:\r\n            // eslint-disable-next-line no-param-reassign\r\n            msg = `Strophe: ${msg}`;\r\n            GlobalOnErrorHandler.callErrorHandler(new Error(msg));\r\n            logger.error(msg);\r\n            break;\r\n        }\r\n\r\n        /* eslint-enable no-case-declarations */\r\n    };\r\n\r\n    /**\r\n     * Returns error status (HTTP error code) of the last BOSH request.\r\n     *\r\n     * @return {number} HTTP error code, '0' for unknown or \"god knows what\"\r\n     * (this is a hack).\r\n     */\r\n    Strophe.getLastErrorStatus = function() {\r\n        return lastErrorStatus;\r\n    };\r\n\r\n    Strophe.getStatusString = function(status) {\r\n        switch (status) {\r\n        case Strophe.Status.BINDREQUIRED:\r\n            return 'BINDREQUIRED';\r\n        case Strophe.Status.ERROR:\r\n            return 'ERROR';\r\n        case Strophe.Status.CONNECTING:\r\n            return 'CONNECTING';\r\n        case Strophe.Status.CONNFAIL:\r\n            return 'CONNFAIL';\r\n        case Strophe.Status.AUTHENTICATING:\r\n            return 'AUTHENTICATING';\r\n        case Strophe.Status.AUTHFAIL:\r\n            return 'AUTHFAIL';\r\n        case Strophe.Status.CONNECTED:\r\n            return 'CONNECTED';\r\n        case Strophe.Status.DISCONNECTED:\r\n            return 'DISCONNECTED';\r\n        case Strophe.Status.DISCONNECTING:\r\n            return 'DISCONNECTING';\r\n        case Strophe.Status.ATTACHED:\r\n            return 'ATTACHED';\r\n        default:\r\n            return 'unknown';\r\n        }\r\n    };\r\n}\r\n","/* global $ */\r\n\r\nimport { getLogger } from 'jitsi-meet-logger';\r\nimport { $msg, Strophe } from 'strophe.js';\r\nimport 'strophejs-plugin-disco';\r\n\r\nimport RandomUtil from '../util/RandomUtil';\r\nimport * as JitsiConnectionErrors from '../../JitsiConnectionErrors';\r\nimport * as JitsiConnectionEvents from '../../JitsiConnectionEvents';\r\nimport browser from '../browser';\r\nimport MucConnectionPlugin from './strophe.emuc';\r\nimport JingleConnectionPlugin from './strophe.jingle';\r\nimport initStropheUtil from './strophe.util';\r\nimport PingConnectionPlugin from './strophe.ping';\r\nimport RayoConnectionPlugin from './strophe.rayo';\r\nimport initStropheLogger from './strophe.logger';\r\nimport Listenable from '../util/Listenable';\r\nimport Caps from './Caps';\r\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\r\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\r\nimport XmppConnection from './XmppConnection';\r\n\r\nconst logger = getLogger(__filename);\r\n\r\n/**\r\n * Creates XMPP connection.\r\n *\r\n * @param {Object} options\r\n * @param {string} [options.token] - JWT token used for authentication(JWT authentication module must be enabled in\r\n * Prosody).\r\n * @param {string} options.serviceUrl - The service URL for XMPP connection.\r\n * @param {string} options.enableWebsocketResume - True to enable stream resumption.\r\n * @param {number} [options.websocketKeepAlive] - See {@link XmppConnection} constructor.\r\n * @returns {XmppConnection}\r\n */\r\nfunction createConnection({ enableWebsocketResume, serviceUrl = '/http-bind', token, websocketKeepAlive }) {\r\n    // Append token as URL param\r\n    if (token) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        serviceUrl += `${serviceUrl.indexOf('?') === -1 ? '?' : '&'}token=${token}`;\r\n    }\r\n\r\n    return new XmppConnection({\r\n        enableWebsocketResume,\r\n        serviceUrl,\r\n        websocketKeepAlive\r\n    });\r\n}\r\n\r\n/**\r\n * Initializes Strophe plugins that need to work with Strophe.Connection directly rather than the lib-jitsi-meet's\r\n * {@link XmppConnection} wrapper.\r\n *\r\n * @returns {void}\r\n */\r\nfunction initStropheNativePlugins() {\r\n    initStropheUtil();\r\n    initStropheLogger();\r\n}\r\n\r\n// FIXME: remove once we have a default config template. -saghul\r\n/**\r\n * A list of ice servers to use by default for P2P.\r\n */\r\nexport const DEFAULT_STUN_SERVERS = [\r\n    { urls: 'stun:stun.l.google.com:19302' },\r\n    { urls: 'stun:stun1.l.google.com:19302' },\r\n    { urls: 'stun:stun2.l.google.com:19302' }\r\n];\r\n\r\n/**\r\n * The name of the field used to recognize a chat message as carrying a JSON\r\n * payload from another endpoint.\r\n * If the json-message of a chat message contains a valid JSON object, and\r\n * the JSON has this key, then it is a valid json-message to be sent.\r\n */\r\nexport const JITSI_MEET_MUC_TYPE = 'type';\r\n\r\n/**\r\n *\r\n */\r\nexport default class XMPP extends Listenable {\r\n    /**\r\n     * FIXME describe all options\r\n     * @param {Object} options\r\n     * @param {String} options.serviceUrl - URL passed to the XMPP client which will be used to establish XMPP\r\n     * connection with the server.\r\n     * @param {String} options.bosh - Deprecated, use {@code serviceUrl}.\r\n     * @param {boolean} options.enableWebsocketResume - Enables XEP-0198 stream management which will make the XMPP\r\n     * module try to resume the session in case the Websocket connection breaks.\r\n     * @param {number} [options.websocketKeepAlive] - The websocket keep alive interval. See {@link XmppConnection}\r\n     * constructor for more details.\r\n     * @param {Array<Object>} options.p2pStunServers see {@link JingleConnectionPlugin} for more details.\r\n     * @param token\r\n     */\r\n    constructor(options, token) {\r\n        super();\r\n        this.connection = null;\r\n        this.disconnectInProgress = false;\r\n        this.connectionTimes = {};\r\n        this.options = options;\r\n        this.token = token;\r\n        this.authenticatedUser = false;\r\n\r\n        initStropheNativePlugins();\r\n\r\n        this.connection = createConnection({\r\n            enableWebsocketResume: options.enableWebsocketResume,\r\n\r\n            // FIXME remove deprecated bosh option at some point\r\n            serviceUrl: options.serviceUrl || options.bosh,\r\n            token,\r\n            websocketKeepAlive: options.websocketKeepAlive\r\n        });\r\n\r\n        this._initStrophePlugins();\r\n\r\n        this.caps = new Caps(this.connection, this.options.clientNode);\r\n\r\n        // Initialize features advertised in disco-info\r\n        this.initFeaturesList();\r\n\r\n        // Setup a disconnect on unload as a way to facilitate API consumers. It\r\n        // sounds like they would want that. A problem for them though may be if\r\n        // they wanted to utilize the connected connection in an unload handler\r\n        // of their own. However, it should be fairly easy for them to do that\r\n        // by registering their unload handler before us.\r\n        $(window).on('beforeunload unload', ev => {\r\n            this.disconnect(ev).catch(() => {\r\n                // ignore errors in order to not brake the unload.\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initializes the list of feature advertised through the disco-info\r\n     * mechanism.\r\n     */\r\n    initFeaturesList() {\r\n        // http://xmpp.org/extensions/xep-0167.html#support\r\n        // http://xmpp.org/extensions/xep-0176.html#support\r\n        this.caps.addFeature('urn:xmpp:jingle:1');\r\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:1');\r\n        this.caps.addFeature('urn:xmpp:jingle:transports:ice-udp:1');\r\n        this.caps.addFeature('urn:xmpp:jingle:apps:dtls:0');\r\n        this.caps.addFeature('urn:xmpp:jingle:transports:dtls-sctp:1');\r\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:audio');\r\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:video');\r\n\r\n        if (!this.options.disableRtx && browser.supportsRtx()) {\r\n            this.caps.addFeature('urn:ietf:rfc:4588');\r\n        }\r\n\r\n        // this is dealt with by SDP O/A so we don't need to announce this\r\n        // XEP-0293\r\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtcp-fb:0');\r\n        // XEP-0294\r\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtp-hdrext:0');\r\n\r\n        this.caps.addFeature('urn:ietf:rfc:5761'); // rtcp-mux\r\n        this.caps.addFeature('urn:ietf:rfc:5888'); // a=group, e.g. bundle\r\n\r\n        // this.caps.addFeature('urn:ietf:rfc:5576'); // a=ssrc\r\n\r\n        // Enable Lipsync ?\r\n        if (browser.isChrome() && this.options.enableLipSync === true) {\r\n            logger.info('Lip-sync enabled !');\r\n            this.caps.addFeature('http://jitsi.org/meet/lipsync');\r\n        }\r\n\r\n        if (this.connection.rayo) {\r\n            this.caps.addFeature('urn:xmpp:rayo:client:1');\r\n        }\r\n\r\n        if (browser.supportsInsertableStreams()) {\r\n            this.caps.addFeature('https://jitsi.org/meet/e2ee');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns {@code true} if the PING functionality is supported by the server\r\n     * or {@code false} otherwise.\r\n     * @returns {boolean}\r\n     */\r\n    isPingSupported() {\r\n        return this._pingSupported !== false;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    getConnection() {\r\n        return this.connection;\r\n    }\r\n\r\n    /**\r\n     * Receive connection status changes and handles them.\r\n     *\r\n     * @param {Object} credentials\r\n     * @param {string} credentials.jid - The user's XMPP ID passed to the\r\n     * connect method. For example, 'user@xmpp.com'.\r\n     * @param {string} credentials.password - The password passed to the connect\r\n     * method.\r\n     * @param {string} status - One of Strophe's connection status strings.\r\n     * @param {string} [msg] - The connection error message provided by Strophe.\r\n     */\r\n    connectionHandler(credentials = {}, status, msg) {\r\n        const now = window.performance.now();\r\n        const statusStr = Strophe.getStatusString(status).toLowerCase();\r\n\r\n        this.connectionTimes[statusStr] = now;\r\n        logger.log(\r\n            `(TIME) Strophe ${statusStr}${msg ? `[${msg}]` : ''}:\\t`,\r\n            now);\r\n\r\n        this.eventEmitter.emit(XMPPEvents.CONNECTION_STATUS_CHANGED, credentials, status, msg);\r\n        if (status === Strophe.Status.CONNECTED\r\n            || status === Strophe.Status.ATTACHED) {\r\n            if (this.options.useStunTurn\r\n                || (this.options.p2p && this.options.p2p.useStunTurn)) {\r\n                this.connection.jingle.getStunAndTurnCredentials();\r\n            }\r\n\r\n            logger.info(`My Jabber ID: ${this.connection.jid}`);\r\n\r\n            // XmppConnection emits CONNECTED again on reconnect - a good opportunity to clear any \"last error\" flags\r\n            this._resetState();\r\n\r\n            // Schedule ping ?\r\n            const pingJid = this.connection.domain;\r\n\r\n            // FIXME no need to do it again on stream resume\r\n            this.caps.getFeaturesAndIdentities(pingJid)\r\n                .then(({ features, identities }) => {\r\n                    if (features.has(Strophe.NS.PING)) {\r\n                        this._pingSupported = true;\r\n                        this.connection.ping.startInterval(pingJid);\r\n                    } else {\r\n                        logger.warn(`Ping NOT supported by ${pingJid}`);\r\n                    }\r\n\r\n                    // check for speakerstats\r\n                    identities.forEach(identity => {\r\n                        if (identity.type === 'speakerstats') {\r\n                            this.speakerStatsComponentAddress = identity.name;\r\n                        }\r\n\r\n                        if (identity.type === 'conference_duration') {\r\n                            this.conferenceDurationComponentAddress = identity.name;\r\n                        }\r\n                    });\r\n\r\n                    if (this.speakerStatsComponentAddress\r\n                        || this.conferenceDurationComponentAddress) {\r\n                        this.connection.addHandler(\r\n                            this._onPrivateMessage.bind(this), null,\r\n                            'message', null, null);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    const errmsg = 'Feature discovery error';\r\n\r\n                    GlobalOnErrorHandler.callErrorHandler(\r\n                        new Error(`${errmsg}: ${error}`));\r\n                    logger.error(errmsg, error);\r\n                });\r\n\r\n            if (credentials.password) {\r\n                this.authenticatedUser = true;\r\n            }\r\n            if (this.connection && this.connection.connected\r\n                && Strophe.getResourceFromJid(this.connection.jid)) {\r\n                // .connected is true while connecting?\r\n                // this.connection.send($pres());\r\n                this.eventEmitter.emit(\r\n                    JitsiConnectionEvents.CONNECTION_ESTABLISHED,\r\n                    Strophe.getResourceFromJid(this.connection.jid));\r\n            }\r\n        } else if (status === Strophe.Status.CONNFAIL) {\r\n            if (msg === 'x-strophe-bad-non-anon-jid') {\r\n                this.anonymousConnectionFailed = true;\r\n            } else {\r\n                this.connectionFailed = true;\r\n            }\r\n            this.lastErrorMsg = msg;\r\n            if (msg === 'giving-up') {\r\n                this.eventEmitter.emit(\r\n                    JitsiConnectionEvents.CONNECTION_FAILED,\r\n                    JitsiConnectionErrors.OTHER_ERROR, msg);\r\n            }\r\n        } else if (status === Strophe.Status.ERROR) {\r\n            this.lastErrorMsg = msg;\r\n        } else if (status === Strophe.Status.DISCONNECTED) {\r\n            // Stop ping interval\r\n            this.connection.ping.stopInterval();\r\n            const wasIntentionalDisconnect = Boolean(this.disconnectInProgress);\r\n            const errMsg = msg || this.lastErrorMsg;\r\n\r\n            if (this.anonymousConnectionFailed) {\r\n                // prompt user for username and password\r\n                this.eventEmitter.emit(\r\n                    JitsiConnectionEvents.CONNECTION_FAILED,\r\n                    JitsiConnectionErrors.PASSWORD_REQUIRED);\r\n            } else if (this.connectionFailed) {\r\n                this.eventEmitter.emit(\r\n                    JitsiConnectionEvents.CONNECTION_FAILED,\r\n                    JitsiConnectionErrors.OTHER_ERROR,\r\n                    errMsg,\r\n                    undefined, /* credentials */\r\n                    this._getConnectionFailedReasonDetails());\r\n            } else if (wasIntentionalDisconnect) {\r\n                this.eventEmitter.emit(\r\n                    JitsiConnectionEvents.CONNECTION_DISCONNECTED, errMsg);\r\n            } else {\r\n                // XXX if Strophe drops the connection while not being asked to,\r\n                // it means that most likely some serious error has occurred.\r\n                // One currently known case is when a BOSH request fails for\r\n                // more than 4 times. The connection is dropped without\r\n                // supplying a reason(error message/event) through the API.\r\n                logger.error('XMPP connection dropped!');\r\n\r\n                // XXX if the last request error is within 5xx range it means it\r\n                // was a server failure\r\n                const lastErrorStatus = Strophe.getLastErrorStatus();\r\n\r\n                if (lastErrorStatus >= 500 && lastErrorStatus < 600) {\r\n                    this.eventEmitter.emit(\r\n                        JitsiConnectionEvents.CONNECTION_FAILED,\r\n                        JitsiConnectionErrors.SERVER_ERROR,\r\n                        errMsg || 'server-error',\r\n                        /* credentials */ undefined,\r\n                        this._getConnectionFailedReasonDetails());\r\n                } else {\r\n                    this.eventEmitter.emit(\r\n                        JitsiConnectionEvents.CONNECTION_FAILED,\r\n                        JitsiConnectionErrors.CONNECTION_DROPPED_ERROR,\r\n                        errMsg || 'connection-dropped-error',\r\n                        /* credentials */ undefined,\r\n                        this._getConnectionFailedReasonDetails());\r\n                }\r\n            }\r\n        } else if (status === Strophe.Status.AUTHFAIL) {\r\n            // wrong password or username, prompt user\r\n            this.eventEmitter.emit(\r\n                JitsiConnectionEvents.CONNECTION_FAILED,\r\n                JitsiConnectionErrors.PASSWORD_REQUIRED,\r\n                msg,\r\n                credentials);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param jid\r\n     * @param password\r\n     */\r\n    _connect(jid, password) {\r\n        // connection.connect() starts the connection process.\r\n        //\r\n        // As the connection process proceeds, the user supplied callback will\r\n        // be triggered multiple times with status updates. The callback should\r\n        // take two arguments - the status code and the error condition.\r\n        //\r\n        // The status code will be one of the values in the Strophe.Status\r\n        // constants. The error condition will be one of the conditions defined\r\n        // in RFC 3920 or the condition ‘strophe-parsererror’.\r\n        //\r\n        // The Parameters wait, hold and route are optional and only relevant\r\n        // for BOSH connections. Please see XEP 124 for a more detailed\r\n        // explanation of the optional parameters.\r\n        //\r\n        // Connection status constants for use by the connection handler\r\n        // callback.\r\n        //\r\n        //  Status.ERROR - An error has occurred (websockets specific)\r\n        //  Status.CONNECTING - The connection is currently being made\r\n        //  Status.CONNFAIL - The connection attempt failed\r\n        //  Status.AUTHENTICATING - The connection is authenticating\r\n        //  Status.AUTHFAIL - The authentication attempt failed\r\n        //  Status.CONNECTED - The connection has succeeded\r\n        //  Status.DISCONNECTED - The connection has been terminated\r\n        //  Status.DISCONNECTING - The connection is currently being terminated\r\n        //  Status.ATTACHED - The connection has been attached\r\n\r\n        this._resetState();\r\n        this.connection.connect(\r\n            jid,\r\n            password,\r\n            this.connectionHandler.bind(this, {\r\n                jid,\r\n                password\r\n            }));\r\n    }\r\n\r\n    /**\r\n     * Attach to existing connection. Can be used for optimizations. For\r\n     * example: if the connection is created on the server we can attach to it\r\n     * and start using it.\r\n     *\r\n     * @param options {object} connecting options - rid, sid, jid and password.\r\n     */\r\n    attach(options) {\r\n        this._resetState();\r\n        const now = this.connectionTimes.attaching = window.performance.now();\r\n\r\n        logger.log('(TIME) Strophe Attaching:\\t', now);\r\n        this.connection.attach(options.jid, options.sid,\r\n            parseInt(options.rid, 10) + 1,\r\n            this.connectionHandler.bind(this, {\r\n                jid: options.jid,\r\n                password: options.password\r\n            }));\r\n    }\r\n\r\n    /**\r\n     * Resets any state/flag before starting a new connection.\r\n     * @private\r\n     */\r\n    _resetState() {\r\n        this.anonymousConnectionFailed = false;\r\n        this.connectionFailed = false;\r\n        this.lastErrorMsg = undefined;\r\n        this.disconnectInProgress = undefined;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param jid\r\n     * @param password\r\n     */\r\n    connect(jid, password) {\r\n        if (!jid) {\r\n            const { anonymousdomain, domain } = this.options.hosts;\r\n            let configDomain = anonymousdomain || domain;\r\n\r\n            // Force authenticated domain if room is appended with '?login=true'\r\n            // or if we're joining with the token\r\n\r\n            // FIXME Do not rely on window.location because (1) React Native\r\n            // does not have a window.location by default and (2) here we cannot\r\n            // know for sure that query/search has not be stripped from\r\n            // window.location by the time the following executes.\r\n            const { location } = window;\r\n\r\n            if (anonymousdomain) {\r\n                const search = location && location.search;\r\n\r\n                if ((search && search.indexOf('login=true') !== -1)\r\n                        || this.token) {\r\n                    configDomain = domain;\r\n                }\r\n            }\r\n\r\n            // eslint-disable-next-line no-param-reassign\r\n            jid = configDomain || (location && location.hostname);\r\n        }\r\n\r\n        return this._connect(jid, password);\r\n    }\r\n\r\n    /**\r\n     * Joins or creates a muc with the provided jid, created from the passed\r\n     * in room name and muc host and onCreateResource result.\r\n     *\r\n     * @param {string} roomName - The name of the muc to join.\r\n     * @param {Object} options - Configuration for how to join the muc.\r\n     * @param {Function} [onCreateResource] - Callback to invoke when a resource\r\n     * is to be added to the jid.\r\n     * @returns {Promise} Resolves with an instance of a strophe muc.\r\n     */\r\n    createRoom(roomName, options, onCreateResource) {\r\n        let roomjid = `${roomName}@${this.options.hosts.muc}/`;\r\n\r\n        const mucNickname = onCreateResource\r\n            ? onCreateResource(this.connection.jid, this.authenticatedUser)\r\n            : RandomUtil.randomHexString(8).toLowerCase();\r\n\r\n        logger.info(`JID ${this.connection.jid} using MUC nickname ${mucNickname}`);\r\n        roomjid += mucNickname;\r\n\r\n        return this.connection.emuc.createRoom(roomjid, null, options);\r\n    }\r\n\r\n    /**\r\n     * Returns the jid of the participant associated with the Strophe connection.\r\n     *\r\n     * @returns {string} The jid of the participant.\r\n     */\r\n    getJid() {\r\n        return this.connection.jid;\r\n    }\r\n\r\n    /**\r\n     * Returns the logs from strophe.jingle.\r\n     * @returns {Object}\r\n     */\r\n    getJingleLog() {\r\n        const jingle = this.connection.jingle;\r\n\r\n\r\n        return jingle ? jingle.getLog() : {};\r\n    }\r\n\r\n    /**\r\n     * Returns the logs from strophe.\r\n     */\r\n    getXmppLog() {\r\n        return (this.connection.logger || {}).log || null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    dial(...args) {\r\n        this.connection.rayo.dial(...args);\r\n    }\r\n\r\n    /**\r\n     * Pings the server. Remember to check {@link isPingSupported} before using\r\n     * this method.\r\n     * @param timeout how many ms before a timeout should occur.\r\n     * @returns {Promise} resolved on ping success and reject on an error or\r\n     * a timeout.\r\n     */\r\n    ping(timeout) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.isPingSupported()) {\r\n                this.connection.ping\r\n                    .ping(this.connection.domain, resolve, reject, timeout);\r\n            } else {\r\n                reject('PING operation is not supported by the server');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    getSessions() {\r\n        return this.connection.jingle.sessions;\r\n    }\r\n\r\n    /**\r\n     * Disconnects this from the XMPP server (if this is connected).\r\n     *\r\n     * @param {Object} ev - Optionally, the event which triggered the necessity to\r\n     * disconnect from the XMPP server (e.g. beforeunload, unload).\r\n     * @returns {Promise} - Resolves when the disconnect process is finished or rejects with an error.\r\n     */\r\n    disconnect(ev) {\r\n        if (this.disconnectInProgress) {\r\n            return this.disconnectInProgress;\r\n        } else if (!this.connection) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        this.disconnectInProgress = new Promise(resolve => {\r\n            const disconnectListener = (credentials, status) => {\r\n                if (status === Strophe.Status.DISCONNECTED) {\r\n                    resolve();\r\n                    this.eventEmitter.removeListener(XMPPEvents.CONNECTION_STATUS_CHANGED, disconnectListener);\r\n                }\r\n            };\r\n\r\n            this.eventEmitter.on(XMPPEvents.CONNECTION_STATUS_CHANGED, disconnectListener);\r\n        });\r\n\r\n        this._cleanupXmppConnection(ev);\r\n\r\n        return this.disconnectInProgress;\r\n    }\r\n\r\n    /**\r\n     * The method is supposed to gracefully close the XMPP connection and the main goal is to make sure that the current\r\n     * participant will be removed from the conference XMPP MUC, so that it doesn't leave a \"ghost\" participant behind.\r\n     *\r\n     * @param {Object} ev - Optionally, the event which triggered the necessity to disconnect from the XMPP server\r\n     * (e.g. beforeunload, unload).\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    _cleanupXmppConnection(ev) {\r\n        // XXX Strophe is asynchronously sending by default. Unfortunately, that means that there may not be enough time\r\n        // to send an unavailable presence or disconnect at all. Switching Strophe to synchronous sending is not much of\r\n        // an option because it may lead to a noticeable delay in navigating away from the current location. As\r\n        // a compromise, we will try to increase the chances of sending an unavailable presence and/or disconnecting\r\n        // within the short time span that we have upon unloading by invoking flush() on the connection. We flush() once\r\n        // before disconnect() in order to attempt to have its unavailable presence at the top of the send queue. We\r\n        // flush() once more after disconnect() in order to attempt to have its unavailable presence sent as soon as\r\n        // possible.\r\n        !this.connection.isUsingWebSocket && this.connection.flush();\r\n\r\n        if (!this.connection.isUsingWebSocket && ev !== null && typeof ev !== 'undefined') {\r\n            const evType = ev.type;\r\n\r\n            if (evType === 'beforeunload' || evType === 'unload') {\r\n                // XXX Whatever we said above, synchronous sending is the best (known) way to properly disconnect from\r\n                // the XMPP server. Consequently, it may be fine to have the source code and comment it in or out\r\n                // depending on whether we want to run with it for some time.\r\n                this.connection.options.sync = true;\r\n\r\n                // This is needed in some browsers where sync xhr sending is disabled by default on unload.\r\n                if (this.connection.sendUnavailableBeacon()) {\r\n\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.connection.disconnect();\r\n\r\n        if (this.connection.options.sync !== true) {\r\n            this.connection.flush();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    _initStrophePlugins() {\r\n        const iceConfig = {\r\n            jvb: { iceServers: [ ] },\r\n            p2p: { iceServers: [ ] }\r\n        };\r\n\r\n        const p2pStunServers = (this.options.p2p\r\n            && this.options.p2p.stunServers) || DEFAULT_STUN_SERVERS;\r\n\r\n        if (Array.isArray(p2pStunServers)) {\r\n            logger.info('P2P STUN servers: ', p2pStunServers);\r\n            iceConfig.p2p.iceServers = p2pStunServers;\r\n        }\r\n\r\n        if (this.options.p2p && this.options.p2p.iceTransportPolicy) {\r\n            logger.info('P2P ICE transport policy: ',\r\n                this.options.p2p.iceTransportPolicy);\r\n\r\n            iceConfig.p2p.iceTransportPolicy\r\n                = this.options.p2p.iceTransportPolicy;\r\n        }\r\n\r\n        this.connection.addConnectionPlugin('emuc', new MucConnectionPlugin(this));\r\n        this.connection.addConnectionPlugin('jingle', new JingleConnectionPlugin(this, this.eventEmitter, iceConfig));\r\n        this.connection.addConnectionPlugin('ping', new PingConnectionPlugin(this));\r\n        this.connection.addConnectionPlugin('rayo', new RayoConnectionPlugin());\r\n    }\r\n\r\n    /**\r\n     * Returns details about connection failure. Shard change or is it after\r\n     * suspend.\r\n     * @returns {object} contains details about a connection failure.\r\n     * @private\r\n     */\r\n    _getConnectionFailedReasonDetails() {\r\n        const details = {};\r\n\r\n        // check for moving between shard if information is available\r\n        if (this.options.deploymentInfo\r\n            && this.options.deploymentInfo.shard\r\n            && this.connection.lastResponseHeaders) {\r\n\r\n            // split headers by line\r\n            const headersArr = this.connection.lastResponseHeaders\r\n                .trim().split(/[\\r\\n]+/);\r\n            const headers = {};\r\n\r\n            headersArr.forEach(line => {\r\n                const parts = line.split(': ');\r\n                const header = parts.shift();\r\n                const value = parts.join(': ');\r\n\r\n                headers[header] = value;\r\n            });\r\n\r\n            /* eslint-disable camelcase */\r\n            details.shard_changed\r\n                = this.options.deploymentInfo.shard\r\n                    !== headers['x-jitsi-shard'];\r\n            /* eslint-enable camelcase */\r\n        }\r\n\r\n        /* eslint-disable camelcase */\r\n        // check for possible suspend\r\n        details.suspend_time = this.connection.ping.getPingSuspendTime();\r\n        details.time_since_last_success = this.connection.getTimeSinceLastSuccess();\r\n        /* eslint-enable camelcase */\r\n\r\n        return details;\r\n    }\r\n\r\n    /**\r\n     * Notifies speaker stats component if available that we are the new\r\n     * dominant speaker in the conference.\r\n     * @param {String} roomJid - The room jid where the speaker event occurred.\r\n     */\r\n    sendDominantSpeakerEvent(roomJid) {\r\n        // no speaker stats component advertised\r\n        if (!this.speakerStatsComponentAddress || !roomJid) {\r\n            return;\r\n        }\r\n\r\n        const msg = $msg({ to: this.speakerStatsComponentAddress });\r\n\r\n        msg.c('speakerstats', {\r\n            xmlns: 'http://jitsi.org/jitmeet',\r\n            room: roomJid })\r\n            .up();\r\n\r\n        this.connection.send(msg);\r\n    }\r\n\r\n    /**\r\n     * Check if the given argument is a valid JSON ENDPOINT_MESSAGE string by\r\n     * parsing it and checking if it has a field called 'type'.\r\n     *\r\n     * @param {string} jsonString check if this string is a valid json string\r\n     * and contains the special structure.\r\n     * @returns {boolean, object} if given object is a valid JSON string, return\r\n     * the json object. Otherwise, returns false.\r\n     */\r\n    tryParseJSONAndVerify(jsonString) {\r\n        try {\r\n            const json = JSON.parse(jsonString);\r\n\r\n            // Handle non-exception-throwing cases:\r\n            // Neither JSON.parse(false) or JSON.parse(1234) throw errors,\r\n            // hence the type-checking,\r\n            // but... JSON.parse(null) returns null, and\r\n            // typeof null === \"object\",\r\n            // so we must check for that, too.\r\n            // Thankfully, null is falsey, so this suffices:\r\n            if (json && typeof json === 'object') {\r\n                const type = json[JITSI_MEET_MUC_TYPE];\r\n\r\n                if (typeof type !== 'undefined') {\r\n                    return json;\r\n                }\r\n\r\n                logger.debug('parsing valid json but does not have correct '\r\n                    + 'structure', 'topic: ', type);\r\n            }\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * A private message is received, message that is not addressed to the muc.\r\n     * We expect private message coming from plugins component if it is\r\n     * enabled and running.\r\n     *\r\n     * @param {string} msg - The message.\r\n     */\r\n    _onPrivateMessage(msg) {\r\n        const from = msg.getAttribute('from');\r\n\r\n        if (!(from === this.speakerStatsComponentAddress\r\n            || from === this.conferenceDurationComponentAddress)) {\r\n            return;\r\n        }\r\n\r\n        const jsonMessage = $(msg).find('>json-message')\r\n            .text();\r\n        const parsedJson = this.tryParseJSONAndVerify(jsonMessage);\r\n\r\n        if (parsedJson\r\n            && parsedJson[JITSI_MEET_MUC_TYPE] === 'speakerstats'\r\n            && parsedJson.users) {\r\n            this.eventEmitter.emit(\r\n                XMPPEvents.SPEAKER_STATS_RECEIVED, parsedJson.users);\r\n        }\r\n\r\n        if (parsedJson\r\n            && parsedJson[JITSI_MEET_MUC_TYPE] === 'conference_duration'\r\n            && parsedJson.created_timestamp) {\r\n            this.eventEmitter.emit(\r\n                XMPPEvents.CONFERENCE_TIMESTAMP_RECEIVED, parsedJson.created_timestamp);\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","/* Copyright @ 2015 - Present, 8x8 Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './interop';\n","/* Copyright @ 2015 - Present, 8x8 Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport clonedeep from 'lodash.clonedeep';\nimport transform from './transform.js';\n\nconst PLAN_B_MIDS = [ 'audio', 'video', 'data' ];\nconst findSimGroup = ssrcGroup => ssrcGroup.find(grp => grp.semantics === 'SIM');\nconst findFidGroup = ssrcGroup => ssrcGroup.find(grp => grp.semantics === 'FID');\n\n/**\n * Add the ssrcs of the SIM group and their corresponding FID group ssrcs\n * to the m-line.\n * @param {Object} mLine - The m-line to which ssrcs have to be added.\n * @param {Object} simGroup - The SIM group whose ssrcs have to be added to\n * the m-line.\n * @param {Object} sourceGroups - inverted source-group map.\n * @param {Array<Object>} sourceList - array containing all the sources.\n */\nfunction addSimGroupSources(mLine, simGroup, sourceGroups, sourceList) {\n    if (!mLine || !simGroup) {\n        return;\n    }\n    const findSourcebyId = src => sourceList.find(source => source.id.toString() === src);\n\n    simGroup.ssrcs.forEach(src => {\n        mLine.sources.push(findSourcebyId(src));\n\n        // find the related FID group member for this ssrc.\n        const relatedFidGroup = sourceGroups[parseInt(src, 10)].find(grp => grp.semantics === 'FID');\n\n        if (relatedFidGroup) {\n            const relatedSsrc = relatedFidGroup.ssrcs.find(s => s !== src);\n\n            mLine.sources.push(findSourcebyId(relatedSsrc));\n            mLine.ssrcGroups.push(relatedFidGroup);\n        }\n    });\n\n    // Add the SIM group last.\n    mLine.ssrcGroups.push(simGroup);\n}\n\n/**\n * Add ssrcs and ssrc-groups to the m-line. When a primary ssrc, i.e., the\n * first ssrc in a SIM group is passed, all the other ssrcs from the SIM\n * group and the other ssrcs from the related FID groups are added to the same\n * m-line since they all belong to the same remote source. Since the ssrcs are\n * not guaranteed to be in the correct order, try to find if a SIM group exists,\n * if not, just add the FID group.\n * @param {Object} mLine - The m-line to which ssrcs have to be added.\n * @param {Object} ssrc - the primary ssrc.\n * @param {Object} sourceGroups - inverted source-group map.\n * @param {Array<Object>} sourceList - array containing all the sources.\n * @returns {void}\n */\nfunction addSourcesToMline(mLine, ssrc, sourceGroups, sourceList) {\n    if (!mLine || !ssrc) {\n        return;\n    }\n    mLine.sources = [];\n    mLine.ssrcGroups = [];\n\n    // If there are no associated ssrc-groups, just add the ssrc and msid.\n    if (!sourceGroups[ssrc.id]) {\n        mLine.sources.push(ssrc);\n        mLine.msid = ssrc.msid;\n\n        return;\n    }\n    const findSourcebyId = src => sourceList.find(source => source.id.toString() === src);\n\n    // Find the SIM and FID groups that this ssrc belongs to.\n    const simGroup = findSimGroup(sourceGroups[ssrc.id]);\n    const fidGroup = findFidGroup(sourceGroups[ssrc.id]);\n\n    // Add the ssrcs for the SIM group and their corresponding FID groups.\n    if (simGroup) {\n        addSimGroupSources(mLine, simGroup, sourceGroups, sourceList);\n    } else if (fidGroup) {\n        // check if the other ssrc from this FID group is part of a SIM group\n        const otherSsrc = fidGroup.ssrcs.find(s => s !== ssrc);\n        const simGroup2 = findSimGroup(sourceGroups[otherSsrc]);\n\n        if (simGroup2) {\n            addSimGroupSources(mLine, simGroup2, sourceGroups, sourceList);\n        } else {\n            // Add the FID group ssrcs.\n            fidGroup.ssrcs.forEach(src => {\n                mLine.sources.push(findSourcebyId(src));\n            });\n            mLine.ssrcGroups.push(fidGroup);\n        }\n    }\n\n    // Set the msid for the media description using the msid attribute of the ssrcs.\n    mLine.msid = mLine.sources[0].msid;\n}\n\n/**\n * Checks if there is a mline for the given ssrc or its related primary ssrc.\n * We always implode the SIM group to the first ssrc in the SIM group before sRD,\n * so we also check if mline for that ssrc exists.\n * For example:\n * If the following ssrcs are in a SIM group,\n * <ssrc-group xmlns=\\\"urn:xmpp:jingle:apps:rtp:ssma:0\\\" semantics=\\\"SIM\\\">\n *        <source ssrc=\\\"1806330949\\\"/>\n *        <source ssrc=\\\"4173145196\\\"/>\n *        <source ssrc=\\\"2002632207\\\"/>\n * </ssrc-group>\n * This method returns true for any one of the 3 ssrcs if there is a mline for 1806330949.\n * @param {Object} ssrc - ssrc to check.\n * @param {Object} sourceGroups - inverted source-group map.\n * @param {Array<Object>} mlines - mlines in the description\n\n * @returns {Boolean} - Returns true if mline for the given ssrc or the related primary ssrc\n * exists, returns false otherwise.\n */\nfunction checkIfMlineForSsrcExists(ssrc, sourceGroups, mlines) {\n    const findMatchingMline = mline => {\n        if (mline.sources) {\n            return mline.sources.some(source => source.id === ssrc.id);\n        }\n\n        return false;\n    };\n\n    if (!mlines.find(findMatchingMline)) {\n        // check if this ssrc is member of a SIM group. If so, check if there\n        // is a matching m-line for the primary ssrc of the SIM group.\n        if (!sourceGroups[ssrc.id]) {\n            return false;\n        }\n        const simGroup = findSimGroup(sourceGroups[ssrc.id]);\n        const fidGroup = findFidGroup(sourceGroups[ssrc.id]);\n\n        if (simGroup) {\n            return mlines.some(mline => mline.sources\n                && mline.sources.some(src => src.id.toString() === simGroup.ssrcs[0]));\n        } else if (fidGroup && ssrc.id.toString() !== fidGroup.ssrcs[0]) {\n            const otherSsrc = { id: fidGroup.ssrcs[0] };\n\n            return checkIfMlineForSsrcExists(otherSsrc, sourceGroups, mlines);\n\n        }\n\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * Create an inverted sourceGroup map to put all the grouped ssrcs\n * in the same m-line.\n * @param {Array<Object>} sourceGroups\n * @returns {Object} - An inverted sourceGroup map.\n */\nfunction createSourceGroupMap(sourceGroups) {\n    const ssrc2group = {};\n\n    if (!sourceGroups || !Array.isArray(sourceGroups)) {\n        return ssrc2group;\n    }\n    sourceGroups.forEach(group => {\n        if (group.ssrcs && Array.isArray(group.ssrcs)) {\n            group.ssrcs.forEach(ssrc => {\n                if (typeof ssrc2group[ssrc] === 'undefined') {\n                    ssrc2group[ssrc] = [];\n                }\n                ssrc2group[ssrc].push(group);\n            });\n        }\n    });\n\n    return ssrc2group;\n}\n\n/**\n * Interop provides an API for tranforming a Plan B SDP to a Unified Plan SDP and\n * vice versa.\n */\nexport class Interop {\n    /**\n     * This method transforms a Unified Plan SDP to an equivalent Plan B SDP.\n     * @param {RTCSessionDescription} description - The description in Unified plan format.\n     * @returns RTCSessionDescription - The transformed session description.\n     */\n    toPlanB(description) {\n        if (!description || typeof description.sdp !== 'string') {\n            console.warn('An empty description was passed as an argument.');\n\n            return description;\n        }\n\n        // Objectify the SDP for easier manipulation.\n        const session = transform.parse(description.sdp);\n\n        // If the SDP contains no media, there's nothing to transform.\n        if (!session.media || !session.media.length) {\n            console.warn('The description has no media.');\n\n            return description;\n        }\n\n        // Make sure this is a unified plan sdp\n        if (session.media.every(m => PLAN_B_MIDS.indexOf(m.mid) !== -1)) {\n            console.warn('The description does not look like unified plan sdp');\n\n            return description;\n        }\n\n        const media = {};\n        const sessionMedia = session.media;\n\n        session.media = [];\n        sessionMedia.forEach(mLine => {\n            const type = mLine.type;\n\n            if (type === 'application') {\n                mLine.mid = 'data';\n                media[mLine.mid] = mLine;\n\n                return;\n            }\n            if (typeof media[type] === 'undefined') {\n                const bLine = clonedeep(mLine);\n\n                // Copy the msid attribute to all the ssrcs if they belong to the same source group\n                if (bLine.sources && Array.isArray(bLine.sources)) {\n                    bLine.sources.forEach(source => {\n                        mLine.msid ? source.msid = mLine.msid : delete source.msid;\n                    });\n                }\n                if (!bLine.ssrcGroups) {\n                    bLine.ssrcGroups = [];\n                }\n                delete bLine.msid;\n                bLine.mid = type;\n                media[type] = bLine;\n            } else if (mLine.msid) {\n                // Add sources and source-groups to the existing m-line of the same media type.\n                if (mLine.sources && Array.isArray(mLine.sources)) {\n                    media[type].sources = media[type].sources.concat(mLine.sources);\n                }\n                if (typeof mLine.ssrcGroups !== 'undefined' && Array.isArray(mLine.ssrcGroups)) {\n                    media[type].ssrcGroups = media[type].ssrcGroups.concat(mLine.ssrcGroups);\n                }\n            }\n        });\n        session.media = Object.values(media);\n\n        // Bundle the media only if it is active.\n        const bundle = [];\n\n        Object.values(media).forEach(mline => {\n            if (mline.direction !== 'inactive') {\n                bundle.push(mline.mid);\n            }\n        });\n\n        // We regenerate the BUNDLE group with the new mids.\n        session.groups.forEach(group => {\n            if (group.type === 'BUNDLE') {\n                group.mids = bundle.join(' ');\n            }\n        });\n\n        // msid semantic\n        session.msidSemantic = {\n            semantic: 'WMS',\n            token: '*'\n        };\n        const resStr = transform.write(session);\n\n        return new RTCSessionDescription({\n            type: description.type,\n            sdp: resStr\n        });\n    }\n\n    /**\n     * This method transforms a Plan B SDP to an equivalent Unified Plan SDP.\n     * @param {RTCSessionDescription} description - The description in plan-b format.\n     * @param {RTCSessionDescription} current - The current description set on\n     * the peerconnection in Unified-plan format, i.e., the readonly attribute\n     * remoteDescription on the RTCPeerConnection object.\n     * @returns RTCSessionDescription - The transformed session description.\n     */\n    toUnifiedPlan(description, current = null) {\n        if (!description || typeof description.sdp !== 'string') {\n            console.warn('An empty description was passed as an argument.');\n\n            return description;\n        }\n\n        // Objectify the SDP for easier manipulation.\n        const session = transform.parse(description.sdp);\n\n        // If the SDP contains no media, there's nothing to transform.\n        if (!session.media || !session.media.length) {\n            console.warn('The description has no media.');\n\n            return description;\n        }\n\n        // Make sure this is a plan-b sdp.\n        if (session.media.length > 3 || session.media.every(m => PLAN_B_MIDS.indexOf(m.mid) === -1)) {\n            console.warn('The description does not look like plan-b');\n\n            return description;\n        }\n        const currentDesc = current ? transform.parse(current.sdp) : null;\n        const media = {};\n\n        session.media.forEach(mLine => {\n            const type = mLine.type;\n\n            if (type === 'application') {\n                if (!currentDesc || !currentDesc.media) {\n                    const newMline = clonedeep(mLine);\n\n                    newMline.mid = Object.keys(media).length.toString();\n                    media[mLine.mid] = newMline;\n\n                    return;\n                }\n                const mLineForData = currentDesc.media.findIndex(m => m.type === type);\n\n                if (mLineForData) {\n                    currentDesc.media[mLineForData] = mLine;\n                    currentDesc.media[mLineForData].mid = mLineForData;\n                }\n\n                return;\n            }\n\n            // Create an inverted sourceGroup map here to put all the grouped SSRCs in the same m-line.\n            const ssrc2group = createSourceGroupMap(mLine.ssrcGroups);\n\n            if (!mLine.sources) {\n                return;\n            }\n            mLine.sources.forEach((ssrc, idx) => {\n                // Do not add the receive-only ssrcs that Jicofo sends in the source-add.\n                // These ssrcs do not have the \"msid\" attribute set.\n                if (!ssrc.msid) {\n                    return;\n                }\n\n                // If there is no description set on the peerconnection, create new m-lines.\n                if (!currentDesc || !currentDesc.media) {\n                    if (checkIfMlineForSsrcExists(ssrc, ssrc2group, Object.values(media))) {\n                        return;\n                    }\n                    const newMline = clonedeep(mLine);\n\n                    newMline.mid = Object.keys(media).length.toString();\n                    newMline.direction = idx\n                        ? 'sendonly'\n                        : mLine.direction === 'sendonly' ? 'sendonly' : 'sendrecv';\n                    newMline.bundleOnly = undefined;\n                    addSourcesToMline(newMline, ssrc, ssrc2group, mLine.sources);\n                    media[newMline.mid] = newMline;\n\n                    return;\n                }\n\n                // Create and append the m-lines to the existing description.\n                if (checkIfMlineForSsrcExists(ssrc, ssrc2group, currentDesc.media)) {\n                    return;\n                }\n\n                // check if there is a m-line that is inactive and is of the same media type\n                const inactiveMid = currentDesc.media\n                    .findIndex(cmLine => cmLine.direction\n                        && cmLine.direction === 'inactive'\n                        && cmLine.type === type);\n\n                if (inactiveMid > -1) {\n                    currentDesc.media[inactiveMid].direction = 'sendonly';\n                    addSourcesToMline(currentDesc.media[inactiveMid], ssrc, ssrc2group, mLine.sources);\n                } else {\n                    const newMline = clonedeep(mLine);\n\n                    newMline.mid = currentDesc.media.length.toString();\n                    newMline.direction = 'sendonly';\n                    addSourcesToMline(newMline, ssrc, ssrc2group, mLine.sources);\n                    currentDesc.media.push(newMline);\n                }\n            });\n        });\n        session.media = currentDesc ? currentDesc.media : Object.values(media);\n        const mids = [];\n\n        session.media.forEach(mLine => {\n            mids.push(mLine.mid);\n        });\n\n        // We regenerate the BUNDLE group (since we regenerated the mids)\n        session.groups.forEach(group => {\n            if (group.type === 'BUNDLE') {\n                group.mids = mids.join(' ');\n            }\n        });\n\n        // msid semantic\n        session.msidSemantic = {\n            semantic: 'WMS',\n            token: '*'\n        };\n\n        // Increment the session version every time.\n        session.origin.sessionVersion++;\n        const resultSdp = transform.write(session);\n\n        return new RTCSessionDescription({\n            type: description.type,\n            sdp: resultSdp\n        });\n    }\n}\n","/* Copyright @ 2015 - Present, 8x8 Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport transform from 'sdp-transform';\n\n/**\n * Rewrites the source information in the way sdp-transform expects.\n * Source information is split into multiple ssrc objects each containing\n * an id, attribute and value.\n * @param {Object} media - media description to be modified.\n * @returns {void}\n */\nconst write = function(session, opts) {\n    if (typeof session !== 'undefined' && typeof session.media !== 'undefined' && Array.isArray(session.media)) {\n        session.media.forEach(mLine => {\n            if (mLine.sources && mLine.sources.length) {\n                mLine.ssrcs = [];\n                mLine.sources.forEach(source => {\n                    Object.keys(source).forEach(attribute => {\n                        if (attribute === 'id') {\n                            return;\n                        }\n                        mLine.ssrcs.push({\n                            id: source.id,\n                            attribute,\n                            value: source[attribute]\n                        });\n                    });\n                });\n                delete mLine.sources;\n            }\n\n            // join ssrcs in ssrc groups\n            if (mLine.ssrcGroups && mLine.ssrcGroups.length) {\n                mLine.ssrcGroups.forEach(ssrcGroup => {\n                    if (typeof ssrcGroup.ssrcs !== 'undefined'\n                    && Array.isArray(ssrcGroup.ssrcs)) {\n                        ssrcGroup.ssrcs = ssrcGroup.ssrcs.join(' ');\n                    }\n                });\n            }\n        });\n    }\n\n    return transform.write(session, opts);\n};\n\n/**\n * Rewrites the source information that we get from sdp-transform.\n * All the ssrc lines with different attributes that belong to the\n * same ssrc are grouped into a single soure object with multiple key value pairs.\n * @param {Object} media - media description to be modified.\n * @returns {void}\n */\nconst parse = function(sdp) {\n    const session = transform.parse(sdp);\n\n    if (typeof session !== 'undefined' && typeof session.media !== 'undefined' && Array.isArray(session.media)) {\n        session.media.forEach(mLine => {\n            // group sources attributes by ssrc\n            if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\n                mLine.sources = [];\n                mLine.ssrcs.forEach(ssrc => {\n                    const found = mLine.sources.findIndex(source => source.id === ssrc.id);\n\n                    if (found > -1) {\n                        mLine.sources[found][ssrc.attribute] = ssrc.value;\n                    } else {\n                        const src = { id: ssrc.id };\n\n                        src[ssrc.attribute] = ssrc.value;\n                        mLine.sources.push(src);\n                    }\n                });\n                delete mLine.ssrcs;\n            }\n\n            // split ssrcs in ssrc groups\n            if (typeof mLine.ssrcGroups !== 'undefined' && Array.isArray(mLine.ssrcGroups)) {\n                mLine.ssrcGroups.forEach(ssrcGroup => {\n                    if (typeof ssrcGroup.ssrcs === 'string') {\n                        ssrcGroup.ssrcs = ssrcGroup.ssrcs.split(' ');\n                    }\n                });\n            }\n        });\n    }\n\n    return session;\n};\n\nexport default {\n    write,\n    parse\n};\n","/* Copyright @ 2016 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar transform = require('sdp-transform');\nvar transformUtils = require('./transform-utils');\nvar parseSsrcs = transformUtils.parseSsrcs;\nvar writeSsrcs = transformUtils.writeSsrcs;\n\n//region Constants\n\nvar DEFAULT_NUM_OF_LAYERS = 3;\n\n//endregion\n\nfunction getSsrcAttribute (mLine, ssrc, attributeName) {\n    return mLine\n        .ssrcs\n        .filter(function(ssrcInfo) { return ssrcInfo.id === ssrc; })\n        .filter(function(ssrcInfo) { return ssrcInfo.attribute === attributeName; })\n        .map(function(ssrcInfo) { return ssrcInfo.value; })[0];\n}\n\n//region Ctor\n\nfunction Simulcast(options) {\n\n    this.options = options ? options : {};\n\n    if (!this.options.numOfLayers) {\n        this.options.numOfLayers = DEFAULT_NUM_OF_LAYERS;\n    }\n    console.log(\"SdpSimulcast: using \" + this.options.numOfLayers + \" layers\");\n\n    /**\n     * An IN-ORDER list of the simulcast ssrcs\n     * @type {list<number>}\n     */\n    this.ssrcCache = [];\n}\n\n//endregion\n\n//region Stateless private utility functions\n\n/**\n * Returns a random integer between min (included) and max (excluded)\n * Using Math.round() gives a non-uniform distribution!\n * @returns {number}\n */\nfunction generateSSRC() {\n    var min = 0, max = 0xffffffff;\n    return Math.floor(Math.random() * (max - min)) + min;\n};\n\nfunction processVideo(session, action) {\n    if (session == null || !Array.isArray(session.media)) {\n        return;\n    }\n\n    session.media.forEach(function (mLine) {\n        if (mLine.type === 'video') {\n            action(mLine);\n        }\n    });\n};\n\nfunction validateDescription(desc)\n{\n    return desc && desc != null\n        && desc.type && desc.type != ''\n        && desc.sdp && desc.sdp != '';\n}\n\nfunction explodeRemoteSimulcast(mLine) {\n\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\n        return;\n    }\n\n    var sources = parseSsrcs(mLine);\n    var order = [];\n\n    // Find the SIM group and explode its sources.\n    var j = mLine.ssrcGroups.length;\n    while (j--) {\n\n        if (mLine.ssrcGroups[j].semantics !== 'SIM') {\n            continue;\n        }\n\n        var simulcastSsrcs = mLine.ssrcGroups[j].ssrcs.split(' ');\n\n        for (var i = 0; i < simulcastSsrcs.length; i++) {\n\n            var ssrc = simulcastSsrcs[i];\n            order.push(ssrc);\n\n            var parts = sources[ssrc].msid.split(' ');\n            sources[ssrc].msid = [parts[0], '/', i, ' ', parts[1], '/', i].join('');\n            sources[ssrc].cname = [sources[ssrc].cname, '/', i].join('');\n\n            // Remove all the groups that this SSRC participates in.\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\n                if (relatedGroup.semantics === 'SIM') {\n                    return;\n                }\n\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\n                    return;\n                }\n\n                // Nuke all the related SSRCs.\n                relatedSsrcs.forEach(function (relatedSSRC) {\n                    sources[relatedSSRC].msid = sources[ssrc].msid;\n                    sources[relatedSSRC].cname = sources[ssrc].cname;\n                    if (relatedSSRC !== ssrc) {\n                        order.push(relatedSSRC);\n                    }\n                });\n\n                // Schedule the related group for nuking.\n            })\n        }\n\n        mLine.ssrcs = writeSsrcs(sources, order);\n        mLine.ssrcGroups.splice(j, 1);\n    };\n}\n\nfunction implodeRemoteSimulcast(mLine) {\n\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\n        console.info('Halt: There are no SSRC groups in the remote ' +\n                'description.');\n        return;\n    }\n\n    var sources = parseSsrcs(mLine);\n\n    // Find the SIM group and nuke it.\n    mLine.ssrcGroups.forEach(function (simulcastGroup) {\n        if (simulcastGroup.semantics !== 'SIM') {\n            return;\n        }\n\n        console.info(\"Imploding SIM group: \" + simulcastGroup.ssrcs);\n        // Schedule the SIM group for nuking.\n        simulcastGroup.nuke = true;\n\n        var simulcastSsrcs = simulcastGroup.ssrcs.split(' ');\n\n        // Nuke all the higher layer SSRCs.\n        for (var i = 1; i < simulcastSsrcs.length; i++) {\n\n            var ssrc = simulcastSsrcs[i];\n            delete sources[ssrc];\n\n            // Remove all the groups that this SSRC participates in.\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\n                if (relatedGroup.semantics === 'SIM') {\n                    return;\n                }\n\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\n                    return;\n                }\n\n                // Nuke all the related SSRCs.\n                relatedSsrcs.forEach(function (relatedSSRC) {\n                    delete sources[relatedSSRC];\n                });\n\n                // Schedule the related group for nuking.\n                relatedGroup.nuke = true;\n            })\n        }\n\n        return;\n    });\n\n    mLine.ssrcs = writeSsrcs(sources);\n\n    // Nuke all the scheduled groups.\n    var i = mLine.ssrcGroups.length;\n    while (i--) {\n        if (mLine.ssrcGroups[i].nuke) {\n            mLine.ssrcGroups.splice(i, 1);\n        }\n    }\n}\n\nfunction removeGoogConference(mLine) {\n    if (!mLine || !Array.isArray(mLine.invalid)) {\n        return;\n    }\n\n    var i = mLine.invalid.length;\n    while (i--) {\n        if (mLine.invalid[i].value == 'x-google-flag:conference') {\n            mLine.invalid.splice(i, 1);\n        }\n    }\n}\n\nfunction assertGoogConference(mLine) {\n    if (!mLine) {\n        return;\n    }\n\n    if (!Array.isArray(mLine.invalid)) {\n        mLine.invalid = [];\n    }\n\n    if (!mLine.invalid.some(\n            function (i) { return i.value === 'x-google-flag:conference' })) {\n        mLine.invalid.push({'value': 'x-google-flag:conference'});\n    }\n}\n\nSimulcast.prototype.clearSsrcCache = function() {\n    this.ssrcCache = [];\n}\n\n/**\n * When we start as video muted, all of the video\n *  ssrcs get generated so we can include them as part\n *  of the original session-accept.  That means we\n *  need this library to restore to those same ssrcs\n *  the first time we unmute, so we need the ability to\n *  force its cache\n */\nSimulcast.prototype.setSsrcCache = function(ssrcs) {\n    this.ssrcCache = ssrcs;\n}\n\n//endregion\n\n//region \"Private\" functions\n\n/**\n * Given a video mLine, return a list of the video ssrcs\n *  in simulcast layer order (returns a list of just\n *  the primary ssrc if there are no simulcast layers)\n */\nSimulcast.prototype._parseSimLayers = function (mLine) {\n    var simGroup = mLine.ssrcGroups &&\n        mLine.ssrcGroups.find(function(group) { return group.semantics === \"SIM\"; });\n    if (simGroup) {\n        return simGroup.ssrcs\n            .split(\" \")\n            .map(function(ssrcStr) { return parseInt(ssrcStr) });\n    } else {\n        return [mLine.ssrcs[0].id];\n    }\n}\n\nSimulcast.prototype._buildNewToOldSsrcMap = function (newSsrcList, oldSsrcList) {\n    var ssrcMap = {};\n    for (var i = 0; i < newSsrcList.length; ++i) {\n        var newSsrc = newSsrcList[i];\n        var oldSsrc = oldSsrcList[i] || null;\n        ssrcMap[newSsrc] = oldSsrc;\n    }\n    return ssrcMap;\n}\n\nSimulcast.prototype._fillInSourceDataFromCache = function(mLine) {\n    console.log(\"SdpSimulcast restoring from cache: \", this.ssrcCache);\n    var newSimSsrcs = this._parseSimLayers(mLine);\n    console.log(\"SdpSimulcast Parsed new sim ssrcs: \", newSimSsrcs);\n    var newMsid = getSsrcAttribute(mLine, newSimSsrcs[0], \"msid\");\n    var newCname = getSsrcAttribute(mLine, newSimSsrcs[0], \"cname\");\n    var ssrcsToReplace = this._buildNewToOldSsrcMap(newSimSsrcs, this.ssrcCache);\n    console.log(\"SdpSimulcast built replacement map: \", ssrcsToReplace);\n    // New sdp might only have 1 layer, so not every cached ssrc will have a new one\n    //  to replace directly\n    var ssrcsToAdd = this.ssrcCache\n        .filter(function(ssrc) { return Object.values(ssrcsToReplace).indexOf(ssrc) === -1; });\n    console.log(\"SdpSimulcast built ssrcs to add: \", ssrcsToAdd);\n\n    // First do the replacements\n    mLine.ssrcs.forEach(function(ssrc) {\n        if (ssrcsToReplace[ssrc.id]) {\n            ssrc.id = ssrcsToReplace[ssrc.id];\n        }\n    });\n    // Now the adds\n    ssrcsToAdd.forEach(function(ssrc) {\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"msid\",\n            value: newMsid\n        });\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"cname\",\n            value: newCname\n        });\n    });\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\n    mLine.ssrcGroups.push({\n        semantics: \"SIM\",\n        ssrcs: this.ssrcCache.join(\" \")\n    });\n    return mLine;\n}\n\nSimulcast.prototype._generateSourceData = function(mLine, primarySsrc) {\n    var addAssociatedStream = function(mLine, ssrc) {\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"cname\",\n            value: primarySsrcCname\n        });\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"msid\",\n            value: primarySsrcMsid\n        });\n    }\n    var primarySsrcMsid = getSsrcAttribute(mLine, primarySsrc, \"msid\");\n    var primarySsrcCname = getSsrcAttribute(mLine, primarySsrc, \"cname\");\n\n    // In Unified-plan mode, the a=ssrc lines with the msid attribute are not present\n    // in the answers that Chrome and Safari generate for an offer received from Jicofo.\n    // Generate these a=ssrc lines using the msid values from the a=msid line.\n    if (this.options.usesUnifiedPlan && !primarySsrcMsid) {\n        primarySsrcMsid = mLine.msid;\n        var primarySsrcs = mLine.ssrcs;\n        primarySsrcs.forEach(ssrc => {\n            mLine.ssrcs.push({\n                id: ssrc.id,\n                attribute: \"msid\",\n                value: primarySsrcMsid\n            });\n        });\n    }\n\n    // Generate sim layers\n    var simSsrcs = [];\n    for (var i = 0; i < this.options.numOfLayers - 1; ++i) {\n        var simSsrc = generateSSRC();\n        addAssociatedStream(mLine, simSsrc);\n        simSsrcs.push(simSsrc);\n    }\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\n    mLine.ssrcGroups.push({\n        semantics: \"SIM\",\n        ssrcs: primarySsrc + \" \" + simSsrcs.join(\" \")\n    });\n    return mLine;\n}\n\n\n\n// Assumptions:\n//  1) 'mLine' contains only a single primary video source\n//   (i.e. it will not already have simulcast streams inserted)\n//  2) 'mLine' MAY already contain an RTX stream for its video source\n//  3) 'mLine' is in sendrecv or sendonly state\n// Guarantees:\n//  1) return mLine will contain 2 additional simulcast layers\n//   generated\n//  2) if the base video ssrc in mLine has been seen before,\n//   then the same generated simulcast streams from before will\n//   be used again\n//  3) if rtx is enabled for the mLine, all generated simulcast\n//   streams will have rtx streams generated as well\n//  4) if rtx has been generated for a src before, we will generate\n//   the same rtx stream again\nSimulcast.prototype._restoreSimulcast = function(mLine) {\n    // First, find the primary video source in the given\n    // mLine and see if we've seen it before.\n    var primarySsrc;\n    var numSsrcs = mLine.ssrcs && mLine.ssrcs\n        .map(function(ssrcInfo) { return ssrcInfo.id; })\n        .filter(function(ssrc, index, array) {\n            return array.indexOf(ssrc) === index;\n        })\n        .length || 0;\n    var numGroups = (mLine.ssrcGroups && mLine.ssrcGroups.length) || 0;\n\n    if (numSsrcs === 0 || numSsrcs > 2) {\n        // Unsupported scenario\n        return mLine;\n    }\n    if (numSsrcs == 2 && numGroups === 0) {\n        // Unsupported scenario\n        return mLine;\n    }\n\n    if (numSsrcs === 1) {\n        primarySsrc = mLine.ssrcs[0].id;\n    } else {\n        // There must be an FID group, so parse\n        //  that and pull the primary ssrc from there\n        var fidGroup = mLine.ssrcGroups.filter(function(group) { return group.semantics === \"FID\"; })[0];\n        if (fidGroup) {\n            primarySsrc = parseInt(fidGroup.ssrcs.split(\" \")[0]);\n        } else {\n            // Unsupported scenario\n            return mLine;\n        }\n    }\n    console.log(\"SdpSimulcast: current ssrc cache: \", this.ssrcCache);\n    console.log(\"SdpSimulcast: parsed primary ssrc \" + primarySsrc);\n\n    var seenPrimarySsrc = this.ssrcCache.indexOf(primarySsrc) !== -1;\n\n    if (seenPrimarySsrc) {\n        console.log(\"SdpSimulcast: Have seen primary ssrc before, \" +\n            \"filling in data from cache\");\n        mLine = this._fillInSourceDataFromCache(mLine);\n    } else {\n        console.log(\"SdpSimulcast: Have not seen primary ssrc before, \" +\n            \"generating source data\");\n        mLine = this._generateSourceData(mLine, primarySsrc);\n    }\n    // Now update the cache to match whatever we've just put into this sdp\n    this.ssrcCache = this._parseSimLayers(mLine);\n    return mLine;\n}\n\n//endregion\n\n//region \"Public\" functions\n\n/**\n *\n * @param desc\n * @returns {RTCSessionDescription}\n */\nSimulcast.prototype.mungeRemoteDescription = function (desc) {\n\n    if (!validateDescription(desc)) {\n        return desc;\n    }\n\n    var session = transform.parse(desc.sdp);\n\n    var self = this;\n    processVideo(session, function (mLine) {\n\n        // Handle simulcast reception.\n        if (self.options.explodeRemoteSimulcast) {\n            explodeRemoteSimulcast(mLine);\n        } else {\n            implodeRemoteSimulcast(mLine);\n        }\n\n        // Make sure that we ALWAYS add the conference flag to the remote\n        // description: That flag is deprecated but, as of this writing\n        // (09/2019), it's still used in jitsi-meet to enable legacy simulcast\n        // when screen-sharing (https://cs.chromium.org/chromium/src/third_party/webrtc/media/base/media_channel.h?rcl=f2773b54647633d5725fa25dea883f99dd1b400c&l=838).\n        //\n        // We've observed the following chain of events that almost always\n        // results in connectivity issues at the receiver:\n        //\n        // 1. The user joins a call with startVideoMuted=true, so there's no\n        //    jitsi track created.\n        // 2. The user enables screen-sharing. At this point we do a\n        //    renegotiation (which starts with an sRD); the ssrcCache is empty,\n        //    so the conference flag is not added to the remote description SDP.\n        // 3. The next step of the re-negotiation is to set the answer, so\n        //    mungeLocalDescription is called, and because now we have a track\n        //    due to the user enabling screen-sharing, it enables simulcast.\n        // 4. sLD is called with simulcast ssrcs, but the sRD call of step 2\n        //    didn't add the conference flag in the SDP, so the screen-sharing\n        //    is without simulcast.\n        // 5. Any subsequent re-negotiation (for example, due to a participant\n        //    joining/leaving the call) will enable simulcast and this switch\n        //    almost always results in a broken stream at the receiver.\n        if (!self.options.usesUnifiedPlan) {\n            assertGoogConference(mLine);\n        }\n    });\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: transform.write(session)\n    });\n};\n\n/**\n *\n * NOTE this method should be called only if simulcast is supported by\n * the current browser, otherwise local SDP should not be munged.\n * @param desc\n * @returns {RTCSessionDescription}\n */\nSimulcast.prototype.mungeLocalDescription = function (desc) {\n\n    if (!validateDescription(desc)) {\n        return desc;\n    }\n\n    var session = transform.parse(desc.sdp);\n\n    var self = this;\n    processVideo(session, function (mLine) {\n        if (mLine.direction == 'recvonly' || mLine.direction == 'inactive')\n        {\n            return;\n        }\n        self._restoreSimulcast(mLine);\n    });\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: transform.write(session)\n    });\n};\n\n//endregion\n\nmodule.exports = Simulcast;\n","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * FIXME\n * @param sources FIXME\n * @param order An array of SSRCs which will be used to order the entries in\n * the returned array. Sources whose SSRC appears in 'order' will be added first,\n * in the specified order, and all other sources will be added afterwards (in\n * no specific order).\n * @returns {Array} FIXME\n */\nexports.writeSsrcs = function(sources, order) {\n  var ssrcs = [];\n\n  // expand sources to ssrcs\n  if (typeof sources !== 'undefined' &&\n      Object.keys(sources).length !== 0) {\n\n    if (!Array.isArray(order)) {\n      order = []\n    }\n\n    // Add the sources that appear in 'order' first.\n    for (var i = 0; i < order.length; i++) {\n      var ssrc = order[i];\n      var source = sources[ssrc];\n      Object.keys(source).forEach(function (attribute) {\n        ssrcs.push({\n          id: ssrc,\n          attribute: attribute,\n          value: source[attribute]\n        });\n      });\n    }\n\n    // Now add the rest of the sources.\n    Object.keys(sources).forEach(function (ssrc) {\n      ssrc = parseInt(ssrc); // Object.keys() returns string\n      if (order.indexOf(ssrc) >= 0) {\n        // Already added.\n        return;\n      }\n\n      var source = sources[ssrc];\n      Object.keys(source).forEach(function (attribute) {\n        ssrcs.push({\n          id: ssrc,\n          attribute: attribute,\n          value: source[attribute]\n        });\n      });\n    });\n  }\n\n  return ssrcs;\n};\n\nexports.parseSsrcs = function (mLine) {\n  var sources = {};\n  // group sources attributes by ssrc.\n  if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\n    mLine.ssrcs.forEach(function (ssrc) {\n      if (!sources[ssrc.id])\n        sources[ssrc.id] = {};\n      sources[ssrc.id][ssrc.attribute] = ssrc.value;\n    });\n  }\n  return sources;\n};\n\n","/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n/*jshint onevar: false, indent:4 */\n/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _toString = Object.prototype.toString;\n\n    var _isArray = Array.isArray || function (obj) {\n        return _toString.call(obj) === '[object Array]';\n    };\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(done) );\n        });\n        function done(err) {\n          if (err) {\n              callback(err);\n              callback = function () {};\n          }\n          else {\n              completed += 1;\n              if (completed >= arr.length) {\n                  callback();\n              }\n          }\n        }\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback();\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        if (!callback) {\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err) {\n                    callback(err);\n                });\n            });\n        } else {\n            var results = [];\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err, v) {\n                    results[x.index] = v;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        var remainingTasks = keys.length\n        if (!remainingTasks) {\n            return callback();\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            remainingTasks--\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (!remainingTasks) {\n                var theCallback = callback;\n                // prevent final callback from calling itself if it errors\n                callback = function () {};\n\n                theCallback(null, results);\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.retry = function(times, task, callback) {\n        var DEFAULT_TIMES = 5;\n        var attempts = [];\n        // Use defaults if times not passed\n        if (typeof times === 'function') {\n            callback = task;\n            task = times;\n            times = DEFAULT_TIMES;\n        }\n        // Make sure times is a number\n        times = parseInt(times, 10) || DEFAULT_TIMES;\n        var wrappedTask = function(wrappedCallback, wrappedResults) {\n            var retryAttempt = function(task, finalAttempt) {\n                return function(seriesCallback) {\n                    task(function(err, result){\n                        seriesCallback(!err || finalAttempt, {err: err, result: result});\n                    }, wrappedResults);\n                };\n            };\n            while (times) {\n                attempts.push(retryAttempt(task, !(times-=1)));\n            }\n            async.series(attempts, function(done, data){\n                data = data[data.length - 1];\n                (wrappedCallback || callback)(data.err, data.result);\n            });\n        }\n        // If a callback is passed, run this as a controll flow\n        return callback ? wrappedTask() : wrappedTask\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (!_isArray(tasks)) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (test.apply(null, args)) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (!test.apply(null, args)) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            started: false,\n            paused: false,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            kill: function () {\n              q.drain = null;\n              q.tasks = [];\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (!q.paused && workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            },\n            idle: function() {\n                return q.tasks.length + workers === 0;\n            },\n            pause: function () {\n                if (q.paused === true) { return; }\n                q.paused = true;\n                q.process();\n            },\n            resume: function () {\n                if (q.paused === false) { return; }\n                q.paused = false;\n                q.process();\n            }\n        };\n        return q;\n    };\n    \n    async.priorityQueue = function (worker, concurrency) {\n        \n        function _compareTasks(a, b){\n          return a.priority - b.priority;\n        };\n        \n        function _binarySearch(sequence, item, compare) {\n          var beg = -1,\n              end = sequence.length - 1;\n          while (beg < end) {\n            var mid = beg + ((end - beg + 1) >>> 1);\n            if (compare(item, sequence[mid]) >= 0) {\n              beg = mid;\n            } else {\n              end = mid - 1;\n            }\n          }\n          return beg;\n        }\n        \n        function _insert(q, data, priority, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  priority: priority,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n              \n              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n        \n        // Start with a normal queue\n        var q = async.queue(worker, concurrency);\n        \n        // Override push to accept second parameter representing priority\n        q.push = function (data, priority, callback) {\n          _insert(q, data, priority, callback);\n        };\n        \n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            drained: true,\n            push: function (data, callback) {\n                if (!_isArray(data)) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    cargo.drained = false;\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain && !cargo.drained) cargo.drain();\n                    cargo.drained = true;\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0, tasks.length);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                async.nextTick(function () {\n                    callback.apply(null, memo[key]);\n                });\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.seq = function (/* functions... */) {\n        var fns = arguments;\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    async.compose = function (/* functions... */) {\n      return async.seq.apply(null, Array.prototype.reverse.call(arguments));\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // Node.js\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // AMD / RequireJS\n    else if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.bowser=t():e.bowser=t()}(this,(function(){return function(e){var t={};function r(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var n in e)r.d(i,n,function(t){return e[t]}.bind(null,n));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=90)}({17:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i=r(18),n=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||\"\"},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||\"\"},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}},e.getMacOSVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}},e.getAndroidVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0},e.getVersionPrecision=function(e){return e.split(\".\").length},e.compareVersions=function(t,r,i){void 0===i&&(i=!1);var n=e.getVersionPrecision(t),s=e.getVersionPrecision(r),o=Math.max(n,s),a=0,u=e.map([t,r],(function(t){var r=o-e.getVersionPrecision(t),i=t+new Array(r+1).join(\".0\");return e.map(i.split(\".\"),(function(e){return new Array(20-e.length).join(\"0\")+e})).reverse()}));for(i&&(a=o-Math.min(n,s)),o-=1;o>=a;){if(u[0][o]>u[1][o])return 1;if(u[0][o]===u[1][o]){if(o===a)return 0;o-=1}else if(u[0][o]<u[1][o])return-1}},e.map=function(e,t){var r,i=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)i.push(t(e[r]));return i},e.getBrowserAlias=function(e){return i.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return i.BROWSER_MAP[e]||\"\"},e}();t.default=n,e.exports=t.default},18:function(e,t,r){\"use strict\";t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"};t.BROWSER_MAP={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"};t.PLATFORMS_MAP={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"};t.OS_MAP={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"};t.ENGINE_MAP={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"}},90:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i,n=(i=r(91))&&i.__esModule?i:{default:i},s=r(18);function o(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var a=function(){function e(){}var t,r,i;return e.getParser=function(e,t){if(void 0===t&&(t=!1),\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new n.default(e,t)},e.parse=function(e){return new n.default(e).getResult()},t=e,i=[{key:\"BROWSER_MAP\",get:function(){return s.BROWSER_MAP}},{key:\"ENGINE_MAP\",get:function(){return s.ENGINE_MAP}},{key:\"OS_MAP\",get:function(){return s.OS_MAP}},{key:\"PLATFORMS_MAP\",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&o(t.prototype,r),i&&o(t,i),e}();t.default=a,e.exports=t.default},91:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i=u(r(92)),n=u(r(93)),s=u(r(94)),o=u(r(95)),a=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=i.default.find((function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=n.default.find((function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||\"\":t||\"\"},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||\"\":t||\"\"},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=s.default.find((function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find((function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return Object.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},i=0,n={},s=0;if(Object.keys(e).forEach((function(t){var o=e[t];\"string\"==typeof o?(n[t]=o,s+=1):\"object\"==typeof o&&(r[t]=o,i+=1)})),i>0){var o=Object.keys(r),a=o.find((function(e){return t.isOS(e)}));if(a){var u=this.satisfies(r[a]);if(void 0!==u)return u}var d=o.find((function(e){return t.isPlatform(e)}));if(d){var c=this.satisfies(r[d]);if(void 0!==c)return c}}if(s>0){var f=Object.keys(n).find((function(e){return t.isBrowser(e,!0)}));if(void 0!==f)return this.compareVersion(n[f])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),i=e.toLowerCase(),n=a.default.getBrowserTypeByAlias(i);return t&&n&&(i=n.toLowerCase()),i===r},t.compareVersion=function(e){var t=[0],r=e,i=!1,n=this.getBrowserVersion();if(\"string\"==typeof n)return\">\"===e[0]||\"<\"===e[0]?(r=e.substr(1),\"=\"===e[1]?(i=!0,r=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?r=e.substr(1):\"~\"===e[0]&&(i=!0,r=e.substr(1)),t.indexOf(a.default.compareVersions(n,r,i))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e){return this.isBrowser(e)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default},92:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i,n=(i=r(17))&&i.__esModule?i:{default:i};var s=/version\\/(\\d+(\\.?_?\\d+)+)/i,o=[{test:[/googlebot/i],describe:function(e){var t={name:\"Googlebot\"},r=n.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:\"Opera\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\\/|opios/i],describe:function(e){var t={name:\"Opera\"},r=n.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:\"Samsung Internet for Android\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:\"NAVER Whale Browser\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:\"MZ Browser\"},r=n.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:\"Focus\"},r=n.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:\"Swing\"},r=n.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:\"Opera Coast\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:\"Yandex Browser\"},r=n.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:\"UC Browser\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:\"Maxthon\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:\"Epiphany\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:\"Puffin\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:\"Sleipnir\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:\"K-Meleon\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:\"WeChat\"},r=n.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},r=n.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:\"Internet Explorer\"},r=n.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\\sedg\\//i],describe:function(e){var t={name:\"Microsoft Edge\"},r=n.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:\"Microsoft Edge\"},r=n.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:\"Vivaldi\"},r=n.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:\"SeaMonkey\"},r=n.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:\"Sailfish\"},r=n.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:\"Amazon Silk\"},r=n.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:\"PhantomJS\"},r=n.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:\"SlimerJS\"},r=n.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t={name:\"BlackBerry\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:\"WebOS Browser\"},r=n.default.getFirstMatch(s,e)||n.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:\"Bada\"},r=n.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:\"Tizen\"},r=n.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:\"QupZilla\"},r=n.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:\"Firefox\"},r=n.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:\"Chromium\"},r=n.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:\"Chrome\"},r=n.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:\"Google Search\"},r=n.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:\"Android Browser\"},r=n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:\"PlayStation 4\"},r=n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:\"Safari\"},r=n.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:n.default.getFirstMatch(t,e),version:n.default.getSecondMatch(t,e)}}}];t.default=o,e.exports=t.default},93:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i,n=(i=r(17))&&i.__esModule?i:{default:i},s=r(18);var o=[{test:[/Roku\\/DVP/],describe:function(e){var t=n.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=n.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows/i],describe:function(e){var t=n.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),r=n.default.getWindowsVersionName(t);return{name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/macintosh/i],describe:function(e){var t=n.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),r=n.default.getMacOSVersionName(t),i={name:s.OS_MAP.MacOS,version:t};return r&&(i.versionName=r),i}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=n.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=n.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),r=n.default.getAndroidVersionName(t),i={name:s.OS_MAP.Android,version:t};return r&&(i.versionName=r),i}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=n.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t=n.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||n.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||n.default.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=n.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=n.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return{name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=n.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.PlayStation4,version:t}}}];t.default=o,e.exports=t.default},94:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i,n=(i=r(17))&&i.__esModule?i:{default:i},s=r(18);var o=[{test:[/googlebot/i],describe:function(){return{type:\"bot\",vendor:\"Google\"}}},{test:[/huawei/i],describe:function(e){var t=n.default.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",r={type:s.PLATFORMS_MAP.mobile,vendor:\"Huawei\"};return t&&(r.model=t),r}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Nexus\"}}},{test:[/ipad/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/kftt build/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"}}},{test:[/silk/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=n.default.getFirstMatch(/(ipod|iphone)/i,e);return{type:s.PLATFORMS_MAP.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Nexus\"}}},{test:[/[^-]mobi/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"blackberry\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"BlackBerry\"}}},{test:function(e){return\"bada\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"windows phone\"===e.getBrowserName()},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Microsoft\"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return\"android\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"macos\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop,vendor:\"Apple\"}}},{test:function(e){return\"windows\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"linux\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"playstation 4\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}},{test:function(e){return\"roku\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}}];t.default=o,e.exports=t.default},95:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var i,n=(i=r(17))&&i.__esModule?i:{default:i},s=r(18);var o=[{test:function(e){return\"microsoft edge\"===e.getBrowserName(!0)},describe:function(e){if(/\\sedg\\//i.test(e))return{name:s.ENGINE_MAP.Blink};var t=n.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=n.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=n.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=n.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:function(){return{name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=n.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=o,e.exports=t.default}})}));","/*!\n * currentExecutingScript\n * Get the currently executing script, regardless of its source/trigger/synchronicity. Similar to HTML5's `document.currentScript` but arguably much more useful!\n * Copyright (c) 2015 James M. Greene\n * Licensed MIT\n * https://github.com/JamesMGreene/currentExecutingScript\n * v0.1.3\n */\n(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === \"object\") {\n    // CommonJS-like environments that support `module.exports`,\n    // like Node.js. Does not work with strict CommonJS!\n    module.exports = factory();\n  } else {\n    // Browser globals (`root` is `window`)\n    root.currentExecutingScript = factory();\n  }\n}(\n  // Current context/scope\n  this || window,\n\n  // Factory function to return the export\n  function() {\n\nvar scriptReadyRegex = /^(interactive|loaded|complete)$/;\n\n// This page's URL (minus query string and fragment identifer hash, if any)\nvar fullPageUrl = !!window.location ? window.location.href : null;\nvar pageUrl = fullPageUrl ? fullPageUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\") || null : null;\n\n// Live NodeList collection\nvar scripts = document.getElementsByTagName(\"script\");\n\n// Check if the browser supports the `readyState` property on `script` elements\nvar supportsScriptReadyState = \"readyState\" in (scripts[0] || document.createElement(\"script\"));\n\n// Lousy browser detection for [not] Opera\nvar isNotOpera = !window.opera || window.opera.toString() !== \"[object Opera]\";\n\n// Detect if `document.currentScript` is supported\nvar hasNativeCurrentScriptAccessor = \"currentScript\" in document;\n\nvar originalStackDepthConfig;\n// Detect if the V8 Error Stack Trace API is supported\nif (\"stackTraceLimit\" in Error && Error.stackTraceLimit !== Infinity) {\n  originalStackDepthConfig = Error.stackTraceLimit;\n  Error.stackTraceLimit = Infinity;\n}\n\n\n// In some browsers (e.g. Chrome), you can get the current stack from an Error\n// object instance without needing to throw it. Avoiding an unnecessary\n// use of `throw` saves time and performance.\nvar hasStackBeforeThrowing = false,\n    hasStackAfterThrowing = false;\n(function() {\n  try {\n    var err = new Error();\n    hasStackBeforeThrowing = typeof err.stack === \"string\" && !!err.stack;\n    throw err;\n  }\n  catch (thrownErr) {\n    hasStackAfterThrowing = typeof thrownErr.stack === \"string\" && !!thrownErr.stack;\n  }\n})();\n\n\n// Normalize whitespace within a string\nfunction normalizeWhitespace(str) {\n  return str ? str.replace(/^\\s+$|\\s+$/g, \"\").replace(/\\s\\s+/g, \" \") : \"\";\n}\n\n// Get script object based on the `src` URL\nfunction getScriptFromUrl(url, eligibleScripts) {\n  var i,\n      script = null;\n\n  eligibleScripts = eligibleScripts || scripts;\n\n  if (typeof url === \"string\" && url) {\n    for (i = eligibleScripts.length; i--; ) {\n      if (eligibleScripts[i].src === url) {\n        // NOTE: Could check if the same script URL is used by more than one `script` element\n        // here... but let's not. That would yield less useful results in \"loose\" detection. ;)\n        script = eligibleScripts[i];\n        break;\n      }\n    }\n  }\n  return script;\n}\n\n// Get script object based on the caller function's source code body (text)\nfunction getInlineScriptFromCallerSource(callerFnSource, eligibleScripts) {\n  var i, inlineScriptText,\n      script = null,\n      callerSourceText = normalizeWhitespace(callerFnSource);\n\n  eligibleScripts = eligibleScripts || scripts;\n\n  if (callerFnSource && callerSourceText) {\n    for (i = eligibleScripts.length; i--; ) {\n      // Only look at inline scripts\n      if (!eligibleScripts[i].hasAttribute(\"src\")) {\n        inlineScriptText = normalizeWhitespace(eligibleScripts[i].text);\n        if (inlineScriptText.indexOf(callerSourceText) !== -1) {\n          // If more than one match is found, don't return any\n          if (script) {\n            script = null;\n            break;\n          }\n          script = eligibleScripts[i];\n        }\n      }\n    }\n  }\n\n  return script;\n}\n\n// If there is only a single inline script on the page, return it; otherwise `null`\nfunction getSoleInlineScript(eligibleScripts) {\n  var i, len,\n      script = null;\n  eligibleScripts = eligibleScripts || scripts;\n  for (i = 0, len = eligibleScripts.length; i < len; i++) {\n    if (!eligibleScripts[i].hasAttribute(\"src\")) {\n      if (script) {\n        script = null;\n        break;\n      }\n      script = eligibleScripts[i];\n    }\n  }\n  return script;\n}\n\n// Get the currently executing script URL from an Error stack trace\nfunction getScriptUrlFromStack(stack, skipStackDepth) {\n  var matches, remainingStack,\n      url = null,\n      ignoreMessage = typeof skipStackDepth === \"number\";\n  skipStackDepth = ignoreMessage ? Math.round(skipStackDepth) : 0;\n  if (typeof stack === \"string\" && stack) {\n    if (ignoreMessage) {\n      matches = stack.match(/(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n    }\n    else {\n      matches = stack.match(/^(?:|[^:@]*@|.+\\)@(?=data:text\\/javascript|blob|http[s]?|file)|.+?\\s+(?: at |@)(?:[^:\\(]+ )*[\\(]?)(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n\n      if (!(matches && matches[1])) {\n        matches = stack.match(/\\)@(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n      }\n    }\n\n    if (matches && matches[1]) {\n      if (skipStackDepth > 0) {\n        remainingStack = stack.slice(stack.indexOf(matches[0]) + matches[0].length);\n        url = getScriptUrlFromStack(remainingStack, (skipStackDepth - 1));\n      }\n      else {\n        url = matches[1];\n      }\n    }\n\n    // TODO: Handle more edge cases!\n    // Fixes #1\n    // See https://github.com/JamesMGreene/currentExecutingScript/issues/1\n\n    // ???\n\n  }\n  return url;\n}\n\n\n// Get the farthest currently executing (i.e. yes, EXECUTING) `script` DOM\n// element for the caller function, regardless of whether it is that `script`\n// DOM element is currently being evaluated for the first time. The farthest\n// currently executing `script` DOM element would typically be considered the\n// originator of the current execution stack.\nfunction _farthestExecutingScript() {\n  /*jshint noarg:false */\n\n  // TODO: Implement!\n  // Fixes #3\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/3\n  return null;\n\n/*\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\n  if (scripts.length === 0) {\n    return null;\n  }\n\n  // Guaranteed accurate in IE 6-10.\n  // Not accurate/supported in any other browsers.\n  if (isNotOpera && supportsScriptReadyState) {\n    for (var i = scripts.length; i--; ) {\n      if (scripts[i].readyState === \"interactive\") {\n        return scripts[i];\n      }\n    }\n  }\n\n  var stack,\n      e = new Error();\n  if (hasStackBeforeThrowing) {\n    stack = e.stack;\n  }\n  if (!stack && hasStackAfterThrowing) {\n    try {\n      throw e;\n    }\n    catch (err) {\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\n      stack = err.stack;\n    }\n  }\n  if (stack) {\n    var url = getScriptUrlFromStack(stack, skipStackDepth);\n    var script = getScriptFromUrl(url, scripts );\n    if (!script && pageUrl && url === pageUrl) {\n      // Try to find the correct inline script by searching through\n      // inline scripts' text content for the caller function's source\n      // code to be present. If the caller function's source code is\n      // not available, see if there is only one inline script element\n      // in the DOM and return that (even though it may be wrong)\n\n      // TODO: Implement!\n      // Fixes #4 in part\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\n\n      var callerFn = _farthestExecutingScript.caller || null,\n          callerFnStack = [],\n          callerFnSource = null;\n\n      while (callerFn) {\n        callerFnStack.push(callerFn);\n        callerFn = callerFn.caller || null;\n      }\n      callerFn = callerFnStack.slice(-1)[0];\n      callerFnSource = callerFn ? (\"\" + callerFn) : null;\n\n\n      if (callerFnSource) {\n        script = getInlineScriptFromCallerSource(callerFnSource);\n      }\n      else {\n        // NOTE: This is a loose assumption that could be inaccurate!\n        //\n        // Inaccuracies:\n        //  - If the inline script that initiated the call was also removed from the DOM.\n        //  - If the call was initiated by an element's inline event handler,\n        //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n        script = getSoleInlineScript();\n      }\n    }\n    return script;\n  }\n\n  // NOTE: This is a loose assumption that could be inaccurate!\n  //\n  // Inaccuracies:\n  //  - If a script is created dynamically and appended to some position\n  //    other than the very end of the document.\n  //  - If multiple scripts are created dynamically and all appended to the\n  //    same position within the document (and do not have their `async` attributes\n  //    set to `false`, at least in browsers that support async script evaluation.\n  //    other than the very end of the document.\n  //  - If any scripts are added with the `async` attribute set to `true` in a browser\n  //    that supports it.\n  //  - May get confused by `script` elements within `svg` elements\n  return scripts[scripts.length - 1] || null;\n*/\n}\n\n\n// Get the originating currently executing (i.e. yes, EXECUTING) `script` DOM\n// element or attribute node (e.g. `onclick`) for the caller function,\n// regardless of whether it is that `script` DOM element is currently being\n// evaluated for the first time. The originating currently executing `script`\n// DOM element [or attribute node] is the originator of the current execution stack.\nfunction _originatingExecutingScript() {\n  // TODO: Implement!\n  // Fixes #2\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/2\n  return null;\n}\n\n// Get the nearest currently executing (i.e. yes, EXECUTING) `script` DOM\n// element for the caller function, regardless of whether it is that `script`\n// DOM element is currently being evaluated for the first time.\nfunction _nearestExecutingScript() {\n  /*jshint noarg:false */\n\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\n  if (scripts.length === 0) {\n    return null;\n  }\n\n  var i, e, stack, url, script,\n      eligibleScripts = [],\n      skipStackDepth = _nearestExecutingScript.skipStackDepth || 1,\n\n      // TODO: Implement!\n      // Fixes #4 in part\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\n      callerFnSource = null;  //(\"\" + (_nearestExecutingScript.caller || \"\")) || null;\n\n  // This part will only help in IE 6-10.\n  for (i = 0; i < scripts.length; i++) {\n    if (isNotOpera && supportsScriptReadyState) {\n      if (scriptReadyRegex.test(scripts[i].readyState)) {\n        eligibleScripts.push(scripts[i]);\n      }\n    }\n    else {\n      eligibleScripts.push(scripts[i]);\n    }\n  }\n\n  e = new Error();\n  if (hasStackBeforeThrowing) {\n    stack = e.stack;\n  }\n  if (!stack && hasStackAfterThrowing) {\n    try {\n      throw e;\n    }\n    catch (err) {\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\n      stack = err.stack;\n    }\n  }\n\n  if (stack) {\n    url = getScriptUrlFromStack(stack, skipStackDepth);\n    script = getScriptFromUrl(url, eligibleScripts);\n\n    if (!script && pageUrl && url === pageUrl) {\n      // Try to find the correct inline script by searching through\n      // inline scripts' text content for the caller function's source\n      // code to be present.\n      if (callerFnSource) {\n        script = getInlineScriptFromCallerSource(callerFnSource, eligibleScripts);\n      }\n      // If the caller function's source code is not available, see if\n      // there is only one inline script element in the DOM and return\n      // that (even though it may be wrong)...\n      else {\n        // NOTE: This is a loose assumption that could be inaccurate!\n        //\n        // Inaccuracies:\n        //  - If the inline script that initiated the call was also removed from the DOM.\n        //  - If the call was initiated by an element's inline event handler,\n        //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n        script = getSoleInlineScript(eligibleScripts);\n      }\n    }\n  }\n\n  //\n  // Welcome to the Island of Inaccurate Assumptions!\n  // NOTE: ALL of the following are loose assumptions that could be inaccurate!\n  //\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If the inline script that initiated the call was also removed from the DOM.\n    //  - If the call was initiated by an element's inline event handler,\n    //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n    if (eligibleScripts.length === 1) {\n      script = eligibleScripts[0];\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    if (hasNativeCurrentScriptAccessor) {\n      script = document.currentScript;\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    if (isNotOpera && supportsScriptReadyState) {\n      for (i = eligibleScripts.length; i--; ) {\n        if (eligibleScripts[i].readyState === \"interactive\") {\n          script = eligibleScripts[i];\n          break;\n        }\n      }\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If a script is created dynamically and appended to some position\n    //    other than the very end of the document.\n    //  - If multiple scripts are created dynamically and all appended to the\n    //    same position within the document (and do not have their `async` attributes\n    //    set to `false`, at least in browsers that support async script evaluation.\n    //    other than the very end of the document.\n    //  - If any scripts are added with the `async` attribute set to `true` in a browser\n    //    that supports it.\n    //  - May get confused by `script` elements within `svg` elements\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    //    ```\n    script = eligibleScripts[eligibleScripts.length - 1] || null;\n  }\n\n  return script;\n}\n\n// Default stack depth to skip over when analyzing call stack frames\n_nearestExecutingScript.skipStackDepth = 1;\n\n\n\n    //\n    // Export the API\n    //\n    var currentExecutingScript    = _nearestExecutingScript;      // default\n    currentExecutingScript.near   = _nearestExecutingScript;\n    currentExecutingScript.far    = _farthestExecutingScript;\n    currentExecutingScript.origin = _originatingExecutingScript;\n\n\n    // Just return a value to define the module export.\n    // This example returns an object, but the module\n    // can return a function as the exported value.\n    return currentExecutingScript;\n  })\n);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","/* Copyright @ 2016-present 8x8, Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Logger = require('./Logger.js');\r\n\r\n/**\r\n * Creates new <tt>LogCollector</tt>. Class implements <tt>LoggerTransport</tt>\r\n * and thus can be added as global transport in order to capture all the logs.\r\n *\r\n * It captures subsequent log lines created whenever <tt>Logger</tt> logs\r\n * a message and stores them in a queue in order to batch log entries. There are\r\n * time and size limit constraints which determine how often batch entries are\r\n * stored. Whenever one of these limits is exceeded the <tt>LogCollector</tt>\r\n * will use the <tt>logStorage</tt> object given as an argument to save\r\n * the batch log entry.\r\n *\r\n * @param {Object} logStorage an object which allows to store the logs collected\r\n * @param {function(string|object[])} logStorage.storeLogs a method called when\r\n * this <tt>LogCollector</tt> requests log entry storage. The method's argument\r\n * is an array which can contain <tt>string</tt>s and <tt>object</tt>s. If given\r\n * item is an object it means that it's an aggregated message. That is a message\r\n * which is the same as the previous one and it's representation has\r\n * the following format:\r\n * {\r\n *   {string} text: 'the text of some duplicated message'\r\n *   {number} count: 3 // how many times the message appeared in a row\r\n * }\r\n * If a message \"B\" after an aggregated message \"A\" is different, then it breaks\r\n * the sequence of \"A\". Which means that even if the next message \"C\" is\r\n * the same as \"A\" it will start a new aggregated message \"C\".\r\n * @param {function()} logStorage.isReady a method which should return\r\n * a <tt>boolean</tt> to tell the collector that it's ready to store. During the\r\n * time storage is not ready log batches will be cached and stored on the next\r\n * occasion (flush or interval timeout).\r\n *\r\n * @param {Object} options the <tt>LogCollector</tt> configuration options.\r\n * @param {number} options.maxEntryLength the size limit for a single log entry\r\n * to be stored. The <tt>LogCollector</tt> will push the entry as soon as it\r\n * reaches or exceeds this limit given that <tt>logStorage.isReady</tt>\r\n * returns <tt>true</tt>. Otherwise the log entry will be cached until the log\r\n * storage becomes ready. Note that the \"is ready\" condition is checked every\r\n * <tt>options.storeInterval</tt> milliseconds.\r\n * @param {number} options.storeInterval how often the logs should be stored in\r\n * case <tt>maxEntryLength</tt> was not exceeded.\r\n * @param {boolean} options.stringifyObjects indicates whether or not object\r\n * arguments should be \"stringified\" with <tt>JSON.stringify</tt> when a log\r\n * message is composed. Note that objects logged on the error log level are\r\n * always stringified.\r\n *\r\n * @constructor\r\n */\r\nfunction LogCollector(logStorage, options) {\r\n    this.logStorage = logStorage;\r\n    this.stringifyObjects = options && options.stringifyObjects ? options.stringifyObjects : false;\r\n    this.storeInterval = options && options.storeInterval ? options.storeInterval: 30000;\r\n    this.maxEntryLength = options && options.maxEntryLength ? options.maxEntryLength : 10000;\r\n    // Bind the log method for each level to the corresponding method name\r\n    // in order to implement \"global log transport\" object.\r\n    Object.keys(Logger.levels).forEach(\r\n    function (logLevel) {\r\n        var methodName = Logger.levels[logLevel];\r\n        this[methodName] = function () {\r\n            this._log.apply(this, arguments);\r\n        }.bind(this, logLevel);\r\n    }.bind(this));\r\n    /**\r\n     * The ID of store logs interval if one is currently scheduled or\r\n     * <tt>null</tt> otherwise.\r\n     * @type {number|null}\r\n     */\r\n    this.storeLogsIntervalID = null;\r\n    /**\r\n     * The log messages that are to be batched into log entry when\r\n     * {@link LogCollector._flush} method is called.\r\n     * @type {string[]}\r\n     */\r\n    this.queue = [];\r\n    /**\r\n     * The total length of all messages currently stored in the {@link queue}.\r\n     * @type {number}\r\n     */\r\n    this.totalLen = 0;\r\n    /**\r\n     * An array used to temporarily store log batches, before the storage gets\r\n     * ready.\r\n     * @type {string[]}\r\n     */\r\n    this.outputCache = [];\r\n}\r\n\r\n/**\r\n * Method called inside of {@link formatLogMessage} in order to covert an\r\n * <tt>Object</tt> argument to string. The conversion will happen when either\r\n * 'stringifyObjects' option is enabled or on the {@link Logger.levels.ERROR}\r\n * log level. The default implementation uses <tt>JSON.stringify</tt> and\r\n * returns \"[object with circular refs?]\" instead of an object if it fails.\r\n *\r\n * @param {object} someObject the <tt>object</tt> to be stringified.\r\n *\r\n * @return {string} the result of <tt>JSON.stringify</tt> or\r\n * \"[object with circular refs?]\" if any error occurs during \"stringification\".\r\n *\r\n * @protected\r\n */\r\nLogCollector.prototype.stringify = function (someObject) {\r\n    try {\r\n        return JSON.stringify(someObject);\r\n    } catch (error) {\r\n        return '[object with circular refs?]';\r\n    }\r\n};\r\n\r\n/**\r\n * Formats log entry for the given logging level and arguments passed to the\r\n * <tt>Logger</tt>'s log method. The first argument is log level and the next\r\n * arguments have to be captured using JS built-in 'arguments' variable.\r\n *\r\n * @param {Logger.levels} logLevel provides the logging level of the message to\r\n * be logged.\r\n * @param {Date} timestamp - The {@code Date} when a message has been logged.\r\n *\r\n * @return {string|null} a non-empty string representation of the log entry\r\n * crafted from the log arguments. If the return value is <tt>null</tt> then\r\n * the message wil be discarded by this <tt>LogCollector</tt>.\r\n *\r\n * @protected\r\n */\r\nLogCollector.prototype.formatLogMessage = function (\r\nlogLevel /* timestamp, arg2, arg3, arg4... */) {\r\n    var msg = '';\r\n    for (var i = 1, len = arguments.length; i < len; i++) {\r\n        var arg = arguments[i];\r\n        // objects logged on error level are always converted to JSON\r\n        if ((this.stringifyObjects || logLevel === Logger.levels.ERROR) &&\r\n            typeof arg === 'object') {\r\n            arg = this.stringify(arg);\r\n        }\r\n        msg += arg;\r\n        if (i !== len - 1) {\r\n            msg += ' ';\r\n        }\r\n    }\r\n    return msg.length ? msg : null;\r\n};\r\n\r\n/**\r\n * The log method bound to each of the logging levels in order to implement\r\n * \"global log transport\" object.\r\n *\r\n * @private\r\n */\r\nLogCollector.prototype._log = function() {\r\n\r\n    // var logLevel = arguments[0]; first argument is the log level\r\n    var timestamp = arguments[1];\r\n    var msg = this.formatLogMessage.apply(this, arguments);\r\n    if (msg) {\r\n        // The same as the previous message aggregation logic\r\n        var prevMessage = this.queue[this.queue.length - 1];\r\n        var prevMessageText = prevMessage && prevMessage.text;\r\n        if (prevMessageText === msg) {\r\n            prevMessage.count += 1;\r\n        } else {\r\n            this.queue.push({\r\n                text: msg,\r\n                timestamp: timestamp,\r\n                count: 1\r\n            });\r\n            this.totalLen += msg.length;\r\n        }\r\n    }\r\n\r\n    if (this.totalLen >= this.maxEntryLength) {\r\n        this._flush(true /* force */, true /* reschedule */);\r\n    }\r\n};\r\n\r\n/**\r\n * Starts periodical \"store logs\" task which will be triggered at the interval\r\n * specified in the constructor options.\r\n */\r\nLogCollector.prototype.start = function () {\r\n    this._reschedulePublishInterval();\r\n};\r\n\r\n/**\r\n * Reschedules the periodical \"store logs\" task which will store the next batch\r\n * log entry in the storage.\r\n * @private\r\n */\r\nLogCollector.prototype._reschedulePublishInterval = function () {\r\n    if (this.storeLogsIntervalID) {\r\n        window.clearTimeout(this.storeLogsIntervalID);\r\n        this.storeLogsIntervalID = null;\r\n    }\r\n    // It's actually a timeout, because it is rescheduled on every flush\r\n    this.storeLogsIntervalID = window.setTimeout(\r\n        this._flush.bind(\r\n            this, false /* do not force */, true /* reschedule */),\r\n        this.storeInterval);\r\n};\r\n\r\n/**\r\n * Call this method to flush the log entry buffer and store it in the log\r\n * storage immediately (given that the storage is ready).\r\n */\r\nLogCollector.prototype.flush = function() {\r\n    this._flush(\r\n        false /* do not force, as it will not be stored anyway */,\r\n        true /* reschedule next update */ );\r\n};\r\n\r\n/**\r\n * Stores the next batch log entry in the log storage.\r\n * @param {boolean} force enforce current logs batch to be stored or cached if\r\n * there is anything to be logged, but the storage is not ready yet. One of\r\n * legitimate reasons to force is when the logs length exceeds size limit which\r\n * could result in truncation.\r\n * @param {boolean} reschedule <tt>true</tt> if the next periodic task should be\r\n * scheduled after the log entry is stored. <tt>false</tt> will end the periodic\r\n * task cycle.\r\n * @private\r\n */\r\nLogCollector.prototype._flush = function(force, reschedule) {\r\n    // Publish only if there's anything to be logged\r\n    if (this.totalLen > 0 && (this.logStorage.isReady() || force)) {\r\n        //FIXME avoid truncating\r\n        // right now we don't care if the message size is \"slightly\" exceeded\r\n        if (this.logStorage.isReady()) {\r\n            // Sends all cached logs\r\n            if (this.outputCache.length) {\r\n                this.outputCache.forEach(\r\n                    function (cachedQueue) {\r\n                        this.logStorage.storeLogs(cachedQueue);\r\n                    }.bind(this)\r\n                );\r\n                // Clear the cache\r\n                this.outputCache = [];\r\n            }\r\n            // Send current batch\r\n            this.logStorage.storeLogs(this.queue);\r\n        } else {\r\n            this.outputCache.push(this.queue);\r\n        }\r\n\r\n        this.queue = [];\r\n        this.totalLen = 0;\r\n    }\r\n\r\n    if (reschedule) {\r\n        this._reschedulePublishInterval();\r\n    }\r\n};\r\n\r\n/**\r\n * Stops the periodical \"store logs\" task and immediately stores any pending\r\n * log entries as a batch.\r\n */\r\nLogCollector.prototype.stop = function() {\r\n    // Flush and stop publishing logs\r\n    this._flush(false /* do not force */, false /* do not reschedule */);\r\n};\r\n\r\nmodule.exports = LogCollector;\r\n","/* Copyright @ 2015-present 8x8, Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/*jslint latedef:false*/\r\n\r\n/**\r\n * Ordered log levels.\r\n */\r\nvar levels = {\r\n    \"trace\": 0,\r\n    \"debug\": 1,\r\n    \"info\": 2,\r\n    \"log\": 3,\r\n    \"warn\": 4,\r\n    \"error\": 5\r\n};\r\n\r\n/**\r\n * The default transport - console\r\n * @type LoggerTransport\r\n */\r\nLogger.consoleTransport = console;\r\n\r\n/**\r\n * The array which stores currently registered global transports.\r\n * @type {[LoggerTransport]}\r\n */\r\nvar globalTransports = [ Logger.consoleTransport ];\r\n\r\n/**\r\n * Adds given {@link LoggerTransport} instance to the list of global\r\n * transports which means that it'll be used by all {@link Logger}s\r\n * @param {LoggerTransport} transport\r\n */\r\nLogger.addGlobalTransport = function(transport) {\r\n    if (globalTransports.indexOf(transport) === -1) {\r\n        globalTransports.push(transport);\r\n    }\r\n};\r\n\r\n/**\r\n * Removes given {@link LoggerTransport} instance from the list of global\r\n * transports\r\n * @param {LoggerTransport} transport\r\n */\r\nLogger.removeGlobalTransport = function(transport) {\r\n    var transportIdx = globalTransports.indexOf(transport);\r\n    if (transportIdx !== -1) {\r\n        globalTransports.splice(transportIdx, 1);\r\n    }\r\n};\r\n\r\n/**\r\n * The global configuration options.\r\n */\r\nvar globalOptions = {};\r\n\r\n/**\r\n * Sets global options which will be used by all loggers. Changing these works\r\n * even after other loggers are created.\r\n */\r\nLogger.setGlobalOptions = function(options) {\r\n    globalOptions = options || {};\r\n};\r\n\r\n/**\r\n * Parses Error's object stack trace and extracts information about the last\r\n * caller before the log method was called.\r\n * @returns JS object with info about the caller - method name, file location,\r\n * line and column.\r\n */\r\nfunction getCallerInfo() {\r\n    var callerInfo = {\r\n        methodName: \"\",\r\n        fileLocation: \"\",\r\n        line: null,\r\n        column: null\r\n    };\r\n    //gets the part of the stack without the logger wrappers\r\n    var error = new Error();\r\n    var stack = error.stack? error.stack.split(\"\\n\") : [];\r\n    if(!stack || stack.length < 1) {\r\n        return callerInfo;\r\n    }\r\n    var m = null;\r\n    if(stack[3]) {\r\n        m = stack[3].match(/\\s*at\\s*(.+?)\\s*\\((\\S*)\\s*:(\\d*)\\s*:(\\d*)\\)/);\r\n    }\r\n    if(!m || m.length <= 4) {\r\n        //Firefox && Safari\r\n        if(stack[2].indexOf(\"log@\") === 0){\r\n            //Safari\r\n            callerInfo.methodName = stack[3].substr(0, stack[3].indexOf(\"@\"));\r\n        } else {\r\n            //Firefox\r\n            callerInfo.methodName = stack[2].substr(0, stack[2].indexOf(\"@\"));\r\n        }\r\n        return callerInfo;\r\n    }\r\n\r\n    callerInfo.methodName = m[1];\r\n    callerInfo.fileLocation = m[2];\r\n    callerInfo.line = m[3];\r\n    callerInfo.column = m[4];\r\n    return callerInfo;\r\n}\r\n\r\n/**\r\n * Logs messages using the transports and level from the logger.\r\n * @param logger a logger instance.\r\n * @param level the log level of the message. See the levels variable.\r\n * @param arguments array with arguments that will be logged.\r\n */\r\nfunction log() {\r\n    var logger = arguments[0], level = arguments[1],\r\n        args = Array.prototype.slice.call(arguments, 2);\r\n    if(levels[level] < logger.level) {\r\n        return;\r\n    }\r\n\r\n    var callerInfo\r\n        = !(logger.options.disableCallerInfo || globalOptions.disableCallerInfo) &&\r\n            getCallerInfo();\r\n    var transports = globalTransports.concat(logger.transports);\r\n    for(var i = 0; i < transports.length; i++) {\r\n        var t = transports[i];\r\n        var l = t[level];\r\n        if(l && typeof(l) === \"function\") {\r\n            var logPrefixes = [];\r\n\r\n            logPrefixes.push(new Date().toISOString());\r\n\r\n            if (logger.id) {\r\n                logPrefixes.push(\"[\" + logger.id + \"]\");\r\n            }\r\n\r\n            if (callerInfo && callerInfo.methodName.length > 1) {\r\n                logPrefixes.push(\"<\" + callerInfo.methodName + \">: \");\r\n            }\r\n\r\n            var fullLogParts = logPrefixes.concat(args);\r\n\r\n            l.bind(t).apply(t, fullLogParts);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * Constructs new logger object.\r\n * @param level the logging level for the new logger\r\n * @param id optional identifier for the logger instance.\r\n * @param {LoggerTransport} transports optional list of handlers(objects) for\r\n * the logs. The handlers must support - log, warn, error, debug, info, trace.\r\n * @param options optional configuration file for how the logger should behave.\r\n * @param {boolean} options.disableCallerInfo Whether the call site of a logger\r\n * method invocation should be included in the log. Defaults to false, so the\r\n * call site will be included.\r\n */\r\nfunction Logger(level, id, transports, options) {\r\n    this.id = id;\r\n    this.options = options || {};\r\n    this.transports = transports;\r\n    if(!this.transports) {\r\n        this.transports = [];\r\n    }\r\n    this.level = levels[level];\r\n    var methods = Object.keys(levels);\r\n    for(var i = 0; i < methods.length; i++){\r\n        this[methods[i]] =\r\n            log.bind(null, this, methods[i]);\r\n    }\r\n}\r\n\r\n/**\r\n * Sets the log level for the logger.\r\n * @param level the new log level.\r\n */\r\nLogger.prototype.setLevel = function (level) {\r\n    this.level = levels[level];\r\n};\r\nmodule.exports = Logger;\r\n\r\n/**\r\n * Enum for the supported log levels.\r\n */\r\nLogger.levels = {\r\n    TRACE: \"trace\",\r\n    DEBUG: \"debug\",\r\n    INFO: \"info\",\r\n    LOG: \"log\",\r\n    WARN: \"warn\",\r\n    ERROR: \"error\"\r\n};\r\n","/* Copyright @ 2015-present 8x8, Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Logger = require(\"./Logger\");\r\nvar LogCollector = require(\"./LogCollector\");\r\n\r\n/**\r\n * Definition of the log method\r\n * @name log_method\r\n * @function\r\n * @param {...*} log_args the arguments to be logged\r\n */\r\n/**\r\n * The logger's transport type definition.\r\n *\r\n * @typedef {object} LoggerTransport\r\n *\r\n * @property {log_method} trace method called to log on {@link Logger.levels.TRACE} logging level\r\n * @property {log_method} debug method called to log on {@link Logger.levels.DEBUG} logging level\r\n * @property {log_method} info method called to log on {@link Logger.levels.INFO} logging level\r\n * @property {log_method} log method called to log on {@link Logger.levels.LOG} logging level\r\n * @property {log_method} warn method called to log on {@link Logger.levels.WARN} logging level\r\n * @property {log_method} error method called to log on {@link Logger.levels.ERROR} logging level\r\n */\r\n\r\n/**\r\n * Map with the created loggers with ID.\r\n */\r\nvar idLoggers = {};\r\n\r\n/**\r\n * Array with the loggers without id.\r\n */\r\nvar loggers = [];\r\n\r\n/**\r\n * Log level for the lbrary.\r\n */\r\nvar curLevel = Logger.levels.TRACE;\r\n\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Adds given {@link LoggerTransport} instance to the list of global\r\n     * transports which means that it'll be used by all {@link Logger}s\r\n     * @param {LoggerTransport} transport\r\n     */\r\n    addGlobalTransport: function(transport) {\r\n        Logger.addGlobalTransport(transport);\r\n    },\r\n    /**\r\n     * Removes given {@link LoggerTransport} instance from the list of global\r\n     * transports\r\n     * @param {LoggerTransport} transport\r\n     */\r\n    removeGlobalTransport: function(transport) {\r\n        Logger.removeGlobalTransport(transport);\r\n    },\r\n    /**\r\n    * Sets global options which will be used by all loggers. Changing these\r\n    * works even after other loggers are created.\r\n    */\r\n    setGlobalOptions: function(options) {\r\n        Logger.setGlobalOptions(options);\r\n    },\r\n    /**\r\n     * Creates new logger.\r\n     * @arguments the same as Logger constructor\r\n     */\r\n    getLogger: function(id, transports, options) {\r\n        var logger = new Logger(curLevel, id, transports, options);\r\n        if(id) {\r\n            idLoggers[id] = idLoggers[id] || [];\r\n            idLoggers[id].push(logger);\r\n        } else {\r\n            loggers.push(logger);\r\n        }\r\n        return logger;\r\n    },\r\n    /**\r\n     * Changes the log level for the existing loggers by id.\r\n     * @param level the new log level.\r\n     * @param id if specified the level will be changed only for loggers with the\r\n     * same id. Otherwise the operation will affect all loggers that don't\r\n     * have id.\r\n     */\r\n    setLogLevelById: function(level, id) {\r\n        var l = id? (idLoggers[id] || []) : loggers;\r\n        for(var i = 0; i < l.length; i++) {\r\n            l[i].setLevel(level);\r\n        }\r\n    },\r\n    /**\r\n     * Changes the log level for all existing loggers.\r\n     * @param level the new log level.\r\n     */\r\n    setLogLevel: function (level) {\r\n        curLevel = level;\r\n        var i = 0;\r\n        for(; i < loggers.length; i++) {\r\n            loggers[i].setLevel(level);\r\n        }\r\n\r\n        for(var id in idLoggers) {\r\n            var l = idLoggers[id] || [];\r\n            for(i = 0; i < l.length; i++) {\r\n                l[i].setLevel(level);\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * The supported log levels.\r\n     */\r\n    levels: Logger.levels,\r\n    /**\r\n     * Exports the <tt>LogCollector</tt>.\r\n     */\r\n    LogCollector: LogCollector\r\n};\r\n","/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.7.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_MD5_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [128, 32768, 8388608, -2147483648];\n  var SHIFT = [0, 8, 16, 24];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];\n  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n  var blocks = [], buffer8;\n  if (ARRAY_BUFFER) {\n    var buffer = new ArrayBuffer(68);\n    buffer8 = new Uint8Array(buffer);\n    blocks = new Uint32Array(buffer);\n  }\n\n  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  /**\n   * @method hex\n   * @memberof md5\n   * @description Output hash as hex string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} Hex string\n   * @example\n   * md5.hex('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * md5('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method digest\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.digest('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method array\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.array('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method arrayBuffer\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.buffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method base64\n   * @memberof md5\n   * @description Output hash as base64 string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} base64 string\n   * @example\n   * md5.base64('The quick brown fox jumps over the lazy dog');\n   */\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Md5(true).update(message)[outputType]();\n    };\n  };\n\n  /**\n   * @method create\n   * @memberof md5\n   * @description Create Md5 object\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.create();\n   */\n  /**\n   * @method update\n   * @memberof md5\n   * @description Create and update Md5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.update('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * var hash = md5.create();\n   * hash.update('The quick brown fox jumps over the lazy dog');\n   */\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Md5();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('md5').update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw ERROR;\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  /**\n   * Md5 class\n   * @class Md5\n   * @description This is internal class.\n   * @see {@link md5.create}\n   */\n  function Md5(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n      this.buffer8 = buffer8;\n    } else {\n      if (ARRAY_BUFFER) {\n        var buffer = new ArrayBuffer(68);\n        this.buffer8 = new Uint8Array(buffer);\n        this.blocks = new Uint32Array(buffer);\n      } else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      }\n    }\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  /**\n   * @method update\n   * @memberof Md5\n   * @instance\n   * @description Update hash\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @see {@link md5.update}\n   */\n  Md5.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw ERROR;\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw ERROR;\n          }\n        }\n      } else {\n        throw ERROR;\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    var buffer8 = this.buffer8;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = blocks[16];\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            buffer8[i++] = message[index];\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        }\n      } else {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              buffer8[i++] = code;\n            } else if (code < 0x800) {\n              buffer8[i++] = 0xc0 | (code >> 6);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else if (code < 0xd800 || code >= 0xe000) {\n              buffer8[i++] = 0xe0 | (code >> 12);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              buffer8[i++] = 0xf0 | (code >> 18);\n              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            }\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            }\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Md5.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = blocks[16];\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.bytes << 3;\n    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;\n    this.hash();\n  };\n\n  Md5.prototype.hash = function () {\n    var a, b, c, d, bc, da, blocks = this.blocks;\n\n    if (this.first) {\n      a = blocks[0] - 680876937;\n      a = (a << 7 | a >>> 25) - 271733879 << 0;\n      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\n      b = (b << 22 | b >>> 10) + c << 0;\n    } else {\n      a = this.h0;\n      b = this.h1;\n      c = this.h2;\n      d = this.h3;\n      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\n      a = (a << 7 | a >>> 25) + b << 0;\n      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\n      b = (b << 22 | b >>> 10) + c << 0;\n    }\n\n    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\n    b = (b << 20 | b >>> 12) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[5] - 378558;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[8] - 2022574463;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[11] + 1839030562;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[14] - 35309556;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[1] - 1530992060;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[4] + 1272893353;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[7] - 155497632;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[10] - 1094730640;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[13] + 681279174;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[0] - 358537222;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[3] - 722521979;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[6] + 76029189;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[9] - 640364487;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[12] - 421815835;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[15] + 530742520;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[2] - 995338651;\n    b = (b << 23 | b >>> 9) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[0] - 198630844;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[5] - 57434055;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[10] - 1051523;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[15] - 30611744;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[4] - 145523070;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[2] + 718787259;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[9] - 343485551;\n    b = (b << 21 | b >>> 11) + c << 0;\n\n    if (this.first) {\n      this.h0 = a + 1732584193 << 0;\n      this.h1 = b - 271733879 << 0;\n      this.h2 = c - 1732584194 << 0;\n      this.h3 = d + 271733878 << 0;\n      this.first = false;\n    } else {\n      this.h0 = this.h0 + a << 0;\n      this.h1 = this.h1 + b << 0;\n      this.h2 = this.h2 + c << 0;\n      this.h3 = this.h3 + d << 0;\n    }\n  };\n\n  /**\n   * @method hex\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.hex();\n   */\n  Md5.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n\n    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\n  };\n\n  /**\n   * @method toString\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.toString();\n   */\n  Md5.prototype.toString = Md5.prototype.hex;\n\n  /**\n   * @method digest\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.digest}\n   * @example\n   * hash.digest();\n   */\n  Md5.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n    return [\n      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\n      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\n      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\n      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\n    ];\n  };\n\n  /**\n   * @method array\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.array}\n   * @example\n   * hash.array();\n   */\n  Md5.prototype.array = Md5.prototype.digest;\n\n  /**\n   * @method arrayBuffer\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.arrayBuffer}\n   * @example\n   * hash.arrayBuffer();\n   */\n  Md5.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(16);\n    var blocks = new Uint32Array(buffer);\n    blocks[0] = this.h0;\n    blocks[1] = this.h1;\n    blocks[2] = this.h2;\n    blocks[3] = this.h3;\n    return buffer;\n  };\n\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.buffer}\n   * @example\n   * hash.buffer();\n   */\n  Md5.prototype.buffer = Md5.prototype.arrayBuffer;\n\n  /**\n   * @method base64\n   * @memberof Md5\n   * @instance\n   * @description Output hash as base64 string\n   * @returns {String} base64 string\n   * @see {@link md5.base64}\n   * @example\n   * hash.base64();\n   */\n  Md5.prototype.base64 = function () {\n    var v1, v2, v3, base64Str = '', bytes = this.array();\n    for (var i = 0; i < 15;) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +\n        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +\n        BASE64_ENCODE_CHAR[v3 & 63];\n    }\n    v1 = bytes[i];\n    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +\n      '==';\n    return base64Str;\n  };\n\n  var exports = createMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    /**\n     * @method md5\b\n     * @description Md5 hash function, export to global in browsers.\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n     * @returns {String} md5 hashes\n     * @example\n     * md5(''); // d41d8cd98f00b204e9800998ecf8427e\n     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6\n     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0\n     *\n     * // It also supports UTF-8 encoding\n     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07\n     *\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\n     * md5([]); // d41d8cd98f00b204e9800998ecf8427e\n     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\n     */\n    root.md5 = exports;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","// @flow\r\n\r\nimport md5 from 'js-md5';\r\n\r\n/**\r\n * Returns the Avatar URL to be used for the participant.\r\n *\r\n * @param {string} [participant.avatarID] - Participant's avatar ID.\r\n * @param {string} [participant.email] - Participant's e-mail address.\r\n * @param {string} [participant.id] - Participant's ID.\r\n * @param {string} [avatarService.urlPrefix] - URL Prefix of the avatar service.\r\n * @param {string} [avatarService.urlSuffix] - URL Suffix of the avatar service.\r\n * @returns {string} - Avatar URL.\r\n */\r\nexport function getAvatarURL({ avatarID, email, id }: {\r\n        avatarID: string,\r\n        email: string,\r\n        id: string\r\n}, { urlPrefix, urlSuffix }: {\r\n        urlPrefix: string,\r\n        urlSuffix: string\r\n} = {\r\n    urlPrefix: 'https://abotars.jitsi.net/meeple/',\r\n    urlSuffix: ''\r\n}) {\r\n    return getGravatarURL(email)\r\n        || generateAvatarURL(avatarID || id, urlPrefix, urlSuffix);\r\n}\r\n\r\n/**\r\n * Returns the Avatar URL generated from the given avatar service.\r\n *\r\n * @param {string} key - Key using which avatar has to be generated.\r\n * @param {string} urlPrefix - URL Prefix of the avatar service to be used.\r\n * @param {string} urlSuffix - URL Suffix of the avatar service to be used.\r\n * @returns {string}\r\n */\r\nfunction generateAvatarURL(key: string, urlPrefix: string, urlSuffix: string) {\r\n    return urlPrefix + md5.hex(key.trim().toLowerCase()) + urlSuffix;\r\n}\r\n\r\n/**\r\n * Returns the Gravatar URL of a given email id.\r\n *\r\n * @param {string} key - Email or id for which we need gravatar url.\r\n * @returns {string} - Gravatar URL.\r\n */\r\nexport function getGravatarURL(key: string) {\r\n    const urlPrefix = 'https://www.gravatar.com/avatar/';\r\n    const urlSuffix = '?d=404&size=200';\r\n\r\n    // If the key is a valid email, we hash it. If it's not, we assume it's already a hashed format\r\n    const avatarKey = isValidEmail(key) ? md5.hex(key.trim().toLowerCase()) : key;\r\n\r\n    return `${urlPrefix}${avatarKey}${urlSuffix}`;\r\n}\r\n\r\n/**\r\n * Returns if the email id is valid.\r\n *\r\n * @param {string} email - Email id to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isValidEmail(email: string) {\r\n    return email && email.indexOf('@') > 0;\r\n}\r\n","import { BrowserDetection } from '../browser-detection';\r\n\r\n// TODO: Move BrowserCapabilities from lib-jitsi-meet here and use the JSON\r\n// format for them.\r\n\r\n/**\r\n * Implements browser capabilities for lib-jitsi-meet.\r\n */\r\nexport default class BrowserCapabilities {\r\n    /**\r\n     * Creates new BrowserCapabilities instance.\r\n     *\r\n     * @param {Object} capabilitiesDB - The JSON database with capabilities.\r\n     * @param {boolean} [isUsingIFrame] - True if Jitsi Meet is loaded in iframe\r\n     * and false otherwise.\r\n     * @param {Object} [browserInfo] - Information about the browser.\r\n     * @param {string} browserInfo.name - The name of the browser.\r\n     * @param {string} browserInfo.version - The version of the browser.\r\n     */\r\n    constructor(capabilitiesDB = {}, isUsingIFrame = false, browserInfo) {\r\n        const browser = new BrowserDetection(browserInfo);\r\n        let capabilitiesByVersion;\r\n\r\n        // If the capabilitiesDB is not in the correct format or the type of the\r\n        // version of the browser is undefined(the version is unknown) or the\r\n        // version type is not compatible (not a string) we'll consider the\r\n        // browser as not supported.\r\n        if (typeof capabilitiesDB === 'object'\r\n                && typeof browser.getVersion() === 'string') {\r\n            const browserCapabilities = capabilitiesDB[browser.getName()] || [];\r\n\r\n            for (let i = 0; i < browserCapabilities.length; i++) {\r\n                const capabilities = browserCapabilities[i];\r\n\r\n                if (typeof capabilities !== 'object') {\r\n                    // eslint-disable-next-line no-continue\r\n                    continue;\r\n                }\r\n\r\n                const version = capabilities.version;\r\n\r\n                if (!version || !browser.isVersionGreaterThan(version)) {\r\n                    capabilitiesByVersion = capabilities;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!capabilitiesByVersion || !capabilitiesByVersion.capabilities) {\r\n            this._capabilities = { isSupported: false };\r\n        } else if (isUsingIFrame) {\r\n            this._capabilities = {\r\n                ...capabilitiesByVersion.capabilities,\r\n                ...capabilitiesByVersion.iframeCapabilities\r\n            };\r\n        } else {\r\n            this._capabilities = capabilitiesByVersion.capabilities;\r\n        }\r\n\r\n        if (typeof this._capabilities.isSupported === 'undefined') {\r\n            // we have some capabilities but isSupported property is not filled.\r\n            this._capabilities.isSupported = true;\r\n        } else if (this._capabilities.isSupported === false) {\r\n            // Clean the other capabilities.\r\n            this._capabilities = { isSupported: false };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks whether the browser is supported by Jitsi Meet.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    isSupported() {\r\n        return this._capabilities.isSupported;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the browser supports incoming audio.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    supportsAudioIn() {\r\n        return this._capabilities.audioIn || false;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the browser supports outgoing audio.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    supportsAudioOut() {\r\n        return this._capabilities.audioOut || false;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks whether the browser supports screen sharing.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    supportsScreenSharing() {\r\n        return this._capabilities.screenSharing || false;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the browser supports incomming video.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    supportsVideoIn() {\r\n        return this._capabilities.videoIn || false;\r\n    }\r\n\r\n    /**\r\n     * Checks whether the browser supports incomming video.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    supportsVideoOut() {\r\n        return this._capabilities.videoOut || false;\r\n    }\r\n}\r\n","export { default as BrowserCapabilities } from './BrowserCapabilities';\r\n","import Bowser from 'bowser';\r\n\r\nimport {\r\n    CHROME,\r\n    OPERA,\r\n    FIREFOX,\r\n    INTERNET_EXPLORER,\r\n    SAFARI,\r\n    NWJS,\r\n    ELECTRON,\r\n    REACT_NATIVE,\r\n    UNKNOWN\r\n} from './browsers';\r\n\r\n/**\r\n * Maps the names of the browsers from bowser to the internal names defined in\r\n * ./browsers.js\r\n */\r\nconst bowserNameToJitsiName = {\r\n    'Chrome': CHROME,\r\n    'Chromium': CHROME,\r\n    'Opera': OPERA,\r\n    'Firefox': FIREFOX,\r\n    'Internet Explorer': INTERNET_EXPLORER,\r\n    'Safari': SAFARI\r\n};\r\n\r\n/**\r\n * Detects a Chromium based environent.\r\n *\r\n * NOTE: Here we cannot check solely for \"Chrome\" in the UA, because Edge has\r\n * it too. We need to check explicitly for chromium based Edge first and then\r\n * detect other chromium based browsers.\r\n *\r\n * @returns {Object|undefined} - The name (CHROME) and version.\r\n */\r\nfunction _detectChromiumBased() {\r\n    const userAgent = navigator.userAgent;\r\n    const browserInfo = {\r\n        name: UNKNOWN,\r\n        version: undefined\r\n    };\r\n\r\n    if (userAgent.match(/Chrome/) && !userAgent.match(/Edge/)) {\r\n        // Edge is currenly supported only on desktop and android.\r\n        if (userAgent.match(/Edg(A?)/)) {\r\n            // Compare the underlying chromium version.\r\n            const version = userAgent.match(/Chrome\\/([\\d.]+)/)[1];\r\n\r\n            if (Number.parseInt(version, 10) > 72) {\r\n                browserInfo.name = CHROME;\r\n                browserInfo.version = version;\r\n            }\r\n        } else {\r\n            browserInfo.name = CHROME;\r\n            browserInfo.version = userAgent.match(/Chrome\\/([\\d.]+)/)[1];\r\n        }\r\n    }\r\n\r\n    return browserInfo;\r\n}\r\n\r\n/**\r\n * Detects Electron environment.\r\n *\r\n * @returns {Object|undefined} - The name (ELECTRON) and version.\r\n */\r\nfunction _detectElectron() {\r\n    const userAgent = navigator.userAgent;\r\n\r\n    if (userAgent.match(/Electron/)) {\r\n        const version = userAgent.match(/Electron\\/([\\d.]+)/)[1];\r\n\r\n        return {\r\n            name: ELECTRON,\r\n            version\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Detects NWJS environment.\r\n *\r\n * @returns {Object|undefined} - The name (NWJS) and version.\r\n */\r\nfunction _detectNWJS() {\r\n    const userAgent = navigator.userAgent;\r\n\r\n    if (userAgent.match(/JitsiMeetNW/)) {\r\n        const version = userAgent.match(/JitsiMeetNW\\/([\\d.]+)/)[1];\r\n\r\n        return {\r\n            name: NWJS,\r\n            version\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Detects React Native environment.\r\n * @returns {Object|undefined} - The name (REACT_NATIVE) and version.\r\n */\r\nfunction _detectReactNative() {\r\n    const match\r\n        = navigator.userAgent.match(/\\b(react[ \\t_-]*native)(?:\\/(\\S+))?/i);\r\n    let version;\r\n\r\n    // If we're remote debugging a React Native app, it may be treated as\r\n    // Chrome. Check navigator.product as well and always return some version\r\n    // even if we can't get the real one.\r\n\r\n    if (match || navigator.product === 'ReactNative') {\r\n        let name;\r\n\r\n        if (match && match.length > 2) {\r\n            name = match[1];\r\n            version = match[2];\r\n        }\r\n        name || (name = 'react-native');\r\n        version || (version = 'unknown');\r\n\r\n        return {\r\n            name: REACT_NATIVE,\r\n            version\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * Returns information about the current browser.\r\n * @param {Object} - The bowser instance.\r\n * @returns {Object} - The name and version of the browser.\r\n */\r\nfunction _detect(bowser) {\r\n    let browserInfo;\r\n    const detectors = [\r\n        _detectReactNative,\r\n        _detectElectron,\r\n        _detectNWJS\r\n    ];\r\n\r\n    // Try all browser detectors\r\n    for (let i = 0; i < detectors.length; i++) {\r\n        browserInfo = detectors[i]();\r\n        if (browserInfo) {\r\n            return browserInfo;\r\n        }\r\n    }\r\n\r\n    const name = bowser.getBrowserName();\r\n\r\n    if (name in bowserNameToJitsiName) {\r\n        return {\r\n            name: bowserNameToJitsiName[name],\r\n            version: bowser.getBrowserVersion()\r\n        };\r\n    }\r\n\r\n    // Detect other browsers with the Chrome engine, such as Vivaldi and Brave.\r\n    browserInfo = _detectChromiumBased();\r\n    if (browserInfo) {\r\n        return browserInfo;\r\n    }\r\n\r\n    return {\r\n        name: UNKNOWN,\r\n        version: undefined\r\n    };\r\n}\r\n\r\n/**\r\n * Implements browser detection.\r\n */\r\nexport default class BrowserDetection {\r\n    /**\r\n     * Creates new BrowserDetection instance.\r\n     *\r\n     * @param {Object} [browserInfo] - Information about the browser.\r\n     * @param {string} browserInfo.name - The name of the browser.\r\n     * @param {string} browserInfo.version - The version of the browser.\r\n     */\r\n    constructor(browserInfo) {\r\n        let name, version;\r\n\r\n        this._bowser = Bowser.getParser(navigator.userAgent);\r\n        if (typeof browserInfo === 'undefined') {\r\n            const detectedBrowserInfo = _detect(this._bowser);\r\n\r\n            name = detectedBrowserInfo.name;\r\n            version = detectedBrowserInfo.version;\r\n        } else if (browserInfo.name in bowserNameToJitsiName) {\r\n            name = bowserNameToJitsiName[browserInfo.name];\r\n            version = browserInfo.version;\r\n        } else {\r\n            name = UNKNOWN;\r\n            version = undefined;\r\n        }\r\n\r\n        this._name = name;\r\n        this._version = version;\r\n    }\r\n\r\n    /**\r\n     * Gets current browser name.\r\n     * @returns {string}\r\n     */\r\n    getName() {\r\n        return this._name;\r\n    }\r\n\r\n    /**\r\n     * Checks if current browser is Chrome.\r\n     * @returns {boolean}\r\n     */\r\n    isChrome() {\r\n        return this._name === CHROME;\r\n    }\r\n\r\n    /**\r\n     * Checks if current browser is Opera.\r\n     * @returns {boolean}\r\n     */\r\n    isOpera() {\r\n        return this._name === OPERA;\r\n    }\r\n\r\n    /**\r\n     * Checks if current browser is Firefox.\r\n     * @returns {boolean}\r\n     */\r\n    isFirefox() {\r\n        return this._name === FIREFOX;\r\n    }\r\n\r\n    /**\r\n     * Checks if current browser is Internet Explorer.\r\n     * @returns {boolean}\r\n     */\r\n    isIExplorer() {\r\n        return this._name === INTERNET_EXPLORER;\r\n    }\r\n\r\n    /**\r\n     * Checks if current browser is Safari.\r\n     * @returns {boolean}\r\n     */\r\n    isSafari() {\r\n        return this._name === SAFARI;\r\n    }\r\n\r\n    /**\r\n     * Checks if current environment is NWJS.\r\n     * @returns {boolean}\r\n     */\r\n    isNWJS() {\r\n        return this._name === NWJS;\r\n    }\r\n\r\n    /**\r\n     * Checks if current environment is Electron.\r\n     * @returns {boolean}\r\n     */\r\n    isElectron() {\r\n        return this._name === ELECTRON;\r\n    }\r\n\r\n    /**\r\n     * Checks if current environment is React Native.\r\n     * @returns {boolean}\r\n     */\r\n    isReactNative() {\r\n        return this._name === REACT_NATIVE;\r\n    }\r\n\r\n    /**\r\n     * Returns the version of the current browser.\r\n     * @returns {string}\r\n     */\r\n    getVersion() {\r\n        return this._version;\r\n    }\r\n\r\n    /**\r\n     * Check if the parsed browser matches the passed condition.\r\n     *\r\n     * @param {Object} checkTree - It's one or two layered object, which can include a\r\n     * platform or an OS on the first layer and should have browsers specs on the\r\n     * bottom layer.\r\n     * Eg. { chrome: '>71.1.0' }\r\n     *     { windows: { chrome: '<70.2' } }\r\n     * @returns {boolean | undefined} - Returns true if the browser satisfies the set\r\n     * conditions, false if not and undefined when the browser is not defined in the\r\n     * checktree object or when the current browser's version is unknown.\r\n     * @private\r\n     */\r\n    _checkCondition(checkTree) {\r\n        if (this._version) {\r\n            return this._bowser.satisfies(checkTree);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Compares the passed version with the current browser version.\r\n     *\r\n     * @param {*} version - The version to compare with. Anything different\r\n     * than string will be converted to string.\r\n     * @returns {boolean|undefined} - Returns true if the current version is\r\n     * greater than the passed version and false otherwise. Returns undefined if\r\n     * the current browser version is unknown.\r\n     */\r\n    isVersionGreaterThan(version) {\r\n        return this._checkCondition({ [this._name]: `>${version}` });\r\n    }\r\n\r\n    /**\r\n     * Compares the passed version with the current browser version.\r\n     *\r\n     * @param {*} version - The version to compare with. Anything different\r\n     * than string will be converted to string.\r\n     * @returns {boolean|undefined} - Returns true if the current version is\r\n     * lower than the passed version and false otherwise. Returns undefined if\r\n     * the current browser version is unknown.\r\n     */\r\n    isVersionLessThan(version) {\r\n        return this._checkCondition({ [this._name]: `<${version}` });\r\n    }\r\n\r\n    /**\r\n     * Compares the passed version with the current browser version.\r\n     *\r\n     * @param {*} version - The version to compare with. Anything different\r\n     * than string will be converted to string.\r\n     * @returns {boolean|undefined} - Returns true if the current version is\r\n     * equal to the passed version and false otherwise. Returns undefined if\r\n     * the current browser version is unknown.\r\n     * A loose-equality operator is used here so that it matches the sub-versions as well.\r\n     */\r\n    isVersionEqualTo(version) {\r\n        return this._checkCondition({ [this._name]: `~${version}` });\r\n    }\r\n}\r\n","// TODO: Maybe fix the values to 'Chrome', 'Internet Explorer', etc. Currently\r\n// this values needs to be as they are becuse they are going to analytics,\r\n// callstats, etc.\r\n\r\nexport const CHROME = 'chrome';\r\n\r\nexport const OPERA = 'opera';\r\n\r\nexport const FIREFOX = 'firefox';\r\n\r\nexport const INTERNET_EXPLORER = 'iexplorer';\r\n\r\nexport const SAFARI = 'safari';\r\n\r\nexport const NWJS = 'nwjs';\r\n\r\nexport const ELECTRON = 'electron';\r\n\r\nexport const REACT_NATIVE = 'react-native';\r\n\r\nexport const UNKNOWN = 'unknown';\r\n","export { default as BrowserDetection } from './BrowserDetection';\r\nexport * as browsers from './browsers';\r\n","export * from './browser-capabilities';\r\nexport * from './browser-detection';\r\nexport * from './avatar';\r\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{ //o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly..\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  //k: [{}], // outdated thing ignored\n  t: [{ //t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{ //c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{ //b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{ //m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    { //a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-\\.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding) ?\n          'rtpmap:%d %s/%s/%s':\n          o.rate ?\n          'rtpmap:%d %s/%s':\n          'rtpmap:%d %s';\n      }\n    },\n    { //a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      //a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    { //a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    { //a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null) ?\n          'rtcp:%d %s IP%d %s':\n          'rtcp:%d';\n      }\n    },\n    { //a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%d trr-int %d'\n    },\n    { //a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null) ?\n          'rtcp-fb:%s %s %s':\n          'rtcp-fb:%s %s';\n      }\n    },\n    { //a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      //a=extmap:1/recvonly URI-gps-string\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'uri', 'config'],\n      format: function (o) {\n        return 'extmap:%d' + (o.direction ? '/%s' : '%v') + ' %s' + (o.config ? ' %s' : '');\n      }\n    },\n    { //a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null) ?\n          'crypto:%d %s %s %s':\n          'crypto:%d %s %s';\n      }\n    },\n    { //a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    { //a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    { //a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    { //a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*)/,\n      format: 'ptime:%d'\n    },\n    { //a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*)/,\n      format: 'maxptime:%d'\n    },\n    { //a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    { //a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    { //a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    { //a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    { //a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    { //a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      //a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      //a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    { //a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    { //a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    { //a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    { //a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    { //a=ssrc-group:FEC 1 2\n      //a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    { //a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    { //a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    { //a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    { //a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    { //a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null) ?\n          'sctpmap:%s %s %s' :\n          'sctpmap:%s %s';\n      }\n    },\n    { //a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    { //a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    { //a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      //a=imageattr:* send [x=800,y=640] recv *\n      //a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        //a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        //send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        //recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      //a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        //a=simulcast:\n        '^simulcast:' +\n        //send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        //space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        //end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //Old simulcast draft 03 (implemented by Firefox)\n      //  https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      //a=simulcast: recv pt=97;98 send pt=97\n      //a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      //a=framerate:25\n      //a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    { // any a= that we don't understand is kepts verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseFmtpConfig = parser.parseFmtpConfig;\nexports.parseParams = parser.parseParams;\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/\\;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","(function (global, factory) {\n            typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n            typeof define === 'function' && define.amd ? define(factory) :\n            (global = global || self, global.strophe = factory());\n}(this, function () { 'use strict';\n\n            var global$1 = (typeof global !== \"undefined\" ? global :\n                        typeof self !== \"undefined\" ? self :\n                        typeof window !== \"undefined\" ? window : {});\n\n            function _typeof(obj) {\n              if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n                _typeof = function (obj) {\n                  return typeof obj;\n                };\n              } else {\n                _typeof = function (obj) {\n                  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n                };\n              }\n\n              return _typeof(obj);\n            }\n\n            function _toConsumableArray(arr) {\n              return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n            }\n\n            function _arrayWithoutHoles(arr) {\n              if (Array.isArray(arr)) {\n                for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n                return arr2;\n              }\n            }\n\n            function _iterableToArray(iter) {\n              if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n            }\n\n            function _nonIterableSpread() {\n              throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n            }\n\n            /*\n             * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n             * Digest Algorithm, as defined in RFC 1321.\n             * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n             * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n             * Distributed under the BSD License\n             * See http://pajhome.org.uk/crypt/md5 for more info.\n             */\n\n            /*\n             * Everything that isn't used by Strophe has been stripped here!\n             */\n\n            /*\n             * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n             * to work around bugs in some JS interpreters.\n             */\n            var safe_add = function safe_add(x, y) {\n              var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n              var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n              return msw << 16 | lsw & 0xFFFF;\n            };\n            /*\n             * Bitwise rotate a 32-bit number to the left.\n             */\n\n\n            var bit_rol = function bit_rol(num, cnt) {\n              return num << cnt | num >>> 32 - cnt;\n            };\n            /*\n             * Convert a string to an array of little-endian words\n             */\n\n\n            var str2binl = function str2binl(str) {\n              if (typeof str !== \"string\") {\n                throw new Error(\"str2binl was passed a non-string\");\n              }\n\n              var bin = [];\n\n              for (var i = 0; i < str.length * 8; i += 8) {\n                bin[i >> 5] |= (str.charCodeAt(i / 8) & 255) << i % 32;\n              }\n\n              return bin;\n            };\n            /*\n             * Convert an array of little-endian words to a string\n             */\n\n\n            var binl2str = function binl2str(bin) {\n              var str = \"\";\n\n              for (var i = 0; i < bin.length * 32; i += 8) {\n                str += String.fromCharCode(bin[i >> 5] >>> i % 32 & 255);\n              }\n\n              return str;\n            };\n            /*\n             * Convert an array of little-endian words to a hex string.\n             */\n\n\n            var binl2hex = function binl2hex(binarray) {\n              var hex_tab = \"0123456789abcdef\";\n              var str = \"\";\n\n              for (var i = 0; i < binarray.length * 4; i++) {\n                str += hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 0xF) + hex_tab.charAt(binarray[i >> 2] >> i % 4 * 8 & 0xF);\n              }\n\n              return str;\n            };\n            /*\n             * These functions implement the four basic operations the algorithm uses.\n             */\n\n\n            var md5_cmn = function md5_cmn(q, a, b, x, s, t) {\n              return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n            };\n\n            var md5_ff = function md5_ff(a, b, c, d, x, s, t) {\n              return md5_cmn(b & c | ~b & d, a, b, x, s, t);\n            };\n\n            var md5_gg = function md5_gg(a, b, c, d, x, s, t) {\n              return md5_cmn(b & d | c & ~d, a, b, x, s, t);\n            };\n\n            var md5_hh = function md5_hh(a, b, c, d, x, s, t) {\n              return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n            };\n\n            var md5_ii = function md5_ii(a, b, c, d, x, s, t) {\n              return md5_cmn(c ^ (b | ~d), a, b, x, s, t);\n            };\n            /*\n             * Calculate the MD5 of an array of little-endian words, and a bit length\n             */\n\n\n            var core_md5 = function core_md5(x, len) {\n              /* append padding */\n              x[len >> 5] |= 0x80 << len % 32;\n              x[(len + 64 >>> 9 << 4) + 14] = len;\n              var a = 1732584193;\n              var b = -271733879;\n              var c = -1732584194;\n              var d = 271733878;\n              var olda, oldb, oldc, oldd;\n\n              for (var i = 0; i < x.length; i += 16) {\n                olda = a;\n                oldb = b;\n                oldc = c;\n                oldd = d;\n                a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n                d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n                c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n                b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n                a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n                d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n                c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n                b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n                a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n                d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n                c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n                b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n                a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n                d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n                c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n                b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n                a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n                d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n                c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n                b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n                a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n                d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n                c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n                b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n                a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n                d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n                c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n                b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n                a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n                d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n                c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n                b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n                a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n                d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n                c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n                b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n                a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n                d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n                c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n                b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n                a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n                d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n                c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n                b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n                a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n                d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n                c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n                b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n                a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n                d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n                c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n                b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n                a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n                d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n                c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n                b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n                a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n                d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n                c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n                b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n                a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n                d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n                c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n                b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n                a = safe_add(a, olda);\n                b = safe_add(b, oldb);\n                c = safe_add(c, oldc);\n                d = safe_add(d, oldd);\n              }\n\n              return [a, b, c, d];\n            };\n            /*\n             * These are the functions you'll usually want to call.\n             * They take string arguments and return either hex or base-64 encoded\n             * strings.\n             */\n\n\n            var MD5 = {\n              hexdigest: function hexdigest(s) {\n                return binl2hex(core_md5(str2binl(s), s.length * 8));\n              },\n              hash: function hash(s) {\n                return binl2str(core_md5(str2binl(s), s.length * 8));\n              }\n            };\n\n            /*\n             * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n             * in FIPS PUB 180-1\n             * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n             * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n             * Distributed under the BSD License\n             * See http://pajhome.org.uk/crypt/md5 for details.\n             */\n\n            /* global define */\n\n            /* Some functions and variables have been stripped for use with Strophe */\n\n            /*\n             * Calculate the SHA-1 of an array of big-endian words, and a bit length\n             */\n            function core_sha1(x, len) {\n              /* append padding */\n              x[len >> 5] |= 0x80 << 24 - len % 32;\n              x[(len + 64 >> 9 << 4) + 15] = len;\n              var w = new Array(80);\n              var a = 1732584193;\n              var b = -271733879;\n              var c = -1732584194;\n              var d = 271733878;\n              var e = -1009589776;\n              var i, j, t, olda, oldb, oldc, oldd, olde;\n\n              for (i = 0; i < x.length; i += 16) {\n                olda = a;\n                oldb = b;\n                oldc = c;\n                oldd = d;\n                olde = e;\n\n                for (j = 0; j < 80; j++) {\n                  if (j < 16) {\n                    w[j] = x[i + j];\n                  } else {\n                    w[j] = rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n                  }\n\n                  t = safe_add$1(safe_add$1(rol(a, 5), sha1_ft(j, b, c, d)), safe_add$1(safe_add$1(e, w[j]), sha1_kt(j)));\n                  e = d;\n                  d = c;\n                  c = rol(b, 30);\n                  b = a;\n                  a = t;\n                }\n\n                a = safe_add$1(a, olda);\n                b = safe_add$1(b, oldb);\n                c = safe_add$1(c, oldc);\n                d = safe_add$1(d, oldd);\n                e = safe_add$1(e, olde);\n              }\n\n              return [a, b, c, d, e];\n            }\n            /*\n             * Perform the appropriate triplet combination function for the current\n             * iteration\n             */\n\n\n            function sha1_ft(t, b, c, d) {\n              if (t < 20) {\n                return b & c | ~b & d;\n              }\n\n              if (t < 40) {\n                return b ^ c ^ d;\n              }\n\n              if (t < 60) {\n                return b & c | b & d | c & d;\n              }\n\n              return b ^ c ^ d;\n            }\n            /*\n             * Determine the appropriate additive constant for the current iteration\n             */\n\n\n            function sha1_kt(t) {\n              return t < 20 ? 1518500249 : t < 40 ? 1859775393 : t < 60 ? -1894007588 : -899497514;\n            }\n            /*\n             * Calculate the HMAC-SHA1 of a key and some data\n             */\n\n\n            function core_hmac_sha1(key, data) {\n              var bkey = str2binb(key);\n\n              if (bkey.length > 16) {\n                bkey = core_sha1(bkey, key.length * 8);\n              }\n\n              var ipad = new Array(16),\n                  opad = new Array(16);\n\n              for (var i = 0; i < 16; i++) {\n                ipad[i] = bkey[i] ^ 0x36363636;\n                opad[i] = bkey[i] ^ 0x5C5C5C5C;\n              }\n\n              var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * 8);\n              return core_sha1(opad.concat(hash), 512 + 160);\n            }\n            /*\n             * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n             * to work around bugs in some JS interpreters.\n             */\n\n\n            function safe_add$1(x, y) {\n              var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n              var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n              return msw << 16 | lsw & 0xFFFF;\n            }\n            /*\n             * Bitwise rotate a 32-bit number to the left.\n             */\n\n\n            function rol(num, cnt) {\n              return num << cnt | num >>> 32 - cnt;\n            }\n            /*\n             * Convert an 8-bit or 16-bit string to an array of big-endian words\n             * In 8-bit function, characters >255 have their hi-byte silently ignored.\n             */\n\n\n            function str2binb(str) {\n              var bin = [];\n              var mask = 255;\n\n              for (var i = 0; i < str.length * 8; i += 8) {\n                bin[i >> 5] |= (str.charCodeAt(i / 8) & mask) << 24 - i % 32;\n              }\n\n              return bin;\n            }\n            /*\n             * Convert an array of big-endian words to a base-64 string\n             */\n\n\n            function binb2b64(binarray) {\n              var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n              var str = \"\";\n              var triplet, j;\n\n              for (var i = 0; i < binarray.length * 4; i += 3) {\n                triplet = (binarray[i >> 2] >> 8 * (3 - i % 4) & 0xFF) << 16 | (binarray[i + 1 >> 2] >> 8 * (3 - (i + 1) % 4) & 0xFF) << 8 | binarray[i + 2 >> 2] >> 8 * (3 - (i + 2) % 4) & 0xFF;\n\n                for (j = 0; j < 4; j++) {\n                  if (i * 8 + j * 6 > binarray.length * 32) {\n                    str += \"=\";\n                  } else {\n                    str += tab.charAt(triplet >> 6 * (3 - j) & 0x3F);\n                  }\n                }\n              }\n\n              return str;\n            }\n            /*\n             * Convert an array of big-endian words to a string\n             */\n\n\n            function binb2str(bin) {\n              var str = \"\";\n              var mask = 255;\n\n              for (var i = 0; i < bin.length * 32; i += 8) {\n                str += String.fromCharCode(bin[i >> 5] >>> 24 - i % 32 & mask);\n              }\n\n              return str;\n            }\n            /*\n             * These are the functions you'll usually want to call\n             * They take string arguments and return either hex or base-64 encoded strings\n             */\n\n\n            var SHA1 = {\n              b64_hmac_sha1: function b64_hmac_sha1(key, data) {\n                return binb2b64(core_hmac_sha1(key, data));\n              },\n              b64_sha1: function b64_sha1(s) {\n                return binb2b64(core_sha1(str2binb(s), s.length * 8));\n              },\n              binb2str: binb2str,\n              core_hmac_sha1: core_hmac_sha1,\n              str_hmac_sha1: function str_hmac_sha1(key, data) {\n                return binb2str(core_hmac_sha1(key, data));\n              },\n              str_sha1: function str_sha1(s) {\n                return binb2str(core_sha1(str2binb(s), s.length * 8));\n              }\n            };\n\n            var utils = {\n              utf16to8: function utf16to8(str) {\n                var i, c;\n                var out = \"\";\n                var len = str.length;\n\n                for (i = 0; i < len; i++) {\n                  c = str.charCodeAt(i);\n\n                  if (c >= 0x0000 && c <= 0x007F) {\n                    out += str.charAt(i);\n                  } else if (c > 0x07FF) {\n                    out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n                    out += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n                    out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n                  } else {\n                    out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n                    out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n                  }\n                }\n\n                return out;\n              },\n              addCookies: function addCookies(cookies) {\n                /* Parameters:\n                 *  (Object) cookies - either a map of cookie names\n                 *    to string values or to maps of cookie values.\n                 *\n                 * For example:\n                 * { \"myCookie\": \"1234\" }\n                 *\n                 * or:\n                 * { \"myCookie\": {\n                 *      \"value\": \"1234\",\n                 *      \"domain\": \".example.org\",\n                 *      \"path\": \"/\",\n                 *      \"expires\": expirationDate\n                 *      }\n                 *  }\n                 *\n                 *  These values get passed to Strophe.Connection via\n                 *   options.cookies\n                 */\n                cookies = cookies || {};\n\n                for (var cookieName in cookies) {\n                  if (Object.prototype.hasOwnProperty.call(cookies, cookieName)) {\n                    var expires = '';\n                    var domain = '';\n                    var path = '';\n                    var cookieObj = cookies[cookieName];\n                    var isObj = _typeof(cookieObj) === \"object\";\n                    var cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\n\n                    if (isObj) {\n                      expires = cookieObj.expires ? \";expires=\" + cookieObj.expires : '';\n                      domain = cookieObj.domain ? \";domain=\" + cookieObj.domain : '';\n                      path = cookieObj.path ? \";path=\" + cookieObj.path : '';\n                    }\n\n                    document.cookie = cookieName + '=' + cookieValue + expires + domain + path;\n                  }\n                }\n              }\n            };\n\n            /** Function: $build\n             *  Create a Strophe.Builder.\n             *  This is an alias for 'new Strophe.Builder(name, attrs)'.\n             *\n             *  Parameters:\n             *    (String) name - The root element name.\n             *    (Object) attrs - The attributes for the root element in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n            function $build(name, attrs) {\n              return new Strophe.Builder(name, attrs);\n            }\n            /** Function: $msg\n             *  Create a Strophe.Builder with a <message/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <message/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $msg(attrs) {\n              return new Strophe.Builder(\"message\", attrs);\n            }\n            /** Function: $iq\n             *  Create a Strophe.Builder with an <iq/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <iq/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $iq(attrs) {\n              return new Strophe.Builder(\"iq\", attrs);\n            }\n            /** Function: $pres\n             *  Create a Strophe.Builder with a <presence/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <presence/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n\n\n            function $pres(attrs) {\n              return new Strophe.Builder(\"presence\", attrs);\n            }\n            /** Class: Strophe\n             *  An object container for all Strophe library functions.\n             *\n             *  This class is just a container for all the objects and constants\n             *  used in the library.  It is not meant to be instantiated, but to\n             *  provide a namespace for library objects, constants, and functions.\n             */\n\n\n            var Strophe = {\n              /** Constant: VERSION */\n              VERSION: \"@VERSION@\",\n\n              /** Constants: XMPP Namespace Constants\n               *  Common namespace constants from the XMPP RFCs and XEPs.\n               *\n               *  NS.HTTPBIND - HTTP BIND namespace from XEP 124.\n               *  NS.BOSH - BOSH namespace from XEP 206.\n               *  NS.CLIENT - Main XMPP client namespace.\n               *  NS.AUTH - Legacy authentication namespace.\n               *  NS.ROSTER - Roster operations namespace.\n               *  NS.PROFILE - Profile namespace.\n               *  NS.DISCO_INFO - Service discovery info namespace from XEP 30.\n               *  NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\n               *  NS.MUC - Multi-User Chat namespace from XEP 45.\n               *  NS.SASL - XMPP SASL namespace from RFC 3920.\n               *  NS.STREAM - XMPP Streams namespace from RFC 3920.\n               *  NS.BIND - XMPP Binding namespace from RFC 3920 and RFC 6120.\n               *  NS.SESSION - XMPP Session namespace from RFC 3920.\n               *  NS.XHTML_IM - XHTML-IM namespace from XEP 71.\n               *  NS.XHTML - XHTML body namespace from XEP 71.\n               */\n              NS: {\n                HTTPBIND: \"http://jabber.org/protocol/httpbind\",\n                BOSH: \"urn:xmpp:xbosh\",\n                CLIENT: \"jabber:client\",\n                AUTH: \"jabber:iq:auth\",\n                ROSTER: \"jabber:iq:roster\",\n                PROFILE: \"jabber:iq:profile\",\n                DISCO_INFO: \"http://jabber.org/protocol/disco#info\",\n                DISCO_ITEMS: \"http://jabber.org/protocol/disco#items\",\n                MUC: \"http://jabber.org/protocol/muc\",\n                SASL: \"urn:ietf:params:xml:ns:xmpp-sasl\",\n                STREAM: \"http://etherx.jabber.org/streams\",\n                FRAMING: \"urn:ietf:params:xml:ns:xmpp-framing\",\n                BIND: \"urn:ietf:params:xml:ns:xmpp-bind\",\n                SESSION: \"urn:ietf:params:xml:ns:xmpp-session\",\n                VERSION: \"jabber:iq:version\",\n                STANZAS: \"urn:ietf:params:xml:ns:xmpp-stanzas\",\n                XHTML_IM: \"http://jabber.org/protocol/xhtml-im\",\n                XHTML: \"http://www.w3.org/1999/xhtml\"\n              },\n\n              /** Constants: XHTML_IM Namespace\n               *  contains allowed tags, tag attributes, and css properties.\n               *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\n               *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\n               *  allowed tags and their attributes.\n               */\n              XHTML: {\n                tags: ['a', 'blockquote', 'br', 'cite', 'em', 'img', 'li', 'ol', 'p', 'span', 'strong', 'ul', 'body'],\n                attributes: {\n                  'a': ['href'],\n                  'blockquote': ['style'],\n                  'br': [],\n                  'cite': ['style'],\n                  'em': [],\n                  'img': ['src', 'alt', 'style', 'height', 'width'],\n                  'li': ['style'],\n                  'ol': ['style'],\n                  'p': ['style'],\n                  'span': ['style'],\n                  'strong': [],\n                  'ul': ['style'],\n                  'body': []\n                },\n                css: ['background-color', 'color', 'font-family', 'font-size', 'font-style', 'font-weight', 'margin-left', 'margin-right', 'text-align', 'text-decoration'],\n\n                /** Function: XHTML.validTag\n                 *\n                 * Utility method to determine whether a tag is allowed\n                 * in the XHTML_IM namespace.\n                 *\n                 * XHTML tag names are case sensitive and must be lower case.\n                 */\n                validTag: function validTag(tag) {\n                  for (var i = 0; i < Strophe.XHTML.tags.length; i++) {\n                    if (tag === Strophe.XHTML.tags[i]) {\n                      return true;\n                    }\n                  }\n\n                  return false;\n                },\n\n                /** Function: XHTML.validAttribute\n                 *\n                 * Utility method to determine whether an attribute is allowed\n                 * as recommended per XEP-0071\n                 *\n                 * XHTML attribute names are case sensitive and must be lower case.\n                 */\n                validAttribute: function validAttribute(tag, attribute) {\n                  if (typeof Strophe.XHTML.attributes[tag] !== 'undefined' && Strophe.XHTML.attributes[tag].length > 0) {\n                    for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                      if (attribute === Strophe.XHTML.attributes[tag][i]) {\n                        return true;\n                      }\n                    }\n                  }\n\n                  return false;\n                },\n                validCSS: function validCSS(style) {\n                  for (var i = 0; i < Strophe.XHTML.css.length; i++) {\n                    if (style === Strophe.XHTML.css[i]) {\n                      return true;\n                    }\n                  }\n\n                  return false;\n                }\n              },\n\n              /** Constants: Connection Status Constants\n               *  Connection status constants for use by the connection handler\n               *  callback.\n               *\n               *  Status.ERROR - An error has occurred\n               *  Status.CONNECTING - The connection is currently being made\n               *  Status.CONNFAIL - The connection attempt failed\n               *  Status.AUTHENTICATING - The connection is authenticating\n               *  Status.AUTHFAIL - The authentication attempt failed\n               *  Status.CONNECTED - The connection has succeeded\n               *  Status.DISCONNECTED - The connection has been terminated\n               *  Status.DISCONNECTING - The connection is currently being terminated\n               *  Status.ATTACHED - The connection has been attached\n               *  Status.REDIRECT - The connection has been redirected\n               *  Status.CONNTIMEOUT - The connection has timed out\n               */\n              Status: {\n                ERROR: 0,\n                CONNECTING: 1,\n                CONNFAIL: 2,\n                AUTHENTICATING: 3,\n                AUTHFAIL: 4,\n                CONNECTED: 5,\n                DISCONNECTED: 6,\n                DISCONNECTING: 7,\n                ATTACHED: 8,\n                REDIRECT: 9,\n                CONNTIMEOUT: 10,\n                BINDREQUIRED: 11\n              },\n              ErrorCondition: {\n                BAD_FORMAT: \"bad-format\",\n                CONFLICT: \"conflict\",\n                MISSING_JID_NODE: \"x-strophe-bad-non-anon-jid\",\n                NO_AUTH_MECH: \"no-auth-mech\",\n                UNKNOWN_REASON: \"unknown\"\n              },\n\n              /** Constants: Log Level Constants\n               *  Logging level indicators.\n               *\n               *  LogLevel.DEBUG - Debug output\n               *  LogLevel.INFO - Informational output\n               *  LogLevel.WARN - Warnings\n               *  LogLevel.ERROR - Errors\n               *  LogLevel.FATAL - Fatal errors\n               */\n              LogLevel: {\n                DEBUG: 0,\n                INFO: 1,\n                WARN: 2,\n                ERROR: 3,\n                FATAL: 4\n              },\n\n              /** PrivateConstants: DOM Element Type Constants\n               *  DOM element types.\n               *\n               *  ElementType.NORMAL - Normal element.\n               *  ElementType.TEXT - Text data element.\n               *  ElementType.FRAGMENT - XHTML fragment element.\n               */\n              ElementType: {\n                NORMAL: 1,\n                TEXT: 3,\n                CDATA: 4,\n                FRAGMENT: 11\n              },\n\n              /** PrivateConstants: Timeout Values\n               *  Timeout values for error states.  These values are in seconds.\n               *  These should not be changed unless you know exactly what you are\n               *  doing.\n               *\n               *  TIMEOUT - Timeout multiplier. A waiting request will be considered\n               *      failed after Math.floor(TIMEOUT * wait) seconds have elapsed.\n               *      This defaults to 1.1, and with default wait, 66 seconds.\n               *  SECONDARY_TIMEOUT - Secondary timeout multiplier. In cases where\n               *      Strophe can detect early failure, it will consider the request\n               *      failed if it doesn't return after\n               *      Math.floor(SECONDARY_TIMEOUT * wait) seconds have elapsed.\n               *      This defaults to 0.1, and with default wait, 6 seconds.\n               */\n              TIMEOUT: 1.1,\n              SECONDARY_TIMEOUT: 0.1,\n\n              /** Function: addNamespace\n               *  This function is used to extend the current namespaces in\n               *  Strophe.NS.  It takes a key and a value with the key being the\n               *  name of the new namespace, with its actual value.\n               *  For example:\n               *  Strophe.addNamespace('PUBSUB', \"http://jabber.org/protocol/pubsub\");\n               *\n               *  Parameters:\n               *    (String) name - The name under which the namespace will be\n               *      referenced under Strophe.NS\n               *    (String) value - The actual namespace.\n               */\n              addNamespace: function addNamespace(name, value) {\n                Strophe.NS[name] = value;\n              },\n\n              /** Function: forEachChild\n               *  Map a function over some or all child elements of a given element.\n               *\n               *  This is a small convenience function for mapping a function over\n               *  some or all of the children of an element.  If elemName is null, all\n               *  children will be passed to the function, otherwise only children\n               *  whose tag names match elemName will be passed.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The element to operate on.\n               *    (String) elemName - The child element tag name filter.\n               *    (Function) func - The function to apply to each child.  This\n               *      function should take a single argument, a DOM element.\n               */\n              forEachChild: function forEachChild(elem, elemName, func) {\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  var childNode = elem.childNodes[i];\n\n                  if (childNode.nodeType === Strophe.ElementType.NORMAL && (!elemName || this.isTagEqual(childNode, elemName))) {\n                    func(childNode);\n                  }\n                }\n              },\n\n              /** Function: isTagEqual\n               *  Compare an element's tag name with a string.\n               *\n               *  This function is case sensitive.\n               *\n               *  Parameters:\n               *    (XMLElement) el - A DOM element.\n               *    (String) name - The element name.\n               *\n               *  Returns:\n               *    true if the element's tag name matches _el_, and false\n               *    otherwise.\n               */\n              isTagEqual: function isTagEqual(el, name) {\n                return el.tagName === name;\n              },\n\n              /** PrivateVariable: _xmlGenerator\n               *  _Private_ variable that caches a DOM document to\n               *  generate elements.\n               */\n              _xmlGenerator: null,\n\n              /** PrivateFunction: _makeGenerator\n               *  _Private_ function that creates a dummy XML DOM document to serve as\n               *  an element and text node generator.\n               */\n              _makeGenerator: function _makeGenerator() {\n                var doc; // IE9 does implement createDocument(); however, using it will cause the browser to leak memory on page unload.\n                // Here, we test for presence of createDocument() plus IE's proprietary documentMode attribute, which would be\n                // less than 10 in the case of IE9 and below.\n\n                if (document.implementation.createDocument === undefined || document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\n                  doc = this._getIEXmlDom();\n                  doc.appendChild(doc.createElement('strophe'));\n                } else {\n                  doc = document.implementation.createDocument('jabber:client', 'strophe', null);\n                }\n\n                return doc;\n              },\n\n              /** Function: xmlGenerator\n               *  Get the DOM document to generate elements.\n               *\n               *  Returns:\n               *    The currently used DOM document.\n               */\n              xmlGenerator: function xmlGenerator() {\n                if (!Strophe._xmlGenerator) {\n                  Strophe._xmlGenerator = Strophe._makeGenerator();\n                }\n\n                return Strophe._xmlGenerator;\n              },\n\n              /** PrivateFunction: _getIEXmlDom\n               *  Gets IE xml doc object\n               *\n               *  Returns:\n               *    A Microsoft XML DOM Object\n               *  See Also:\n               *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\n               */\n              _getIEXmlDom: function _getIEXmlDom() {\n                var doc = null;\n                var docStrings = [\"Msxml2.DOMDocument.6.0\", \"Msxml2.DOMDocument.5.0\", \"Msxml2.DOMDocument.4.0\", \"MSXML2.DOMDocument.3.0\", \"MSXML2.DOMDocument\", \"MSXML.DOMDocument\", \"Microsoft.XMLDOM\"];\n\n                for (var d = 0; d < docStrings.length; d++) {\n                  if (doc === null) {\n                    try {\n                      doc = new ActiveXObject(docStrings[d]);\n                    } catch (e) {\n                      doc = null;\n                    }\n                  } else {\n                    break;\n                  }\n                }\n\n                return doc;\n              },\n\n              /** Function: xmlElement\n               *  Create an XML DOM element.\n               *\n               *  This function creates an XML DOM element correctly across all\n               *  implementations. Note that these are not HTML DOM elements, which\n               *  aren't appropriate for XMPP stanzas.\n               *\n               *  Parameters:\n               *    (String) name - The name for the element.\n               *    (Array|Object) attrs - An optional array or object containing\n               *      key/value pairs to use as element attributes. The object should\n               *      be in the format {'key': 'value'} or {key: 'value'}. The array\n               *      should have the format [['key1', 'value1'], ['key2', 'value2']].\n               *    (String) text - The text child data for the element.\n               *\n               *  Returns:\n               *    A new XML DOM element.\n               */\n              xmlElement: function xmlElement(name) {\n                if (!name) {\n                  return null;\n                }\n\n                var node = Strophe.xmlGenerator().createElement(name); // FIXME: this should throw errors if args are the wrong type or\n                // there are more than two optional args\n\n                for (var a = 1; a < arguments.length; a++) {\n                  var arg = arguments[a];\n\n                  if (!arg) {\n                    continue;\n                  }\n\n                  if (typeof arg === \"string\" || typeof arg === \"number\") {\n                    node.appendChild(Strophe.xmlTextNode(arg));\n                  } else if (_typeof(arg) === \"object\" && typeof arg.sort === \"function\") {\n                    for (var i = 0; i < arg.length; i++) {\n                      var attr = arg[i];\n\n                      if (_typeof(attr) === \"object\" && typeof attr.sort === \"function\" && attr[1] !== undefined && attr[1] !== null) {\n                        node.setAttribute(attr[0], attr[1]);\n                      }\n                    }\n                  } else if (_typeof(arg) === \"object\") {\n                    for (var k in arg) {\n                      if (Object.prototype.hasOwnProperty.call(arg, k) && arg[k] !== undefined && arg[k] !== null) {\n                        node.setAttribute(k, arg[k]);\n                      }\n                    }\n                  }\n                }\n\n                return node;\n              },\n\n              /*  Function: xmlescape\n               *  Excapes invalid xml characters.\n               *\n               *  Parameters:\n               *     (String) text - text to escape.\n               *\n               *  Returns:\n               *      Escaped text.\n               */\n              xmlescape: function xmlescape(text) {\n                text = text.replace(/\\&/g, \"&amp;\");\n                text = text.replace(/</g, \"&lt;\");\n                text = text.replace(/>/g, \"&gt;\");\n                text = text.replace(/'/g, \"&apos;\");\n                text = text.replace(/\"/g, \"&quot;\");\n                return text;\n              },\n\n              /*  Function: xmlunescape\n              *  Unexcapes invalid xml characters.\n              *\n              *  Parameters:\n              *     (String) text - text to unescape.\n              *\n              *  Returns:\n              *      Unescaped text.\n              */\n              xmlunescape: function xmlunescape(text) {\n                text = text.replace(/\\&amp;/g, \"&\");\n                text = text.replace(/&lt;/g, \"<\");\n                text = text.replace(/&gt;/g, \">\");\n                text = text.replace(/&apos;/g, \"'\");\n                text = text.replace(/&quot;/g, \"\\\"\");\n                return text;\n              },\n\n              /** Function: xmlTextNode\n               *  Creates an XML DOM text node.\n               *\n               *  Provides a cross implementation version of document.createTextNode.\n               *\n               *  Parameters:\n               *    (String) text - The content of the text node.\n               *\n               *  Returns:\n               *    A new XML DOM text node.\n               */\n              xmlTextNode: function xmlTextNode(text) {\n                return Strophe.xmlGenerator().createTextNode(text);\n              },\n\n              /** Function: xmlHtmlNode\n               *  Creates an XML DOM html node.\n               *\n               *  Parameters:\n               *    (String) html - The content of the html node.\n               *\n               *  Returns:\n               *    A new XML DOM text node.\n               */\n              xmlHtmlNode: function xmlHtmlNode(html) {\n                var node; //ensure text is escaped\n\n                if (DOMParser) {\n                  var parser = new DOMParser();\n                  node = parser.parseFromString(html, \"text/xml\");\n                } else {\n                  node = new ActiveXObject(\"Microsoft.XMLDOM\");\n                  node.async = \"false\";\n                  node.loadXML(html);\n                }\n\n                return node;\n              },\n\n              /** Function: getText\n               *  Get the concatenation of all text children of an element.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A String with the concatenated text of all text element children.\n               */\n              getText: function getText(elem) {\n                if (!elem) {\n                  return null;\n                }\n\n                var str = \"\";\n\n                if (elem.childNodes.length === 0 && elem.nodeType === Strophe.ElementType.TEXT) {\n                  str += elem.nodeValue;\n                }\n\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  if (elem.childNodes[i].nodeType === Strophe.ElementType.TEXT) {\n                    str += elem.childNodes[i].nodeValue;\n                  }\n                }\n\n                return Strophe.xmlescape(str);\n              },\n\n              /** Function: copyElement\n               *  Copy an XML DOM element.\n               *\n               *  This function copies a DOM element and all its descendants and returns\n               *  the new copy.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A new, copied DOM element tree.\n               */\n              copyElement: function copyElement(elem) {\n                var el;\n\n                if (elem.nodeType === Strophe.ElementType.NORMAL) {\n                  el = Strophe.xmlElement(elem.tagName);\n\n                  for (var i = 0; i < elem.attributes.length; i++) {\n                    el.setAttribute(elem.attributes[i].nodeName, elem.attributes[i].value);\n                  }\n\n                  for (var _i = 0; _i < elem.childNodes.length; _i++) {\n                    el.appendChild(Strophe.copyElement(elem.childNodes[_i]));\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n                  el = Strophe.xmlGenerator().createTextNode(elem.nodeValue);\n                }\n\n                return el;\n              },\n\n              /** Function: createHtml\n               *  Copy an HTML DOM element into an XML DOM.\n               *\n               *  This function copies a DOM element and all its descendants and returns\n               *  the new copy.\n               *\n               *  Parameters:\n               *    (HTMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    A new, copied DOM element tree.\n               */\n              createHtml: function createHtml(elem) {\n                var el;\n\n                if (elem.nodeType === Strophe.ElementType.NORMAL) {\n                  var tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\n\n                  if (Strophe.XHTML.validTag(tag)) {\n                    try {\n                      el = Strophe.xmlElement(tag);\n\n                      for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                        var attribute = Strophe.XHTML.attributes[tag][i];\n                        var value = elem.getAttribute(attribute);\n\n                        if (typeof value === 'undefined' || value === null || value === '' || value === false || value === 0) {\n                          continue;\n                        }\n\n                        if (attribute === 'style' && _typeof(value) === 'object' && typeof value.cssText !== 'undefined') {\n                          value = value.cssText; // we're dealing with IE, need to get CSS out\n                        } // filter out invalid css styles\n\n\n                        if (attribute === 'style') {\n                          var css = [];\n                          var cssAttrs = value.split(';');\n\n                          for (var j = 0; j < cssAttrs.length; j++) {\n                            var attr = cssAttrs[j].split(':');\n                            var cssName = attr[0].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").toLowerCase();\n\n                            if (Strophe.XHTML.validCSS(cssName)) {\n                              var cssValue = attr[1].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n                              css.push(cssName + ': ' + cssValue);\n                            }\n                          }\n\n                          if (css.length > 0) {\n                            value = css.join('; ');\n                            el.setAttribute(attribute, value);\n                          }\n                        } else {\n                          el.setAttribute(attribute, value);\n                        }\n                      }\n\n                      for (var _i2 = 0; _i2 < elem.childNodes.length; _i2++) {\n                        el.appendChild(Strophe.createHtml(elem.childNodes[_i2]));\n                      }\n                    } catch (e) {\n                      // invalid elements\n                      el = Strophe.xmlTextNode('');\n                    }\n                  } else {\n                    el = Strophe.xmlGenerator().createDocumentFragment();\n\n                    for (var _i3 = 0; _i3 < elem.childNodes.length; _i3++) {\n                      el.appendChild(Strophe.createHtml(elem.childNodes[_i3]));\n                    }\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.FRAGMENT) {\n                  el = Strophe.xmlGenerator().createDocumentFragment();\n\n                  for (var _i4 = 0; _i4 < elem.childNodes.length; _i4++) {\n                    el.appendChild(Strophe.createHtml(elem.childNodes[_i4]));\n                  }\n                } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n                  el = Strophe.xmlTextNode(elem.nodeValue);\n                }\n\n                return el;\n              },\n\n              /** Function: escapeNode\n               *  Escape the node part (also called local part) of a JID.\n               *\n               *  Parameters:\n               *    (String) node - A node (or local part).\n               *\n               *  Returns:\n               *    An escaped node (or local part).\n               */\n              escapeNode: function escapeNode(node) {\n                if (typeof node !== \"string\") {\n                  return node;\n                }\n\n                return node.replace(/^\\s+|\\s+$/g, '').replace(/\\\\/g, \"\\\\5c\").replace(/ /g, \"\\\\20\").replace(/\\\"/g, \"\\\\22\").replace(/\\&/g, \"\\\\26\").replace(/\\'/g, \"\\\\27\").replace(/\\//g, \"\\\\2f\").replace(/:/g, \"\\\\3a\").replace(/</g, \"\\\\3c\").replace(/>/g, \"\\\\3e\").replace(/@/g, \"\\\\40\");\n              },\n\n              /** Function: unescapeNode\n               *  Unescape a node part (also called local part) of a JID.\n               *\n               *  Parameters:\n               *    (String) node - A node (or local part).\n               *\n               *  Returns:\n               *    An unescaped node (or local part).\n               */\n              unescapeNode: function unescapeNode(node) {\n                if (typeof node !== \"string\") {\n                  return node;\n                }\n\n                return node.replace(/\\\\20/g, \" \").replace(/\\\\22/g, '\"').replace(/\\\\26/g, \"&\").replace(/\\\\27/g, \"'\").replace(/\\\\2f/g, \"/\").replace(/\\\\3a/g, \":\").replace(/\\\\3c/g, \"<\").replace(/\\\\3e/g, \">\").replace(/\\\\40/g, \"@\").replace(/\\\\5c/g, \"\\\\\");\n              },\n\n              /** Function: getNodeFromJid\n               *  Get the node portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the node.\n               */\n              getNodeFromJid: function getNodeFromJid(jid) {\n                if (jid.indexOf(\"@\") < 0) {\n                  return null;\n                }\n\n                return jid.split(\"@\")[0];\n              },\n\n              /** Function: getDomainFromJid\n               *  Get the domain portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the domain.\n               */\n              getDomainFromJid: function getDomainFromJid(jid) {\n                var bare = Strophe.getBareJidFromJid(jid);\n\n                if (bare.indexOf(\"@\") < 0) {\n                  return bare;\n                } else {\n                  var parts = bare.split(\"@\");\n                  parts.splice(0, 1);\n                  return parts.join('@');\n                }\n              },\n\n              /** Function: getResourceFromJid\n               *  Get the resource portion of a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the resource.\n               */\n              getResourceFromJid: function getResourceFromJid(jid) {\n                if (!jid) {\n                  return null;\n                }\n\n                var s = jid.split(\"/\");\n\n                if (s.length < 2) {\n                  return null;\n                }\n\n                s.splice(0, 1);\n                return s.join('/');\n              },\n\n              /** Function: getBareJidFromJid\n               *  Get the bare JID from a JID String.\n               *\n               *  Parameters:\n               *    (String) jid - A JID.\n               *\n               *  Returns:\n               *    A String containing the bare JID.\n               */\n              getBareJidFromJid: function getBareJidFromJid(jid) {\n                return jid ? jid.split(\"/\")[0] : null;\n              },\n\n              /** PrivateFunction: _handleError\n               *  _Private_ function that properly logs an error to the console\n               */\n              _handleError: function _handleError(e) {\n                if (typeof e.stack !== \"undefined\") {\n                  Strophe.fatal(e.stack);\n                }\n\n                if (e.sourceURL) {\n                  Strophe.fatal(\"error: \" + this.handler + \" \" + e.sourceURL + \":\" + e.line + \" - \" + e.name + \": \" + e.message);\n                } else if (e.fileName) {\n                  Strophe.fatal(\"error: \" + this.handler + \" \" + e.fileName + \":\" + e.lineNumber + \" - \" + e.name + \": \" + e.message);\n                } else {\n                  Strophe.fatal(\"error: \" + e.message);\n                }\n              },\n\n              /** Function: log\n               *  User overrideable logging function.\n               *\n               *  This function is called whenever the Strophe library calls any\n               *  of the logging functions.  The default implementation of this\n               *  function logs only fatal errors.  If client code wishes to handle the logging\n               *  messages, it should override this with\n               *  > Strophe.log = function (level, msg) {\n               *  >   (user code here)\n               *  > };\n               *\n               *  Please note that data sent and received over the wire is logged\n               *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\n               *\n               *  The different levels and their meanings are\n               *\n               *    DEBUG - Messages useful for debugging purposes.\n               *    INFO - Informational messages.  This is mostly information like\n               *      'disconnect was called' or 'SASL auth succeeded'.\n               *    WARN - Warnings about potential problems.  This is mostly used\n               *      to report transient connection errors like request timeouts.\n               *    ERROR - Some error occurred.\n               *    FATAL - A non-recoverable fatal error occurred.\n               *\n               *  Parameters:\n               *    (Integer) level - The log level of the log message.  This will\n               *      be one of the values in Strophe.LogLevel.\n               *    (String) msg - The log message.\n               */\n              log: function log(level, msg) {\n                if (level === this.LogLevel.FATAL && _typeof(window.console) === 'object' && typeof window.console.error === 'function') {\n                  window.console.error(msg);\n                }\n              },\n\n              /** Function: debug\n               *  Log a message at the Strophe.LogLevel.DEBUG level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              debug: function debug(msg) {\n                this.log(this.LogLevel.DEBUG, msg);\n              },\n\n              /** Function: info\n               *  Log a message at the Strophe.LogLevel.INFO level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              info: function info(msg) {\n                this.log(this.LogLevel.INFO, msg);\n              },\n\n              /** Function: warn\n               *  Log a message at the Strophe.LogLevel.WARN level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              warn: function warn(msg) {\n                this.log(this.LogLevel.WARN, msg);\n              },\n\n              /** Function: error\n               *  Log a message at the Strophe.LogLevel.ERROR level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              error: function error(msg) {\n                this.log(this.LogLevel.ERROR, msg);\n              },\n\n              /** Function: fatal\n               *  Log a message at the Strophe.LogLevel.FATAL level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              fatal: function fatal(msg) {\n                this.log(this.LogLevel.FATAL, msg);\n              },\n\n              /** Function: serialize\n               *  Render a DOM element and all descendants to a String.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    The serialized element tree as a String.\n               */\n              serialize: function serialize(elem) {\n                if (!elem) {\n                  return null;\n                }\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var names = _toConsumableArray(Array(elem.attributes.length).keys()).map(function (i) {\n                  return elem.attributes[i].nodeName;\n                });\n\n                names.sort();\n                var result = names.reduce(function (a, n) {\n                  return \"\".concat(a, \" \").concat(n, \"=\\\"\").concat(Strophe.xmlescape(elem.attributes.getNamedItem(n).value), \"\\\"\");\n                }, \"<\".concat(elem.nodeName));\n\n                if (elem.childNodes.length > 0) {\n                  result += \">\";\n\n                  for (var i = 0; i < elem.childNodes.length; i++) {\n                    var child = elem.childNodes[i];\n\n                    switch (child.nodeType) {\n                      case Strophe.ElementType.NORMAL:\n                        // normal element, so recurse\n                        result += Strophe.serialize(child);\n                        break;\n\n                      case Strophe.ElementType.TEXT:\n                        // text element to escape values\n                        result += Strophe.xmlescape(child.nodeValue);\n                        break;\n\n                      case Strophe.ElementType.CDATA:\n                        // cdata section so don't escape values\n                        result += \"<![CDATA[\" + child.nodeValue + \"]]>\";\n                    }\n                  }\n\n                  result += \"</\" + elem.nodeName + \">\";\n                } else {\n                  result += \"/>\";\n                }\n\n                return result;\n              },\n\n              /** PrivateVariable: _requestId\n               *  _Private_ variable that keeps track of the request ids for\n               *  connections.\n               */\n              _requestId: 0,\n\n              /** PrivateVariable: Strophe.connectionPlugins\n               *  _Private_ variable Used to store plugin names that need\n               *  initialization on Strophe.Connection construction.\n               */\n              _connectionPlugins: {},\n\n              /** Function: addConnectionPlugin\n               *  Extends the Strophe.Connection object with the given plugin.\n               *\n               *  Parameters:\n               *    (String) name - The name of the extension.\n               *    (Object) ptype - The plugin's prototype.\n               */\n              addConnectionPlugin: function addConnectionPlugin(name, ptype) {\n                Strophe._connectionPlugins[name] = ptype;\n              }\n            };\n            /** Class: Strophe.Builder\n             *  XML DOM builder.\n             *\n             *  This object provides an interface similar to JQuery but for building\n             *  DOM elements easily and rapidly.  All the functions except for toString()\n             *  and tree() return the object, so calls can be chained.  Here's an\n             *  example using the $iq() builder helper.\n             *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\n             *  >     .c('query', {xmlns: 'strophe:example'})\n             *  >     .c('example')\n             *  >     .toString()\n             *\n             *  The above generates this XML fragment\n             *  > <iq to='you' from='me' type='get' id='1'>\n             *  >   <query xmlns='strophe:example'>\n             *  >     <example/>\n             *  >   </query>\n             *  > </iq>\n             *  The corresponding DOM manipulations to get a similar fragment would be\n             *  a lot more tedious and probably involve several helper variables.\n             *\n             *  Since adding children makes new operations operate on the child, up()\n             *  is provided to traverse up the tree.  To add two children, do\n             *  > builder.c('child1', ...).up().c('child2', ...)\n             *  The next operation on the Builder will be relative to the second child.\n             */\n\n            /** Constructor: Strophe.Builder\n             *  Create a Strophe.Builder object.\n             *\n             *  The attributes should be passed in object notation.  For example\n             *  > let b = new Builder('message', {to: 'you', from: 'me'});\n             *  or\n             *  > let b = new Builder('messsage', {'xml:lang': 'en'});\n             *\n             *  Parameters:\n             *    (String) name - The name of the root element.\n             *    (Object) attrs - The attributes for the root element in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder.\n             */\n\n            Strophe.Builder = function (name, attrs) {\n              // Set correct namespace for jabber:client elements\n              if (name === \"presence\" || name === \"message\" || name === \"iq\") {\n                if (attrs && !attrs.xmlns) {\n                  attrs.xmlns = Strophe.NS.CLIENT;\n                } else if (!attrs) {\n                  attrs = {\n                    xmlns: Strophe.NS.CLIENT\n                  };\n                }\n              } // Holds the tree being built.\n\n\n              this.nodeTree = Strophe.xmlElement(name, attrs); // Points to the current operation node.\n\n              this.node = this.nodeTree;\n            };\n\n            Strophe.Builder.prototype = {\n              /** Function: tree\n               *  Return the DOM tree.\n               *\n               *  This function returns the current DOM tree as an element object.  This\n               *  is suitable for passing to functions like Strophe.Connection.send().\n               *\n               *  Returns:\n               *    The DOM tree as a element object.\n               */\n              tree: function tree() {\n                return this.nodeTree;\n              },\n\n              /** Function: toString\n               *  Serialize the DOM tree to a String.\n               *\n               *  This function returns a string serialization of the current DOM\n               *  tree.  It is often used internally to pass data to a\n               *  Strophe.Request object.\n               *\n               *  Returns:\n               *    The serialized DOM tree in a String.\n               */\n              toString: function toString() {\n                return Strophe.serialize(this.nodeTree);\n              },\n\n              /** Function: up\n               *  Make the current parent element the new current element.\n               *\n               *  This function is often used after c() to traverse back up the tree.\n               *  For example, to add two children to the same element\n               *  > builder.c('child1', {}).up().c('child2', {});\n               *\n               *  Returns:\n               *    The Stophe.Builder object.\n               */\n              up: function up() {\n                this.node = this.node.parentNode;\n                return this;\n              },\n\n              /** Function: root\n               *  Make the root element the new current element.\n               *\n               *  When at a deeply nested element in the tree, this function can be used\n               *  to jump back to the root of the tree, instead of having to repeatedly\n               *  call up().\n               *\n               *  Returns:\n               *    The Stophe.Builder object.\n               */\n              root: function root() {\n                this.node = this.nodeTree;\n                return this;\n              },\n\n              /** Function: attrs\n               *  Add or modify attributes of the current element.\n               *\n               *  The attributes should be passed in object notation.  This function\n               *  does not move the current element pointer.\n               *\n               *  Parameters:\n               *    (Object) moreattrs - The attributes to add/modify in object notation.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              attrs: function attrs(moreattrs) {\n                for (var k in moreattrs) {\n                  if (Object.prototype.hasOwnProperty.call(moreattrs, k)) {\n                    if (moreattrs[k] === undefined) {\n                      this.node.removeAttribute(k);\n                    } else {\n                      this.node.setAttribute(k, moreattrs[k]);\n                    }\n                  }\n                }\n\n                return this;\n              },\n\n              /** Function: c\n               *  Add a child to the current element and make it the new current\n               *  element.\n               *\n               *  This function moves the current element pointer to the child,\n               *  unless text is provided.  If you need to add another child, it\n               *  is necessary to use up() to go back to the parent in the tree.\n               *\n               *  Parameters:\n               *    (String) name - The name of the child.\n               *    (Object) attrs - The attributes of the child in object notation.\n               *    (String) text - The text to add to the child.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              c: function c(name, attrs, text) {\n                var child = Strophe.xmlElement(name, attrs, text);\n                this.node.appendChild(child);\n\n                if (typeof text !== \"string\" && typeof text !== \"number\") {\n                  this.node = child;\n                }\n\n                return this;\n              },\n\n              /** Function: cnode\n               *  Add a child to the current element and make it the new current\n               *  element.\n               *\n               *  This function is the same as c() except that instead of using a\n               *  name and an attributes object to create the child it uses an\n               *  existing DOM element object.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              cnode: function cnode(elem) {\n                var impNode;\n                var xmlGen = Strophe.xmlGenerator();\n\n                try {\n                  impNode = xmlGen.importNode !== undefined;\n                } catch (e) {\n                  impNode = false;\n                }\n\n                var newElem = impNode ? xmlGen.importNode(elem, true) : Strophe.copyElement(elem);\n                this.node.appendChild(newElem);\n                this.node = newElem;\n                return this;\n              },\n\n              /** Function: t\n               *  Add a child text element.\n               *\n               *  This *does not* make the child the new current element since there\n               *  are no children of text elements.\n               *\n               *  Parameters:\n               *    (String) text - The text data to append to the current element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              t: function t(text) {\n                var child = Strophe.xmlTextNode(text);\n                this.node.appendChild(child);\n                return this;\n              },\n\n              /** Function: h\n               *  Replace current element contents with the HTML passed in.\n               *\n               *  This *does not* make the child the new current element\n               *\n               *  Parameters:\n               *    (String) html - The html to insert as contents of current element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              h: function h(html) {\n                var fragment = document.createElement('body'); // force the browser to try and fix any invalid HTML tags\n\n                fragment.innerHTML = html; // copy cleaned html into an xml dom\n\n                var xhtml = Strophe.createHtml(fragment);\n\n                while (xhtml.childNodes.length > 0) {\n                  this.node.appendChild(xhtml.childNodes[0]);\n                }\n\n                return this;\n              }\n            };\n            /** PrivateClass: Strophe.Handler\n             *  _Private_ helper class for managing stanza handlers.\n             *\n             *  A Strophe.Handler encapsulates a user provided callback function to be\n             *  executed when matching stanzas are received by the connection.\n             *  Handlers can be either one-off or persistant depending on their\n             *  return value. Returning true will cause a Handler to remain active, and\n             *  returning false will remove the Handler.\n             *\n             *  Users will not use Strophe.Handler objects directly, but instead they\n             *  will use Strophe.Connection.addHandler() and\n             *  Strophe.Connection.deleteHandler().\n             */\n\n            /** PrivateConstructor: Strophe.Handler\n             *  Create and initialize a new Strophe.Handler.\n             *\n             *  Parameters:\n             *    (Function) handler - A function to be executed when the handler is run.\n             *    (String) ns - The namespace to match.\n             *    (String) name - The element name to match.\n             *    (String) type - The element type to match.\n             *    (String) id - The element id attribute to match.\n             *    (String) from - The element from attribute to match.\n             *    (Object) options - Handler options\n             *\n             *  Returns:\n             *    A new Strophe.Handler object.\n             */\n\n            Strophe.Handler = function (handler, ns, name, type, id, from, options) {\n              this.handler = handler;\n              this.ns = ns;\n              this.name = name;\n              this.type = type;\n              this.id = id;\n              this.options = options || {\n                'matchBareFromJid': false,\n                'ignoreNamespaceFragment': false\n              }; // BBB: Maintain backward compatibility with old `matchBare` option\n\n              if (this.options.matchBare) {\n                Strophe.warn('The \"matchBare\" option is deprecated, use \"matchBareFromJid\" instead.');\n                this.options.matchBareFromJid = this.options.matchBare;\n                delete this.options.matchBare;\n              }\n\n              if (this.options.matchBareFromJid) {\n                this.from = from ? Strophe.getBareJidFromJid(from) : null;\n              } else {\n                this.from = from;\n              } // whether the handler is a user handler or a system handler\n\n\n              this.user = true;\n            };\n\n            Strophe.Handler.prototype = {\n              /** PrivateFunction: getNamespace\n               *  Returns the XML namespace attribute on an element.\n               *  If `ignoreNamespaceFragment` was passed in for this handler, then the\n               *  URL fragment will be stripped.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element with the namespace.\n               *\n               *  Returns:\n               *    The namespace, with optionally the fragment stripped.\n               */\n              getNamespace: function getNamespace(elem) {\n                var elNamespace = elem.getAttribute(\"xmlns\");\n\n                if (elNamespace && this.options.ignoreNamespaceFragment) {\n                  elNamespace = elNamespace.split('#')[0];\n                }\n\n                return elNamespace;\n              },\n\n              /** PrivateFunction: namespaceMatch\n               *  Tests if a stanza matches the namespace set for this Strophe.Handler.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element to test.\n               *\n               *  Returns:\n               *    true if the stanza matches and false otherwise.\n               */\n              namespaceMatch: function namespaceMatch(elem) {\n                var _this = this;\n\n                var nsMatch = false;\n\n                if (!this.ns) {\n                  return true;\n                } else {\n                  Strophe.forEachChild(elem, null, function (elem) {\n                    if (_this.getNamespace(elem) === _this.ns) {\n                      nsMatch = true;\n                    }\n                  });\n                  return nsMatch || this.getNamespace(elem) === this.ns;\n                }\n              },\n\n              /** PrivateFunction: isMatch\n               *  Tests if a stanza matches the Strophe.Handler.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element to test.\n               *\n               *  Returns:\n               *    true if the stanza matches and false otherwise.\n               */\n              isMatch: function isMatch(elem) {\n                var from = elem.getAttribute('from');\n\n                if (this.options.matchBareFromJid) {\n                  from = Strophe.getBareJidFromJid(from);\n                }\n\n                var elem_type = elem.getAttribute(\"type\");\n\n                if (this.namespaceMatch(elem) && (!this.name || Strophe.isTagEqual(elem, this.name)) && (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) !== -1 : elem_type === this.type)) && (!this.id || elem.getAttribute(\"id\") === this.id) && (!this.from || from === this.from)) {\n                  return true;\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: run\n               *  Run the callback on a matching stanza.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The DOM element that triggered the\n               *      Strophe.Handler.\n               *\n               *  Returns:\n               *    A boolean indicating if the handler should remain active.\n               */\n              run: function run(elem) {\n                var result = null;\n\n                try {\n                  result = this.handler(elem);\n                } catch (e) {\n                  Strophe._handleError(e);\n\n                  throw e;\n                }\n\n                return result;\n              },\n\n              /** PrivateFunction: toString\n               *  Get a String representation of the Strophe.Handler object.\n               *\n               *  Returns:\n               *    A String.\n               */\n              toString: function toString() {\n                return \"{Handler: \" + this.handler + \"(\" + this.name + \",\" + this.id + \",\" + this.ns + \")}\";\n              }\n            };\n            /** PrivateClass: Strophe.TimedHandler\n             *  _Private_ helper class for managing timed handlers.\n             *\n             *  A Strophe.TimedHandler encapsulates a user provided callback that\n             *  should be called after a certain period of time or at regular\n             *  intervals.  The return value of the callback determines whether the\n             *  Strophe.TimedHandler will continue to fire.\n             *\n             *  Users will not use Strophe.TimedHandler objects directly, but instead\n             *  they will use Strophe.Connection.addTimedHandler() and\n             *  Strophe.Connection.deleteTimedHandler().\n             */\n\n            /** PrivateConstructor: Strophe.TimedHandler\n             *  Create and initialize a new Strophe.TimedHandler object.\n             *\n             *  Parameters:\n             *    (Integer) period - The number of milliseconds to wait before the\n             *      handler is called.\n             *    (Function) handler - The callback to run when the handler fires.  This\n             *      function should take no arguments.\n             *\n             *  Returns:\n             *    A new Strophe.TimedHandler object.\n             */\n\n            Strophe.TimedHandler = function (period, handler) {\n              this.period = period;\n              this.handler = handler;\n              this.lastCalled = new Date().getTime();\n              this.user = true;\n            };\n\n            Strophe.TimedHandler.prototype = {\n              /** PrivateFunction: run\n               *  Run the callback for the Strophe.TimedHandler.\n               *\n               *  Returns:\n               *    true if the Strophe.TimedHandler should be called again, and false\n               *      otherwise.\n               */\n              run: function run() {\n                this.lastCalled = new Date().getTime();\n                return this.handler();\n              },\n\n              /** PrivateFunction: reset\n               *  Reset the last called time for the Strophe.TimedHandler.\n               */\n              reset: function reset() {\n                this.lastCalled = new Date().getTime();\n              },\n\n              /** PrivateFunction: toString\n               *  Get a string representation of the Strophe.TimedHandler object.\n               *\n               *  Returns:\n               *    The string representation.\n               */\n              toString: function toString() {\n                return \"{TimedHandler: \" + this.handler + \"(\" + this.period + \")}\";\n              }\n            };\n            /** Class: Strophe.Connection\n             *  XMPP Connection manager.\n             *\n             *  This class is the main part of Strophe.  It manages a BOSH or websocket\n             *  connection to an XMPP server and dispatches events to the user callbacks\n             *  as data arrives. It supports SASL PLAIN, SASL DIGEST-MD5, SASL SCRAM-SHA1\n             *  and legacy authentication.\n             *\n             *  After creating a Strophe.Connection object, the user will typically\n             *  call connect() with a user supplied callback to handle connection level\n             *  events like authentication failure, disconnection, or connection\n             *  complete.\n             *\n             *  The user will also have several event handlers defined by using\n             *  addHandler() and addTimedHandler().  These will allow the user code to\n             *  respond to interesting stanzas or do something periodically with the\n             *  connection. These handlers will be active once authentication is\n             *  finished.\n             *\n             *  To send data to the connection, use send().\n             */\n\n            /** Constructor: Strophe.Connection\n             *  Create and initialize a Strophe.Connection object.\n             *\n             *  The transport-protocol for this connection will be chosen automatically\n             *  based on the given service parameter. URLs starting with \"ws://\" or\n             *  \"wss://\" will use WebSockets, URLs starting with \"http://\", \"https://\"\n             *  or without a protocol will use BOSH.\n             *\n             *  To make Strophe connect to the current host you can leave out the protocol\n             *  and host part and just pass the path, e.g.\n             *\n             *  > let conn = new Strophe.Connection(\"/http-bind/\");\n             *\n             *  Options common to both Websocket and BOSH:\n             *  ------------------------------------------\n             *\n             *  cookies:\n             *\n             *  The *cookies* option allows you to pass in cookies to be added to the\n             *  document. These cookies will then be included in the BOSH XMLHttpRequest\n             *  or in the websocket connection.\n             *\n             *  The passed in value must be a map of cookie names and string values.\n             *\n             *  > { \"myCookie\": {\n             *  >     \"value\": \"1234\",\n             *  >     \"domain\": \".example.org\",\n             *  >     \"path\": \"/\",\n             *  >     \"expires\": expirationDate\n             *  >     }\n             *  > }\n             *\n             *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\n             *  Those cookies need to be set under those domains, for example they can be\n             *  set server-side by making a XHR call to that domain to ask it to set any\n             *  necessary cookies.\n             *\n             *  mechanisms:\n             *\n             *  The *mechanisms* option allows you to specify the SASL mechanisms that this\n             *  instance of Strophe.Connection (and therefore your XMPP client) will\n             *  support.\n             *\n             *  The value must be an array of objects with Strophe.SASLMechanism\n             *  prototypes.\n             *\n             *  If nothing is specified, then the following mechanisms (and their\n             *  priorities) are registered:\n             *\n             *      SCRAM-SHA1 - 70\n             *      DIGEST-MD5 - 60\n             *      PLAIN - 50\n             *      OAUTH-BEARER - 40\n             *      OAUTH-2 - 30\n             *      ANONYMOUS - 20\n             *      EXTERNAL - 10\n             *\n             *  explicitResourceBinding:\n             *\n             *  If `explicitResourceBinding` is set to a truthy value, then the XMPP client\n             *  needs to explicitly call `Strophe.Connection.prototype.bind` once the XMPP\n             *  server has advertised the \"urn:ietf:params:xml:ns:xmpp-bind\" feature.\n             *\n             *  Making this step explicit allows client authors to first finish other\n             *  stream related tasks, such as setting up an XEP-0198 Stream Management\n             *  session, before binding the JID resource for this session.\n             *\n             *  WebSocket options:\n             *  ------------------\n             *\n             *  If you want to connect to the current host with a WebSocket connection you\n             *  can tell Strophe to use WebSockets through a \"protocol\" attribute in the\n             *  optional options parameter. Valid values are \"ws\" for WebSocket and \"wss\"\n             *  for Secure WebSocket.\n             *  So to connect to \"wss://CURRENT_HOSTNAME/xmpp-websocket\" you would call\n             *\n             *  > let conn = new Strophe.Connection(\"/xmpp-websocket/\", {protocol: \"wss\"});\n             *\n             *  Note that relative URLs _NOT_ starting with a \"/\" will also include the path\n             *  of the current site.\n             *\n             *  Also because downgrading security is not permitted by browsers, when using\n             *  relative URLs both BOSH and WebSocket connections will use their secure\n             *  variants if the current connection to the site is also secure (https).\n             *\n             *  BOSH options:\n             *  -------------\n             *\n             *  By adding \"sync\" to the options, you can control if requests will\n             *  be made synchronously or not. The default behaviour is asynchronous.\n             *  If you want to make requests synchronous, make \"sync\" evaluate to true.\n             *  > let conn = new Strophe.Connection(\"/http-bind/\", {sync: true});\n             *\n             *  You can also toggle this on an already established connection.\n             *  > conn.options.sync = true;\n             *\n             *  The *customHeaders* option can be used to provide custom HTTP headers to be\n             *  included in the XMLHttpRequests made.\n             *\n             *  The *keepalive* option can be used to instruct Strophe to maintain the\n             *  current BOSH session across interruptions such as webpage reloads.\n             *\n             *  It will do this by caching the sessions tokens in sessionStorage, and when\n             *  \"restore\" is called it will check whether there are cached tokens with\n             *  which it can resume an existing session.\n             *\n             *  The *withCredentials* option should receive a Boolean value and is used to\n             *  indicate wether cookies should be included in ajax requests (by default\n             *  they're not).\n             *  Set this value to true if you are connecting to a BOSH service\n             *  and for some reason need to send cookies to it.\n             *  In order for this to work cross-domain, the server must also enable\n             *  credentials by setting the Access-Control-Allow-Credentials response header\n             *  to \"true\". For most usecases however this setting should be false (which\n             *  is the default).\n             *  Additionally, when using Access-Control-Allow-Credentials, the\n             *  Access-Control-Allow-Origin header can't be set to the wildcard \"*\", but\n             *  instead must be restricted to actual domains.\n             *\n             *  The *contentType* option can be set to change the default Content-Type\n             *  of \"text/xml; charset=utf-8\", which can be useful to reduce the amount of\n             *  CORS preflight requests that are sent to the server.\n             *\n             *  Parameters:\n             *    (String) service - The BOSH or WebSocket service URL.\n             *    (Object) options - A hash of configuration options\n             *\n             *  Returns:\n             *    A new Strophe.Connection object.\n             */\n\n            Strophe.Connection = function (service, options) {\n              var _this2 = this;\n\n              // The service URL\n              this.service = service; // Configuration options\n\n              this.options = options || {};\n              var proto = this.options.protocol || \"\"; // Select protocal based on service or options\n\n              if (service.indexOf(\"ws:\") === 0 || service.indexOf(\"wss:\") === 0 || proto.indexOf(\"ws\") === 0) {\n                this._proto = new Strophe.Websocket(this);\n              } else {\n                this._proto = new Strophe.Bosh(this);\n              }\n              /* The connected JID. */\n\n\n              this.jid = \"\";\n              /* the JIDs domain */\n\n              this.domain = null;\n              /* stream:features */\n\n              this.features = null; // SASL\n\n              this._sasl_data = {};\n              this.do_session = false;\n              this.do_bind = false; // handler lists\n\n              this.timedHandlers = [];\n              this.handlers = [];\n              this.removeTimeds = [];\n              this.removeHandlers = [];\n              this.addTimeds = [];\n              this.addHandlers = [];\n              this.protocolErrorHandlers = {\n                'HTTP': {},\n                'websocket': {}\n              };\n              this._idleTimeout = null;\n              this._disconnectTimeout = null;\n              this.authenticated = false;\n              this.connected = false;\n              this.disconnecting = false;\n              this.do_authentication = true;\n              this.paused = false;\n              this.restored = false;\n              this._data = [];\n              this._uniqueId = 0;\n              this._sasl_success_handler = null;\n              this._sasl_failure_handler = null;\n              this._sasl_challenge_handler = null; // Max retries before disconnecting\n\n              this.maxRetries = 5; // Call onIdle callback every 1/10th of a second\n\n              this._idleTimeout = setTimeout(function () {\n                return _this2._onIdle();\n              }, 100);\n              utils.addCookies(this.options.cookies);\n              this.registerSASLMechanisms(this.options.mechanisms); // initialize plugins\n\n              for (var k in Strophe._connectionPlugins) {\n                if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n                  var F = function F() {};\n\n                  F.prototype = Strophe._connectionPlugins[k];\n                  this[k] = new F();\n                  this[k].init(this);\n                }\n              }\n            };\n\n            Strophe.Connection.prototype = {\n              /** Function: reset\n               *  Reset the connection.\n               *\n               *  This function should be called after a connection is disconnected\n               *  before that connection is reused.\n               */\n              reset: function reset() {\n                this._proto._reset(); // SASL\n\n\n                this.do_session = false;\n                this.do_bind = false; // handler lists\n\n                this.timedHandlers = [];\n                this.handlers = [];\n                this.removeTimeds = [];\n                this.removeHandlers = [];\n                this.addTimeds = [];\n                this.addHandlers = [];\n                this.authenticated = false;\n                this.connected = false;\n                this.disconnecting = false;\n                this.restored = false;\n                this._data = [];\n                this._requests = [];\n                this._uniqueId = 0;\n              },\n\n              /** Function: pause\n               *  Pause the request manager.\n               *\n               *  This will prevent Strophe from sending any more requests to the\n               *  server.  This is very useful for temporarily pausing\n               *  BOSH-Connections while a lot of send() calls are happening quickly.\n               *  This causes Strophe to send the data in a single request, saving\n               *  many request trips.\n               */\n              pause: function pause() {\n                this.paused = true;\n              },\n\n              /** Function: resume\n               *  Resume the request manager.\n               *\n               *  This resumes after pause() has been called.\n               */\n              resume: function resume() {\n                this.paused = false;\n              },\n\n              /** Function: getUniqueId\n               *  Generate a unique ID for use in <iq/> elements.\n               *\n               *  All <iq/> stanzas are required to have unique id attributes.  This\n               *  function makes creating these easy.  Each connection instance has\n               *  a counter which starts from zero, and the value of this counter\n               *  plus a colon followed by the suffix becomes the unique id. If no\n               *  suffix is supplied, the counter is used as the unique id.\n               *\n               *  Suffixes are used to make debugging easier when reading the stream\n               *  data, and their use is recommended.  The counter resets to 0 for\n               *  every new connection for the same reason.  For connections to the\n               *  same server that authenticate the same way, all the ids should be\n               *  the same, which makes it easy to see changes.  This is useful for\n               *  automated testing as well.\n               *\n               *  Parameters:\n               *    (String) suffix - A optional suffix to append to the id.\n               *\n               *  Returns:\n               *    A unique string to be used for the id attribute.\n               */\n              getUniqueId: function getUniqueId(suffix) {\n                var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                  var r = Math.random() * 16 | 0,\n                      v = c === 'x' ? r : r & 0x3 | 0x8;\n                  return v.toString(16);\n                });\n\n                if (typeof suffix === \"string\" || typeof suffix === \"number\") {\n                  return uuid + \":\" + suffix;\n                } else {\n                  return uuid + \"\";\n                }\n              },\n\n              /** Function: addProtocolErrorHandler\n               *  Register a handler function for when a protocol (websocker or HTTP)\n               *  error occurs.\n               *\n               *  NOTE: Currently only HTTP errors for BOSH requests are handled.\n               *  Patches that handle websocket errors would be very welcome.\n               *\n               *  Parameters:\n               *    (String) protocol - 'HTTP' or 'websocket'\n               *    (Integer) status_code - Error status code (e.g 500, 400 or 404)\n               *    (Function) callback - Function that will fire on Http error\n               *\n               *  Example:\n               *  function onError(err_code){\n               *    //do stuff\n               *  }\n               *\n               *  let conn = Strophe.connect('http://example.com/http-bind');\n               *  conn.addProtocolErrorHandler('HTTP', 500, onError);\n               *  // Triggers HTTP 500 error and onError handler will be called\n               *  conn.connect('user_jid@incorrect_jabber_host', 'secret', onConnect);\n               */\n              addProtocolErrorHandler: function addProtocolErrorHandler(protocol, status_code, callback) {\n                this.protocolErrorHandlers[protocol][status_code] = callback;\n              },\n\n              /** Function: connect\n               *  Starts the connection process.\n               *\n               *  As the connection process proceeds, the user supplied callback will\n               *  be triggered multiple times with status updates.  The callback\n               *  should take two arguments - the status code and the error condition.\n               *\n               *  The status code will be one of the values in the Strophe.Status\n               *  constants.  The error condition will be one of the conditions\n               *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n               *\n               *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\n               *  for BOSH connections. Please see XEP 124 for a more detailed explanation\n               *  of the optional parameters.\n               *\n               *  Parameters:\n               *    (String) jid - The user's JID.  This may be a bare JID,\n               *      or a full JID.  If a node is not supplied, SASL OAUTHBEARER or\n               *      SASL ANONYMOUS authentication will be attempted (OAUTHBEARER will\n               *      process the provided password value as an access token).\n               *    (String) pass - The user's password.\n               *    (Function) callback - The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (String) route - The optional route value.\n               *    (String) authcid - The optional alternative authentication identity\n               *      (username) if intending to impersonate another user.\n               *      When using the SASL-EXTERNAL authentication mechanism, for example\n               *      with client certificates, then the authcid value is used to\n               *      determine whether an authorization JID (authzid) should be sent to\n               *      the server. The authzid should not be sent to the server if the\n               *      authzid and authcid are the same. So to prevent it from being sent\n               *      (for example when the JID is already contained in the client\n               *      certificate), set authcid to that same JID. See XEP-178 for more\n               *      details.\n               */\n              connect: function connect(jid, pass, callback, wait, hold, route, authcid) {\n                this.jid = jid;\n                /** Variable: authzid\n                 *  Authorization identity.\n                 */\n\n                this.authzid = Strophe.getBareJidFromJid(this.jid);\n                /** Variable: authcid\n                 *  Authentication identity (User name).\n                 */\n\n                this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\n                /** Variable: pass\n                 *  Authentication identity (User password).\n                 */\n\n                this.pass = pass;\n                /** Variable: servtype\n                 *  Digest MD5 compatibility.\n                 */\n\n                this.servtype = \"xmpp\";\n                this.connect_callback = callback;\n                this.disconnecting = false;\n                this.connected = false;\n                this.authenticated = false;\n                this.restored = false; // parse jid for domain\n\n                this.domain = Strophe.getDomainFromJid(this.jid);\n\n                this._changeConnectStatus(Strophe.Status.CONNECTING, null);\n\n                this._proto._connect(wait, hold, route);\n              },\n\n              /** Function: attach\n               *  Attach to an already created and authenticated BOSH session.\n               *\n               *  This function is provided to allow Strophe to attach to BOSH\n               *  sessions which have been created externally, perhaps by a Web\n               *  application.  This is often used to support auto-login type features\n               *  without putting user credentials into the page.\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *    (String) sid - The SID of the BOSH session.\n               *    (String) rid - The current RID of the BOSH session.  This RID\n               *      will be used by the next request.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              attach: function attach(jid, sid, rid, callback, wait, hold, wind) {\n                if (this._proto instanceof Strophe.Bosh) {\n                  this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error('The \"attach\" method can only be used with a BOSH connection.');\n                  error.name = 'StropheSessionError';\n                  throw error;\n                }\n              },\n\n              /** Function: restore\n               *  Attempt to restore a cached BOSH session.\n               *\n               *  This function is only useful in conjunction with providing the\n               *  \"keepalive\":true option when instantiating a new Strophe.Connection.\n               *\n               *  When \"keepalive\" is set to true, Strophe will cache the BOSH tokens\n               *  RID (Request ID) and SID (Session ID) and then when this function is\n               *  called, it will attempt to restore the session from those cached\n               *  tokens.\n               *\n               *  This function must therefore be called instead of connect or attach.\n               *\n               *  For an example on how to use it, please see examples/restore.js\n               *\n               *  Parameters:\n               *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\n               *    (Function) callback - The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              restore: function restore(jid, callback, wait, hold, wind) {\n                if (this._sessionCachingSupported()) {\n                  this._proto._restore(jid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error('The \"restore\" method can only be used with a BOSH connection.');\n                  error.name = 'StropheSessionError';\n                  throw error;\n                }\n              },\n\n              /** PrivateFunction: _sessionCachingSupported\n               * Checks whether sessionStorage and JSON are supported and whether we're\n               * using BOSH.\n               */\n              _sessionCachingSupported: function _sessionCachingSupported() {\n                if (this._proto instanceof Strophe.Bosh) {\n                  if (!JSON) {\n                    return false;\n                  }\n\n                  try {\n                    sessionStorage.setItem('_strophe_', '_strophe_');\n                    sessionStorage.removeItem('_strophe_');\n                  } catch (e) {\n                    return false;\n                  }\n\n                  return true;\n                }\n\n                return false;\n              },\n\n              /** Function: xmlInput\n               *  User overrideable function that receives XML data coming into the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.xmlInput = function (elem) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n               *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n               *  <Strophe.Bosh.strip> if you want to strip this tag.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML data received by the connection.\n               */\n              xmlInput: function xmlInput(elem) {\n                return;\n              },\n\n              /** Function: xmlOutput\n               *  User overrideable function that receives XML data sent to the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.xmlOutput = function (elem) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n               *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n               *  <Strophe.Bosh.strip> if you want to strip this tag.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XMLdata sent by the connection.\n               */\n              xmlOutput: function xmlOutput(elem) {\n                return;\n              },\n\n              /** Function: rawInput\n               *  User overrideable function that receives raw data coming into the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.rawInput = function (data) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (String) data - The data received by the connection.\n               */\n              rawInput: function rawInput(data) {\n                return;\n              },\n\n              /** Function: rawOutput\n               *  User overrideable function that receives raw data sent to the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.rawOutput = function (data) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (String) data - The data sent by the connection.\n               */\n              rawOutput: function rawOutput(data) {\n                return;\n              },\n\n              /** Function: nextValidRid\n               *  User overrideable function that receives the new valid rid.\n               *\n               *  The default function does nothing. User code can override this with\n               *  > Strophe.Connection.nextValidRid = function (rid) {\n               *  >    (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (Number) rid - The next valid rid\n               */\n              nextValidRid: function nextValidRid(rid) {\n                return;\n              },\n\n              /** Function: send\n               *  Send a stanza.\n               *\n               *  This function is called to push data onto the send queue to\n               *  go out over the wire.  Whenever a request is sent to the BOSH\n               *  server, all pending data is sent and the queue is flushed.\n               *\n               *  Parameters:\n               *    (XMLElement |\n               *     [XMLElement] |\n               *     Strophe.Builder) elem - The stanza to send.\n               */\n              send: function send(elem) {\n                if (elem === null) {\n                  return;\n                }\n\n                if (typeof elem.sort === \"function\") {\n                  for (var i = 0; i < elem.length; i++) {\n                    this._queueData(elem[i]);\n                  }\n                } else if (typeof elem.tree === \"function\") {\n                  this._queueData(elem.tree());\n                } else {\n                  this._queueData(elem);\n                }\n\n                this._proto._send();\n              },\n\n              /** Function: flush\n               *  Immediately send any pending outgoing data.\n               *\n               *  Normally send() queues outgoing data until the next idle period\n               *  (100ms), which optimizes network use in the common cases when\n               *  several send()s are called in succession. flush() can be used to\n               *  immediately send all pending data.\n               */\n              flush: function flush() {\n                // cancel the pending idle period and run the idle function\n                // immediately\n                clearTimeout(this._idleTimeout);\n\n                this._onIdle();\n              },\n\n              /** Function: sendPresence\n               *  Helper function to send presence stanzas. The main benefit is for\n               *  sending presence stanzas for which you expect a responding presence\n               *  stanza with the same id (for example when leaving a chat room).\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza to send.\n               *    (Function) callback - The callback function for a successful request.\n               *    (Function) errback - The callback function for a failed or timed\n               *      out request.  On timeout, the stanza will be null.\n               *    (Integer) timeout - The time specified in milliseconds for a\n               *      timeout to occur.\n               *\n               *  Returns:\n               *    The id used to send the presence.\n               */\n              sendPresence: function sendPresence(elem, callback, errback, timeout) {\n                var _this3 = this;\n\n                var timeoutHandler = null;\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var id = elem.getAttribute('id');\n\n                if (!id) {\n                  // inject id if not found\n                  id = this.getUniqueId(\"sendPresence\");\n                  elem.setAttribute(\"id\", id);\n                }\n\n                if (typeof callback === \"function\" || typeof errback === \"function\") {\n                  var handler = this.addHandler(function (stanza) {\n                    // remove timeout handler if there is one\n                    if (timeoutHandler) {\n                      _this3.deleteTimedHandler(timeoutHandler);\n                    }\n\n                    if (stanza.getAttribute('type') === 'error') {\n                      if (errback) {\n                        errback(stanza);\n                      }\n                    } else if (callback) {\n                      callback(stanza);\n                    }\n                  }, null, 'presence', null, id); // if timeout specified, set up a timeout handler.\n\n                  if (timeout) {\n                    timeoutHandler = this.addTimedHandler(timeout, function () {\n                      // get rid of normal handler\n                      _this3.deleteHandler(handler); // call errback on timeout with null stanza\n\n\n                      if (errback) {\n                        errback(null);\n                      }\n\n                      return false;\n                    });\n                  }\n                }\n\n                this.send(elem);\n                return id;\n              },\n\n              /** Function: sendIQ\n               *  Helper function to send IQ stanzas.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza to send.\n               *    (Function) callback - The callback function for a successful request.\n               *    (Function) errback - The callback function for a failed or timed\n               *      out request.  On timeout, the stanza will be null.\n               *    (Integer) timeout - The time specified in milliseconds for a\n               *      timeout to occur.\n               *\n               *  Returns:\n               *    The id used to send the IQ.\n              */\n              sendIQ: function sendIQ(elem, callback, errback, timeout) {\n                var _this4 = this;\n\n                var timeoutHandler = null;\n\n                if (typeof elem.tree === \"function\") {\n                  elem = elem.tree();\n                }\n\n                var id = elem.getAttribute('id');\n\n                if (!id) {\n                  // inject id if not found\n                  id = this.getUniqueId(\"sendIQ\");\n                  elem.setAttribute(\"id\", id);\n                }\n\n                if (typeof callback === \"function\" || typeof errback === \"function\") {\n                  var handler = this.addHandler(function (stanza) {\n                    // remove timeout handler if there is one\n                    if (timeoutHandler) {\n                      _this4.deleteTimedHandler(timeoutHandler);\n                    }\n\n                    var iqtype = stanza.getAttribute('type');\n\n                    if (iqtype === 'result') {\n                      if (callback) {\n                        callback(stanza);\n                      }\n                    } else if (iqtype === 'error') {\n                      if (errback) {\n                        errback(stanza);\n                      }\n                    } else {\n                      var error = new Error(\"Got bad IQ type of \".concat(iqtype));\n                      error.name = \"StropheError\";\n                      throw error;\n                    }\n                  }, null, 'iq', ['error', 'result'], id); // if timeout specified, set up a timeout handler.\n\n                  if (timeout) {\n                    timeoutHandler = this.addTimedHandler(timeout, function () {\n                      // get rid of normal handler\n                      _this4.deleteHandler(handler); // call errback on timeout with null stanza\n\n\n                      if (errback) {\n                        errback(null);\n                      }\n\n                      return false;\n                    });\n                  }\n                }\n\n                this.send(elem);\n                return id;\n              },\n\n              /** PrivateFunction: _queueData\n               *  Queue outgoing data for later sending.  Also ensures that the data\n               *  is a DOMElement.\n               */\n              _queueData: function _queueData(element) {\n                if (element === null || !element.tagName || !element.childNodes) {\n                  var error = new Error(\"Cannot queue non-DOMElement.\");\n                  error.name = \"StropheError\";\n                  throw error;\n                }\n\n                this._data.push(element);\n              },\n\n              /** PrivateFunction: _sendRestart\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                var _this5 = this;\n\n                this._data.push(\"restart\");\n\n                this._proto._sendRestart();\n\n                this._idleTimeout = setTimeout(function () {\n                  return _this5._onIdle();\n                }, 100);\n              },\n\n              /** Function: addTimedHandler\n               *  Add a timed handler to the connection.\n               *\n               *  This function adds a timed handler.  The provided handler will\n               *  be called every period milliseconds until it returns false,\n               *  the connection is terminated, or the handler is removed.  Handlers\n               *  that wish to continue being invoked should return true.\n               *\n               *  Because of method binding it is necessary to save the result of\n               *  this function if you wish to remove a handler with\n               *  deleteTimedHandler().\n               *\n               *  Note that user handlers are not active until authentication is\n               *  successful.\n               *\n               *  Parameters:\n               *    (Integer) period - The period of the handler.\n               *    (Function) handler - The callback function.\n               *\n               *  Returns:\n               *    A reference to the handler that can be used to remove it.\n               */\n              addTimedHandler: function addTimedHandler(period, handler) {\n                var thand = new Strophe.TimedHandler(period, handler);\n                this.addTimeds.push(thand);\n                return thand;\n              },\n\n              /** Function: deleteTimedHandler\n               *  Delete a timed handler for a connection.\n               *\n               *  This function removes a timed handler from the connection.  The\n               *  handRef parameter is *not* the function passed to addTimedHandler(),\n               *  but is the reference returned from addTimedHandler().\n               *\n               *  Parameters:\n               *    (Strophe.TimedHandler) handRef - The handler reference.\n               */\n              deleteTimedHandler: function deleteTimedHandler(handRef) {\n                // this must be done in the Idle loop so that we don't change\n                // the handlers during iteration\n                this.removeTimeds.push(handRef);\n              },\n\n              /** Function: addHandler\n               *  Add a stanza handler for the connection.\n               *\n               *  This function adds a stanza handler to the connection.  The\n               *  handler callback will be called for any stanza that matches\n               *  the parameters.  Note that if multiple parameters are supplied,\n               *  they must all match for the handler to be invoked.\n               *\n               *  The handler will receive the stanza that triggered it as its argument.\n               *  *The handler should return true if it is to be invoked again;\n               *  returning false will remove the handler after it returns.*\n               *\n               *  As a convenience, the ns parameters applies to the top level element\n               *  and also any of its immediate children.  This is primarily to make\n               *  matching /iq/query elements easy.\n               *\n               *  Options\n               *  ~~~~~~~\n               *  With the options argument, you can specify boolean flags that affect how\n               *  matches are being done.\n               *\n               *  Currently two flags exist:\n               *\n               *  - matchBareFromJid:\n               *      When set to true, the from parameter and the\n               *      from attribute on the stanza will be matched as bare JIDs instead\n               *      of full JIDs. To use this, pass {matchBareFromJid: true} as the\n               *      value of options. The default value for matchBareFromJid is false.\n               *\n               *  - ignoreNamespaceFragment:\n               *      When set to true, a fragment specified on the stanza's namespace\n               *      URL will be ignored when it's matched with the one configured for\n               *      the handler.\n               *\n               *      This means that if you register like this:\n               *      >   connection.addHandler(\n               *      >       handler,\n               *      >       'http://jabber.org/protocol/muc',\n               *      >       null, null, null, null,\n               *      >       {'ignoreNamespaceFragment': true}\n               *      >   );\n               *\n               *      Then a stanza with XML namespace of\n               *      'http://jabber.org/protocol/muc#user' will also be matched. If\n               *      'ignoreNamespaceFragment' is false, then only stanzas with\n               *      'http://jabber.org/protocol/muc' will be matched.\n               *\n               *  Deleting the handler\n               *  ~~~~~~~~~~~~~~~~~~~~\n               *  The return value should be saved if you wish to remove the handler\n               *  with deleteHandler().\n               *\n               *  Parameters:\n               *    (Function) handler - The user callback.\n               *    (String) ns - The namespace to match.\n               *    (String) name - The stanza name to match.\n               *    (String|Array) type - The stanza type (or types if an array) to match.\n               *    (String) id - The stanza id attribute to match.\n               *    (String) from - The stanza from attribute to match.\n               *    (String) options - The handler options\n               *\n               *  Returns:\n               *    A reference to the handler that can be used to remove it.\n               */\n              addHandler: function addHandler(handler, ns, name, type, id, from, options) {\n                var hand = new Strophe.Handler(handler, ns, name, type, id, from, options);\n                this.addHandlers.push(hand);\n                return hand;\n              },\n\n              /** Function: deleteHandler\n               *  Delete a stanza handler for a connection.\n               *\n               *  This function removes a stanza handler from the connection.  The\n               *  handRef parameter is *not* the function passed to addHandler(),\n               *  but is the reference returned from addHandler().\n               *\n               *  Parameters:\n               *    (Strophe.Handler) handRef - The handler reference.\n               */\n              deleteHandler: function deleteHandler(handRef) {\n                // this must be done in the Idle loop so that we don't change\n                // the handlers during iteration\n                this.removeHandlers.push(handRef); // If a handler is being deleted while it is being added,\n                // prevent it from getting added\n\n                var i = this.addHandlers.indexOf(handRef);\n\n                if (i >= 0) {\n                  this.addHandlers.splice(i, 1);\n                }\n              },\n\n              /** Function: registerSASLMechanisms\n               *\n               * Register the SASL mechanisms which will be supported by this instance of\n               * Strophe.Connection (i.e. which this XMPP client will support).\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of objects with Strophe.SASLMechanism prototypes\n               *\n               */\n              registerSASLMechanisms: function registerSASLMechanisms(mechanisms) {\n                this.mechanisms = {};\n                mechanisms = mechanisms || [Strophe.SASLAnonymous, Strophe.SASLExternal, Strophe.SASLMD5, Strophe.SASLOAuthBearer, Strophe.SASLXOAuth2, Strophe.SASLPlain, Strophe.SASLSHA1];\n                mechanisms.forEach(this.registerSASLMechanism.bind(this));\n              },\n\n              /** Function: registerSASLMechanism\n               *\n               * Register a single SASL mechanism, to be supported by this client.\n               *\n               *  Parameters:\n               *    (Object) mechanism - Object with a Strophe.SASLMechanism prototype\n               *\n               */\n              registerSASLMechanism: function registerSASLMechanism(mechanism) {\n                this.mechanisms[mechanism.prototype.name] = mechanism;\n              },\n\n              /** Function: disconnect\n               *  Start the graceful disconnection process.\n               *\n               *  This function starts the disconnection process.  This process starts\n               *  by sending unavailable presence and sending BOSH body of type\n               *  terminate.  A timeout handler makes sure that disconnection happens\n               *  even if the BOSH server does not respond.\n               *  If the Connection object isn't connected, at least tries to abort all pending requests\n               *  so the connection object won't generate successful requests (which were already opened).\n               *\n               *  The user supplied connection callback will be notified of the\n               *  progress as this process happens.\n               *\n               *  Parameters:\n               *    (String) reason - The reason the disconnect is occuring.\n               */\n              disconnect: function disconnect(reason) {\n                this._changeConnectStatus(Strophe.Status.DISCONNECTING, reason);\n\n                Strophe.warn(\"Disconnect was called because: \" + reason);\n\n                if (this.connected) {\n                  var pres = false;\n                  this.disconnecting = true;\n\n                  if (this.authenticated) {\n                    pres = $pres({\n                      'xmlns': Strophe.NS.CLIENT,\n                      'type': 'unavailable'\n                    });\n                  } // setup timeout handler\n\n\n                  this._disconnectTimeout = this._addSysTimedHandler(3000, this._onDisconnectTimeout.bind(this));\n\n                  this._proto._disconnect(pres);\n                } else {\n                  Strophe.warn(\"Disconnect was called before Strophe connected to the server\");\n\n                  this._proto._abortAllRequests();\n\n                  this._doDisconnect();\n                }\n              },\n\n              /** PrivateFunction: _changeConnectStatus\n               *  _Private_ helper function that makes sure plugins and the user's\n               *  callback are notified of connection status changes.\n               *\n               *  Parameters:\n               *    (Integer) status - the new connection status, one of the values\n               *      in Strophe.Status\n               *    (String) condition - the error condition or null\n               *    (XMLElement) elem - The triggering stanza.\n               */\n              _changeConnectStatus: function _changeConnectStatus(status, condition, elem) {\n                // notify all plugins listening for status changes\n                for (var k in Strophe._connectionPlugins) {\n                  if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n                    var plugin = this[k];\n\n                    if (plugin.statusChanged) {\n                      try {\n                        plugin.statusChanged(status, condition);\n                      } catch (err) {\n                        Strophe.error(\"\".concat(k, \" plugin caused an exception changing status: \").concat(err));\n                      }\n                    }\n                  }\n                } // notify the user's callback\n\n\n                if (this.connect_callback) {\n                  try {\n                    this.connect_callback(status, condition, elem);\n                  } catch (e) {\n                    Strophe._handleError(e);\n\n                    Strophe.error(\"User connection callback caused an exception: \".concat(e));\n                  }\n                }\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  This is the last piece of the disconnection logic.  This resets the\n               *  connection and alerts the user's connection callback.\n               */\n              _doDisconnect: function _doDisconnect(condition) {\n                if (typeof this._idleTimeout === \"number\") {\n                  clearTimeout(this._idleTimeout);\n                } // Cancel Disconnect Timeout\n\n\n                if (this._disconnectTimeout !== null) {\n                  this.deleteTimedHandler(this._disconnectTimeout);\n                  this._disconnectTimeout = null;\n                }\n\n                Strophe.debug(\"_doDisconnect was called\");\n\n                this._proto._doDisconnect();\n\n                this.authenticated = false;\n                this.disconnecting = false;\n                this.restored = false; // delete handlers\n\n                this.handlers = [];\n                this.timedHandlers = [];\n                this.removeTimeds = [];\n                this.removeHandlers = [];\n                this.addTimeds = [];\n                this.addHandlers = []; // tell the parent we disconnected\n\n                this._changeConnectStatus(Strophe.Status.DISCONNECTED, condition);\n\n                this.connected = false;\n              },\n\n              /** PrivateFunction: _dataRecv\n               *  _Private_ handler to processes incoming data from the the connection.\n               *\n               *  Except for _connect_cb handling the initial connection request,\n               *  this function handles the incoming data for all requests.  This\n               *  function also fires stanza handlers that match each incoming\n               *  stanza.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request that has data ready.\n               *    (string) req - The stanza a raw string (optiona).\n               */\n              _dataRecv: function _dataRecv(req, raw) {\n                var _this6 = this;\n\n                Strophe.debug(\"_dataRecv called\");\n\n                var elem = this._proto._reqToData(req);\n\n                if (elem === null) {\n                  return;\n                }\n\n                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                  if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\n                    this.xmlInput(elem.childNodes[0]);\n                  } else {\n                    this.xmlInput(elem);\n                  }\n                }\n\n                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n                  if (raw) {\n                    this.rawInput(raw);\n                  } else {\n                    this.rawInput(Strophe.serialize(elem));\n                  }\n                } // remove handlers scheduled for deletion\n\n\n                while (this.removeHandlers.length > 0) {\n                  var hand = this.removeHandlers.pop();\n                  var i = this.handlers.indexOf(hand);\n\n                  if (i >= 0) {\n                    this.handlers.splice(i, 1);\n                  }\n                } // add handlers scheduled for addition\n\n\n                while (this.addHandlers.length > 0) {\n                  this.handlers.push(this.addHandlers.pop());\n                } // handle graceful disconnect\n\n\n                if (this.disconnecting && this._proto._emptyQueue()) {\n                  this._doDisconnect();\n\n                  return;\n                }\n\n                var type = elem.getAttribute(\"type\");\n\n                if (type !== null && type === \"terminate\") {\n                  // Don't process stanzas that come in after disconnect\n                  if (this.disconnecting) {\n                    return;\n                  } // an error occurred\n\n\n                  var cond = elem.getAttribute(\"condition\");\n                  var conflict = elem.getElementsByTagName(\"conflict\");\n\n                  if (cond !== null) {\n                    if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                      cond = \"conflict\";\n                    }\n\n                    this._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n                  } else {\n                    this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.UNKOWN_REASON);\n                  }\n\n                  this._doDisconnect(cond);\n\n                  return;\n                } // send each incoming stanza through the handler chain\n\n\n                Strophe.forEachChild(elem, null, function (child) {\n                  // process handlers\n                  var newList = _this6.handlers;\n                  _this6.handlers = [];\n\n                  for (var _i5 = 0; _i5 < newList.length; _i5++) {\n                    var _hand = newList[_i5]; // encapsulate 'handler.run' not to lose the whole handler list if\n                    // one of the handlers throws an exception\n\n                    try {\n                      if (_hand.isMatch(child) && (_this6.authenticated || !_hand.user)) {\n                        if (_hand.run(child)) {\n                          _this6.handlers.push(_hand);\n                        }\n                      } else {\n                        _this6.handlers.push(_hand);\n                      }\n                    } catch (e) {\n                      // if the handler throws an exception, we consider it as false\n                      Strophe.warn('Removing Strophe handlers due to uncaught exception: ' + e.message);\n                    }\n                  }\n                });\n              },\n\n              /** Attribute: mechanisms\n               *  SASL Mechanisms available for Connection.\n               */\n              mechanisms: {},\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ handler for initial connection request.\n               *\n               *  This handler is used to process the initial connection request\n               *  response from the BOSH server. It is used to set up authentication\n               *  handlers and start the authentication process.\n               *\n               *  SASL authentication will be attempted if available, otherwise\n               *  the code will fall back to legacy authentication.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The current request.\n               *    (Function) _callback - low level (xmpp) connect callback function.\n               *      Useful for plugins with their own xmpp connect callback (when they\n               *      want to do something special).\n               */\n              _connect_cb: function _connect_cb(req, _callback, raw) {\n                Strophe.debug(\"_connect_cb was called\");\n                this.connected = true;\n                var bodyWrap;\n\n                try {\n                  bodyWrap = this._proto._reqToData(req);\n                } catch (e) {\n                  if (e.name !== Strophe.ErrorCondition.BAD_FORMAT) {\n                    throw e;\n                  }\n\n                  this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.BAD_FORMAT);\n\n                  this._doDisconnect(Strophe.ErrorCondition.BAD_FORMAT);\n                }\n\n                if (!bodyWrap) {\n                  return;\n                }\n\n                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                  if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\n                    this.xmlInput(bodyWrap.childNodes[0]);\n                  } else {\n                    this.xmlInput(bodyWrap);\n                  }\n                }\n\n                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n                  if (raw) {\n                    this.rawInput(raw);\n                  } else {\n                    this.rawInput(Strophe.serialize(bodyWrap));\n                  }\n                }\n\n                var conncheck = this._proto._connect_cb(bodyWrap);\n\n                if (conncheck === Strophe.Status.CONNFAIL) {\n                  return;\n                } // Check for the stream:features tag\n\n\n                var hasFeatures;\n\n                if (bodyWrap.getElementsByTagNameNS) {\n                  hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"features\").length > 0;\n                } else {\n                  hasFeatures = bodyWrap.getElementsByTagName(\"stream:features\").length > 0 || bodyWrap.getElementsByTagName(\"features\").length > 0;\n                }\n\n                if (!hasFeatures) {\n                  this._proto._no_auth_received(_callback);\n\n                  return;\n                }\n\n                var matched = [];\n                var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n\n                if (mechanisms.length > 0) {\n                  for (var i = 0; i < mechanisms.length; i++) {\n                    var mech = Strophe.getText(mechanisms[i]);\n                    if (this.mechanisms[mech]) matched.push(this.mechanisms[mech]);\n                  }\n                }\n\n                if (matched.length === 0) {\n                  if (bodyWrap.getElementsByTagName(\"auth\").length === 0) {\n                    // There are no matching SASL mechanisms and also no legacy\n                    // auth available.\n                    this._proto._no_auth_received(_callback);\n\n                    return;\n                  }\n                }\n\n                if (this.do_authentication !== false) {\n                  this.authenticate(matched);\n                }\n              },\n\n              /** Function: sortMechanismsByPriority\n               *\n               *  Sorts an array of objects with prototype SASLMechanism according to\n               *  their priorities.\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of SASL mechanisms.\n               *\n               */\n              sortMechanismsByPriority: function sortMechanismsByPriority(mechanisms) {\n                // Sorting mechanisms according to priority.\n                for (var i = 0; i < mechanisms.length - 1; ++i) {\n                  var higher = i;\n\n                  for (var j = i + 1; j < mechanisms.length; ++j) {\n                    if (mechanisms[j].prototype.priority > mechanisms[higher].prototype.priority) {\n                      higher = j;\n                    }\n                  }\n\n                  if (higher !== i) {\n                    var swap = mechanisms[i];\n                    mechanisms[i] = mechanisms[higher];\n                    mechanisms[higher] = swap;\n                  }\n                }\n\n                return mechanisms;\n              },\n\n              /** Function: authenticate\n               * Set up authentication\n               *\n               *  Continues the initial connection request by setting up authentication\n               *  handlers and starting the authentication process.\n               *\n               *  SASL authentication will be attempted if available, otherwise\n               *  the code will fall back to legacy authentication.\n               *\n               *  Parameters:\n               *    (Array) matched - Array of SASL mechanisms supported.\n               *\n               */\n              authenticate: function authenticate(matched) {\n                if (!this._attemptSASLAuth(matched)) {\n                  this._attemptLegacyAuth();\n                }\n              },\n\n              /** PrivateFunction: _attemptSASLAuth\n               *\n               *  Iterate through an array of SASL mechanisms and attempt authentication\n               *  with the highest priority (enabled) mechanism.\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of SASL mechanisms.\n               *\n               *  Returns:\n               *    (Boolean) mechanism_found - true or false, depending on whether a\n               *          valid SASL mechanism was found with which authentication could be\n               *          started.\n               */\n              _attemptSASLAuth: function _attemptSASLAuth(mechanisms) {\n                mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n                var mechanism_found = false;\n\n                for (var i = 0; i < mechanisms.length; ++i) {\n                  if (!mechanisms[i].prototype.test(this)) {\n                    continue;\n                  }\n\n                  this._sasl_success_handler = this._addSysHandler(this._sasl_success_cb.bind(this), null, \"success\", null, null);\n                  this._sasl_failure_handler = this._addSysHandler(this._sasl_failure_cb.bind(this), null, \"failure\", null, null);\n                  this._sasl_challenge_handler = this._addSysHandler(this._sasl_challenge_cb.bind(this), null, \"challenge\", null, null);\n                  this._sasl_mechanism = new mechanisms[i]();\n\n                  this._sasl_mechanism.onStart(this);\n\n                  var request_auth_exchange = $build(\"auth\", {\n                    'xmlns': Strophe.NS.SASL,\n                    'mechanism': this._sasl_mechanism.name\n                  });\n\n                  if (this._sasl_mechanism.isClientFirst) {\n                    var response = this._sasl_mechanism.onChallenge(this, null);\n\n                    request_auth_exchange.t(btoa(response));\n                  }\n\n                  this.send(request_auth_exchange.tree());\n                  mechanism_found = true;\n                  break;\n                }\n\n                return mechanism_found;\n              },\n\n              /** PrivateFunction: _sasl_challenge_cb\n               *  _Private_ handler for the SASL challenge\n               *\n               */\n              _sasl_challenge_cb: function _sasl_challenge_cb(elem) {\n                var challenge = atob(Strophe.getText(elem));\n\n                var response = this._sasl_mechanism.onChallenge(this, challenge);\n\n                var stanza = $build('response', {\n                  'xmlns': Strophe.NS.SASL\n                });\n\n                if (response !== \"\") {\n                  stanza.t(btoa(response));\n                }\n\n                this.send(stanza.tree());\n                return true;\n              },\n\n              /** PrivateFunction: _attemptLegacyAuth\n               *\n               *  Attempt legacy (i.e. non-SASL) authentication.\n               */\n              _attemptLegacyAuth: function _attemptLegacyAuth() {\n                if (Strophe.getNodeFromJid(this.jid) === null) {\n                  // we don't have a node, which is required for non-anonymous\n                  // client connections\n                  this._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.MISSING_JID_NODE);\n\n                  this.disconnect(Strophe.ErrorCondition.MISSING_JID_NODE);\n                } else {\n                  // Fall back to legacy authentication\n                  this._changeConnectStatus(Strophe.Status.AUTHENTICATING, null);\n\n                  this._addSysHandler(this._onLegacyAuthIQResult.bind(this), null, null, null, \"_auth_1\");\n\n                  this.send($iq({\n                    'type': \"get\",\n                    'to': this.domain,\n                    'id': \"_auth_1\"\n                  }).c(\"query\", {\n                    xmlns: Strophe.NS.AUTH\n                  }).c(\"username\", {}).t(Strophe.getNodeFromJid(this.jid)).tree());\n                }\n              },\n\n              /** PrivateFunction: _onLegacyAuthIQResult\n               *  _Private_ handler for legacy authentication.\n               *\n               *  This handler is called in response to the initial <iq type='get'/>\n               *  for legacy authentication.  It builds an authentication <iq/> and\n               *  sends it, creating a handler (calling back to _auth2_cb()) to\n               *  handle the result\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza that triggered the callback.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onLegacyAuthIQResult: function _onLegacyAuthIQResult(elem) {\n                // build plaintext auth iq\n                var iq = $iq({\n                  type: \"set\",\n                  id: \"_auth_2\"\n                }).c('query', {\n                  xmlns: Strophe.NS.AUTH\n                }).c('username', {}).t(Strophe.getNodeFromJid(this.jid)).up().c('password').t(this.pass);\n\n                if (!Strophe.getResourceFromJid(this.jid)) {\n                  // since the user has not supplied a resource, we pick\n                  // a default one here.  unlike other auth methods, the server\n                  // cannot do this for us.\n                  this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\n                }\n\n                iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\n\n                this._addSysHandler(this._auth2_cb.bind(this), null, null, null, \"_auth_2\");\n\n                this.send(iq.tree());\n                return false;\n              },\n\n              /** PrivateFunction: _sasl_success_cb\n               *  _Private_ handler for succesful SASL authentication.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _sasl_success_cb: function _sasl_success_cb(elem) {\n                var _this7 = this;\n\n                if (this._sasl_data[\"server-signature\"]) {\n                  var serverSignature;\n                  var success = atob(Strophe.getText(elem));\n                  var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n                  var matches = success.match(attribMatch);\n\n                  if (matches[1] === \"v\") {\n                    serverSignature = matches[2];\n                  }\n\n                  if (serverSignature !== this._sasl_data[\"server-signature\"]) {\n                    // remove old handlers\n                    this.deleteHandler(this._sasl_failure_handler);\n                    this._sasl_failure_handler = null;\n\n                    if (this._sasl_challenge_handler) {\n                      this.deleteHandler(this._sasl_challenge_handler);\n                      this._sasl_challenge_handler = null;\n                    }\n\n                    this._sasl_data = {};\n                    return this._sasl_failure_cb(null);\n                  }\n                }\n\n                Strophe.info(\"SASL authentication succeeded.\");\n\n                if (this._sasl_mechanism) {\n                  this._sasl_mechanism.onSuccess();\n                } // remove old handlers\n\n\n                this.deleteHandler(this._sasl_failure_handler);\n                this._sasl_failure_handler = null;\n\n                if (this._sasl_challenge_handler) {\n                  this.deleteHandler(this._sasl_challenge_handler);\n                  this._sasl_challenge_handler = null;\n                }\n\n                var streamfeature_handlers = [];\n\n                var wrapper = function wrapper(handlers, elem) {\n                  while (handlers.length) {\n                    _this7.deleteHandler(handlers.pop());\n                  }\n\n                  _this7._onStreamFeaturesAfterSASL(elem);\n\n                  return false;\n                };\n\n                streamfeature_handlers.push(this._addSysHandler(function (elem) {\n                  return wrapper(streamfeature_handlers, elem);\n                }, null, \"stream:features\", null, null));\n                streamfeature_handlers.push(this._addSysHandler(function (elem) {\n                  return wrapper(streamfeature_handlers, elem);\n                }, Strophe.NS.STREAM, \"features\", null, null)); // we must send an xmpp:restart now\n\n                this._sendRestart();\n\n                return false;\n              },\n\n              /** PrivateFunction: _onStreamFeaturesAfterSASL\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onStreamFeaturesAfterSASL: function _onStreamFeaturesAfterSASL(elem) {\n                // save stream:features for future usage\n                this.features = elem;\n\n                for (var i = 0; i < elem.childNodes.length; i++) {\n                  var child = elem.childNodes[i];\n\n                  if (child.nodeName === 'bind') {\n                    this.do_bind = true;\n                  }\n\n                  if (child.nodeName === 'session') {\n                    this.do_session = true;\n                  }\n                }\n\n                if (!this.do_bind) {\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n\n                  return false;\n                } else if (!this.options.explicitResourceBinding) {\n                  this.bind();\n                } else {\n                  this._changeConnectStatus(Strophe.Status.BINDREQUIRED, null);\n                }\n\n                return false;\n              },\n\n              /** Function: bind\n               *\n               *  Sends an IQ to the XMPP server to bind a JID resource for this session.\n               *\n               *  https://tools.ietf.org/html/rfc6120#section-7.5\n               *\n               *  If `explicitResourceBinding` was set to a truthy value in the options\n               *  passed to the Strophe.Connection constructor, then this function needs\n               *  to be called explicitly by the client author.\n               *\n               *  Otherwise it'll be called automatically as soon as the XMPP server\n               *  advertises the \"urn:ietf:params:xml:ns:xmpp-bind\" stream feature.\n               */\n              bind: function bind() {\n                if (!this.do_bind) {\n                  Strophe.log(Strophe.LogLevel.INFO, \"Strophe.Connection.prototype.bind called but \\\"do_bind\\\" is false\");\n                  return;\n                }\n\n                this._addSysHandler(this._onResourceBindResultIQ.bind(this), null, null, null, \"_bind_auth_2\");\n\n                var resource = Strophe.getResourceFromJid(this.jid);\n\n                if (resource) {\n                  this.send($iq({\n                    type: \"set\",\n                    id: \"_bind_auth_2\"\n                  }).c('bind', {\n                    xmlns: Strophe.NS.BIND\n                  }).c('resource', {}).t(resource).tree());\n                } else {\n                  this.send($iq({\n                    type: \"set\",\n                    id: \"_bind_auth_2\"\n                  }).c('bind', {\n                    xmlns: Strophe.NS.BIND\n                  }).tree());\n                }\n              },\n\n              /** PrivateFunction: _onResourceBindIQ\n               *  _Private_ handler for binding result and session start.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onResourceBindResultIQ: function _onResourceBindResultIQ(elem) {\n                if (elem.getAttribute(\"type\") === \"error\") {\n                  Strophe.warn(\"Resource binding failed.\");\n                  var conflict = elem.getElementsByTagName(\"conflict\");\n                  var condition;\n\n                  if (conflict.length > 0) {\n                    condition = Strophe.ErrorCondition.CONFLICT;\n                  }\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, condition, elem);\n\n                  return false;\n                } // TODO - need to grab errors\n\n\n                var bind = elem.getElementsByTagName(\"bind\");\n\n                if (bind.length > 0) {\n                  var jidNode = bind[0].getElementsByTagName(\"jid\");\n\n                  if (jidNode.length > 0) {\n                    this.jid = Strophe.getText(jidNode[0]);\n\n                    if (this.do_session) {\n                      this._establishSession();\n                    } else {\n                      this.authenticated = true;\n\n                      this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                    }\n                  }\n                } else {\n                  Strophe.warn(\"Resource binding failed.\");\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  return false;\n                }\n              },\n\n              /** PrivateFunction: _establishSession\n               *  Send IQ request to establish a session with the XMPP server.\n               *\n               *  See https://xmpp.org/rfcs/rfc3921.html#session\n               *\n               *  Note: The protocol for session establishment has been determined as\n               *  unnecessary and removed in RFC-6121.\n               */\n              _establishSession: function _establishSession() {\n                if (!this.do_session) {\n                  throw new Error(\"Strophe.Connection.prototype._establishSession \" + \"called but apparently \".concat(Strophe.NS.SESSION, \" wasn't advertised by the server\"));\n                }\n\n                this._addSysHandler(this._onSessionResultIQ.bind(this), null, null, null, \"_session_auth_2\");\n\n                this.send($iq({\n                  type: \"set\",\n                  id: \"_session_auth_2\"\n                }).c('session', {\n                  xmlns: Strophe.NS.SESSION\n                }).tree());\n              },\n\n              /** PrivateFunction: _onSessionResultIQ\n               *  _Private_ handler for the server's IQ response to a client's session\n               *  request.\n               *\n               *  This sets Connection.authenticated to true on success, which\n               *  starts the processing of user handlers.\n               *\n               *  See https://xmpp.org/rfcs/rfc3921.html#session\n               *\n               *  Note: The protocol for session establishment has been determined as\n               *  unnecessary and removed in RFC-6121.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onSessionResultIQ: function _onSessionResultIQ(elem) {\n                if (elem.getAttribute(\"type\") === \"result\") {\n                  this.authenticated = true;\n\n                  this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                } else if (elem.getAttribute(\"type\") === \"error\") {\n                  Strophe.warn(\"Session creation failed.\");\n\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  return false;\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: _sasl_failure_cb\n               *  _Private_ handler for SASL authentication failure.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _sasl_failure_cb: function _sasl_failure_cb(elem) {\n                // delete unneeded handlers\n                if (this._sasl_success_handler) {\n                  this.deleteHandler(this._sasl_success_handler);\n                  this._sasl_success_handler = null;\n                }\n\n                if (this._sasl_challenge_handler) {\n                  this.deleteHandler(this._sasl_challenge_handler);\n                  this._sasl_challenge_handler = null;\n                }\n\n                if (this._sasl_mechanism) this._sasl_mechanism.onFailure();\n\n                this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                return false;\n              },\n\n              /** PrivateFunction: _auth2_cb\n               *  _Private_ handler to finish legacy authentication.\n               *\n               *  This handler is called when the result from the jabber:iq:auth\n               *  <iq/> stanza is returned.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza that triggered the callback.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _auth2_cb: function _auth2_cb(elem) {\n                if (elem.getAttribute(\"type\") === \"result\") {\n                  this.authenticated = true;\n\n                  this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                } else if (elem.getAttribute(\"type\") === \"error\") {\n                  this._changeConnectStatus(Strophe.Status.AUTHFAIL, null, elem);\n\n                  this.disconnect('authentication failed');\n                }\n\n                return false;\n              },\n\n              /** PrivateFunction: _addSysTimedHandler\n               *  _Private_ function to add a system level timed handler.\n               *\n               *  This function is used to add a Strophe.TimedHandler for the\n               *  library code.  System timed handlers are allowed to run before\n               *  authentication is complete.\n               *\n               *  Parameters:\n               *    (Integer) period - The period of the handler.\n               *    (Function) handler - The callback function.\n               */\n              _addSysTimedHandler: function _addSysTimedHandler(period, handler) {\n                var thand = new Strophe.TimedHandler(period, handler);\n                thand.user = false;\n                this.addTimeds.push(thand);\n                return thand;\n              },\n\n              /** PrivateFunction: _addSysHandler\n               *  _Private_ function to add a system level stanza handler.\n               *\n               *  This function is used to add a Strophe.Handler for the\n               *  library code.  System stanza handlers are allowed to run before\n               *  authentication is complete.\n               *\n               *  Parameters:\n               *    (Function) handler - The callback function.\n               *    (String) ns - The namespace to match.\n               *    (String) name - The stanza name to match.\n               *    (String) type - The stanza type attribute to match.\n               *    (String) id - The stanza id attribute to match.\n               */\n              _addSysHandler: function _addSysHandler(handler, ns, name, type, id) {\n                var hand = new Strophe.Handler(handler, ns, name, type, id);\n                hand.user = false;\n                this.addHandlers.push(hand);\n                return hand;\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  If the graceful disconnect process does not complete within the\n               *  time allotted, this handler finishes the disconnect anyway.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {\n                Strophe.debug(\"_onDisconnectTimeout was called\");\n\n                this._changeConnectStatus(Strophe.Status.CONNTIMEOUT, null);\n\n                this._proto._onDisconnectTimeout(); // actually disconnect\n\n\n                this._doDisconnect();\n\n                return false;\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ handler to process events during idle cycle.\n               *\n               *  This handler is called every 100ms to fire timed handlers that\n               *  are ready and keep poll requests going.\n               */\n              _onIdle: function _onIdle() {\n                var _this8 = this;\n\n                // add timed handlers scheduled for addition\n                // NOTE: we add before remove in the case a timed handler is\n                // added and then deleted before the next _onIdle() call.\n                while (this.addTimeds.length > 0) {\n                  this.timedHandlers.push(this.addTimeds.pop());\n                } // remove timed handlers that have been scheduled for deletion\n\n\n                while (this.removeTimeds.length > 0) {\n                  var thand = this.removeTimeds.pop();\n                  var i = this.timedHandlers.indexOf(thand);\n\n                  if (i >= 0) {\n                    this.timedHandlers.splice(i, 1);\n                  }\n                } // call ready timed handlers\n\n\n                var now = new Date().getTime();\n                var newList = [];\n\n                for (var _i6 = 0; _i6 < this.timedHandlers.length; _i6++) {\n                  var _thand = this.timedHandlers[_i6];\n\n                  if (this.authenticated || !_thand.user) {\n                    var since = _thand.lastCalled + _thand.period;\n\n                    if (since - now <= 0) {\n                      if (_thand.run()) {\n                        newList.push(_thand);\n                      }\n                    } else {\n                      newList.push(_thand);\n                    }\n                  }\n                }\n\n                this.timedHandlers = newList;\n                clearTimeout(this._idleTimeout);\n\n                this._proto._onIdle(); // reactivate the timer only if connected\n\n\n                if (this.connected) {\n                  this._idleTimeout = setTimeout(function () {\n                    return _this8._onIdle();\n                  }, 100);\n                }\n              }\n            };\n            /** Class: Strophe.SASLMechanism\n             *\n             *  encapsulates SASL authentication mechanisms.\n             *\n             *  User code may override the priority for each mechanism or disable it completely.\n             *  See <priority> for information about changing priority and <test> for informatian on\n             *  how to disable a mechanism.\n             *\n             *  By default, all mechanisms are enabled and the priorities are\n             *\n             *      OAUTHBEARER - 60\n             *      SCRAM-SHA1 - 50\n             *      DIGEST-MD5 - 40\n             *      PLAIN - 30\n             *      ANONYMOUS - 20\n             *      EXTERNAL - 10\n             *\n             *  See: Strophe.Connection.addSupportedSASLMechanisms\n             */\n\n            /**\n             * PrivateConstructor: Strophe.SASLMechanism\n             * SASL auth mechanism abstraction.\n             *\n             *  Parameters:\n             *    (String) name - SASL Mechanism name.\n             *    (Boolean) isClientFirst - If client should send response first without challenge.\n             *    (Number) priority - Priority.\n             *\n             *  Returns:\n             *    A new Strophe.SASLMechanism object.\n             */\n\n            Strophe.SASLMechanism = function (name, isClientFirst, priority) {\n              /** PrivateVariable: name\n               *  Mechanism name.\n               */\n              this.name = name;\n              /** PrivateVariable: isClientFirst\n               *  If client sends response without initial server challenge.\n               */\n\n              this.isClientFirst = isClientFirst;\n              /** Variable: priority\n               *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\n               *  Users may override this to prioritize mechanisms differently.\n               *\n               *  In the default configuration the priorities are\n               *\n               *  SCRAM-SHA1 - 40\n               *  DIGEST-MD5 - 30\n               *  Plain - 20\n               *\n               *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\n               *\n               *  > Strophe.SASLMD5.priority = Strophe.SASLSHA1.priority;\n               *\n               *  See <SASL mechanisms> for a list of available mechanisms.\n               *\n               */\n\n              this.priority = priority;\n            };\n\n            Strophe.SASLMechanism.prototype = {\n              /**\n               *  Function: test\n               *  Checks if mechanism able to run.\n               *  To disable a mechanism, make this return false;\n               *\n               *  To disable plain authentication run\n               *  > Strophe.SASLPlain.test = function() {\n               *  >   return false;\n               *  > }\n               *\n               *  See <SASL mechanisms> for a list of available mechanisms.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               *\n               *  Returns:\n               *    (Boolean) If mechanism was able to run.\n               */\n              test: function test(connection) {\n                return true;\n              },\n\n              /** PrivateFunction: onStart\n               *  Called before starting mechanism on some connection.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               */\n              onStart: function onStart(connection) {\n                this._connection = connection;\n              },\n\n              /** PrivateFunction: onChallenge\n               *  Called by protocol implementation on incoming challenge. If client is\n               *  first (isClientFirst === true) challenge will be null on the first call.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               *    (String) challenge - current challenge to handle.\n               *\n               *  Returns:\n               *    (String) Mechanism response.\n               */\n              onChallenge: function onChallenge(connection, challenge) {\n                throw new Error(\"You should implement challenge handling!\");\n              },\n\n              /** PrivateFunction: onFailure\n               *  Protocol informs mechanism implementation about SASL failure.\n               */\n              onFailure: function onFailure() {\n                this._connection = null;\n              },\n\n              /** PrivateFunction: onSuccess\n               *  Protocol informs mechanism implementation about SASL success.\n               */\n              onSuccess: function onSuccess() {\n                this._connection = null;\n              }\n            };\n            /** Constants: SASL mechanisms\n             *  Available authentication mechanisms\n             *\n             *  Strophe.SASLAnonymous - SASL ANONYMOUS authentication.\n             *  Strophe.SASLPlain - SASL PLAIN authentication.\n             *  Strophe.SASLMD5 - SASL DIGEST-MD5 authentication\n             *  Strophe.SASLSHA1 - SASL SCRAM-SHA1 authentication\n             *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\n             *  Strophe.SASLExternal - SASL EXTERNAL authentication\n             *  Strophe.SASLXOAuth2 - SASL X-OAuth2 authentication\n             */\n            // Building SASL callbacks\n\n            /** PrivateConstructor: SASLAnonymous\n             *  SASL ANONYMOUS authentication.\n             */\n\n            Strophe.SASLAnonymous = function () {};\n\n            Strophe.SASLAnonymous.prototype = new Strophe.SASLMechanism(\"ANONYMOUS\", false, 20);\n\n            Strophe.SASLAnonymous.prototype.test = function (connection) {\n              return connection.authcid === null;\n            };\n            /** PrivateConstructor: SASLPlain\n             *  SASL PLAIN authentication.\n             */\n\n\n            Strophe.SASLPlain = function () {};\n\n            Strophe.SASLPlain.prototype = new Strophe.SASLMechanism(\"PLAIN\", true, 50);\n\n            Strophe.SASLPlain.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n\n            Strophe.SASLPlain.prototype.onChallenge = function (connection) {\n              var auth_str = connection.authzid;\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.authcid;\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.pass;\n              return utils.utf16to8(auth_str);\n            };\n            /** PrivateConstructor: SASLSHA1\n             *  SASL SCRAM SHA 1 authentication.\n             */\n\n\n            Strophe.SASLSHA1 = function () {};\n\n            Strophe.SASLSHA1.prototype = new Strophe.SASLMechanism(\"SCRAM-SHA-1\", true, 70);\n\n            Strophe.SASLSHA1.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n\n            Strophe.SASLSHA1.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n              var cnonce = test_cnonce || MD5.hexdigest(\"\" + Math.random() * 1234567890);\n              var auth_str = \"n=\" + utils.utf16to8(connection.authcid);\n              auth_str += \",r=\";\n              auth_str += cnonce;\n              connection._sasl_data.cnonce = cnonce;\n              connection._sasl_data[\"client-first-message-bare\"] = auth_str;\n              auth_str = \"n,,\" + auth_str;\n\n              this.onChallenge = function (connection, challenge) {\n                var nonce, salt, iter, Hi, U, U_old, i, k;\n                var responseText = \"c=biws,\";\n                var authMessage = \"\".concat(connection._sasl_data[\"client-first-message-bare\"], \",\").concat(challenge, \",\");\n                var cnonce = connection._sasl_data.cnonce;\n                var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n\n                while (challenge.match(attribMatch)) {\n                  var matches = challenge.match(attribMatch);\n                  challenge = challenge.replace(matches[0], \"\");\n\n                  switch (matches[1]) {\n                    case \"r\":\n                      nonce = matches[2];\n                      break;\n\n                    case \"s\":\n                      salt = matches[2];\n                      break;\n\n                    case \"i\":\n                      iter = matches[2];\n                      break;\n                  }\n                }\n\n                if (nonce.substr(0, cnonce.length) !== cnonce) {\n                  connection._sasl_data = {};\n                  return connection._sasl_failure_cb();\n                }\n\n                responseText += \"r=\" + nonce;\n                authMessage += responseText;\n                salt = atob(salt);\n                salt += \"\\x00\\x00\\x00\\x01\";\n                var pass = utils.utf16to8(connection.pass);\n                Hi = U_old = SHA1.core_hmac_sha1(pass, salt);\n\n                for (i = 1; i < iter; i++) {\n                  U = SHA1.core_hmac_sha1(pass, SHA1.binb2str(U_old));\n\n                  for (k = 0; k < 5; k++) {\n                    Hi[k] ^= U[k];\n                  }\n\n                  U_old = U;\n                }\n\n                Hi = SHA1.binb2str(Hi);\n                var clientKey = SHA1.core_hmac_sha1(Hi, \"Client Key\");\n                var serverKey = SHA1.str_hmac_sha1(Hi, \"Server Key\");\n                var clientSignature = SHA1.core_hmac_sha1(SHA1.str_sha1(SHA1.binb2str(clientKey)), authMessage);\n                connection._sasl_data[\"server-signature\"] = SHA1.b64_hmac_sha1(serverKey, authMessage);\n\n                for (k = 0; k < 5; k++) {\n                  clientKey[k] ^= clientSignature[k];\n                }\n\n                responseText += \",p=\" + btoa(SHA1.binb2str(clientKey));\n                return responseText;\n              };\n\n              return auth_str;\n            };\n            /** PrivateConstructor: SASLMD5\n             *  SASL DIGEST MD5 authentication.\n             */\n\n\n            Strophe.SASLMD5 = function () {};\n\n            Strophe.SASLMD5.prototype = new Strophe.SASLMechanism(\"DIGEST-MD5\", false, 60);\n\n            Strophe.SASLMD5.prototype.test = function (connection) {\n              return connection.authcid !== null;\n            };\n            /** PrivateFunction: _quote\n             *  _Private_ utility function to backslash escape and quote strings.\n             *\n             *  Parameters:\n             *    (String) str - The string to be quoted.\n             *\n             *  Returns:\n             *    quoted string\n             */\n\n\n            Strophe.SASLMD5.prototype._quote = function (str) {\n              return '\"' + str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"') + '\"'; //\" end string workaround for emacs\n            };\n\n            Strophe.SASLMD5.prototype.onChallenge = function (connection, challenge, test_cnonce) {\n              var attribMatch = /([a-z]+)=(\"[^\"]+\"|[^,\"]+)(?:,|$)/;\n              var cnonce = test_cnonce || MD5.hexdigest(\"\" + Math.random() * 1234567890);\n              var realm = \"\";\n              var host = null;\n              var nonce = \"\";\n              var qop = \"\";\n\n              while (challenge.match(attribMatch)) {\n                var matches = challenge.match(attribMatch);\n                challenge = challenge.replace(matches[0], \"\");\n                matches[2] = matches[2].replace(/^\"(.+)\"$/, \"$1\");\n\n                switch (matches[1]) {\n                  case \"realm\":\n                    realm = matches[2];\n                    break;\n\n                  case \"nonce\":\n                    nonce = matches[2];\n                    break;\n\n                  case \"qop\":\n                    qop = matches[2];\n                    break;\n\n                  case \"host\":\n                    host = matches[2];\n                    break;\n                }\n              }\n\n              var digest_uri = connection.servtype + \"/\" + connection.domain;\n\n              if (host !== null) {\n                digest_uri = digest_uri + \"/\" + host;\n              }\n\n              var cred = utils.utf16to8(connection.authcid + \":\" + realm + \":\" + this._connection.pass);\n              var A1 = MD5.hash(cred) + \":\" + nonce + \":\" + cnonce;\n              var A2 = 'AUTHENTICATE:' + digest_uri;\n              var responseText = \"\";\n              responseText += 'charset=utf-8,';\n              responseText += 'username=' + this._quote(utils.utf16to8(connection.authcid)) + ',';\n              responseText += 'realm=' + this._quote(realm) + ',';\n              responseText += 'nonce=' + this._quote(nonce) + ',';\n              responseText += 'nc=00000001,';\n              responseText += 'cnonce=' + this._quote(cnonce) + ',';\n              responseText += 'digest-uri=' + this._quote(digest_uri) + ',';\n              responseText += 'response=' + MD5.hexdigest(MD5.hexdigest(A1) + \":\" + nonce + \":00000001:\" + cnonce + \":auth:\" + MD5.hexdigest(A2)) + \",\";\n              responseText += 'qop=auth';\n\n              this.onChallenge = function () {\n                return \"\";\n              };\n\n              return responseText;\n            };\n            /** PrivateConstructor: SASLOAuthBearer\n             *  SASL OAuth Bearer authentication.\n             */\n\n\n            Strophe.SASLOAuthBearer = function () {};\n\n            Strophe.SASLOAuthBearer.prototype = new Strophe.SASLMechanism(\"OAUTHBEARER\", true, 40);\n\n            Strophe.SASLOAuthBearer.prototype.test = function (connection) {\n              return connection.pass !== null;\n            };\n\n            Strophe.SASLOAuthBearer.prototype.onChallenge = function (connection) {\n              var auth_str = 'n,';\n\n              if (connection.authcid !== null) {\n                auth_str = auth_str + 'a=' + connection.authzid;\n              }\n\n              auth_str = auth_str + ',';\n              auth_str = auth_str + \"\\x01\";\n              auth_str = auth_str + 'auth=Bearer ';\n              auth_str = auth_str + connection.pass;\n              auth_str = auth_str + \"\\x01\";\n              auth_str = auth_str + \"\\x01\";\n              return utils.utf16to8(auth_str);\n            };\n            /** PrivateConstructor: SASLExternal\n             *  SASL EXTERNAL authentication.\n             *\n             *  The EXTERNAL mechanism allows a client to request the server to use\n             *  credentials established by means external to the mechanism to\n             *  authenticate the client. The external means may be, for instance,\n             *  TLS services.\n             */\n\n\n            Strophe.SASLExternal = function () {};\n\n            Strophe.SASLExternal.prototype = new Strophe.SASLMechanism(\"EXTERNAL\", true, 10);\n\n            Strophe.SASLExternal.prototype.onChallenge = function (connection) {\n              /** According to XEP-178, an authzid SHOULD NOT be presented when the\n               * authcid contained or implied in the client certificate is the JID (i.e.\n               * authzid) with which the user wants to log in as.\n               *\n               * To NOT send the authzid, the user should therefore set the authcid equal\n               * to the JID when instantiating a new Strophe.Connection object.\n               */\n              return connection.authcid === connection.authzid ? '' : connection.authzid;\n            };\n            /** PrivateConstructor: SASLXOAuth2\n             *  SASL X-OAuth2 authentication.\n             */\n\n\n            Strophe.SASLXOAuth2 = function () {};\n\n            Strophe.SASLXOAuth2.prototype = new Strophe.SASLMechanism(\"X-OAUTH2\", true, 30);\n\n            Strophe.SASLXOAuth2.prototype.test = function (connection) {\n              return connection.pass !== null;\n            };\n\n            Strophe.SASLXOAuth2.prototype.onChallenge = function (connection) {\n              var auth_str = \"\\0\";\n\n              if (connection.authcid !== null) {\n                auth_str = auth_str + connection.authzid;\n              }\n\n              auth_str = auth_str + \"\\0\";\n              auth_str = auth_str + connection.pass;\n              return utils.utf16to8(auth_str);\n            };\n            var core = {\n              'Strophe': Strophe,\n              '$build': $build,\n              '$iq': $iq,\n              '$msg': $msg,\n              '$pres': $pres,\n              'SHA1': SHA1,\n              'MD5': MD5,\n              'b64_hmac_sha1': SHA1.b64_hmac_sha1,\n              'b64_sha1': SHA1.b64_sha1,\n              'str_hmac_sha1': SHA1.str_hmac_sha1,\n              'str_sha1': SHA1.str_sha1\n            };\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2006-2008, OGG, LLC\n            */\n            var Strophe$1 = core.Strophe;\n            var $build$1 = core.$build;\n            /** PrivateClass: Strophe.Request\n             *  _Private_ helper class that provides a cross implementation abstraction\n             *  for a BOSH related XMLHttpRequest.\n             *\n             *  The Strophe.Request class is used internally to encapsulate BOSH request\n             *  information.  It is not meant to be used from user's code.\n             */\n\n            /** PrivateConstructor: Strophe.Request\n             *  Create and initialize a new Strophe.Request object.\n             *\n             *  Parameters:\n             *    (XMLElement) elem - The XML data to be sent in the request.\n             *    (Function) func - The function that will be called when the\n             *      XMLHttpRequest readyState changes.\n             *    (Integer) rid - The BOSH rid attribute associated with this request.\n             *    (Integer) sends - The number of times this same request has been sent.\n             */\n\n            Strophe$1.Request = function (elem, func, rid, sends) {\n              this.id = ++Strophe$1._requestId;\n              this.xmlData = elem;\n              this.data = Strophe$1.serialize(elem); // save original function in case we need to make a new request\n              // from this one.\n\n              this.origFunc = func;\n              this.func = func;\n              this.rid = rid;\n              this.date = NaN;\n              this.sends = sends || 0;\n              this.abort = false;\n              this.dead = null;\n\n              this.age = function () {\n                if (!this.date) {\n                  return 0;\n                }\n\n                var now = new Date();\n                return (now - this.date) / 1000;\n              };\n\n              this.timeDead = function () {\n                if (!this.dead) {\n                  return 0;\n                }\n\n                var now = new Date();\n                return (now - this.dead) / 1000;\n              };\n\n              this.xhr = this._newXHR();\n            };\n\n            Strophe$1.Request.prototype = {\n              /** PrivateFunction: getResponse\n               *  Get a response from the underlying XMLHttpRequest.\n               *\n               *  This function attempts to get a response from the request and checks\n               *  for errors.\n               *\n               *  Throws:\n               *    \"parsererror\" - A parser error occured.\n               *    \"bad-format\" - The entity has sent XML that cannot be processed.\n               *\n               *  Returns:\n               *    The DOM element tree of the response.\n               */\n              getResponse: function getResponse() {\n                var node = null;\n\n                if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\n                  node = this.xhr.responseXML.documentElement;\n\n                  if (node.tagName === \"parsererror\") {\n                    Strophe$1.error(\"invalid response received\");\n                    Strophe$1.error(\"responseText: \" + this.xhr.responseText);\n                    Strophe$1.error(\"responseXML: \" + Strophe$1.serialize(this.xhr.responseXML));\n                    throw new Error(\"parsererror\");\n                  }\n                } else if (this.xhr.responseText) {\n                  // In React Native, we may get responseText but no responseXML.  We can try to parse it manually.\n                  Strophe$1.debug(\"Got responseText but no responseXML; attempting to parse it with DOMParser...\");\n                  node = new DOMParser().parseFromString(this.xhr.responseText, 'application/xml').documentElement;\n\n                  if (!node) {\n                    throw new Error('Parsing produced null node');\n                  } else if (node.querySelector('parsererror')) {\n                    Strophe$1.error(\"invalid response received: \" + node.querySelector('parsererror').textContent);\n                    Strophe$1.error(\"responseText: \" + this.xhr.responseText);\n                    var error = new Error();\n                    error.name = Strophe$1.ErrorCondition.BAD_FORMAT;\n                    throw error;\n                  }\n                }\n\n                return node;\n              },\n\n              /** PrivateFunction: _newXHR\n               *  _Private_ helper function to create XMLHttpRequests.\n               *\n               *  This function creates XMLHttpRequests across all implementations.\n               *\n               *  Returns:\n               *    A new XMLHttpRequest.\n               */\n              _newXHR: function _newXHR() {\n                var xhr = null;\n\n                if (window.XMLHttpRequest) {\n                  xhr = new XMLHttpRequest();\n\n                  if (xhr.overrideMimeType) {\n                    xhr.overrideMimeType(\"text/xml; charset=utf-8\");\n                  }\n                } else if (window.ActiveXObject) {\n                  xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n                } // use Function.bind() to prepend ourselves as an argument\n\n\n                xhr.onreadystatechange = this.func.bind(null, this);\n                return xhr;\n              }\n            };\n            /** Class: Strophe.Bosh\n             *  _Private_ helper class that handles BOSH Connections\n             *\n             *  The Strophe.Bosh class is used internally by Strophe.Connection\n             *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\n             */\n\n            /** File: bosh.js\n             *  A JavaScript library to enable BOSH in Strophejs.\n             *\n             *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\n             *  to emulate a persistent, stateful, two-way connection to an XMPP server.\n             *  More information on BOSH can be found in XEP 124.\n             */\n\n            /** PrivateConstructor: Strophe.Bosh\n             *  Create and initialize a Strophe.Bosh object.\n             *\n             *  Parameters:\n             *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\n             *\n             *  Returns:\n             *    A new Strophe.Bosh object.\n             */\n\n            Strophe$1.Bosh = function (connection) {\n              this._conn = connection;\n              /* request id for body tags */\n\n              this.rid = Math.floor(Math.random() * 4294967295);\n              /* The current session ID. */\n\n              this.sid = null; // default BOSH values\n\n              this.hold = 1;\n              this.wait = 60;\n              this.window = 5;\n              this.errors = 0;\n              this.inactivity = null;\n              this.lastResponseHeaders = null;\n              this._requests = [];\n            };\n\n            Strophe$1.Bosh.prototype = {\n              /** Variable: strip\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\n               *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\n               *  To strip this tag, User code can set <Strophe.Bosh.strip> to \"body\":\n               *\n               *  > Strophe.Bosh.prototype.strip = \"body\";\n               *\n               *  This will enable stripping of the body tag in both\n               *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\n               */\n              strip: null,\n\n              /** PrivateFunction: _buildBody\n               *  _Private_ helper function to generate the <body/> wrapper for BOSH.\n               *\n               *  Returns:\n               *    A Strophe.Builder with a <body/> element.\n               */\n              _buildBody: function _buildBody() {\n                var bodyWrap = $build$1('body', {\n                  'rid': this.rid++,\n                  'xmlns': Strophe$1.NS.HTTPBIND\n                });\n\n                if (this.sid !== null) {\n                  bodyWrap.attrs({\n                    'sid': this.sid\n                  });\n                }\n\n                if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\n                  this._cacheSession();\n                }\n\n                return bodyWrap;\n              },\n\n              /** PrivateFunction: _reset\n               *  Reset the connection.\n               *\n               *  This function is called by the reset function of the Strophe Connection\n               */\n              _reset: function _reset() {\n                this.rid = Math.floor(Math.random() * 4294967295);\n                this.sid = null;\n                this.errors = 0;\n\n                if (this._conn._sessionCachingSupported()) {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n\n                this._conn.nextValidRid(this.rid);\n              },\n\n              /** PrivateFunction: _connect\n               *  _Private_ function that initializes the BOSH connection.\n               *\n               *  Creates and sends the Request that initializes the BOSH connection.\n               */\n              _connect: function _connect(wait, hold, route) {\n                this.wait = wait || this.wait;\n                this.hold = hold || this.hold;\n                this.errors = 0;\n\n                var body = this._buildBody().attrs({\n                  \"to\": this._conn.domain,\n                  \"xml:lang\": \"en\",\n                  \"wait\": this.wait,\n                  \"hold\": this.hold,\n                  \"content\": \"text/xml; charset=utf-8\",\n                  \"ver\": \"1.6\",\n                  \"xmpp:version\": \"1.0\",\n                  \"xmlns:xmpp\": Strophe$1.NS.BOSH\n                });\n\n                if (route) {\n                  body.attrs({\n                    'route': route\n                  });\n                }\n\n                var _connect_cb = this._conn._connect_cb;\n\n                this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, _connect_cb.bind(this._conn)), body.tree().getAttribute(\"rid\")));\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _attach\n               *  Attach to an already created and authenticated BOSH session.\n               *\n               *  This function is provided to allow Strophe to attach to BOSH\n               *  sessions which have been created externally, perhaps by a Web\n               *  application.  This is often used to support auto-login type features\n               *  without putting user credentials into the page.\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *    (String) sid - The SID of the BOSH session.\n               *    (String) rid - The current RID of the BOSH session.  This RID\n               *      will be used by the next request.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              _attach: function _attach(jid, sid, rid, callback, wait, hold, wind) {\n                this._conn.jid = jid;\n                this.sid = sid;\n                this.rid = rid;\n                this._conn.connect_callback = callback;\n                this._conn.domain = Strophe$1.getDomainFromJid(this._conn.jid);\n                this._conn.authenticated = true;\n                this._conn.connected = true;\n                this.wait = wait || this.wait;\n                this.hold = hold || this.hold;\n                this.window = wind || this.window;\n\n                this._conn._changeConnectStatus(Strophe$1.Status.ATTACHED, null);\n              },\n\n              /** PrivateFunction: _restore\n               *  Attempt to restore a cached BOSH session\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *      This parameter is optional but recommended, specifically in cases\n               *      where prebinded BOSH sessions are used where it's important to know\n               *      that the right session is being restored.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              _restore: function _restore(jid, callback, wait, hold, wind) {\n                var session = JSON.parse(window.sessionStorage.getItem('strophe-bosh-session'));\n\n                if (typeof session !== \"undefined\" && session !== null && session.rid && session.sid && session.jid && (typeof jid === \"undefined\" || jid === null || Strophe$1.getBareJidFromJid(session.jid) === Strophe$1.getBareJidFromJid(jid) || // If authcid is null, then it's an anonymous login, so\n                // we compare only the domains:\n                Strophe$1.getNodeFromJid(jid) === null && Strophe$1.getDomainFromJid(session.jid) === jid)) {\n                  this._conn.restored = true;\n\n                  this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\n                } else {\n                  var error = new Error(\"_restore: no restoreable session.\");\n                  error.name = \"StropheSessionError\";\n                  throw error;\n                }\n              },\n\n              /** PrivateFunction: _cacheSession\n               *  _Private_ handler for the beforeunload event.\n               *\n               *  This handler is used to process the Bosh-part of the initial request.\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _cacheSession: function _cacheSession() {\n                if (this._conn.authenticated) {\n                  if (this._conn.jid && this.rid && this.sid) {\n                    window.sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\n                      'jid': this._conn.jid,\n                      'rid': this.rid,\n                      'sid': this.sid\n                    }));\n                  }\n                } else {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n              },\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ handler for initial connection request.\n               *\n               *  This handler is used to process the Bosh-part of the initial request.\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _connect_cb: function _connect_cb(bodyWrap) {\n                var typ = bodyWrap.getAttribute(\"type\");\n\n                if (typ !== null && typ === \"terminate\") {\n                  // an error occurred\n                  var cond = bodyWrap.getAttribute(\"condition\");\n                  Strophe$1.error(\"BOSH-Connection failed: \" + cond);\n                  var conflict = bodyWrap.getElementsByTagName(\"conflict\");\n\n                  if (cond !== null) {\n                    if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                      cond = \"conflict\";\n                    }\n\n                    this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, cond);\n                  } else {\n                    this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"unknown\");\n                  }\n\n                  this._conn._doDisconnect(cond);\n\n                  return Strophe$1.Status.CONNFAIL;\n                } // check to make sure we don't overwrite these if _connect_cb is\n                // called multiple times in the case of missing stream:features\n\n\n                if (!this.sid) {\n                  this.sid = bodyWrap.getAttribute(\"sid\");\n                }\n\n                var wind = bodyWrap.getAttribute('requests');\n\n                if (wind) {\n                  this.window = parseInt(wind, 10);\n                }\n\n                var hold = bodyWrap.getAttribute('hold');\n\n                if (hold) {\n                  this.hold = parseInt(hold, 10);\n                }\n\n                var wait = bodyWrap.getAttribute('wait');\n\n                if (wait) {\n                  this.wait = parseInt(wait, 10);\n                }\n\n                var inactivity = bodyWrap.getAttribute('inactivity');\n\n                if (inactivity) {\n                  this.inactivity = parseInt(inactivity, 10);\n                }\n              },\n\n              /** PrivateFunction: _disconnect\n               *  _Private_ part of Connection.disconnect for Bosh\n               *\n               *  Parameters:\n               *    (Request) pres - This stanza will be sent before disconnecting.\n               */\n              _disconnect: function _disconnect(pres) {\n                this._sendTerminate(pres);\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  Resets the SID and RID.\n               */\n              _doDisconnect: function _doDisconnect() {\n                this.sid = null;\n                this.rid = Math.floor(Math.random() * 4294967295);\n\n                if (this._conn._sessionCachingSupported()) {\n                  window.sessionStorage.removeItem('strophe-bosh-session');\n                }\n\n                this._conn.nextValidRid(this.rid);\n              },\n\n              /** PrivateFunction: _emptyQueue\n               * _Private_ function to check if the Request queue is empty.\n               *\n               *  Returns:\n               *    True, if there are no Requests queued, False otherwise.\n               */\n              _emptyQueue: function _emptyQueue() {\n                return this._requests.length === 0;\n              },\n\n              /** PrivateFunction: _callProtocolErrorHandlers\n               *  _Private_ function to call error handlers registered for HTTP errors.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request that is changing readyState.\n               */\n              _callProtocolErrorHandlers: function _callProtocolErrorHandlers(req) {\n                var reqStatus = this._getRequestStatus(req);\n\n                var err_callback = this._conn.protocolErrorHandlers.HTTP[reqStatus];\n\n                if (err_callback) {\n                  err_callback.call(this, reqStatus);\n                }\n              },\n\n              /** PrivateFunction: _hitError\n               *  _Private_ function to handle the error count.\n               *\n               *  Requests are resent automatically until their error count reaches\n               *  5.  Each time an error is encountered, this function is called to\n               *  increment the count and disconnect if the count is too high.\n               *\n               *  Parameters:\n               *    (Integer) reqStatus - The request status.\n               */\n              _hitError: function _hitError(reqStatus) {\n                this.errors++;\n                Strophe$1.warn(\"request errored, status: \" + reqStatus + \", number of errors: \" + this.errors);\n\n                if (this.errors > 4) {\n                  this._conn._onDisconnectTimeout();\n                }\n              },\n\n              /** PrivateFunction: _no_auth_received\n               *\n               * Called on stream start/restart when no stream:features\n               * has been received and sends a blank poll request.\n               */\n              _no_auth_received: function _no_auth_received(callback) {\n                Strophe$1.warn(\"Server did not yet offer a supported authentication \" + \"mechanism. Sending a blank poll request.\");\n\n                if (callback) {\n                  callback = callback.bind(this._conn);\n                } else {\n                  callback = this._conn._connect_cb.bind(this._conn);\n                }\n\n                var body = this._buildBody();\n\n                this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, callback), body.tree().getAttribute(\"rid\")));\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  Cancels all remaining Requests and clears the queue.\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {\n                this._abortAllRequests();\n              },\n\n              /** PrivateFunction: _abortAllRequests\n               *  _Private_ helper function that makes sure all pending requests are aborted.\n               */\n              _abortAllRequests: function _abortAllRequests() {\n                while (this._requests.length > 0) {\n                  var req = this._requests.pop();\n\n                  req.abort = true;\n                  req.xhr.abort();\n\n                  req.xhr.onreadystatechange = function () {};\n                }\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ handler called by Strophe.Connection._onIdle\n               *\n               *  Sends all queued Requests or polls with empty Request if there are none.\n               */\n              _onIdle: function _onIdle() {\n                var data = this._conn._data; // if no requests are in progress, poll\n\n                if (this._conn.authenticated && this._requests.length === 0 && data.length === 0 && !this._conn.disconnecting) {\n                  Strophe$1.debug(\"no requests during idle cycle, sending blank request\");\n                  data.push(null);\n                }\n\n                if (this._conn.paused) {\n                  return;\n                }\n\n                if (this._requests.length < 2 && data.length > 0) {\n                  var body = this._buildBody();\n\n                  for (var i = 0; i < data.length; i++) {\n                    if (data[i] !== null) {\n                      if (data[i] === \"restart\") {\n                        body.attrs({\n                          \"to\": this._conn.domain,\n                          \"xml:lang\": \"en\",\n                          \"xmpp:restart\": \"true\",\n                          \"xmlns:xmpp\": Strophe$1.NS.BOSH\n                        });\n                      } else {\n                        body.cnode(data[i]).up();\n                      }\n                    }\n                  }\n\n                  delete this._conn._data;\n                  this._conn._data = [];\n\n                  this._requests.push(new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute(\"rid\")));\n\n                  this._throttledRequestHandler();\n                }\n\n                if (this._requests.length > 0) {\n                  var time_elapsed = this._requests[0].age();\n\n                  if (this._requests[0].dead !== null) {\n                    if (this._requests[0].timeDead() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait)) {\n                      this._throttledRequestHandler();\n                    }\n                  }\n\n                  if (time_elapsed > Math.floor(Strophe$1.TIMEOUT * this.wait)) {\n                    Strophe$1.warn(\"Request \" + this._requests[0].id + \" timed out, over \" + Math.floor(Strophe$1.TIMEOUT * this.wait) + \" seconds since last activity\");\n\n                    this._throttledRequestHandler();\n                  }\n                }\n              },\n\n              /** PrivateFunction: _getRequestStatus\n               *\n               *  Returns the HTTP status code from a Strophe.Request\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The Strophe.Request instance.\n               *    (Integer) def - The default value that should be returned if no\n               *          status value was found.\n               */\n              _getRequestStatus: function _getRequestStatus(req, def) {\n                var reqStatus;\n\n                if (req.xhr.readyState === 4) {\n                  try {\n                    reqStatus = req.xhr.status;\n                  } catch (e) {\n                    // ignore errors from undefined status attribute. Works\n                    // around a browser bug\n                    Strophe$1.error(\"Caught an error while retrieving a request's status, \" + \"reqStatus: \" + reqStatus);\n                  }\n                }\n\n                if (typeof reqStatus === \"undefined\") {\n                  reqStatus = typeof def === 'number' ? def : 0;\n                }\n\n                return reqStatus;\n              },\n\n              /** PrivateFunction: _onRequestStateChange\n               *  _Private_ handler for Strophe.Request state changes.\n               *\n               *  This function is called when the XMLHttpRequest readyState changes.\n               *  It contains a lot of error handling logic for the many ways that\n               *  requests can fail, and calls the request callback when requests\n               *  succeed.\n               *\n               *  Parameters:\n               *    (Function) func - The handler for the request.\n               *    (Strophe.Request) req - The request that is changing readyState.\n               */\n              _onRequestStateChange: function _onRequestStateChange(func, req) {\n                Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" state changed to \" + req.xhr.readyState);\n\n                if (req.abort) {\n                  req.abort = false;\n                  return;\n                }\n\n                if (req.xhr.readyState !== 4) {\n                  // The request is not yet complete\n                  return;\n                }\n\n                var reqStatus = this._getRequestStatus(req);\n\n                this.lastResponseHeaders = req.xhr.getAllResponseHeaders();\n\n                if (this.disconnecting && reqStatus >= 400) {\n                  this._hitError(reqStatus);\n\n                  this._callProtocolErrorHandlers(req);\n\n                  return;\n                }\n\n                var valid_request = reqStatus > 0 && reqStatus < 500;\n                var too_many_retries = req.sends > this._conn.maxRetries;\n\n                if (valid_request || too_many_retries) {\n                  // remove from internal queue\n                  this._removeRequest(req);\n\n                  Strophe$1.debug(\"request id \" + req.id + \" should now be removed\");\n                }\n\n                if (reqStatus === 200) {\n                  // request succeeded\n                  var reqIs0 = this._requests[0] === req;\n                  var reqIs1 = this._requests[1] === req; // if request 1 finished, or request 0 finished and request\n                  // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\n                  // restart the other - both will be in the first spot, as the\n                  // completed request has been removed from the queue already\n\n                  if (reqIs1 || reqIs0 && this._requests.length > 0 && this._requests[0].age() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait)) {\n                    this._restartRequest(0);\n                  }\n\n                  this._conn.nextValidRid(Number(req.rid) + 1);\n\n                  Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" got 200\");\n                  func(req); // call handler\n\n                  this.errors = 0;\n                } else if (reqStatus === 0 || reqStatus >= 400 && reqStatus < 600 || reqStatus >= 12000) {\n                  // request failed\n                  Strophe$1.error(\"request id \" + req.id + \".\" + req.sends + \" error \" + reqStatus + \" happened\");\n\n                  this._hitError(reqStatus);\n\n                  this._callProtocolErrorHandlers(req);\n\n                  if (reqStatus >= 400 && reqStatus < 500) {\n                    this._conn._changeConnectStatus(Strophe$1.Status.DISCONNECTING, null);\n\n                    this._conn._doDisconnect();\n                  }\n                } else {\n                  Strophe$1.error(\"request id \" + req.id + \".\" + req.sends + \" error \" + reqStatus + \" happened\");\n                }\n\n                if (!valid_request && !too_many_retries) {\n                  this._throttledRequestHandler();\n                } else if (too_many_retries && !this._conn.connected) {\n                  this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"giving-up\");\n                }\n              },\n\n              /** PrivateFunction: _processRequest\n               *  _Private_ function to process a request in the queue.\n               *\n               *  This function takes requests off the queue and sends them and\n               *  restarts dead requests.\n               *\n               *  Parameters:\n               *    (Integer) i - The index of the request in the queue.\n               */\n              _processRequest: function _processRequest(i) {\n                var _this = this;\n\n                var req = this._requests[i];\n\n                var reqStatus = this._getRequestStatus(req, -1); // make sure we limit the number of retries\n\n\n                if (req.sends > this._conn.maxRetries) {\n                  this._conn._onDisconnectTimeout();\n\n                  return;\n                }\n\n                var time_elapsed = req.age();\n                var primary_timeout = !isNaN(time_elapsed) && time_elapsed > Math.floor(Strophe$1.TIMEOUT * this.wait);\n                var secondary_timeout = req.dead !== null && req.timeDead() > Math.floor(Strophe$1.SECONDARY_TIMEOUT * this.wait);\n                var server_error = req.xhr.readyState === 4 && (reqStatus < 1 || reqStatus >= 500);\n\n                if (primary_timeout || secondary_timeout || server_error) {\n                  if (secondary_timeout) {\n                    Strophe$1.error(\"Request \".concat(this._requests[i].id, \" timed out (secondary), restarting\"));\n                  }\n\n                  req.abort = true;\n                  req.xhr.abort(); // setting to null fails on IE6, so set to empty function\n\n                  req.xhr.onreadystatechange = function () {};\n\n                  this._requests[i] = new Strophe$1.Request(req.xmlData, req.origFunc, req.rid, req.sends);\n                  req = this._requests[i];\n                }\n\n                if (req.xhr.readyState === 0) {\n                  Strophe$1.debug(\"request id \" + req.id + \".\" + req.sends + \" posting\");\n\n                  try {\n                    var content_type = this._conn.options.contentType || \"text/xml; charset=utf-8\";\n                    req.xhr.open(\"POST\", this._conn.service, this._conn.options.sync ? false : true);\n\n                    if (typeof req.xhr.setRequestHeader !== 'undefined') {\n                      // IE9 doesn't have setRequestHeader\n                      req.xhr.setRequestHeader(\"Content-Type\", content_type);\n                    }\n\n                    if (this._conn.options.withCredentials) {\n                      req.xhr.withCredentials = true;\n                    }\n                  } catch (e2) {\n                    Strophe$1.error(\"XHR open failed: \" + e2.toString());\n\n                    if (!this._conn.connected) {\n                      this._conn._changeConnectStatus(Strophe$1.Status.CONNFAIL, \"bad-service\");\n                    }\n\n                    this._conn.disconnect();\n\n                    return;\n                  } // Fires the XHR request -- may be invoked immediately\n                  // or on a gradually expanding retry window for reconnects\n\n\n                  var sendFunc = function sendFunc() {\n                    req.date = new Date();\n\n                    if (_this._conn.options.customHeaders) {\n                      var headers = _this._conn.options.customHeaders;\n\n                      for (var header in headers) {\n                        if (Object.prototype.hasOwnProperty.call(headers, header)) {\n                          req.xhr.setRequestHeader(header, headers[header]);\n                        }\n                      }\n                    }\n\n                    req.xhr.send(req.data);\n                  }; // Implement progressive backoff for reconnects --\n                  // First retry (send === 1) should also be instantaneous\n\n\n                  if (req.sends > 1) {\n                    // Using a cube of the retry number creates a nicely\n                    // expanding retry window\n                    var backoff = Math.min(Math.floor(Strophe$1.TIMEOUT * this.wait), Math.pow(req.sends, 3)) * 1000;\n                    setTimeout(function () {\n                      // XXX: setTimeout should be called only with function expressions (23974bc1)\n                      sendFunc();\n                    }, backoff);\n                  } else {\n                    sendFunc();\n                  }\n\n                  req.sends++;\n\n                  if (this._conn.xmlOutput !== Strophe$1.Connection.prototype.xmlOutput) {\n                    if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\n                      this._conn.xmlOutput(req.xmlData.childNodes[0]);\n                    } else {\n                      this._conn.xmlOutput(req.xmlData);\n                    }\n                  }\n\n                  if (this._conn.rawOutput !== Strophe$1.Connection.prototype.rawOutput) {\n                    this._conn.rawOutput(req.data);\n                  }\n                } else {\n                  Strophe$1.debug(\"_processRequest: \" + (i === 0 ? \"first\" : \"second\") + \" request has readyState of \" + req.xhr.readyState);\n                }\n              },\n\n              /** PrivateFunction: _removeRequest\n               *  _Private_ function to remove a request from the queue.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request to remove.\n               */\n              _removeRequest: function _removeRequest(req) {\n                Strophe$1.debug(\"removing request\");\n\n                for (var i = this._requests.length - 1; i >= 0; i--) {\n                  if (req === this._requests[i]) {\n                    this._requests.splice(i, 1);\n                  }\n                } // IE6 fails on setting to null, so set to empty function\n\n\n                req.xhr.onreadystatechange = function () {};\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _restartRequest\n               *  _Private_ function to restart a request that is presumed dead.\n               *\n               *  Parameters:\n               *    (Integer) i - The index of the request in the queue.\n               */\n              _restartRequest: function _restartRequest(i) {\n                var req = this._requests[i];\n\n                if (req.dead === null) {\n                  req.dead = new Date();\n                }\n\n                this._processRequest(i);\n              },\n\n              /** PrivateFunction: _reqToData\n               * _Private_ function to get a stanza out of a request.\n               *\n               * Tries to extract a stanza out of a Request Object.\n               * When this fails the current connection will be disconnected.\n               *\n               *  Parameters:\n               *    (Object) req - The Request.\n               *\n               *  Returns:\n               *    The stanza that was passed.\n               */\n              _reqToData: function _reqToData(req) {\n                try {\n                  return req.getResponse();\n                } catch (e) {\n                  if (e.message !== \"parsererror\") {\n                    throw e;\n                  }\n\n                  this._conn.disconnect(\"strophe-parsererror\");\n                }\n              },\n\n              /** PrivateFunction: _sendTerminate\n               *  _Private_ function to send initial disconnect sequence.\n               *\n               *  This is the first step in a graceful disconnect.  It sends\n               *  the BOSH server a terminate body and includes an unavailable\n               *  presence if authentication has completed.\n               */\n              _sendTerminate: function _sendTerminate(pres) {\n                Strophe$1.debug(\"_sendTerminate was called\");\n\n                var body = this._buildBody().attrs({\n                  type: \"terminate\"\n                });\n\n                if (pres) {\n                  body.cnode(pres.tree());\n                }\n\n                var req = new Strophe$1.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute(\"rid\"));\n\n                this._requests.push(req);\n\n                this._throttledRequestHandler();\n              },\n\n              /** PrivateFunction: _send\n               *  _Private_ part of the Connection.send function for BOSH\n               *\n               * Just triggers the RequestHandler to send the messages that are in the queue\n               */\n              _send: function _send() {\n                var _this2 = this;\n\n                clearTimeout(this._conn._idleTimeout);\n\n                this._throttledRequestHandler();\n\n                this._conn._idleTimeout = setTimeout(function () {\n                  return _this2._conn._onIdle();\n                }, 100);\n              },\n\n              /** PrivateFunction: _sendRestart\n               *\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                this._throttledRequestHandler();\n\n                clearTimeout(this._conn._idleTimeout);\n              },\n\n              /** PrivateFunction: _throttledRequestHandler\n               *  _Private_ function to throttle requests to the connection window.\n               *\n               *  This function makes sure we don't send requests so fast that the\n               *  request ids overflow the connection window in the case that one\n               *  request died.\n               */\n              _throttledRequestHandler: function _throttledRequestHandler() {\n                if (!this._requests) {\n                  Strophe$1.debug(\"_throttledRequestHandler called with \" + \"undefined requests\");\n                } else {\n                  Strophe$1.debug(\"_throttledRequestHandler called with \" + this._requests.length + \" requests\");\n                }\n\n                if (!this._requests || this._requests.length === 0) {\n                  return;\n                }\n\n                if (this._requests.length > 0) {\n                  this._processRequest(0);\n                }\n\n                if (this._requests.length > 1 && Math.abs(this._requests[0].rid - this._requests[1].rid) < this.window) {\n                  this._processRequest(1);\n                }\n              }\n            };\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2006-2008, OGG, LLC\n            */\n            var Strophe$2 = core.Strophe;\n            var $build$2 = core.$build;\n            /** Class: Strophe.WebSocket\n             *  _Private_ helper class that handles WebSocket Connections\n             *\n             *  The Strophe.WebSocket class is used internally by Strophe.Connection\n             *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\n             */\n\n            /** File: websocket.js\n             *  A JavaScript library to enable XMPP over Websocket in Strophejs.\n             *\n             *  This file implements XMPP over WebSockets for Strophejs.\n             *  If a Connection is established with a Websocket url (ws://...)\n             *  Strophe will use WebSockets.\n             *  For more information on XMPP-over-WebSocket see RFC 7395:\n             *  http://tools.ietf.org/html/rfc7395\n             *\n             *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\n             */\n\n            /** PrivateConstructor: Strophe.Websocket\n             *  Create and initialize a Strophe.WebSocket object.\n             *  Currently only sets the connection Object.\n             *\n             *  Parameters:\n             *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\n             *\n             *  Returns:\n             *    A new Strophe.WebSocket object.\n             */\n\n            Strophe$2.Websocket = function (connection) {\n              this._conn = connection;\n              this.strip = \"wrapper\";\n              var service = connection.service;\n\n              if (service.indexOf(\"ws:\") !== 0 && service.indexOf(\"wss:\") !== 0) {\n                // If the service is not an absolute URL, assume it is a path and put the absolute\n                // URL together from options, current URL and the path.\n                var new_service = \"\";\n\n                if (connection.options.protocol === \"ws\" && window.location.protocol !== \"https:\") {\n                  new_service += \"ws\";\n                } else {\n                  new_service += \"wss\";\n                }\n\n                new_service += \"://\" + window.location.host;\n\n                if (service.indexOf(\"/\") !== 0) {\n                  new_service += window.location.pathname + service;\n                } else {\n                  new_service += service;\n                }\n\n                connection.service = new_service;\n              }\n            };\n\n            Strophe$2.Websocket.prototype = {\n              /** PrivateFunction: _buildStream\n               *  _Private_ helper function to generate the <stream> start tag for WebSockets\n               *\n               *  Returns:\n               *    A Strophe.Builder with a <stream> element.\n               */\n              _buildStream: function _buildStream() {\n                return $build$2(\"open\", {\n                  \"xmlns\": Strophe$2.NS.FRAMING,\n                  \"to\": this._conn.domain,\n                  \"version\": '1.0'\n                });\n              },\n\n              /** PrivateFunction: _check_streamerror\n               * _Private_ checks a message for stream:error\n               *\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               *    connectstatus - The ConnectStatus that will be set on error.\n               *  Returns:\n               *     true if there was a streamerror, false otherwise.\n               */\n              _check_streamerror: function _check_streamerror(bodyWrap, connectstatus) {\n                var errors;\n\n                if (bodyWrap.getElementsByTagNameNS) {\n                  errors = bodyWrap.getElementsByTagNameNS(Strophe$2.NS.STREAM, \"error\");\n                } else {\n                  errors = bodyWrap.getElementsByTagName(\"stream:error\");\n                }\n\n                if (errors.length === 0) {\n                  return false;\n                }\n\n                var error = errors[0];\n                var condition = \"\";\n                var text = \"\";\n                var ns = \"urn:ietf:params:xml:ns:xmpp-streams\";\n\n                for (var i = 0; i < error.childNodes.length; i++) {\n                  var e = error.childNodes[i];\n\n                  if (e.getAttribute(\"xmlns\") !== ns) {\n                    break;\n                  }\n\n                  if (e.nodeName === \"text\") {\n                    text = e.textContent;\n                  } else {\n                    condition = e.nodeName;\n                  }\n                }\n\n                var errorString = \"WebSocket stream error: \";\n\n                if (condition) {\n                  errorString += condition;\n                } else {\n                  errorString += \"unknown\";\n                }\n\n                if (text) {\n                  errorString += \" - \" + text;\n                }\n\n                Strophe$2.error(errorString); // close the connection on stream_error\n\n                this._conn._changeConnectStatus(connectstatus, condition);\n\n                this._conn._doDisconnect();\n\n                return true;\n              },\n\n              /** PrivateFunction: _reset\n               *  Reset the connection.\n               *\n               *  This function is called by the reset function of the Strophe Connection.\n               *  Is not needed by WebSockets.\n               */\n              _reset: function _reset() {\n                return;\n              },\n\n              /** PrivateFunction: _connect\n               *  _Private_ function called by Strophe.Connection.connect\n               *\n               *  Creates a WebSocket for a connection and assigns Callbacks to it.\n               *  Does nothing if there already is a WebSocket.\n               */\n              _connect: function _connect() {\n                // Ensure that there is no open WebSocket from a previous Connection.\n                this._closeSocket(); // Create the new WobSocket\n\n\n                this.socket = new WebSocket(this._conn.service, \"xmpp\");\n                this.socket.onopen = this._onOpen.bind(this);\n                this.socket.onerror = this._onError.bind(this);\n                this.socket.onclose = this._onClose.bind(this);\n                this.socket.onmessage = this._connect_cb_wrapper.bind(this);\n              },\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ function called by Strophe.Connection._connect_cb\n               *\n               * checks for stream:error\n               *\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _connect_cb: function _connect_cb(bodyWrap) {\n                var error = this._check_streamerror(bodyWrap, Strophe$2.Status.CONNFAIL);\n\n                if (error) {\n                  return Strophe$2.Status.CONNFAIL;\n                }\n              },\n\n              /** PrivateFunction: _handleStreamStart\n               * _Private_ function that checks the opening <open /> tag for errors.\n               *\n               * Disconnects if there is an error and returns false, true otherwise.\n               *\n               *  Parameters:\n               *    (Node) message - Stanza containing the <open /> tag.\n               */\n              _handleStreamStart: function _handleStreamStart(message) {\n                var error = false; // Check for errors in the <open /> tag\n\n                var ns = message.getAttribute(\"xmlns\");\n\n                if (typeof ns !== \"string\") {\n                  error = \"Missing xmlns in <open />\";\n                } else if (ns !== Strophe$2.NS.FRAMING) {\n                  error = \"Wrong xmlns in <open />: \" + ns;\n                }\n\n                var ver = message.getAttribute(\"version\");\n\n                if (typeof ver !== \"string\") {\n                  error = \"Missing version in <open />\";\n                } else if (ver !== \"1.0\") {\n                  error = \"Wrong version in <open />: \" + ver;\n                }\n\n                if (error) {\n                  this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, error);\n\n                  this._conn._doDisconnect();\n\n                  return false;\n                }\n\n                return true;\n              },\n\n              /** PrivateFunction: _connect_cb_wrapper\n               * _Private_ function that handles the first connection messages.\n               *\n               * On receiving an opening stream tag this callback replaces itself with the real\n               * message handler. On receiving a stream error the connection is terminated.\n               */\n              _connect_cb_wrapper: function _connect_cb_wrapper(message) {\n                if (message.data.indexOf(\"<open \") === 0 || message.data.indexOf(\"<?xml\") === 0) {\n                  // Strip the XML Declaration, if there is one\n                  var data = message.data.replace(/^(<\\?.*?\\?>\\s*)*/, \"\");\n                  if (data === '') return;\n                  var streamStart = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n\n                  this._conn.xmlInput(streamStart);\n\n                  this._conn.rawInput(message.data); //_handleStreamSteart will check for XML errors and disconnect on error\n\n\n                  if (this._handleStreamStart(streamStart)) {\n                    //_connect_cb will check for stream:error and disconnect on error\n                    this._connect_cb(streamStart);\n                  }\n                } else if (message.data.indexOf(\"<close \") === 0) {\n                  // <close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing />\n                  // Parse the raw string to an XML element\n                  var parsedMessage = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement; // Report this input to the raw and xml handlers\n\n                  this._conn.xmlInput(parsedMessage);\n\n                  this._conn.rawInput(message.data);\n\n                  var see_uri = parsedMessage.getAttribute(\"see-other-uri\");\n\n                  if (see_uri) {\n                    var service = this._conn.service; // Valid scenarios: WSS->WSS, WS->ANY\n\n                    var isSecureRedirect = service.indexOf(\"wss:\") >= 0 && see_uri.indexOf(\"wss:\") >= 0 || service.indexOf(\"ws:\") >= 0;\n\n                    if (isSecureRedirect) {\n                      this._conn._changeConnectStatus(Strophe$2.Status.REDIRECT, \"Received see-other-uri, resetting connection\");\n\n                      this._conn.reset();\n\n                      this._conn.service = see_uri;\n\n                      this._connect();\n                    }\n                  } else {\n                    this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"Received closing stream\");\n\n                    this._conn._doDisconnect();\n                  }\n                } else {\n                  var string = this._streamWrap(message.data);\n\n                  var elem = new DOMParser().parseFromString(string, \"text/xml\").documentElement;\n                  this.socket.onmessage = this._onMessage.bind(this);\n\n                  this._conn._connect_cb(elem, null, message.data);\n                }\n              },\n\n              /** PrivateFunction: _disconnect\n               *  _Private_ function called by Strophe.Connection.disconnect\n               *\n               *  Disconnects and sends a last stanza if one is given\n               *\n               *  Parameters:\n               *    (Request) pres - This stanza will be sent before disconnecting.\n               */\n              _disconnect: function _disconnect(pres) {\n                if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\n                  if (pres) {\n                    this._conn.send(pres);\n                  }\n\n                  var close = $build$2(\"close\", {\n                    \"xmlns\": Strophe$2.NS.FRAMING\n                  });\n\n                  this._conn.xmlOutput(close.tree());\n\n                  var closeString = Strophe$2.serialize(close);\n\n                  this._conn.rawOutput(closeString);\n\n                  try {\n                    this.socket.send(closeString);\n                  } catch (e) {\n                    Strophe$2.warn(\"Couldn't send <close /> tag.\");\n                  }\n                }\n\n                this._conn._doDisconnect();\n              },\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  Just closes the Socket for WebSockets\n               */\n              _doDisconnect: function _doDisconnect() {\n                Strophe$2.debug(\"WebSockets _doDisconnect was called\");\n\n                this._closeSocket();\n              },\n\n              /** PrivateFunction _streamWrap\n               *  _Private_ helper function to wrap a stanza in a <stream> tag.\n               *  This is used so Strophe can process stanzas from WebSockets like BOSH\n               */\n              _streamWrap: function _streamWrap(stanza) {\n                return \"<wrapper>\" + stanza + '</wrapper>';\n              },\n\n              /** PrivateFunction: _closeSocket\n               *  _Private_ function to close the WebSocket.\n               *\n               *  Closes the socket if it is still open and deletes it\n               */\n              _closeSocket: function _closeSocket() {\n                if (this.socket) {\n                  try {\n                    this.socket.onclose = null;\n                    this.socket.onerror = null;\n                    this.socket.onmessage = null;\n                    this.socket.close();\n                  } catch (e) {\n                    Strophe$2.debug(e.message);\n                  }\n                }\n\n                this.socket = null;\n              },\n\n              /** PrivateFunction: _emptyQueue\n               * _Private_ function to check if the message queue is empty.\n               *\n               *  Returns:\n               *    True, because WebSocket messages are send immediately after queueing.\n               */\n              _emptyQueue: function _emptyQueue() {\n                return true;\n              },\n\n              /** PrivateFunction: _onClose\n               * _Private_ function to handle websockets closing.\n               *\n               * Nothing to do here for WebSockets\n               */\n              _onClose: function _onClose(e) {\n                if (this._conn.connected && !this._conn.disconnecting) {\n                  Strophe$2.error(\"Websocket closed unexpectedly\");\n\n                  this._conn._doDisconnect();\n                } else if (e && e.code === 1006 && !this._conn.connected && this.socket) {\n                  // in case the onError callback was not called (Safari 10 does not\n                  // call onerror when the initial connection fails) we need to\n                  // dispatch a CONNFAIL status update to be consistent with the\n                  // behavior on other browsers.\n                  Strophe$2.error(\"Websocket closed unexcectedly\");\n\n                  this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"The WebSocket connection could not be established or was disconnected.\");\n\n                  this._conn._doDisconnect();\n                } else {\n                  Strophe$2.debug(\"Websocket closed\");\n                }\n              },\n\n              /** PrivateFunction: _no_auth_received\n               *\n               * Called on stream start/restart when no stream:features\n               * has been received.\n               */\n              _no_auth_received: function _no_auth_received(callback) {\n                Strophe$2.error(\"Server did not offer a supported authentication mechanism\");\n\n                this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, Strophe$2.ErrorCondition.NO_AUTH_MECH);\n\n                if (callback) {\n                  callback.call(this._conn);\n                }\n\n                this._conn._doDisconnect();\n              },\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  This does nothing for WebSockets\n               */\n              _onDisconnectTimeout: function _onDisconnectTimeout() {},\n\n              /** PrivateFunction: _abortAllRequests\n               *  _Private_ helper function that makes sure all pending requests are aborted.\n               */\n              _abortAllRequests: function _abortAllRequests() {},\n\n              /** PrivateFunction: _onError\n               * _Private_ function to handle websockets errors.\n               *\n               * Parameters:\n               * (Object) error - The websocket error.\n               */\n              _onError: function _onError(error) {\n                Strophe$2.error(\"Websocket error \" + error);\n\n                this._conn._changeConnectStatus(Strophe$2.Status.CONNFAIL, \"The WebSocket connection could not be established or was disconnected.\");\n\n                this._disconnect();\n              },\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ function called by Strophe.Connection._onIdle\n               *\n               *  sends all queued stanzas\n               */\n              _onIdle: function _onIdle() {\n                var data = this._conn._data;\n\n                if (data.length > 0 && !this._conn.paused) {\n                  for (var i = 0; i < data.length; i++) {\n                    if (data[i] !== null) {\n                      var stanza = void 0;\n\n                      if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                      } else {\n                        stanza = data[i];\n                      }\n\n                      var rawStanza = Strophe$2.serialize(stanza);\n\n                      this._conn.xmlOutput(stanza);\n\n                      this._conn.rawOutput(rawStanza);\n\n                      this.socket.send(rawStanza);\n                    }\n                  }\n\n                  this._conn._data = [];\n                }\n              },\n\n              /** PrivateFunction: _onMessage\n               * _Private_ function to handle websockets messages.\n               *\n               * This function parses each of the messages as if they are full documents.\n               * [TODO : We may actually want to use a SAX Push parser].\n               *\n               * Since all XMPP traffic starts with\n               *  <stream:stream version='1.0'\n               *                 xml:lang='en'\n               *                 xmlns='jabber:client'\n               *                 xmlns:stream='http://etherx.jabber.org/streams'\n               *                 id='3697395463'\n               *                 from='SERVER'>\n               *\n               * The first stanza will always fail to be parsed.\n               *\n               * Additionally, the seconds stanza will always be <stream:features> with\n               * the stream NS defined in the previous stanza, so we need to 'force'\n               * the inclusion of the NS in this stanza.\n               *\n               * Parameters:\n               * (string) message - The websocket message.\n               */\n              _onMessage: function _onMessage(message) {\n                var elem; // check for closing stream\n\n                var close = '<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';\n\n                if (message.data === close) {\n                  this._conn.rawInput(close);\n\n                  this._conn.xmlInput(message);\n\n                  if (!this._conn.disconnecting) {\n                    this._conn._doDisconnect();\n                  }\n\n                  return;\n                } else if (message.data.search(\"<open \") === 0) {\n                  // This handles stream restarts\n                  elem = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n\n                  if (!this._handleStreamStart(elem)) {\n                    return;\n                  }\n                } else {\n                  var data = this._streamWrap(message.data);\n\n                  elem = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n                }\n\n                if (this._check_streamerror(elem, Strophe$2.Status.ERROR)) {\n                  return;\n                } //handle unavailable presence stanza before disconnecting\n\n\n                if (this._conn.disconnecting && elem.firstChild.nodeName === \"presence\" && elem.firstChild.getAttribute(\"type\") === \"unavailable\") {\n                  this._conn.xmlInput(elem);\n\n                  this._conn.rawInput(Strophe$2.serialize(elem)); // if we are already disconnecting we will ignore the unavailable stanza and\n                  // wait for the </stream:stream> tag before we close the connection\n\n\n                  return;\n                }\n\n                this._conn._dataRecv(elem, message.data);\n              },\n\n              /** PrivateFunction: _onOpen\n               * _Private_ function to handle websockets connection setup.\n               *\n               * The opening stream tag is sent here.\n               */\n              _onOpen: function _onOpen() {\n                Strophe$2.debug(\"Websocket open\");\n\n                var start = this._buildStream();\n\n                this._conn.xmlOutput(start.tree());\n\n                var startString = Strophe$2.serialize(start);\n\n                this._conn.rawOutput(startString);\n\n                this.socket.send(startString);\n              },\n\n              /** PrivateFunction: _reqToData\n               * _Private_ function to get a stanza out of a request.\n               *\n               * WebSockets don't use requests, so the passed argument is just returned.\n               *\n               *  Parameters:\n               *    (Object) stanza - The stanza.\n               *\n               *  Returns:\n               *    The stanza that was passed.\n               */\n              _reqToData: function _reqToData(stanza) {\n                return stanza;\n              },\n\n              /** PrivateFunction: _send\n               *  _Private_ part of the Connection.send function for WebSocket\n               *\n               * Just flushes the messages that are in the queue\n               */\n              _send: function _send() {\n                this._conn.flush();\n              },\n\n              /** PrivateFunction: _sendRestart\n               *\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart: function _sendRestart() {\n                clearTimeout(this._conn._idleTimeout);\n\n                this._conn._onIdle.bind(this._conn)();\n              }\n            };\n\n            global$1.Strophe = core.Strophe;\n            global$1.$build = core.$build;\n            global$1.$iq = core.$iq;\n            global$1.$msg = core.$msg;\n            global$1.$pres = core.$pres;\n\n            return core;\n\n}));\n","import { $iq, Strophe } from 'strophe.js';\n\nStrophe.addConnectionPlugin('disco',\n{\n    _connection: null,\n    _identities : [],\n    _features : [],\n    _items : [],\n    /** Function: init\n     * Plugin init\n     *\n     * Parameters:\n     *   (Strophe.Connection) conn - Strophe connection\n     */\n    init: function(conn)\n    {\n    this._connection = conn;\n        this._identities = [];\n        this._features   = [];\n        this._items      = [];\n        // disco info\n        conn.addHandler(this._onDiscoInfo.bind(this), Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n        // disco items\n        conn.addHandler(this._onDiscoItems.bind(this), Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n    },\n    /** Function: addIdentity\n     * See http://xmpp.org/registrar/disco-categories.html\n     * Parameters:\n     *   (String) category - category of identity (like client, automation, etc ...)\n     *   (String) type - type of identity (like pc, web, bot , etc ...)\n     *   (String) name - name of identity in natural language\n     *   (String) lang - lang of name parameter\n     *\n     * Returns:\n     *   Boolean\n     */\n    addIdentity: function(category, type, name, lang)\n    {\n        for (var i=0; i<this._identities.length; i++)\n        {\n            if (this._identities[i].category == category &&\n                this._identities[i].type == type &&\n                this._identities[i].name == name &&\n                this._identities[i].lang == lang)\n            {\n                return false;\n            }\n        }\n        this._identities.push({category: category, type: type, name: name, lang: lang});\n        return true;\n    },\n    /** Function: addFeature\n     *\n     * Parameters:\n     *   (String) var_name - feature name (like jabber:iq:version)\n     *\n     * Returns:\n     *   boolean\n     */\n    addFeature: function(var_name)\n    {\n        for (var i=0; i<this._features.length; i++)\n        {\n             if (this._features[i] == var_name)\n                 return false;\n        }\n        this._features.push(var_name);\n        return true;\n    },\n    /** Function: removeFeature\n     *\n     * Parameters:\n     *   (String) var_name - feature name (like jabber:iq:version)\n     *\n     * Returns:\n     *   boolean\n     */\n    removeFeature: function(var_name)\n    {\n        for (var i=0; i<this._features.length; i++)\n        {\n             if (this._features[i] === var_name){\n                 this._features.splice(i,1);\n                 return true;\n             }\n        }\n        return false;\n    },\n    /** Function: addItem\n     *\n     * Parameters:\n     *   (String) jid\n     *   (String) name\n     *   (String) node\n     *   (Function) call_back\n     *\n     * Returns:\n     *   boolean\n     */\n    addItem: function(jid, name, node, call_back)\n    {\n        if (node && !call_back)\n            return false;\n        this._items.push({jid: jid, name: name, node: node, call_back: call_back});\n        return true;\n    },\n    /** Function: info\n     * Info query\n     *\n     * Parameters:\n     *   (Function) call_back\n     *   (String) jid\n     *   (String) node\n     */\n    info: function(jid, node, success, error, timeout)\n    {\n        var attrs = {xmlns: Strophe.NS.DISCO_INFO};\n        if (node)\n            attrs.node = node;\n\n        var info = $iq({from:this._connection.jid,\n                         to:jid, type:'get'}).c('query', attrs);\n        this._connection.sendIQ(info, success, error, timeout);\n    },\n    /** Function: items\n     * Items query\n     *\n     * Parameters:\n     *   (Function) call_back\n     *   (String) jid\n     *   (String) node\n     */\n    items: function(jid, node, success, error, timeout)\n    {\n        var attrs = {xmlns: Strophe.NS.DISCO_ITEMS};\n        if (node)\n            attrs.node = node;\n\n        var items = $iq({from:this._connection.jid,\n                         to:jid, type:'get'}).c('query', attrs);\n        this._connection.sendIQ(items, success, error, timeout);\n    },\n\n    /** PrivateFunction: _buildIQResult\n     */\n    _buildIQResult: function(stanza, query_attrs)\n    {\n        var id   =  stanza.getAttribute('id');\n        var from = stanza.getAttribute('from');\n        var iqresult = $iq({type: 'result', id: id});\n\n        if (from !== null) {\n            iqresult.attrs({to: from});\n        }\n\n        return iqresult.c('query', query_attrs);\n    },\n\n    /** PrivateFunction: _onDiscoInfo\n     * Called when receive info request\n     */\n    _onDiscoInfo: function(stanza)\n    {\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\n        var attrs = {xmlns: Strophe.NS.DISCO_INFO};\n        var i;\n        if (node)\n        {\n            attrs.node = node;\n        }\n        var iqresult = this._buildIQResult(stanza, attrs);\n        for (i=0; i<this._identities.length; i++)\n        {\n            attrs = {category: this._identities[i].category,\n                         type    : this._identities[i].type};\n            if (this._identities[i].name)\n                attrs.name = this._identities[i].name;\n            if (this._identities[i].lang)\n                attrs['xml:lang'] = this._identities[i].lang;\n            iqresult.c('identity', attrs).up();\n        }\n        for (i=0; i<this._features.length; i++)\n        {\n            iqresult.c('feature', {'var':this._features[i]}).up();\n        }\n        this._connection.send(iqresult.tree());\n        return true;\n    },\n    /** PrivateFunction: _onDiscoItems\n     * Called when receive items request\n     */\n    _onDiscoItems: function(stanza)\n    {\n        var query_attrs = {xmlns: Strophe.NS.DISCO_ITEMS};\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\n        var items, i;\n        if (node)\n        {\n            query_attrs.node = node;\n            items = [];\n            for (i = 0; i < this._items.length; i++)\n            {\n                if (this._items[i].node == node)\n                {\n                    items = this._items[i].call_back(stanza);\n                    break;\n                }\n            }\n        }\n        else\n        {\n            items = this._items;\n        }\n        var iqresult = this._buildIQResult(stanza, query_attrs);\n        for (i = 0; i < items.length; i++)\n        {\n            var attrs = {jid:  items[i].jid};\n            if (items[i].name)\n                attrs.name = items[i].name;\n            if (items[i].node)\n                attrs.node = items[i].node;\n            iqresult.c('item', attrs).up();\n        }\n        this._connection.send(iqresult.tree());\n        return true;\n    }\n});\n","import { $build, Strophe } from 'strophe.js';\n\n/**\n* StropheJS - Stream Management XEP-0198\n*\n* This plugin implements stream management ACK capabilities of the specs XEP-0198.\n* Note: Resumption is not supported in this current implementation.\n*\n* Reference: http://xmpp.org/extensions/xep-0198.html\n*\n* @class streamManagement\n*/\nStrophe.addConnectionPlugin('streamManagement', {\n\n\t/**\n\t* @property {Boolean} logging: Set to true to enable logging regarding out of sync stanzas.\n\t*/\n\tlogging: false,\n\n\t/**\n\t* @property {Boolean} autoSendCountOnEveryIncomingStanza: Set to true to send an 'a' response after every stanza.\n\t* @default false\n\t* @public\n\t*/\n\tautoSendCountOnEveryIncomingStanza: false,\n\n\t/**\n\t* @property {Integer} requestResponseInterval: Set this value to send a request for counter on very interval\n\t* number of stanzas sent. Set to 0 to disable.\n\t* @default 5\n\t* @public\n\t*/\n\trequestResponseInterval: 5,\n\n\t/**\n\t* @property {Pointer} _c: Strophe connection instance.\n\t* @private\n\t*/\n\t_c: null,\n\n\t/**\n\t* @property {String} _NS XMPP Namespace.\n\t* @private\n\t*/\n\t_NS: 'urn:xmpp:sm:3',\n\n\t/**\n\t* @property {Boolean} _isStreamManagementEnabled\n\t* @private\n\t*/\n\t_isStreamManagementEnabled: false,\n\n\t/**\n\t* @property {Integer} _serverProcesssedStanzasCounter: Keeps count of stanzas confirmed processed by the server.\n\t* The server is the source of truth of this value. It is the 'h' attribute on the latest 'a' element received\n\t* from the server.\n\t* @private\n\t*/\n\t_serverProcesssedStanzasCounter: null,\n\n\t/**\n\t* @property {Integer} _clientProcessedStanzasCounter: Counter of stanzas received by the client from the server.\n\t* Client is the source of truth of this value. It is the 'h' attribute in the 'a' sent from the client to\n\t* the server.\n\t* @private\n\t*/\n\t_clientProcessedStanzasCounter: null,\n\n\t/**\n\t* @property {Integer} _clientSentStanzasCounter\n\t* @private\n\t*/\n\t_clientSentStanzasCounter: null,\n\n\t/**\n\t* Stores a reference to Strophe connection xmlOutput function to wrap counting functionality.\n\t* @method _originalXMLOutput\n\t* @type {Handler}\n\t* @private\n\t*/\n\t_originalXMLOutput: null,\n\n\t/**\n\t* @property {Handler} _requestHandler: Stores reference to handler that process count request from server.\n\t* @private\n\t*/\n\t_requestHandler: null,\n\n\t/**\n\t* @property {Handler} _incomingHandler: Stores reference to handler that processes incoming stanzas count.\n\t* @private\n\t*/\n\t_incomingHandler: null,\n\n\t/**\n\t* @property {Integer} _requestResponseIntervalCount: Counts sent stanzas since last response request.\n\t*/\n\t_requestResponseIntervalCount: 0,\n\n\t/**\n\t * @property {boolean} _isSupported: indicates whether or not the server has advertised support for the stream\n\t * management namespace.\n\t */\n\t_isSupported: false,\n\n\t/**\n\t* @property {Queue} _unacknowledgedStanzas: Maintains a list of packet ids for stanzas which have yet to be acknowledged.\n\t*/\n\t_unacknowledgedStanzas: [],\n\n\t/**\n\t* @property {Array} _acknowledgedStanzaListeners: Stores callbacks for each stanza acknowledged by the server.\n\t* Provides the packet id of the stanza as a parameter.\n\t* @private\n\t*/\n\t_acknowledgedStanzaListeners: [],\n\n\taddAcknowledgedStanzaListener: function(listener) {\n\t\tthis._acknowledgedStanzaListeners.push(listener);\n\t},\n\n\tenable: function(resume) {\n\t\tif (!this._isSupported) {\n\t\t\tthrow new Error('The server doesn\\'t support urn:xmpp:sm:3 namespace');\n\t\t}\n\t\tthis._c.send($build('enable', { xmlns: this._NS, resume }));\n\t\tthis._c.flush();\n\t\tthis._c.pause();\n\t},\n\n\tgetResumeToken: function() {\n\t\treturn this._resumeToken;\n\t},\n\n\tisSupported() {\n\t\treturn this._isSupported;\n\t},\n\n\tresume: function() {\n\t\tif (!this.getResumeToken()) {\n\t\t\tthrow new Error('No resume token');\n\t\t}\n\t\t// FIXME add a check for proto/connection state DISCONNECTED\n\n\t\tthis._c.options.explicitResourceBinding = true;\n\t\tthis._resuming = true;\n\n\t\tthis._originalConnect.apply(this._c, this._connectArgs);\n\t},\n\n\trequestAcknowledgement: function() {\n\t\tthis._requestResponseIntervalCount = 0;\n\t\tthis._c.send($build('r', { xmlns: this._NS }));\n\t},\n\n\tgetOutgoingCounter: function() {\n\t\treturn this._clientSentStanzasCounter;\n\t},\n\n\tgetIncomingCounter: function() {\n\t\treturn this._clientProcessedStanzasCounter;\n\t},\n\n\tinit: function(conn) {\n\t\tthis._c = conn;\n\t\tStrophe.addNamespace('SM', this._NS);\n\n\t\t// Storing original xmlOutput function to use additional logic\n\t\tthis._originalXMLOutput = this._c.xmlOutput;\n\t\tthis._c.xmlOutput = this.xmlOutput.bind(this);\n\n\t\tthis._originalConnect = this._c.connect;\n\t\tthis._c.connect = this._interceptConnectArgs.bind(this);\n\n\t\tthis._originalOnStreamFeaturesAfterSASL = this._c._onStreamFeaturesAfterSASL;\n\t\tthis._c._onStreamFeaturesAfterSASL = this._onStreamFeaturesAfterSASL.bind(this);\n\n\t\tthis._originalDoDisconnect = this._c._doDisconnect;\n\t\tthis._c._doDisconnect = this._interceptDoDisconnect.bind(this);\n\n\t\tthis._originalDisconnect = this._c.disconnect;\n\t\tthis._c.disconnect = this._interceptDisconnect.bind(this);\n\t},\n\n\t_interceptDisconnect: function() {\n\t\tthis._resumeToken = undefined;\n\t\tthis._originalDisconnect.apply(this._c, arguments);\n\t},\n\n\t_interceptDoDisconnect: function() {\n\t\tif (this.getResumeToken()\n\t\t\t\t&& !this._resuming\n\t\t\t\t&& this._c.connected && !this._c.disconnecting) {\n\t\t\tthis._resumeState = {\n\t\t\t\thandlers: this._c.handlers,\n\t\t\t\ttimedHandlers: this._c.timedHandlers,\n\t\t\t\tremoveTimeds: this._c.removeTimeds,\n\t\t\t\tremoveHandlers: this._c.removeHandlers,\n\t\t\t\taddTimeds: this._c.addTimeds,\n\t\t\t\taddHandlers: this._c.addHandlers\n\t\t\t};\n\t\t\tthis._storedJid = this._c.jid;\n\n\t\t\tthis.logging && Strophe.debug('SM stored resume state, handler count: ' + this._resumeState.handlers.length);\n\t\t}\n\n\t\tthis._originalDoDisconnect.apply(this._c, arguments);\n\t},\n\n\t_interceptConnectArgs: function() {\n\t\tthis._connectArgs = arguments;\n\n\t\tthis._originalConnect.apply(this._c, arguments);\n\t},\n\n\t_onStreamFeaturesAfterSASL: function(elem) {\n\t\tthis._isSupported = elem.getElementsByTagNameNS(this._NS, \"sm\").length > 0;\n\n\t\treturn this._originalOnStreamFeaturesAfterSASL.apply(this._c, arguments);\n\t},\n\n\tstatusChanged: function (status) {\n\t\tif (!this.getResumeToken()\n\t\t\t&& (status === Strophe.Status.CONNECTED || status === Strophe.Status.DISCONNECTED)) {\n\t\t\tthis.logging && Strophe.debug('SM reset state');\n\n\t\t\tthis._serverProcesssedStanzasCounter = 0;\n\t\t\tthis._clientProcessedStanzasCounter = 0;\n\n\t\t\tthis._clientSentStanzasCounter = 0;\n\n\t\t\tthis._isStreamManagementEnabled = false;\n\t\t\tthis._requestResponseIntervalCount = 0;\n\n\t\t\t// FIXME not described in JSDocs\n\t\t\tthis._resuming = false;\n\n\t\t\tif (status === Strophe.Status.DISCONNECTED) {\n\t\t\t\tthis._isSupported = false;\n\t\t\t}\n\n\t\t\tthis._unacknowledgedStanzas = [];\n\n\t\t\tif (this._requestHandler) {\n\t\t\t\tthis._c.deleteHandler(this._requestHandler);\n\t\t\t}\n\n\t\t\tif (this._incomingHandler) {\n\t\t\t\tthis._c.deleteHandler(this._incomingHandler);\n\t\t\t}\n\n\t\t\tthis._requestHandler = this._c.addHandler(this._handleServerRequestHandler.bind(this), this._NS, 'r');\n\t\t\tthis._ackHandler = this._c.addHandler(this._handleServerAck.bind(this), this._NS, 'a');\n\t\t\tthis._incomingHandler = this._c.addHandler(this._incomingStanzaHandler.bind(this));\n\n\t\t\t// FIXME handler instances stored, but never used\n\t\t\tthis._enabledHandler = this._c._addSysHandler(this._handleEnabled.bind(this), this._NS, 'enabled');\n\t\t\tthis._resumeFailedHandler = this._c._addSysHandler(this._handleResumeFailed.bind(this), this._NS, 'failed');\n\t\t\tthis._resumedHandler =  this._c._addSysHandler(this._handleResumed.bind(this), this._NS,'resumed');\n\n\t\t} else if (status === Strophe.Status.BINDREQUIRED)  {\n\t\t\tthis._c.jid = this._storedJid;\n\n\t\t\t// Restore Strophe handlers\n\t\t\tfor (const property in this._resumeState) {\n\t\t\t\tthis._c[property] = this._resumeState[property];\n\t\t\t}\n\n\t\t\t// FIXME check conditions if there's session ID and if enabled\n\t\t\tthis._c.send($build('resume', {\n\t\t\t\txmlns: this._NS,\n\t\t\t\th: this._clientProcessedStanzasCounter,\n\t\t\t\tprevid: this._resumeToken\n\t\t\t}));\n\t\t\tthis._c.flush();\n\t\t} else if (status === Strophe.Status.ERROR) {\n\t\t\tthis.logging && Strophe.debug('SM cleared resume token on error');\n\t\t\tthis._resumeToken = undefined;\n\t\t}\n\t},\n\n\t/**\n\t* This method overrides the send method implemented by Strophe.Connection\n\t* to count outgoing stanzas\n\t*\n\t* @method Send\n\t* @public\n\t*/\n\txmlOutput: function(elem) {\n\t\tif (Strophe.isTagEqual(elem, 'iq') ||\n\t\t\tStrophe.isTagEqual(elem, 'presence') ||\n\t\t\tStrophe.isTagEqual(elem, 'message')) {\n\t\t\tthis._increaseSentStanzasCounter(elem);\n\t\t}\n\n\t\treturn this._originalXMLOutput.call(this._c, elem);\n\t},\n\n\t_handleEnabled: function(elem) {\n\t\tthis._isStreamManagementEnabled = true;\n\t\t// FIXME fail if requested, but not enabled\n\t\tthis._resumeToken = elem.getAttribute('resume') === 'true' && elem.getAttribute('id');\n\n\t\tthis._c.resume();\n\n\t\treturn true;\n\t},\n\n\t_handleResumeFailed: function(elem) {\n\t\tconst error = elem && elem.firstElementChild && elem.firstElementChild.tagName;\n\n\t\tthis._c._changeConnectStatus(Strophe.Status.ERROR, error, elem);\n\t\tthis._c._doDisconnect();\n\n\t\treturn true;\n\t},\n\n\t_handleResumed: function(elem) {\n\t\t// FIXME check if in the correct state\n\t\tvar handledCount = parseInt(elem.getAttribute('h'));\n\t\tthis._handleAcknowledgedStanzas(handledCount, this._serverProcesssedStanzasCounter);\n\n\t\tthis._resuming = false;\n\t\tthis._c.do_bind = false; // No need to bind our resource anymore\n\t\tthis._c.authenticated = true;\n\t\tthis._c.restored = true;\n\n\t\tif (this._unacknowledgedStanzas.length > 0) {\n\t\t\tthis.logging && Strophe.debug('SM Sending unacknowledged stanzas', this._unacknowledgedStanzas);\n\t\t\tfor(const stanza of this._unacknowledgedStanzas) {\n\t\t\t\tthis._c.send(stanza);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logging && Strophe.debug('SM No unacknowledged stanzas', this._unacknowledgedStanzas);\n\t\t}\n\n\t\tthis._c._changeConnectStatus(Strophe.Status.CONNECTED, null);\n\n\t\treturn true;\n\t},\n\n\t_incomingStanzaHandler: function(elem) {\n\t\tif (Strophe.isTagEqual(elem, 'iq') || Strophe.isTagEqual(elem, 'presence') || Strophe.isTagEqual(elem, 'message'))  {\n\t\t\tthis._increaseReceivedStanzasCounter();\n\n\t\t\tif (this.autoSendCountOnEveryIncomingStanza) {\n\t\t\t\tthis._answerProcessedStanzas();\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t_handleAcknowledgedStanzas: function(reportedHandledCount, lastKnownHandledCount) {\n\t\tvar delta = reportedHandledCount - lastKnownHandledCount;\n\n\t\tif (delta < 0) {\n\t\t\tthis._throwError('New reported stanza count lower than previous. New: ' + reportedHandledCount + ' - Previous: ' + lastKnownHandledCount);\n\t\t}\n\n\t\tif (delta > this._unacknowledgedStanzas.length) {\n\t\t\tthis._throwError('Higher reported acknowledge count than unacknowledged stanzas. Reported Acknowledge Count: ' + delta + ' - Unacknowledge Stanza Count: ' + this._unacknowledgedStanzas.length + ' - New: ' + reportedHandledCount + ' - Previous: ' + lastKnownHandledCount);\n\t\t}\n\n\t\tfor(var i = 0; i < delta; i++) {\n\t\t\tvar stanza = this._unacknowledgedStanzas.shift();\n\t\t\tfor (var j = 0; j < this._acknowledgedStanzaListeners.length; j++) {\n\t\t\t\tthis._acknowledgedStanzaListeners[j](stanza);\n\t\t\t}\n\t\t}\n\n\t\tif (this.logging && this._unacknowledgedStanzas.length > 0) {\n\t\t\tStrophe.warn('SM Unacknowledged stanzas', this._unacknowledgedStanzas);\n\t\t}\n\n\t\tthis._serverProcesssedStanzasCounter = reportedHandledCount;\n\n\t\tif (this.requestResponseInterval > 0) {\n\t\t\tthis._requestResponseIntervalCount = 0;\n\t\t}\n\t},\n\n\t_handleServerRequestHandler: function() {\n\t\tthis._answerProcessedStanzas();\n\n\t\treturn true;\n\t},\n\n\t_handleServerAck: function(elem){\n\t\tvar handledCount = parseInt(elem.getAttribute('h'));\n\t\tthis._handleAcknowledgedStanzas(handledCount, this._serverProcesssedStanzasCounter);\n\n\t\treturn true;\n\t},\n\n\t_answerProcessedStanzas: function() {\n\t\tif (this._isStreamManagementEnabled) {\n\t\t\tthis._c.send($build('a', { xmlns: this._NS, h: this._clientProcessedStanzasCounter }));\n\t\t}\n\t},\n\n\t_increaseSentStanzasCounter: function(elem) {\n\t\tif (this._isStreamManagementEnabled) {\n\t\t\tif (this._unacknowledgedStanzas.indexOf(elem) !== -1) {\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._unacknowledgedStanzas.push(elem);\n\t\t\tthis._clientSentStanzasCounter++;\n\n\t\t\tif (this.requestResponseInterval > 0) {\n\t\t\t\tthis._requestResponseIntervalCount++;\n\n\t\t\t\tif (this._requestResponseIntervalCount === this.requestResponseInterval) {\n\t\t\t\t\t// FIXME Can not call send from onIdle.\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.requestAcknowledgement();\n\t\t\t\t\t}, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_increaseReceivedStanzasCounter: function() {\n\t\tif (this._isStreamManagementEnabled) {\n\t\t\tthis._clientProcessedStanzasCounter++;\n\t\t}\n\t},\n\n\t_throwError: function(msg) {\n\t\tStrophe.error(msg);\n\t\tthrow new Error(msg);\n\t}\n\n});\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter = adapterFactory({window});\nexport default adapter;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimGetStats(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n      firefoxShim.shimAddTransceiver(window);\n      firefoxShim.shimCreateOffer(window);\n      firefoxShim.shimCreateAnswer(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimGetDisplayMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const addIceCandidateNullSupported =\n    window.RTCPeerConnection.prototype.addIceCandidate.length === 0;\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  // support for addIceCandidate(null or undefined)\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!addIceCandidateNullSupported && !arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions. Native support planned for Chrome M77.\n      if (browserDetails.version < 78 &&\n        arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\nexport function fixNegotiationNeeded(window) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (pc.signalingState !== 'stable') {\n      return;\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const browserDetails = utils.detectBrowser(window);\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeAllowExtmapMixed(window) {\n  /* remove a=extmap-allow-mixed for Chrome < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      desc.sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  // support for addIceCandidate(null or undefined)\n  // as well as ignoring {sdpMid, candidate: \"\"}\n  if (browserDetails.version < 68) {\n    const nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      if (arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params)) {\n            params.encodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(\n              sender.setParameters(params)\n              .catch(() => {})\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window) {\n  const browserDetails = utils.detectBrowser(window);\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track) {\n        const stream = arguments[1];\n        if (stream) {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (!this._localStreams.includes(stream)) {\n            this._localStreams.push(stream);\n          }\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in window.RTCPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  const {navigator} = window;\n\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/**\r\n * The possible camera facing modes. For now support only 'user' and\r\n * 'environment' because 'left' and 'right' are not used anywhere in our\r\n * projects at the time of this writing. For more information please refer to\r\n * https://w3c.github.io/mediacapture-main/getusermedia.html\r\n * #def-constraint-facingMode.\r\n *\r\n * @enum {string}\r\n */\r\nconst CameraFacingMode = {\r\n    /**\r\n     * The mode which specifies the environment-facing camera.\r\n     */\r\n    ENVIRONMENT: 'environment',\r\n\r\n    /**\r\n     * The mode which specifies the user-facing camera.\r\n     */\r\n    USER: 'user'\r\n};\r\n\r\nmodule.exports = CameraFacingMode;\r\n","/**\r\n * The audio type.\r\n */\r\nexport const AUDIO = 'audio';\r\n\r\n/**\r\n * The presenter type.\r\n */\r\nexport const PRESENTER = 'presenter';\r\n\r\n/**\r\n * The video type.\r\n */\r\nexport const VIDEO = 'video';\r\n","const RTCEvents = {\r\n    /**\r\n     * Indicates error while create answer call.\r\n     */\r\n    CREATE_ANSWER_FAILED: 'rtc.create_answer_failed',\r\n\r\n    /**\r\n     * Indicates error while create offer call.\r\n     */\r\n    CREATE_OFFER_FAILED: 'rtc.create_offer_failed',\r\n    DATA_CHANNEL_OPEN: 'rtc.data_channel_open',\r\n    ENDPOINT_CONN_STATUS_CHANGED: 'rtc.endpoint_conn_status_changed',\r\n    DOMINANT_SPEAKER_CHANGED: 'rtc.dominant_speaker_changed',\r\n    LASTN_ENDPOINT_CHANGED: 'rtc.lastn_endpoint_changed',\r\n\r\n    /**\r\n     * Event emitted when the user granted a permission for the camera / mic.\r\n     * Used to keep track of the granted permissions on browsers which don't\r\n     * support the Permissions API.\r\n     */\r\n    GRANTED_PERMISSIONS: 'rtc.granted_permissions',\r\n\r\n    IS_SELECTED_CHANGED: 'rtc.is_selected_change',\r\n\r\n    /**\r\n     * Event emitted when {@link RTC.setLastN} method is called to update with\r\n     * the new value set.\r\n     * The first argument is the value passed to {@link RTC.setLastN}.\r\n     */\r\n    LASTN_VALUE_CHANGED: 'rtc.lastn_value_changed',\r\n\r\n    /**\r\n     * Event emitted when ssrc for a local track is extracted and stored\r\n     * in {@link TraceablePeerConnection}.\r\n     * @param {JitsiLocalTrack} track which ssrc was updated\r\n     * @param {string} ssrc that was stored\r\n     */\r\n    LOCAL_TRACK_SSRC_UPDATED: 'rtc.local_track_ssrc_updated',\r\n\r\n    TRACK_ATTACHED: 'rtc.track_attached',\r\n\r\n    /**\r\n     * Event fired when we remote track is added to the conference.\r\n     * 1st event argument is the added <tt>JitsiRemoteTrack</tt> instance.\r\n     **/\r\n    REMOTE_TRACK_ADDED: 'rtc.remote_track_added',\r\n\r\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\r\n    // (currently implemented for local tracks only)\r\n    REMOTE_TRACK_MUTE: 'rtc.remote_track_mute',\r\n\r\n    /**\r\n     * Indicates that the remote track has been removed from the conference.\r\n     * 1st event argument is the removed {@link JitsiRemoteTrack} instance.\r\n     */\r\n    REMOTE_TRACK_REMOVED: 'rtc.remote_track_removed',\r\n\r\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\r\n    // (currently implemented for local tracks only)\r\n    REMOTE_TRACK_UNMUTE: 'rtc.remote_track_unmute',\r\n\r\n    /**\r\n     * Indicates error while set local description.\r\n     */\r\n    SET_LOCAL_DESCRIPTION_FAILED: 'rtc.set_local_description_failed',\r\n\r\n    /**\r\n     * Indicates error while set remote description.\r\n     */\r\n    SET_REMOTE_DESCRIPTION_FAILED: 'rtc.set_remote_description_failed',\r\n    AUDIO_OUTPUT_DEVICE_CHANGED: 'rtc.audio_output_device_changed',\r\n    DEVICE_LIST_CHANGED: 'rtc.device_list_changed',\r\n\r\n    /**\r\n     * Indicates that the list with available devices will change.\r\n     */\r\n    DEVICE_LIST_WILL_CHANGE: 'rtc.device_list_will_change',\r\n    DEVICE_LIST_AVAILABLE: 'rtc.device_list_available',\r\n\r\n    /**\r\n     * Indicates that a message from another participant is received on\r\n     * data channel.\r\n     */\r\n    ENDPOINT_MESSAGE_RECEIVED: 'rtc.endpoint_message_received',\r\n\r\n    /**\r\n     * Designates an event indicating that the local ICE username fragment of\r\n     * the jingle session has changed.\r\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\r\n     * is the source of the event.\r\n     * The second argument is the actual \"ufrag\" string.\r\n     */\r\n    LOCAL_UFRAG_CHANGED: 'rtc.local_ufrag_changed',\r\n\r\n    /**\r\n     * Designates an event indicating that the local ICE username fragment of\r\n     * the jingle session has changed.\r\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\r\n     * is the source of the event.\r\n     * The second argument is the actual \"ufrag\" string.\r\n     */\r\n    REMOTE_UFRAG_CHANGED: 'rtc.remote_ufrag_changed'\r\n};\r\n\r\nmodule.exports = RTCEvents;\r\n","const Resolutions = {\r\n    '1080': {\r\n        width: 1920,\r\n        height: 1080,\r\n        order: 8\r\n    },\r\n    'fullhd': {\r\n        width: 1920,\r\n        height: 1080,\r\n        order: 8\r\n    },\r\n    '720': {\r\n        width: 1280,\r\n        height: 720,\r\n        order: 7\r\n    },\r\n    'hd': {\r\n        width: 1280,\r\n        height: 720,\r\n        order: 7\r\n    },\r\n    '960': {\r\n        width: 960,\r\n        height: 720,\r\n        order: 6\r\n    },\r\n    '540': {\r\n        width: 960,\r\n        height: 540,\r\n        order: 5\r\n    },\r\n    'qhd': {\r\n        width: 960,\r\n        height: 540,\r\n        order: 5\r\n    },\r\n\r\n    // 16:9 resolution first.\r\n    '360': {\r\n        width: 640,\r\n        height: 360,\r\n        order: 4\r\n    },\r\n    '640': {\r\n        width: 640,\r\n        height: 480,\r\n        order: 3\r\n    },\r\n    'vga': {\r\n        width: 640,\r\n        height: 480,\r\n        order: 3\r\n    },\r\n\r\n    // 16:9 resolution first.\r\n    '180': {\r\n        width: 320,\r\n        height: 180,\r\n        order: 2\r\n    },\r\n    '320': {\r\n        width: 320,\r\n        height: 240,\r\n        order: 1\r\n    }\r\n};\r\n\r\nmodule.exports = Resolutions;\r\n","/**\r\n * Event triggered when participant's muted status changes.\r\n * @param {string} endpointId the track owner's identifier (MUC nickname)\r\n * @param {MediaType} mediaType \"audio\" or \"video\"\r\n * @param {boolean} isMuted the new muted state\r\n */\r\nexport const PEER_MUTED_CHANGED = 'signaling.peerMuted';\r\n\r\n/**\r\n * Event triggered when participant's video type changes.\r\n * @param {string} endpointId the video owner's ID (MUC nickname)\r\n * @param {VideoType} videoType the new value\r\n */\r\nexport const PEER_VIDEO_TYPE_CHANGED = 'signaling.peerVideoType';\r\n","\r\nimport Listenable from '../../modules/util/Listenable';\r\n\r\n/**\r\n * An object that carries the info about specific media type advertised by\r\n * participant in the signaling channel.\r\n * @typedef {Object} PeerMediaInfo\r\n * @property {boolean} muted indicates if the media is currently muted\r\n * @property {VideoType|undefined} videoType the type of the video if applicable\r\n */\r\n\r\n/**\r\n * Interface used to expose the information carried over the signaling channel\r\n * which is not available to the RTC module in the media SDP.\r\n *\r\n * @interface SignalingLayer\r\n */\r\nexport default class SignalingLayer extends Listenable {\r\n\r\n    /**\r\n     * Obtains the endpoint ID for given SSRC.\r\n     * @param {number} ssrc the SSRC number.\r\n     * @return {string|null} the endpoint ID for given media SSRC.\r\n     */\r\n    getSSRCOwner(ssrc) { // eslint-disable-line no-unused-vars\r\n        throw new Error('not implemented');\r\n    }\r\n\r\n    /**\r\n     * Obtains the info about given media advertised in the MUC presence of\r\n     * the participant identified by the given MUC JID.\r\n     * @param {string} owner the MUC jid of the participant for whom\r\n     * {@link PeerMediaInfo} will be obtained.\r\n     * @param {MediaType} mediaType the type of the media for which presence\r\n     * info will be obtained.\r\n     * @return {PeerMediaInfo|null} presenceInfo an object with media presence\r\n     * info or <tt>null</tt> either if there is no presence available for given\r\n     * JID or if the media type given is invalid.\r\n     */\r\n    getPeerMediaInfo(owner, mediaType) { // eslint-disable-line no-unused-vars\r\n        throw new Error('not implemented');\r\n    }\r\n}\r\n","/* global module */\r\n/**\r\n * Enumeration of the video types\r\n * @type {{CAMERA: string, DESKTOP: string}}\r\n */\r\nconst VideoType = {\r\n    /**\r\n     * The camera video type.\r\n     */\r\n    CAMERA: 'camera',\r\n\r\n    /**\r\n     * The desktop video type.\r\n     */\r\n    DESKTOP: 'desktop'\r\n};\r\n\r\nmodule.exports = VideoType;\r\n","const AuthenticationEvents = {\r\n    /**\r\n     * Event callback arguments:\r\n     * function(authenticationEnabled, userIdentity)\r\n     * authenticationEnabled - indicates whether authentication has been enabled\r\n     *                         in this session\r\n     * userIdentity - if user has been logged in then it contains user name. If\r\n     *                contains 'null' or 'undefined' then user is not logged in.\r\n     */\r\n    IDENTITY_UPDATED: 'authentication.identity_updated'\r\n};\r\n\r\nmodule.exports = AuthenticationEvents;\r\n","/**\r\n * Indicates that the local connection statistics were updated.\r\n */\r\nexport const LOCAL_STATS_UPDATED = 'cq.local_stats_updated';\r\n\r\n/**\r\n * Indicates that the connection statistics for a particular remote participant\r\n * were updated.\r\n */\r\nexport const REMOTE_STATS_UPDATED = 'cq.remote_stats_updated';\r\n","/**\r\n * Indicates that the end-to-end round-trip-time for a participant has changed.\r\n */\r\nexport const E2E_RTT_CHANGED = 'e2eping.e2e_rtt_changed';\r\n","/**\r\n * This class exports constants and factory methods related to the analytics\r\n * API provided by AnalyticsAdapter. In order for entries in a database to be\r\n * somewhat easily traceable back to the code which produced them, events sent\r\n * through analytics should be defined here.\r\n *\r\n * Since the AnalyticsAdapter API can be used in different ways, for some events\r\n * it is more convenient to just define the event name as a constant. For other\r\n * events a factory function is easier.\r\n *\r\n * A general approach for adding a new event:\r\n * 1. Determine the event type: track, UI, page, or operational. If in doubt use\r\n * operational.\r\n * 2. Determine whether the event is related to other existing events, and\r\n * which fields are desired to be set: name, action, actionSubject, source.\r\n * 3. If the name is sufficient (the other fields are not important), use a\r\n * constant. Otherwise use a factory function.\r\n *\r\n * Note that the AnalyticsAdapter uses the events passed to its functions for\r\n * its own purposes, and might modify them. Because of this, factory functions\r\n * should create new objects.\r\n *\r\n */\r\n\r\n/**\r\n * The constant which identifies an event of type \"operational\".\r\n * @type {string}\r\n */\r\nexport const TYPE_OPERATIONAL = 'operational';\r\n\r\n/**\r\n * The constant which identifies an event of type \"page\".\r\n * @type {string}\r\n */\r\nexport const TYPE_PAGE = 'page';\r\n\r\n/**\r\n * The constant which identifies an event of type \"track\".\r\n * @type {string}\r\n */\r\nexport const TYPE_TRACK = 'track';\r\n\r\n/**\r\n * The constant which identifies an event of type \"ui\".\r\n * @type {string}\r\n */\r\nexport const TYPE_UI = 'ui';\r\n\r\n/**\r\n * The \"action\" value for Jingle events which indicates that the Jingle session\r\n * was restarted (TODO: verify/fix the documentation)\r\n * @type {string}\r\n */\r\nexport const ACTION_JINGLE_RESTART = 'restart';\r\n\r\n/**\r\n * The \"action\" value for Jingle events which indicates that a session-accept\r\n * timed out (TODO: verify/fix the documentation)\r\n * @type {string}\r\n */\r\nexport const ACTION_JINGLE_SA_TIMEOUT = 'session-accept.timeout';\r\n\r\n/**\r\n * The \"action\" value for Jingle events which indicates that a session-initiate\r\n * was received.\r\n * @type {string}\r\n */\r\nexport const ACTION_JINGLE_SI_RECEIVED = 'session-initiate.received';\r\n\r\n/**\r\n * The \"action\" value for Jingle events which indicates that a session-initiate\r\n * not arrived within a timeout (the value is specified in\r\n * the {@link JingleSessionPC}.\r\n * @type {string}\r\n */\r\nexport const ACTION_JINGLE_SI_TIMEOUT = 'session-initiate.timeout';\r\n\r\n/**\r\n * A constant for the \"terminate\" action for Jingle events. TODO: verify/fix\r\n * the documentation)\r\n * @type {string}\r\n */\r\nexport const ACTION_JINGLE_TERMINATE = 'terminate';\r\n\r\n/**\r\n * The \"action\" value for Jingle events which indicates that a transport-replace\r\n * was received.\r\n * @type {string}\r\n */\r\nexport const ACTION_JINGLE_TR_RECEIVED\r\n    = 'transport-replace.received';\r\n\r\n/**\r\n * The \"action\" value for Jingle events which indicates that a transport-replace\r\n * succeeded (TODO: verify/fix the documentation)\r\n * @type {string}\r\n */\r\nexport const ACTION_JINGLE_TR_SUCCESS\r\n    = 'transport-replace.success';\r\n\r\n/**\r\n * The \"action\" value for P2P events which indicates that P2P session initiate message has been rejected by the client\r\n * because the mandatory requirements were not met.\r\n * @type {string}\r\n */\r\nexport const ACTION_P2P_DECLINED = 'decline';\r\n\r\n/**\r\n * The \"action\" value for P2P events which indicates that a connection was\r\n * established (TODO: verify/fix the documentation)\r\n * @type {string}\r\n */\r\nexport const ACTION_P2P_ESTABLISHED = 'established';\r\n\r\n/**\r\n * The \"action\" value for P2P events which indicates that something failed.\r\n * @type {string}\r\n */\r\nexport const ACTION_P2P_FAILED = 'failed';\r\n\r\n/**\r\n * The \"action\" value for P2P events which indicates that a switch to\r\n * jitsi-videobridge happened.\r\n * @type {string}\r\n */\r\nexport const ACTION_P2P_SWITCH_TO_JVB = 'switch.to.jvb';\r\n\r\n/**\r\n * The name of an event which indicates an available device. We send one such\r\n * event per available device once when the available devices are first known,\r\n * and every time that they change\r\n * @type {string}\r\n *\r\n * Properties:\r\n *      audio_input_device_count: the number of audio input devices available at\r\n *          the time the event was sent.\r\n *      audio_output_device_count: the number of audio output devices available\r\n *          at the time the event was sent.\r\n *      video_input_device_count: the number of video input devices available at\r\n *          the time the event was sent.\r\n *      video_output_device_count: the number of video output devices available\r\n *          at the time the event was sent.\r\n *      device_id: an identifier of the device described in this event.\r\n *      device_group_id:\r\n *      device_kind: one of 'audioinput', 'audiooutput', 'videoinput' or\r\n *          'videooutput'.\r\n *      device_label: a string which describes the device.\r\n */\r\nexport const AVAILABLE_DEVICE = 'available.device';\r\n\r\n/**\r\n * This appears to be fired only in certain cases when the XMPP connection\r\n * disconnects (and it was intentional?). It is currently never observed to\r\n * fire in production.\r\n *\r\n * TODO: document\r\n *\r\n * Properties:\r\n *      message: an error message\r\n */\r\nexport const CONNECTION_DISCONNECTED = 'connection.disconnected';\r\n\r\n/**\r\n * Indicates that the user of the application provided feedback in terms of a\r\n * rating (an integer from 1 to 5) and an optional comment.\r\n * Properties:\r\n *      value: the user's rating (an integer from 1 to 5)\r\n *      comment: the user's comment\r\n */\r\nexport const FEEDBACK = 'feedback';\r\n\r\n/**\r\n * Indicates the duration of a particular phase of the ICE connectivity\r\n * establishment.\r\n *\r\n * Properties:\r\n *      phase: the ICE phase (e.g. 'gathering', 'checking', 'establishment')\r\n *      value: the duration in milliseconds.\r\n *      p2p: whether the associated ICE connection is p2p or towards a\r\n *          jitsi-videobridge\r\n *      initiator: whether the local Jingle peer is the initiator or responder\r\n *          in the Jingle session. XXX we probably actually care about the ICE\r\n *          role (controlling vs controlled), and we assume that this correlates\r\n *          with the Jingle initiator.\r\n */\r\nexport const ICE_DURATION = 'ice.duration';\r\n\r\n/**\r\n * Indicates the difference in milliseconds between the ICE establishment time\r\n * for the P2P and JVB connections (e.g. a value of 10 would indicate that the\r\n * P2P connection took 10ms more than JVB connection to establish).\r\n *\r\n * Properties:\r\n *      value: the difference in establishment durations in milliseconds.\r\n *\r\n */\r\nexport const ICE_ESTABLISHMENT_DURATION_DIFF\r\n    = 'ice.establishment.duration.diff';\r\n\r\n/**\r\n * Indicates that the ICE state has changed.\r\n *\r\n * Properties:\r\n *      state: the ICE state which was entered (e.g. 'checking', 'connected',\r\n *          'completed', etc).\r\n *      value: the time in milliseconds (as reported by\r\n *          window.performance.now()) that the state change occurred.\r\n *      p2p: whether the associated ICE connection is p2p or towards a\r\n *          jitsi-videobridge\r\n *      signalingState: The signaling state of the associated PeerConnection\r\n *      reconnect: whether the associated Jingle session is in the process of\r\n *          reconnecting (or is it ICE? TODO: verify/fix the documentation)\r\n */\r\nexport const ICE_STATE_CHANGED = 'ice.state.changed';\r\n\r\n/**\r\n * Indicates that no bytes have been sent for the track.\r\n *\r\n * Properties:\r\n *      mediaType: the media type of the local track ('audio' or 'video').\r\n */\r\nexport const NO_BYTES_SENT = 'track.no-bytes-sent';\r\n\r\n/**\r\n * Indicates that a track was unmuted (?).\r\n *\r\n * Properties:\r\n *      mediaType: the media type of the local track ('audio' or 'video').\r\n *      trackType: the type of the track ('local' or 'remote').\r\n *      value: TODO: document\r\n */\r\nexport const TRACK_UNMUTED = 'track.unmuted';\r\n\r\n/**\r\n * Creates an operational event which indicates that we have received a\r\n * \"bridge down\" event from jicofo.\r\n */\r\nexport const createBridgeDownEvent = function() {\r\n    const bridgeDown = 'bridge.down';\r\n\r\n    return {\r\n        action: bridgeDown,\r\n        actionSubject: bridgeDown,\r\n        type: TYPE_OPERATIONAL\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event which indicates that the XMPP connection failed\r\n * @param errorType TODO\r\n * @param errorMessage TODO\r\n * @param detail connection failed details.\r\n */\r\nexport const createConnectionFailedEvent\r\n    = function(errorType, errorMessage, details) {\r\n        return {\r\n            type: TYPE_OPERATIONAL,\r\n            action: 'connection.failed',\r\n            attributes: {\r\n                'error_type': errorType,\r\n                'error_message': errorMessage,\r\n                ...details\r\n            }\r\n        };\r\n    };\r\n\r\n/**\r\n * Creates a conference event.\r\n *\r\n * @param {string} action - The action of the event.\r\n * @param {Object} attributes - The attributes to be added to the event.\r\n * @returns {{type: string, source: string, action: string, attributes: object}}\r\n */\r\nexport function createConferenceEvent(action, attributes) {\r\n    return {\r\n        action,\r\n        attributes,\r\n        source: 'conference',\r\n        type: TYPE_OPERATIONAL\r\n    };\r\n}\r\n\r\n/**\r\n * Creates an operational event which indicates that a particular connection\r\n * stage was reached (i.e. the XMPP connection transitioned to the \"connected\"\r\n * state).\r\n *\r\n * @param stage the stage which was reached\r\n * @param attributes additional attributes for the event. This should be an\r\n * object with a \"value\" property indicating a timestamp in milliseconds\r\n * relative to the beginning of the document's lifetime.\r\n *\r\n */\r\nexport const createConnectionStageReachedEvent = function(stage, attributes) {\r\n    const action = 'connection.stage.reached';\r\n\r\n    return {\r\n        action,\r\n        actionSubject: stage,\r\n        attributes,\r\n        source: action,\r\n        type: TYPE_OPERATIONAL\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an operational event for the end-to-end round trip time to a\r\n * specific remote participant.\r\n * @param participantId the ID of the remote participant.\r\n * @param region the region of the remote participant\r\n * @param rtt the rtt\r\n */\r\nexport const createE2eRttEvent = function(participantId, region, rtt) {\r\n    const attributes = {\r\n        'participant_id': participantId,\r\n        region,\r\n        rtt\r\n    };\r\n\r\n    return {\r\n        attributes,\r\n        name: 'e2e_rtt',\r\n        type: TYPE_OPERATIONAL\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event which indicates that the focus has left the MUC.\r\n */\r\nexport const createFocusLeftEvent = function() {\r\n    const action = 'focus.left';\r\n\r\n    return {\r\n        action,\r\n        actionSubject: action,\r\n        type: TYPE_OPERATIONAL\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event related to a getUserMedia call.\r\n *\r\n * @param action the type of the result that the event represents: 'error',\r\n * 'success', 'warning', etc.\r\n * @param attributes the attributes to attach to the event.\r\n * @returns {{type: string, source: string, name: string}}\r\n */\r\nexport const createGetUserMediaEvent = function(action, attributes = {}) {\r\n    return {\r\n        type: TYPE_OPERATIONAL,\r\n        source: 'get.user.media',\r\n        action,\r\n        attributes\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event related to remote participant connection status changes.\r\n *\r\n * @param attributes the attributes to attach to the event.\r\n * @returns {{type: string, source: string, name: string}}\r\n */\r\nexport const createParticipantConnectionStatusEvent = function(attributes = {}) {\r\n    const action = 'duration';\r\n\r\n    return {\r\n        type: TYPE_OPERATIONAL,\r\n        source: 'peer.conn.status',\r\n        action,\r\n        attributes\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event for a Jingle-related event.\r\n * @param action the action of the event\r\n * @param attributes attributes to add to the event.\r\n */\r\nexport const createJingleEvent = function(action, attributes = {}) {\r\n    return {\r\n        type: TYPE_OPERATIONAL,\r\n        action,\r\n        source: 'jingle',\r\n        attributes\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event which indicates that a local track was not able to read\r\n * data from its source (a camera or a microphone).\r\n *\r\n * @param mediaType {String} the media type of the local track ('audio' or\r\n * 'video').\r\n */\r\nexport const createNoDataFromSourceEvent = function(mediaType, value) {\r\n    return {\r\n        attributes: {\r\n            'media_type': mediaType,\r\n            value\r\n        },\r\n        action: 'track.no.data.from.source',\r\n        type: TYPE_OPERATIONAL\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event for a p2p-related event.\r\n * @param action the action of the event\r\n * @param attributes attributes to add to the event.\r\n */\r\nexport const createP2PEvent = function(action, attributes = {}) {\r\n    return {\r\n        type: TYPE_OPERATIONAL,\r\n        action,\r\n        source: 'p2p',\r\n        attributes\r\n    };\r\n};\r\n\r\n/**\r\n * Indicates that we received a remote command to mute.\r\n */\r\nexport const createRemotelyMutedEvent = function() {\r\n    return {\r\n        type: TYPE_OPERATIONAL,\r\n        action: 'remotely.muted'\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event which contains RTP statistics such as RTT and packet loss.\r\n *\r\n * All average RTP stats are currently reported under 1 event name, but with\r\n * different properties that allows to distinguish between a P2P call, a\r\n * call relayed through TURN or the JVB, and multiparty vs 1:1.\r\n *\r\n * The structure of the event is:\r\n *\r\n * {\r\n *      p2p: true,\r\n *      conferenceSize: 2,\r\n *      localCandidateType: \"relay\",\r\n *      remoteCandidateType: \"relay\",\r\n *      transportType: \"udp\",\r\n *\r\n *      // Average RTT of 200ms\r\n *      \"rtt.avg\": 200,\r\n *      \"rtt.samples\": \"[100, 200, 300]\",\r\n *\r\n *      // Average packet loss of 10%\r\n *      \"packet.loss.avg\": 10,\r\n *      \"packet.loss.samples\": '[5, 10, 15]'\r\n *\r\n *      // Difference in milliseconds in the end-to-end RTT between p2p and jvb.\r\n *      // The e2e RTT through jvb is 15ms shorter:\r\n *      \"rtt.diff\": 15,\r\n *\r\n *      // End-to-end RTT through JVB is ms.\r\n *      \"end2end.rtt.avg\" = 100\r\n * }\r\n *\r\n * Note that the value of the \"samples\" properties are (JSON encoded) strings,\r\n * and not JSON arrays, as events' attributes can not be nested. The samples are\r\n * currently included for debug purposes only and can be removed anytime soon\r\n * from the structure.\r\n *\r\n * Also note that not all of values are present in each event, as values are\r\n * obtained and calculated as part of different process/event pipe. For example\r\n * {@link ConnectionAvgStats} instances are doing the reports for each\r\n * {@link TraceablePeerConnection} and work independently from the main stats\r\n * pipe.\r\n */\r\nexport const createRtpStatsEvent = function(attributes) {\r\n    return {\r\n        type: TYPE_OPERATIONAL,\r\n        action: 'rtp.stats',\r\n        attributes\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event which contains the round trip time (RTT) to a set of\r\n * regions.\r\n *\r\n * @param attributes\r\n * @returns {{type: string, action: string, attributes: *}}\r\n */\r\nexport const createRttByRegionEvent = function(attributes) {\r\n    return {\r\n        type: TYPE_OPERATIONAL,\r\n        action: 'rtt.by.region',\r\n        attributes\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event which contains the local and remote ICE candidate types\r\n * for the transport that is currently selected.\r\n *\r\n * @param attributes\r\n * @returns {{type: string, action: string, attributes: *}}\r\n */\r\nexport const createTransportStatsEvent = function(attributes) {\r\n    return {\r\n        type: TYPE_OPERATIONAL,\r\n        action: 'transport.stats',\r\n        attributes\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event which contains information about the audio output problem (the user id of the affected participant,\r\n * the local audio levels and the remote audio levels that triggered the event).\r\n *\r\n * @param {string} userID - The user id of the affected participant.\r\n * @param {*} localAudioLevels - The local audio levels.\r\n * @param {*} remoteAudioLevels - The audio levels received from the participant.\r\n */\r\nexport function createAudioOutputProblemEvent(userID, localAudioLevels, remoteAudioLevels) {\r\n    return {\r\n        type: TYPE_OPERATIONAL,\r\n        action: 'audio.output.problem',\r\n        attributes: {\r\n            userID,\r\n            localAudioLevels,\r\n            remoteAudioLevels\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Creates an event which contains an information related to the bridge channel close event.\r\n *\r\n * @param {string} code - A code from {@link https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent}\r\n * @param {string} reason - A string which describes the reason for closing the bridge channel.\r\n * @returns {{type: string, action: string, attributes: { code: string, reason: string }}}\r\n */\r\nexport const createBridgeChannelClosedEvent = function(code, reason) {\r\n    return {\r\n        type: TYPE_OPERATIONAL,\r\n        action: 'bridge-channel.error',\r\n        attributes: {\r\n            code,\r\n            reason\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * Creates an event which indicates the Time To First Media (TTFM).\r\n * It is measured in milliseconds relative to the beginning of the document's\r\n * lifetime (i.e. the origin used by window.performance.now()), and it excludes\r\n * the following:\r\n * 1. The delay due to getUserMedia()\r\n * 2. The period between the MUC being joined and the reception of the Jingle\r\n * session-initiate from jicofo. This is because jicofo will not start a Jingle\r\n * session until there are at least 2 participants in the room.\r\n *\r\n * @param attributes the attributes to add to the event. Currently used fields:\r\n *      mediaType: the media type of the local track ('audio' or 'video').\r\n *      muted: whether the track has ever been muted (?)\r\n *      value: the TTMF in milliseconds.\r\n */\r\nexport const createTtfmEvent = function(attributes) {\r\n    return createConnectionStageReachedEvent('ttfm', attributes);\r\n};\r\n","/**\r\n * Notifies about audio level in RTP statistics by SSRC.\r\n *\r\n * @param ssrc - The synchronization source identifier (SSRC) of the\r\n * endpoint/participant whose audio level is being reported.\r\n * @param {number} audioLevel - The audio level of <tt>ssrc</tt> according to\r\n * RTP statistics.\r\n * @param {boolean} isLocal - <tt>true</tt> if <tt>ssrc</tt> identifies the\r\n * local endpoint/participant; otherwise, <tt>false</tt>.\r\n */\r\nexport const AUDIO_LEVEL = 'statistics.audioLevel';\r\n\r\n/**\r\n * An event fired just before the statistics module gets disposes and it's\r\n * the last chance to submit some logs that will end up in stats services like\r\n * CallStats (if enabled).\r\n */\r\nexport const BEFORE_DISPOSED = 'statistics.before_disposed';\r\n\r\n/**\r\n * An event carrying all statistics by ssrc.\r\n */\r\nexport const BYTE_SENT_STATS = 'statistics.byte_sent_stats';\r\n\r\n/**\r\n * An event carrying connection statistics.\r\n *\r\n * @param {object} connectionStats - The connection statistics carried by the\r\n * event such as <tt>bandwidth</tt>, <tt>bitrate</tt>, <tt>packetLoss</tt>,\r\n * <tt>resolution</tt>, and <tt>transport</tt>.\r\n */\r\nexport const CONNECTION_STATS = 'statistics.connectionstats';\r\n","const Constants = {\r\n    LOCAL_JID: 'local'\r\n};\r\n\r\nmodule.exports = Constants;\r\n","const XMPPEvents = {\r\n    /**\r\n     * Indicates error while adding ice candidate.\r\n     */\r\n    ADD_ICE_CANDIDATE_FAILED: 'xmpp.add_ice_candidate_failed',\r\n\r\n    // Designates an event indicating that the focus has asked us to mute our\r\n    // audio.\r\n    AUDIO_MUTED_BY_FOCUS: 'xmpp.audio_muted_by_focus',\r\n    AUTHENTICATION_REQUIRED: 'xmpp.authentication_required',\r\n    BRIDGE_DOWN: 'xmpp.bridge_down',\r\n\r\n    /**\r\n     * Triggered when 'session-accept' is received from the responder.\r\n     */\r\n    CALL_ACCEPTED: 'xmpp.callaccepted.jingle',\r\n\r\n    // Designates an event indicating that an offer (e.g. Jingle\r\n    // session-initiate) was received.\r\n    CALL_INCOMING: 'xmpp.callincoming.jingle',\r\n\r\n    // Triggered when Jicofo kills our media session, this can happen while\r\n    // we're still in the MUC, when it decides to terminate the media session.\r\n    // For example when the session is idle for too long, because we're the only\r\n    // person in the conference room.\r\n    CALL_ENDED: 'xmpp.callended.jingle',\r\n    CHAT_ERROR_RECEIVED: 'xmpp.chat_error_received',\r\n\r\n    // The conference properties (as advertised by jicofo) have changed\r\n    CONFERENCE_PROPERTIES_CHANGED: 'xmpp.conference_properties_changed',\r\n\r\n    /**\r\n     * This event is triggered when the ICE connects for the first time.\r\n     */\r\n    CONNECTION_ESTABLISHED: 'xmpp.connection.connected',\r\n\r\n    // Designates an event indicating that the connection to the XMPP server\r\n    // failed.\r\n    CONNECTION_FAILED: 'xmpp.connection.failed',\r\n\r\n    // Designates an event indicating that the media (ICE) connection was\r\n    // interrupted. This should go to the RTC module.\r\n    CONNECTION_INTERRUPTED: 'xmpp.connection.interrupted',\r\n\r\n    // Designates an event indicating that the media (ICE) connection was\r\n    // restored. This should go to the RTC module.\r\n    CONNECTION_RESTORED: 'xmpp.connection.restored',\r\n\r\n    // Designates an event indicating that the media (ICE) connection failed.\r\n    // This should go to the RTC module.\r\n    CONNECTION_ICE_FAILED: 'xmpp.connection.ice.failed',\r\n\r\n    /**\r\n     * Designates an event indicating connection status changes.\r\n     */\r\n    CONNECTION_STATUS_CHANGED: 'xmpp.connection.status.changed',\r\n\r\n    // Designates an event indicating that the display name of a participant\r\n    // has changed.\r\n    DISPLAY_NAME_CHANGED: 'xmpp.display_name_changed',\r\n\r\n    /**\r\n     * Chat room instance have been added to Strophe.emuc plugin.\r\n     */\r\n    EMUC_ROOM_ADDED: 'xmpp.emuc_room_added',\r\n\r\n    /**\r\n     * Chat room instance have been removed from Strophe.emuc plugin.\r\n     */\r\n    EMUC_ROOM_REMOVED: 'xmpp.emuc_room_removed',\r\n    ETHERPAD: 'xmpp.etherpad',\r\n    FOCUS_DISCONNECTED: 'xmpp.focus_disconnected',\r\n    FOCUS_LEFT: 'xmpp.focus_left',\r\n    GRACEFUL_SHUTDOWN: 'xmpp.graceful_shutdown',\r\n\r\n    /**\r\n     * Event fired when 'transport-replace' Jingle message has been received,\r\n     * before the new offer is set on the PeerConnection.\r\n     */\r\n    ICE_RESTARTING: 'rtc.ice_restarting',\r\n\r\n    /**\r\n     * Event fired after the 'transport-replace' message has been processed\r\n     * and the new offer has been set successfully.\r\n     */\r\n    ICE_RESTART_SUCCESS: 'rtc.ice_restart_success',\r\n\r\n    /**\r\n     * Designates an event indicating that we were kicked from the XMPP MUC.\r\n     * @param {boolean} isSelfPresence - whether it is for local participant\r\n     * or another participant.\r\n     * @param {string} actorJid - the jid of the participant who was initator\r\n     * of the kick.\r\n     * @param {?string} participantJid - when it is not a kick for local participant,\r\n     * this is the jid of the participant which was kicked.\r\n     */\r\n    KICKED: 'xmpp.kicked',\r\n\r\n    // Designates an event indicating that our role in the XMPP MUC has changed.\r\n    LOCAL_ROLE_CHANGED: 'xmpp.localrole_changed',\r\n\r\n    /**\r\n     * Event fired when the unique meeting id is set.\r\n     */\r\n    MEETING_ID_SET: 'xmpp.meeting_id_set',\r\n\r\n    // Designates an event indicating that an XMPP message in the MUC was\r\n    // received.\r\n    MESSAGE_RECEIVED: 'xmpp.message_received',\r\n\r\n    // Designates an event indicating that a private XMPP message in the MUC was\r\n    // received.\r\n    PRIVATE_MESSAGE_RECEIVED: 'xmpp.private_message_received',\r\n\r\n    // Designates an event indicating that a bot participant type had changed\r\n    MUC_MEMBER_BOT_TYPE_CHANGED: 'xmpp.muc_member_bot_type_changed',\r\n\r\n    // Designates an event indicating that the XMPP MUC was destroyed.\r\n    MUC_DESTROYED: 'xmpp.muc_destroyed',\r\n\r\n    // Designates an event indicating that we have joined the XMPP MUC.\r\n    MUC_JOINED: 'xmpp.muc_joined',\r\n\r\n    // Designates an event indicating that a participant joined the XMPP MUC.\r\n    MUC_MEMBER_JOINED: 'xmpp.muc_member_joined',\r\n\r\n    // Designates an event indicating that a participant left the XMPP MUC.\r\n    MUC_MEMBER_LEFT: 'xmpp.muc_member_left',\r\n\r\n    // Designates an event indicating that local participant left the muc\r\n    MUC_LEFT: 'xmpp.muc_left',\r\n\r\n    // Designates an event indicating that the MUC role of a participant has\r\n    // changed.\r\n    MUC_ROLE_CHANGED: 'xmpp.muc_role_changed',\r\n\r\n    // Designates an event indicating that the MUC has been locked or unlocked.\r\n    MUC_LOCK_CHANGED: 'xmpp.muc_lock_changed',\r\n\r\n    // Designates an event indicating that a participant in the XMPP MUC has\r\n    // advertised that they have audio muted (or unmuted).\r\n    PARTICIPANT_AUDIO_MUTED: 'xmpp.audio_muted',\r\n\r\n    // Designates an event indicating that a participant in the XMPP MUC has\r\n    // advertised that they have video muted (or unmuted).\r\n    PARTICIPANT_VIDEO_MUTED: 'xmpp.video_muted',\r\n\r\n    // Designates an event indicating that the video type (e.g. 'camera' or\r\n    // 'screen') for a participant has changed.\r\n    // Note: currently this event fires every time we receive presence from\r\n    // someone (regardless of whether or not the \"video type\" changed).\r\n    PARTICIPANT_VIDEO_TYPE_CHANGED: 'xmpp.video_type',\r\n\r\n    /**\r\n     * Indicates that the features of the participant has been changed.\r\n     */\r\n    PARTCIPANT_FEATURES_CHANGED: 'xmpp.partcipant_features_changed',\r\n    PASSWORD_REQUIRED: 'xmpp.password_required',\r\n    PEERCONNECTION_READY: 'xmpp.peerconnection_ready',\r\n\r\n    /**\r\n     * Indicates that phone number changed.\r\n     */\r\n    PHONE_NUMBER_CHANGED: 'conference.phoneNumberChanged',\r\n    PRESENCE_RECEIVED: 'xmpp.presence_received',\r\n    PRESENCE_STATUS: 'xmpp.presence_status',\r\n    PROMPT_FOR_LOGIN: 'xmpp.prompt_for_login',\r\n\r\n    // xmpp is connected and obtained user media\r\n    READY_TO_JOIN: 'xmpp.ready_to_join',\r\n\r\n    /**\r\n     * Indicates that recording state changed.\r\n     */\r\n    RECORDER_STATE_CHANGED: 'xmpp.recorderStateChanged',\r\n\r\n    // Designates an event indicating that we received statistics from a\r\n    // participant in the MUC.\r\n    REMOTE_STATS: 'xmpp.remote_stats',\r\n\r\n    /**\r\n     * Indicates that the offer / answer renegotiation has failed.\r\n     */\r\n    RENEGOTIATION_FAILED: 'xmpp.renegotiation_failed',\r\n    RESERVATION_ERROR: 'xmpp.room_reservation_error',\r\n    ROOM_CONNECT_ERROR: 'xmpp.room_connect_error',\r\n    ROOM_CONNECT_NOT_ALLOWED_ERROR: 'xmpp.room_connect_error.not_allowed',\r\n    ROOM_JOIN_ERROR: 'xmpp.room_join_error',\r\n\r\n    /**\r\n     * Indicates that max users limit has been reached.\r\n     */\r\n    ROOM_MAX_USERS_ERROR: 'xmpp.room_max_users_error',\r\n\r\n    // Designates an event indicating that we sent an XMPP message to the MUC.\r\n    SENDING_CHAT_MESSAGE: 'xmpp.sending_chat_message',\r\n\r\n    // Designates an event indicating that we sent a private XMPP message to\r\n    // a specific user of the muc.\r\n    SENDING_PRIVATE_CHAT_MESSAGE: 'xmpp.sending_private_chat_message',\r\n\r\n    /**\r\n     * Event fired when we do not get our 'session-accept' acknowledged by\r\n     * Jicofo. It most likely means that there is serious problem with our\r\n     * connection or XMPP server and we should reload the conference.\r\n     *\r\n     * We have seen that to happen in BOSH requests race condition when the BOSH\r\n     * request table containing the 'session-accept' was discarded by Prosody.\r\n     * Jicofo does send the RESULT immediately without any condition, so missing\r\n     * packets means that most likely it has never seen our IQ.\r\n     */\r\n    SESSION_ACCEPT_TIMEOUT: 'xmpp.session_accept_timeout',\r\n\r\n    /**\r\n     * Event fired when speaker stats update message is received.\r\n     */\r\n    SPEAKER_STATS_RECEIVED: 'xmpp.speaker_stats_received',\r\n\r\n    /**\r\n     * Event fired when conference creation timestamp is received.\r\n     */\r\n    CONFERENCE_TIMESTAMP_RECEIVED: 'xmpp.conference_timestamp_received',\r\n\r\n    // Designates an event indicating that we should join the conference with\r\n    // audio and/or video muted.\r\n    START_MUTED_FROM_FOCUS: 'xmpp.start_muted_from_focus',\r\n\r\n    // Designates an event indicating that the subject of the XMPP MUC has\r\n    // changed.\r\n    SUBJECT_CHANGED: 'xmpp.subject_changed',\r\n\r\n    // FIXME: how does it belong to XMPP ? - it's detected by the PeerConnection\r\n    // suspending detected\r\n    SUSPEND_DETECTED: 'xmpp.suspend_detected',\r\n\r\n    /**\r\n     * Notifies for transcription status changes. The event provides the\r\n     * following parameters to its listeners:\r\n     *\r\n     * @param {String} status - The new status.\r\n     */\r\n    TRANSCRIPTION_STATUS_CHANGED: 'xmpp.transcription_status_changed',\r\n\r\n    /**\r\n     * Event fired when 'transport-info' with new ICE candidates is received.\r\n     */\r\n    TRANSPORT_INFO: 'xmpp.transportinfo.jingle',\r\n\r\n    /**\r\n     * Indicates that video SIP GW state changed.\r\n     *\r\n     * @param {VideoSIPGWConstants} status - Any of the following statuses:\r\n     * STATUS_BUSY, STATUS_AVAILABLE or STATUS_UNDEFINED.\r\n     */\r\n    VIDEO_SIP_GW_AVAILABILITY_CHANGED: 'xmpp.videoSIPGWAvailabilityChanged',\r\n\r\n    /**\r\n     * Indicates that video SIP GW Session state changed.\r\n     * The statuses are any of the following statuses:\r\n     * STATE_ON, STATE_OFF, STATE_PENDING, STATE_RETRYING, STATE_FAILED.\r\n     * {@see VideoSIPGWConstants}\r\n     *\r\n     * @param {options} event - {address, oldState, newState, displayName}.\r\n     */\r\n    VIDEO_SIP_GW_SESSION_STATE_CHANGED:\r\n        'xmpp.videoSIPGWSessionStateChanged',\r\n\r\n    // Designates an event indicating that the local ICE connection state has\r\n    // changed.\r\n    ICE_CONNECTION_STATE_CHANGED: 'xmpp.ice_connection_state_changed',\r\n\r\n    /**\r\n     * Event which is emitted when the body in an XMPP message in the MUC\r\n     * contains JSON\r\n     */\r\n    JSON_MESSAGE_RECEIVED: 'xmmp.json_message_received'\r\n};\r\n\r\nmodule.exports = XMPPEvents;\r\n"],"sourceRoot":""}